2024-04-29 13:33:07 [INFO] [task_scheduler.cc:160] Initializing Task #28: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8"
2024-04-29 13:33:07 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4), T.int64(512), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 13:33:07 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 13:33:07 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(4), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(64) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(16) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(28) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 16])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 13:33:07 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(4), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(64) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(16) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(28) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(7), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), oc_chunk_1 * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), ow_1 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 16])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 13:33:07 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(4), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(64) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(16) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(28) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 16])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 14:02:10 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 14:02:10 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 14:02:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 14:02:12 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 14:02:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 14:02:18 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 14:02:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 14:02:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 14:02:25 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9989  0.9986  0.9983  0.9982  0.9979  0.9975  0.9971  0.9970  0.9967  0.9964  0.9962  0.9962  0.9958  0.9955  0.9951
[17 : 32]:	0.9951  0.9948  0.9945  0.9943  0.9935  0.9933  0.9932  0.9930  0.9927  0.9920  0.9919  0.9917  0.9917  0.9913  0.9912  0.9910
[33 : 48]:	0.9908  0.9906  0.9905  0.9905  0.9901  0.9900  0.9896  0.9888  0.9882  0.9882  0.9876  0.9876  0.9871  0.9869  0.9864  0.9863
[49 : 64]:	0.9863  0.9861  0.9852  0.9851  0.9841  0.9839  0.9838  0.9838  0.9832  0.9829  0.9818  0.9812  0.9807  0.9803  0.9801  0.9800
2024-04-29 14:02:26 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 14:02:26 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1: GFLOPs: 9.1338. Time: 22545.1228 us. Best GFLOPs: 9.1338
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #2: GFLOPs: 21.9727. Time: 9371.7406 us. Best GFLOPs: 21.9727
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #3: GFLOPs: 35.5095. Time: 5799.0786 us. Best GFLOPs: 35.5095
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #4: GFLOPs: 55.4089. Time: 3716.4119 us. Best GFLOPs: 55.4089
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #5: GFLOPs: 13.4146. Time: 15350.5604 us. Best GFLOPs: 55.4089
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #6: GFLOPs: 92.7501. Time: 2220.1848 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #7: GFLOPs: 55.5567. Time: 3706.5258 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #8: GFLOPs: 5.6133. Time: 36684.6960 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #9: GFLOPs: 0.7583. Time: 271549.7500 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #10: GFLOPs: 20.2799. Time: 10154.0149 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #11: GFLOPs: 44.7671. Time: 4599.8603 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #12: GFLOPs: 35.9306. Time: 5731.1110 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #13: GFLOPs: 59.9546. Time: 3434.6366 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #14: GFLOPs: 3.2740. Time: 62896.3573 us. Best GFLOPs: 92.7501
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #15: GFLOPs: 171.5812. Time: 1200.1447 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #16: GFLOPs: 4.8727. Time: 42260.8190 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #17: GFLOPs: 141.2056. Time: 1458.3157 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #18: GFLOPs: 2.2769. Time: 90440.3263 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #19: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(98), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(4), T.int64(2), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(49) * T.int64(32) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(49) // T.int64(7) * T.int64(4) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(4) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(49) * T.int64(32) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(49) // T.int64(7) * T.int64(4) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(4) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(4)):
                for ax3_ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(49) * T.int64(32) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(49) // T.int64(7) * T.int64(4) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(4) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 8, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 4, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #20: GFLOPs: 40.7990. Time: 5047.2448 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #21: GFLOPs: 51.9883. Time: 3960.9337 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #22: GFLOPs: 28.1750. Time: 7308.6994 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #23: GFLOPs: 69.3776. Time: 2968.1386 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #24: GFLOPs: 71.7485. Time: 2870.0592 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #25: GFLOPs: 97.9968. Time: 2101.3172 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #26: GFLOPs: 5.8788. Time: 35027.9463 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #27: GFLOPs: 2.7837. Time: 73974.3727 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #28: GFLOPs: 139.5140. Time: 1475.9979 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #29: GFLOPs: 4.3485. Time: 47355.0257 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #30: GFLOPs: 26.6305. Time: 7732.5718 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #31: GFLOPs: 46.4231. Time: 4435.7688 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #32: GFLOPs: 32.7836. Time: 6281.2576 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #33: GFLOPs: 4.0505. Time: 50839.3063 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #34: GFLOPs: 68.2301. Time: 3018.0559 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #35: GFLOPs: 12.2916. Time: 16753.0798 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #36: GFLOPs: 12.0077. Time: 17149.1827 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #37: GFLOPs: 8.0856. Time: 25467.7225 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #38: GFLOPs: 97.6299. Time: 2109.2132 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #39: GFLOPs: 55.9554. Time: 3680.1119 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #40: GFLOPs: 15.5102. Time: 13276.6133 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #41: GFLOPs: 103.4422. Time: 1990.6992 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #42: GFLOPs: 22.3591. Time: 9209.7559 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #43: GFLOPs: 81.0910. Time: 2539.3989 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #44: GFLOPs: 73.0966. Time: 2817.1266 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #45: GFLOPs: 93.9552. Time: 2191.7084 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #46: GFLOPs: 9.3480. Time: 22028.5646 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #47: GFLOPs: 4.4376. Time: 46403.5640 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #48: GFLOPs: 3.6788. Time: 55975.2563 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #49: GFLOPs: 122.7882. Time: 1677.0528 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #50: GFLOPs: 56.8863. Time: 3619.8925 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #51: GFLOPs: 50.2830. Time: 4095.2631 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #52: GFLOPs: 23.6202. Time: 8718.0467 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #53: GFLOPs: 82.1293. Time: 2507.2926 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #54: GFLOPs: 31.8629. Time: 6462.7522 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #55: GFLOPs: 74.9473. Time: 2747.5625 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #56: GFLOPs: 2.0096. Time: 102468.8210 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #57: GFLOPs: 20.7594. Time: 9919.4505 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #58: GFLOPs: 101.1591. Time: 2035.6289 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #59: GFLOPs: 25.7822. Time: 7986.9835 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #60: GFLOPs: 53.3675. Time: 3858.5729 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #61: GFLOPs: 79.6424. Time: 2585.5866 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #62: GFLOPs: 4.4001. Time: 46799.5430 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #63: GFLOPs: 102.8519. Time: 2002.1246 us. Best GFLOPs: 171.5812
2024-04-29 14:27:12 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #64: GFLOPs: 140.3270. Time: 1467.4461 us. Best GFLOPs: 171.5812
2024-04-29 15:17:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:17:55 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 15:17:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 15:17:57 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 15:18:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 15:18:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 15:18:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 15:18:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 15:18:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9354  0.9130  0.9098  0.8955  0.8869  0.8505  0.8442  0.8378  0.8280  0.8280  0.8241  0.8238  0.8100  0.8095  0.8017  0.8005
[17 : 32]:	0.8004  0.7963  0.7919  0.7910  0.7895  0.7892  0.7877  0.7866  0.7866  0.7852  0.7690  0.7682  0.7626  0.7625  0.7526  0.7520
[33 : 48]:	0.7496  0.7472  0.7470  0.7463  0.7456  0.7363  0.7355  0.7352  0.7348  0.7344  0.7334  0.7330  0.7326  0.7297  0.7288  0.7287
[49 : 64]:	0.7275  0.7270  0.7265  0.7264  0.7250  0.7243  0.7219  0.7211  0.7207  0.7193  0.7177  0.7174  0.7174  0.7163  0.7143  0.7143
2024-04-29 15:18:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:18:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #65: GFLOPs: 70.4813. Time: 2921.6586 us. Best GFLOPs: 171.5812
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #66: GFLOPs: 167.9377. Time: 1226.1824 us. Best GFLOPs: 171.5812
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #67: GFLOPs: 128.5583. Time: 1601.7820 us. Best GFLOPs: 171.5812
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #68: GFLOPs: 144.3241. Time: 1426.8043 us. Best GFLOPs: 171.5812
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #69: GFLOPs: 189.1455. Time: 1088.6980 us. Best GFLOPs: 189.1455
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #70: GFLOPs: 218.0050. Time: 944.5762 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #71: GFLOPs: 104.2628. Time: 1975.0314 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #72: GFLOPs: 121.9299. Time: 1688.8583 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #73: GFLOPs: 154.9082. Time: 1329.3185 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #74: GFLOPs: 153.4391. Time: 1342.0460 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #75: GFLOPs: 140.5885. Time: 1464.7167 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #76: GFLOPs: 89.4437. Time: 2302.2561 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #77: GFLOPs: 108.9350. Time: 1890.3233 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #78: GFLOPs: 132.4536. Time: 1554.6747 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #79: GFLOPs: 145.9504. Time: 1410.9061 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #80: GFLOPs: 100.9953. Time: 2038.9301 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #81: GFLOPs: 100.5999. Time: 2046.9433 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #82: GFLOPs: 202.4667. Time: 1017.0677 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #83: GFLOPs: 163.3461. Time: 1260.6500 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #84: GFLOPs: 171.5513. Time: 1200.3541 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #85: GFLOPs: 134.7784. Time: 1527.8588 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #86: GFLOPs: 172.0246. Time: 1197.0518 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #87: GFLOPs: 126.0724. Time: 1633.3659 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #88: GFLOPs: 187.2698. Time: 1099.6022 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #89: GFLOPs: 164.6389. Time: 1250.7516 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #90: GFLOPs: 134.2200. Time: 1534.2149 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #91: GFLOPs: 83.5039. Time: 2466.0196 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #92: GFLOPs: 91.7417. Time: 2244.5883 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #93: GFLOPs: 122.7557. Time: 1677.4967 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #94: GFLOPs: 92.6235. Time: 2223.2193 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #95: GFLOPs: 124.2634. Time: 1657.1434 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #96: GFLOPs: 143.4527. Time: 1435.4720 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #97: GFLOPs: 100.0649. Time: 2057.8880 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #98: GFLOPs: 64.6944. Time: 3182.9997 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #99: GFLOPs: 212.2733. Time: 970.0809 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #100: GFLOPs: 134.9093. Time: 1526.3755 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #101: GFLOPs: 136.8320. Time: 1504.9279 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #102: GFLOPs: 109.1324. Time: 1886.9031 us. Best GFLOPs: 218.0050
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #103: GFLOPs: 220.8905. Time: 932.2372 us. Best GFLOPs: 220.8905
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #104: GFLOPs: 99.0904. Time: 2078.1251 us. Best GFLOPs: 220.8905
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #105: GFLOPs: 124.7970. Time: 1650.0583 us. Best GFLOPs: 220.8905
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #106: GFLOPs: 133.8659. Time: 1538.2732 us. Best GFLOPs: 220.8905
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #107: GFLOPs: 171.2572. Time: 1202.4157 us. Best GFLOPs: 220.8905
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #108: GFLOPs: 166.4201. Time: 1237.3641 us. Best GFLOPs: 220.8905
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #109: GFLOPs: 117.3754. Time: 1754.3900 us. Best GFLOPs: 220.8905
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #110: GFLOPs: 155.4896. Time: 1324.3474 us. Best GFLOPs: 220.8905
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #111: GFLOPs: 226.5994. Time: 908.7503 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #112: GFLOPs: 78.5266. Time: 2622.3247 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #113: GFLOPs: 113.0809. Time: 1821.0182 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #114: GFLOPs: 121.3367. Time: 1697.1144 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #115: GFLOPs: 122.9867. Time: 1674.3465 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #116: GFLOPs: 74.5526. Time: 2762.1060 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #117: GFLOPs: 63.9879. Time: 3218.1438 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #118: GFLOPs: 181.2779. Time: 1135.9480 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #119: GFLOPs: 59.5932. Time: 3455.4659 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #120: GFLOPs: 53.2210. Time: 3869.1905 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #121: GFLOPs: 75.5776. Time: 2724.6471 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #122: GFLOPs: 118.8889. Time: 1732.0571 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #123: GFLOPs: 118.4519. Time: 1738.4461 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #124: GFLOPs: 121.2928. Time: 1697.7291 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #125: GFLOPs: 131.9016. Time: 1561.1812 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #126: GFLOPs: 37.1915. Time: 5536.8147 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #127: GFLOPs: 97.2240. Time: 2118.0185 us. Best GFLOPs: 226.5994
2024-04-29 15:19:50 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #128: GFLOPs: 92.9352. Time: 2215.7615 us. Best GFLOPs: 226.5994
2024-04-29 16:33:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:33:35 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 16:33:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 16:33:37 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 16:33:42 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 16:33:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 16:33:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 16:33:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 16:34:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9908  0.8564  0.8459  0.8141  0.8122  0.8109  0.7826  0.7758  0.7713  0.7658  0.7602  0.7497  0.7484  0.7479  0.7413  0.7380
[17 : 32]:	0.7244  0.7145  0.7134  0.7101  0.7077  0.7044  0.7027  0.7019  0.7007  0.6969  0.6966  0.6960  0.6957  0.6947  0.6925  0.6925
[33 : 48]:	0.6925  0.6885  0.6787  0.6763  0.6682  0.6673  0.6665  0.6641  0.6612  0.6595  0.6542  0.6538  0.6530  0.6528  0.6474  0.6467
[49 : 64]:	0.6457  0.6448  0.6433  0.6425  0.6416  0.6415  0.6404  0.6403  0.6401  0.6400  0.6398  0.6368  0.6361  0.6343  0.6339  0.6337
2024-04-29 16:34:02 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:34:02 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #129: GFLOPs: 118.0104. Time: 1744.9506 us. Best GFLOPs: 226.5994
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #130: GFLOPs: 95.7985. Time: 2149.5363 us. Best GFLOPs: 226.5994
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #131: GFLOPs: 95.9292. Time: 2146.6075 us. Best GFLOPs: 226.5994
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #132: GFLOPs: 258.1840. Time: 797.5796 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #133: GFLOPs: 185.8841. Time: 1107.7995 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #134: GFLOPs: 148.9358. Time: 1382.6243 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #135: GFLOPs: 134.9907. Time: 1525.4555 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #136: GFLOPs: 201.6620. Time: 1021.1258 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #137: GFLOPs: 160.8432. Time: 1280.2675 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #138: GFLOPs: 155.3313. Time: 1325.6974 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #139: GFLOPs: 127.2162. Time: 1618.6802 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #140: GFLOPs: 161.5670. Time: 1274.5323 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #141: GFLOPs: 101.1627. Time: 2035.5552 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #142: GFLOPs: 183.5106. Time: 1122.1277 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #143: GFLOPs: 174.5060. Time: 1180.0300 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #144: GFLOPs: 145.0020. Time: 1420.1343 us. Best GFLOPs: 258.1840
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #145: GFLOPs: 259.7538. Time: 792.7596 us. Best GFLOPs: 259.7538
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #146: GFLOPs: 194.6348. Time: 1057.9934 us. Best GFLOPs: 259.7538
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #147: GFLOPs: 137.9215. Time: 1493.0398 us. Best GFLOPs: 259.7538
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #148: GFLOPs: 280.3909. Time: 734.4116 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #149: GFLOPs: 199.3412. Time: 1033.0140 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #150: GFLOPs: 82.2740. Time: 2502.8855 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #151: GFLOPs: 176.3296. Time: 1167.8263 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #152: GFLOPs: 177.6970. Time: 1158.8392 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #153: GFLOPs: 137.3156. Time: 1499.6278 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #154: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), ow_2_init * T.int64(4) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(28)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[32, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 4])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #155: GFLOPs: 104.9264. Time: 1962.5406 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #156: GFLOPs: 182.3211. Time: 1129.4483 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #157: GFLOPs: 177.0449. Time: 1163.1078 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #158: GFLOPs: 165.2876. Time: 1245.8427 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #159: GFLOPs: 164.1084. Time: 1254.7943 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #160: GFLOPs: 169.8645. Time: 1212.2742 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #161: GFLOPs: 89.6633. Time: 2296.6163 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #162: GFLOPs: 220.5584. Time: 933.6407 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #163: GFLOPs: 155.0514. Time: 1328.0903 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #164: GFLOPs: 122.9768. Time: 1674.4808 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #165: GFLOPs: 99.7232. Time: 2064.9379 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #166: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(4)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), ow_2_init * T.int64(4) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(4)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(28)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[32, 1, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 4])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #167: GFLOPs: 194.1146. Time: 1060.8287 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #168: GFLOPs: 135.1952. Time: 1523.1482 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #169: GFLOPs: 146.8540. Time: 1402.2242 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #170: GFLOPs: 96.3169. Time: 2137.9656 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #171: GFLOPs: 167.8422. Time: 1226.8801 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #172: GFLOPs: 88.4789. Time: 2327.3605 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #173: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), ow_2_init * T.int64(7) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(28)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[32, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #174: GFLOPs: 192.0812. Time: 1072.0583 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #175: GFLOPs: 95.0678. Time: 2166.0581 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #176: GFLOPs: 178.4183. Time: 1154.1549 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #177: GFLOPs: 148.9350. Time: 1382.6317 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #178: GFLOPs: 124.0915. Time: 1659.4390 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #179: GFLOPs: 174.2421. Time: 1181.8170 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #180: GFLOPs: 219.7866. Time: 936.9191 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #181: GFLOPs: 191.1451. Time: 1077.3087 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #182: GFLOPs: 228.9186. Time: 899.5436 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #183: GFLOPs: 67.5640. Time: 3047.8109 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #184: GFLOPs: 116.4133. Time: 1768.8892 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #185: GFLOPs: 69.6329. Time: 2957.2558 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #186: GFLOPs: 162.1264. Time: 1270.1347 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #187: GFLOPs: 143.6199. Time: 1433.8008 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #188: GFLOPs: 143.0121. Time: 1439.8946 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #189: GFLOPs: 176.7688. Time: 1164.9248 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #190: GFLOPs: 2.0327. Time: 101303.9030 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #191: GFLOPs: 71.3060. Time: 2887.8673 us. Best GFLOPs: 280.3909
2024-04-29 16:35:33 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #192: GFLOPs: 43.9190. Time: 4688.6822 us. Best GFLOPs: 280.3909
2024-04-29 17:45:56 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:45:57 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:45:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 17:45:59 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:46:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 17:46:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 17:46:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 17:46:20 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 17:46:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9205  0.8797  0.8110  0.7796  0.7691  0.7686  0.7552  0.7463  0.7460  0.7384  0.7360  0.7335  0.7335  0.7332  0.7152  0.7144
[17 : 32]:	0.7144  0.7144  0.7113  0.7041  0.6997  0.6994  0.6977  0.6941  0.6923  0.6919  0.6914  0.6879  0.6864  0.6857  0.6857  0.6836
[33 : 48]:	0.6786  0.6709  0.6675  0.6659  0.6655  0.6649  0.6629  0.6611  0.6602  0.6590  0.6584  0.6582  0.6562  0.6529  0.6522  0.6520
[49 : 64]:	0.6517  0.6474  0.6469  0.6461  0.6461  0.6433  0.6423  0.6422  0.6413  0.6406  0.6401  0.6397  0.6393  0.6379  0.6379  0.6375
2024-04-29 17:46:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:46:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #193: GFLOPs: 138.4328. Time: 1487.5255 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #194: GFLOPs: 132.2599. Time: 1556.9519 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #195: GFLOPs: 76.1291. Time: 2704.9083 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #196: GFLOPs: 107.2940. Time: 1919.2346 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #197: GFLOPs: 177.7310. Time: 1158.6179 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #198: GFLOPs: 186.6944. Time: 1102.9916 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #199: GFLOPs: 216.5304. Time: 951.0086 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #200: GFLOPs: 211.8145. Time: 972.1821 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #201: GFLOPs: 144.4236. Time: 1425.8214 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #202: GFLOPs: 191.7897. Time: 1073.6880 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #203: GFLOPs: 190.1962. Time: 1082.6837 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #204: GFLOPs: 202.0409. Time: 1019.2110 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #205: GFLOPs: 154.6339. Time: 1331.6763 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #206: GFLOPs: 196.0987. Time: 1050.0952 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #207: GFLOPs: 147.3050. Time: 1397.9317 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #208: GFLOPs: 215.1283. Time: 957.2068 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #209: GFLOPs: 213.7852. Time: 963.2205 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #210: GFLOPs: 213.6878. Time: 963.6598 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #211: GFLOPs: 107.9869. Time: 1906.9201 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #212: GFLOPs: 156.8638. Time: 1312.7456 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #213: GFLOPs: 220.5915. Time: 933.5006 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #214: GFLOPs: 123.8902. Time: 1662.1353 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #215: GFLOPs: 205.9587. Time: 999.8232 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #216: GFLOPs: 136.8853. Time: 1504.3415 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #217: GFLOPs: 191.3619. Time: 1076.0882 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #218: GFLOPs: 202.3121. Time: 1017.8447 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #219: GFLOPs: 182.9833. Time: 1125.3611 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #220: GFLOPs: 191.9090. Time: 1073.0204 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #221: GFLOPs: 186.5867. Time: 1103.6280 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #222: GFLOPs: 162.6043. Time: 1266.4013 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #223: GFLOPs: 161.4508. Time: 1275.4492 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #224: GFLOPs: 229.6536. Time: 896.6650 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #225: GFLOPs: 108.7096. Time: 1894.2424 us. Best GFLOPs: 280.3909
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #226: GFLOPs: 300.4293. Time: 685.4268 us. Best GFLOPs: 300.4293
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #227: GFLOPs: 174.7590. Time: 1178.3215 us. Best GFLOPs: 300.4293
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #228: GFLOPs: 402.9362. Time: 511.0543 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #229: GFLOPs: 193.1909. Time: 1065.9008 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #230: GFLOPs: 157.4044. Time: 1308.2370 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #231: GFLOPs: 239.7302. Time: 858.9752 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #232: GFLOPs: 129.4716. Time: 1590.4828 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #233: GFLOPs: 190.0209. Time: 1083.6826 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #234: GFLOPs: 155.4709. Time: 1324.5072 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #235: GFLOPs: 202.4450. Time: 1017.1765 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #236: GFLOPs: 190.7059. Time: 1079.7900 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #237: GFLOPs: 261.9935. Time: 785.9824 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #238: GFLOPs: 197.8968. Time: 1040.5542 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #239: GFLOPs: 190.4983. Time: 1080.9668 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #240: GFLOPs: 248.0714. Time: 830.0930 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #241: GFLOPs: 156.4281. Time: 1316.4019 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #242: GFLOPs: 155.5355. Time: 1323.9570 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #243: GFLOPs: 174.7359. Time: 1178.4776 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #244: GFLOPs: 265.2670. Time: 776.2832 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #245: GFLOPs: 154.7293. Time: 1330.8549 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #246: GFLOPs: 183.8379. Time: 1120.1297 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #247: GFLOPs: 105.2148. Time: 1957.1611 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #248: GFLOPs: 162.3348. Time: 1268.5035 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #249: GFLOPs: 148.8330. Time: 1383.5799 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #250: GFLOPs: 128.0244. Time: 1608.4609 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #251: GFLOPs: 365.1546. Time: 563.9318 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #252: GFLOPs: 179.2360. Time: 1148.8891 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #253: GFLOPs: 89.9482. Time: 2289.3434 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #254: GFLOPs: 58.4565. Time: 3522.6592 us. Best GFLOPs: 402.9362
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #255: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(64), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(16), T.int64(7), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) * T.int64(16) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(14) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(4) * T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(7), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) * T.int64(16) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(4) * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(3136)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(112))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(112) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 16, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b66)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 17:47:57 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #256: GFLOPs: 43.1655. Time: 4770.5243 us. Best GFLOPs: 402.9362
2024-04-29 18:54:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:54:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 18:55:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 18:55:00 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 18:55:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 18:55:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 18:55:16 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 18:55:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa010db8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xc83fd38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4f1a4a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cbf438)]: 0 failure(s)
2024-04-29 18:55:25 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8580  0.7857  0.7624  0.7428  0.7363  0.7351  0.7281  0.7215  0.7104  0.6932  0.6932  0.6569  0.6551  0.6541  0.6350  0.6331
[17 : 32]:	0.6195  0.6181  0.6060  0.6023  0.6017  0.5998  0.5889  0.5885  0.5834  0.5759  0.5755  0.5682  0.5672  0.5660  0.5643  0.5639
[33 : 48]:	0.5632  0.5629  0.5613  0.5613  0.5598  0.5515  0.5515  0.5470  0.5461  0.5388  0.5387  0.5379  0.5373  0.5368  0.5358  0.5352
[49 : 64]:	0.5332  0.5319  0.5317  0.5312  0.5300  0.5300  0.5290  0.5290  0.5257  0.5229  0.5227  0.5216  0.5213  0.5206  0.5191  0.5191
2024-04-29 18:55:25 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:55:25 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #257: GFLOPs: 186.3045. Time: 1105.2994 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #258: GFLOPs: 187.2204. Time: 1099.8925 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #259: GFLOPs: 191.1080. Time: 1077.5178 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #260: GFLOPs: 226.8841. Time: 907.6103 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #261: GFLOPs: 365.6102. Time: 563.2291 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #262: GFLOPs: 365.8453. Time: 562.8672 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #263: GFLOPs: 293.0791. Time: 702.6169 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #264: GFLOPs: 373.4341. Time: 551.4288 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #265: GFLOPs: 333.3472. Time: 617.7412 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #266: GFLOPs: 290.5632. Time: 708.7005 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #267: GFLOPs: 291.0721. Time: 707.4615 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #268: GFLOPs: 267.5522. Time: 769.6528 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #269: GFLOPs: 220.1149. Time: 935.5219 us. Best GFLOPs: 402.9362
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #270: GFLOPs: 445.8382. Time: 461.8767 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #271: GFLOPs: 231.2136. Time: 890.6150 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #272: GFLOPs: 138.2303. Time: 1489.7043 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #273: GFLOPs: 210.5808. Time: 977.8778 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #274: GFLOPs: 209.3173. Time: 983.7804 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #275: GFLOPs: 311.1575. Time: 661.7945 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #276: GFLOPs: 158.5551. Time: 1298.7430 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #277: GFLOPs: 241.0510. Time: 854.2685 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #278: GFLOPs: 172.6900. Time: 1192.4389 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #279: GFLOPs: 224.9366. Time: 915.4681 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #280: GFLOPs: 169.3364. Time: 1216.0548 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #281: GFLOPs: 329.7322. Time: 624.5137 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #282: GFLOPs: 426.2636. Time: 483.0868 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #283: GFLOPs: 113.5743. Time: 1813.1073 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #284: GFLOPs: 64.7568. Time: 3179.9328 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #285: GFLOPs: 182.6784. Time: 1127.2393 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #286: GFLOPs: 302.3160. Time: 681.1493 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #287: GFLOPs: 310.0402. Time: 664.1793 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #288: GFLOPs: 70.8146. Time: 2907.9091 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #289: GFLOPs: 181.4162. Time: 1135.0820 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #290: GFLOPs: 204.2734. Time: 1008.0719 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #291: GFLOPs: 227.6191. Time: 904.6793 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #292: GFLOPs: 231.3166. Time: 890.2183 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #293: GFLOPs: 143.9937. Time: 1430.0787 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #294: GFLOPs: 114.6057. Time: 1796.7898 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #295: GFLOPs: 143.7206. Time: 1432.7964 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #296: GFLOPs: 193.8087. Time: 1062.5027 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #297: GFLOPs: 141.8138. Time: 1452.0616 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #298: GFLOPs: 117.6525. Time: 1750.2588 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #299: GFLOPs: 423.6429. Time: 486.0752 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #300: GFLOPs: 199.0100. Time: 1034.7336 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #301: GFLOPs: 207.0183. Time: 994.7058 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #302: GFLOPs: 128.4487. Time: 1603.1480 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #303: GFLOPs: 92.8160. Time: 2218.6083 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #304: GFLOPs: 160.1083. Time: 1286.1441 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #305: GFLOPs: 184.4301. Time: 1116.5329 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #306: GFLOPs: 230.4778. Time: 893.4583 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #307: GFLOPs: 277.6720. Time: 741.6026 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #308: GFLOPs: 136.2728. Time: 1511.1037 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #309: GFLOPs: 302.4265. Time: 680.9004 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #310: GFLOPs: 302.4799. Time: 680.7802 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #311: GFLOPs: 211.0733. Time: 975.5961 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #312: GFLOPs: 272.9508. Time: 754.4300 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #313: GFLOPs: 110.9081. Time: 1856.6935 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #314: GFLOPs: 178.1568. Time: 1155.8484 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #315: GFLOPs: 144.5233. Time: 1424.8384 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #316: GFLOPs: 122.4236. Time: 1682.0478 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #317: GFLOPs: 378.1605. Time: 544.5368 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #318: GFLOPs: 79.5617. Time: 2588.2083 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #319: GFLOPs: 63.6467. Time: 3235.3961 us. Best GFLOPs: 445.8382
2024-04-29 18:56:46 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #320: GFLOPs: 67.7040. Time: 3041.5094 us. Best GFLOPs: 445.8382
