2024-04-29 13:33:19 [INFO] [task_scheduler.cc:160] Initializing Task #32: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10"
2024-04-29 13:33:19 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64), T.int64(1024), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 13:33:19 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 13:33:19 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(8), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(8), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(8) + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[8, 8, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 13:33:19 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(8), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(8)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(8) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), oc_chunk_1 + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(8) + oc_block_1 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[8, 8, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 13:33:19 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(8)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(8), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(8) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[8, 8, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 14:05:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 14:05:55 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 14:05:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:05:57 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 14:06:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:06:03 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:06:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:06:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:06:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9985  0.9978  0.9972  0.9965  0.9964  0.9951  0.9951  0.9944  0.9944  0.9942  0.9942  0.9935  0.9935  0.9932  0.9931  0.9930
[17 : 32]:	0.9925  0.9925  0.9904  0.9903  0.9901  0.9900  0.9898  0.9888  0.9886  0.9879  0.9876  0.9870  0.9869  0.9867  0.9865  0.9861
[33 : 48]:	0.9839  0.9838  0.9829  0.9822  0.9816  0.9814  0.9807  0.9804  0.9803  0.9803  0.9801  0.9800  0.9794  0.9793  0.9791  0.9791
[49 : 64]:	0.9789  0.9778  0.9768  0.9759  0.9755  0.9750  0.9746  0.9745  0.9743  0.9742  0.9740  0.9738  0.9737  0.9735  0.9729  0.9725
2024-04-29 14:06:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 14:06:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #1: GFLOPs: 51.1972. Time: 2009.1088 us. Best GFLOPs: 51.1972
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #2: GFLOPs: 128.8227. Time: 798.4678 us. Best GFLOPs: 128.8227
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #3: GFLOPs: 9.8032. Time: 10492.5823 us. Best GFLOPs: 128.8227
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #4: GFLOPs: 102.1524. Time: 1006.9347 us. Best GFLOPs: 128.8227
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #5: GFLOPs: 56.5849. Time: 1817.8146 us. Best GFLOPs: 128.8227
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #6: GFLOPs: 154.0879. Time: 667.5462 us. Best GFLOPs: 154.0879
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #7: GFLOPs: 9.8518. Time: 10440.8570 us. Best GFLOPs: 154.0879
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #8: GFLOPs: 1.9311. Time: 53266.2797 us. Best GFLOPs: 154.0879
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #9: GFLOPs: 165.5461. Time: 621.3423 us. Best GFLOPs: 165.5461
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #10: GFLOPs: 109.6820. Time: 937.8095 us. Best GFLOPs: 165.5461
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #11: GFLOPs: 3.1854. Time: 32291.0557 us. Best GFLOPs: 165.5461
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #12: GFLOPs: 109.5167. Time: 939.2249 us. Best GFLOPs: 165.5461
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #13: GFLOPs: 35.5041. Time: 2897.1487 us. Best GFLOPs: 165.5461
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #14: GFLOPs: 27.9631. Time: 3678.4521 us. Best GFLOPs: 165.5461
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #15: GFLOPs: 9.8685. Time: 10423.1070 us. Best GFLOPs: 165.5461
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #16: GFLOPs: 203.8788. Time: 504.5193 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #17: GFLOPs: 31.3733. Time: 3278.6108 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #18: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(7)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(7) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7)):
                for oc_block_3_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(7)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 2, 8])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #19: GFLOPs: 44.8915. Time: 2291.3177 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #20: GFLOPs: 62.3035. Time: 1650.9631 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #21: GFLOPs: 30.2750. Time: 3397.5529 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #22: GFLOPs: 82.7525. Time: 1242.9937 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #23: GFLOPs: 4.9053. Time: 20969.3266 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #24: GFLOPs: 181.0976. Time: 567.9856 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #25: GFLOPs: 64.0185. Time: 1606.7361 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #26: GFLOPs: 0.9031. Time: 113901.3820 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #27: GFLOPs: 7.5299. Time: 13660.3685 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #28: GFLOPs: 44.5292. Time: 2309.9647 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #29: GFLOPs: 20.8504. Time: 4933.2784 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #30: GFLOPs: 185.0320. Time: 555.9082 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #31: GFLOPs: 87.6942. Time: 1172.9484 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #32: GFLOPs: 51.0271. Time: 2015.8068 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #33: GFLOPs: 75.2684. Time: 1366.5871 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #34: GFLOPs: 142.6269. Time: 721.1881 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #35: GFLOPs: 20.5532. Time: 5004.6091 us. Best GFLOPs: 203.8788
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #36: GFLOPs: 342.8352. Time: 300.0298 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #37: GFLOPs: 112.2653. Time: 916.2295 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #38: GFLOPs: 115.0471. Time: 894.0755 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #39: GFLOPs: 252.7045. Time: 407.0398 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #40: GFLOPs: 19.5861. Time: 5251.7377 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #41: GFLOPs: 43.2396. Time: 2378.8541 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #42: GFLOPs: 61.6525. Time: 1668.3969 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #43: GFLOPs: 3.5688. Time: 28822.4696 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #44: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(8)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(32) + oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(32) + oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(2) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(32) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 8, 4, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #45: GFLOPs: 22.4406. Time: 4583.6940 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #46: GFLOPs: 2.8592. Time: 35975.3037 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #47: GFLOPs: 36.9578. Time: 2783.1991 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #48: GFLOPs: 2.4645. Time: 41736.6937 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #49: GFLOPs: 4.4908. Time: 22904.6938 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #50: GFLOPs: 48.1050. Time: 2138.2570 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #51: GFLOPs: 111.8979. Time: 919.2376 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #52: GFLOPs: 11.2350. Time: 9155.4027 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #53: GFLOPs: 18.9429. Time: 5430.0465 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #54: GFLOPs: 2.6560. Time: 38727.1230 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #55: GFLOPs: 23.4828. Time: 4380.2617 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #56: GFLOPs: 19.1525. Time: 5370.6151 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #57: GFLOPs: 49.8359. Time: 2063.9904 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #58: GFLOPs: 183.2137. Time: 561.4254 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #59: GFLOPs: 124.5362. Time: 825.9509 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #60: GFLOPs: 307.4407. Time: 334.5711 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #61: GFLOPs: 20.4705. Time: 5024.8346 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #62: GFLOPs: 77.6765. Time: 1324.2208 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #63: GFLOPs: 55.6860. Time: 1847.1568 us. Best GFLOPs: 342.8352
2024-04-29 14:27:24 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #64: GFLOPs: 3.2570. Time: 31581.5115 us. Best GFLOPs: 342.8352
2024-04-29 14:30:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 14:30:57 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 14:31:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:31:00 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-29 14:31:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:31:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:31:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:31:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:31:28 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9832  0.9455  0.9246  0.9181  0.9168  0.9168  0.9103  0.8941  0.8793  0.8504  0.8470  0.8470  0.8455  0.8352  0.8317  0.8264
[17 : 32]:	0.8150  0.8096  0.8060  0.7947  0.7934  0.7882  0.7874  0.7868  0.7827  0.7806  0.7612  0.7611  0.7610  0.7610  0.7592  0.7592
[33 : 48]:	0.7571  0.7550  0.7497  0.7463  0.7463  0.7382  0.7382  0.7378  0.7376  0.7376  0.7376  0.7309  0.7298  0.7272  0.7269  0.7192
[49 : 64]:	0.7135  0.7100  0.7098  0.7088  0.7083  0.7060  0.6995  0.6986  0.6978  0.6963  0.6931  0.6751  0.6751  0.6720  0.6710  0.6710
2024-04-29 14:31:28 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 14:31:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #65: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init * T.int64(16) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 * T.int64(16) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(2)):
                for ax3_ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7))
                        v_ax4 = T.axis.spatial(T.int64(64), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 4, 16])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #66: GFLOPs: 78.7979. Time: 1305.3745 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #67: GFLOPs: 70.7335. Time: 1454.2029 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #68: GFLOPs: 226.5752. Time: 453.9809 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #69: GFLOPs: 204.1682. Time: 503.8042 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #70: GFLOPs: 203.7038. Time: 504.9529 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #71: GFLOPs: 176.0382. Time: 584.3097 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #72: GFLOPs: 172.7063. Time: 595.5823 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #73: GFLOPs: 293.6181. Time: 350.3217 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #74: GFLOPs: 152.5588. Time: 674.2369 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #75: GFLOPs: 146.1485. Time: 703.8101 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #76: GFLOPs: 144.5187. Time: 711.7473 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #77: GFLOPs: 271.3878. Time: 379.0178 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #78: GFLOPs: 180.9709. Time: 568.3831 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #79: GFLOPs: 185.3921. Time: 554.8283 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #80: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                for oc_block_3_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 2, 8])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #81: GFLOPs: 214.1028. Time: 480.4271 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #82: GFLOPs: 177.2582. Time: 580.2878 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #83: GFLOPs: 115.7689. Time: 888.5015 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #84: GFLOPs: 162.2784. Time: 633.8538 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #85: GFLOPs: 213.2393. Time: 482.3725 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #86: GFLOPs: 178.9882. Time: 574.6793 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #87: GFLOPs: 235.7815. Time: 436.2547 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #88: GFLOPs: 137.3088. Time: 749.1205 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #89: GFLOPs: 173.3351. Time: 593.4216 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #90: GFLOPs: 176.0829. Time: 584.1611 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #91: GFLOPs: 249.2802. Time: 412.6313 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #92: GFLOPs: 196.9086. Time: 522.3783 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #93: GFLOPs: 98.9553. Time: 1039.4678 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #94: GFLOPs: 101.5578. Time: 1012.8305 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #95: GFLOPs: 155.9676. Time: 659.5009 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #96: GFLOPs: 158.0190. Time: 650.9396 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #97: GFLOPs: 172.2045. Time: 597.3177 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #98: GFLOPs: 205.5932. Time: 500.3123 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #99: GFLOPs: 136.7510. Time: 752.1761 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #100: GFLOPs: 161.4146. Time: 637.2460 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #101: GFLOPs: 162.4798. Time: 633.0684 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #102: GFLOPs: 137.0159. Time: 750.7219 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #103: GFLOPs: 136.9797. Time: 750.9199 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #104: GFLOPs: 201.2693. Time: 511.0606 us. Best GFLOPs: 342.8352
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #105: GFLOPs: 352.4924. Time: 291.8100 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #106: GFLOPs: 348.6018. Time: 295.0667 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #107: GFLOPs: 219.3495. Time: 468.9356 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #108: GFLOPs: 44.6391. Time: 2304.2738 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #109: GFLOPs: 273.9835. Time: 375.4270 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #110: GFLOPs: 162.6915. Time: 632.2443 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #111: GFLOPs: 177.3522. Time: 579.9803 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #112: GFLOPs: 56.3069. Time: 1826.7875 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #113: GFLOPs: 217.3259. Time: 473.3020 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #114: GFLOPs: 241.2748. Time: 426.3222 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #115: GFLOPs: 225.6376. Time: 455.8673 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #116: GFLOPs: 134.9884. Time: 761.9971 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #117: GFLOPs: 144.2357. Time: 713.1436 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #118: GFLOPs: 181.1608. Time: 567.7873 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #119: GFLOPs: 162.6628. Time: 632.3561 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #120: GFLOPs: 294.6441. Time: 349.1019 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #121: GFLOPs: 211.5053. Time: 486.3273 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #122: GFLOPs: 150.0164. Time: 685.6639 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #123: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(784), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(28) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for oc_block_3_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(28) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(28) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 2, 8])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #124: GFLOPs: 304.8794. Time: 337.3820 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #125: GFLOPs: 291.0627. Time: 353.3974 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #126: GFLOPs: 16.5906. Time: 6199.9625 us. Best GFLOPs: 352.4924
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #127: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(14), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + oh_1 * T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(16) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(14), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(16) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 2, 8])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 14:32:50 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #128: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(16) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(2) + oh_1 * T.int64(2) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(16) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 4, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 14:49:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 14:49:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 14:49:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:49:03 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 14:49:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:49:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:49:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:49:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 14:49:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9973  0.9973  0.9655  0.9652  0.9620  0.9375  0.9366  0.9278  0.9202  0.9019  0.8963  0.8933  0.8906  0.8616  0.8461  0.8425
[17 : 32]:	0.8422  0.8422  0.8121  0.8075  0.7893  0.7893  0.7893  0.7851  0.7703  0.7698  0.7518  0.7411  0.7392  0.7386  0.7369  0.7312
[33 : 48]:	0.7248  0.7191  0.7171  0.7147  0.7136  0.7040  0.7035  0.7014  0.6946  0.6921  0.6886  0.6851  0.6785  0.6771  0.6739  0.6718
[49 : 64]:	0.6716  0.6715  0.6682  0.6671  0.6656  0.6656  0.6629  0.6600  0.6597  0.6580  0.6573  0.6567  0.6566  0.6542  0.6539  0.6525
2024-04-29 14:49:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 14:49:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #129: GFLOPs: 352.4831. Time: 291.8177 us. Best GFLOPs: 352.4924
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #130: GFLOPs: 348.3015. Time: 295.3211 us. Best GFLOPs: 352.4924
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #131: GFLOPs: 206.7843. Time: 497.4304 us. Best GFLOPs: 352.4924
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #132: GFLOPs: 135.9545. Time: 756.5824 us. Best GFLOPs: 352.4924
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #133: GFLOPs: 208.2016. Time: 494.0442 us. Best GFLOPs: 352.4924
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #134: GFLOPs: 206.1075. Time: 499.0637 us. Best GFLOPs: 352.4924
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #135: GFLOPs: 180.9707. Time: 568.3838 us. Best GFLOPs: 352.4924
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #136: GFLOPs: 143.0492. Time: 719.0588 us. Best GFLOPs: 352.4924
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #137: GFLOPs: 369.1375. Time: 278.6517 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #138: GFLOPs: 277.8578. Time: 370.1923 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #139: GFLOPs: 207.4943. Time: 495.7282 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #140: GFLOPs: 213.9860. Time: 480.6894 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #141: GFLOPs: 312.1949. Time: 329.4762 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #142: GFLOPs: 350.4379. Time: 293.5208 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #143: GFLOPs: 122.6601. Time: 838.5839 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #144: GFLOPs: 175.4521. Time: 586.2615 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #145: GFLOPs: 343.2352. Time: 299.6803 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #146: GFLOPs: 181.0349. Time: 568.1821 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #147: GFLOPs: 128.6064. Time: 799.8108 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #148: GFLOPs: 293.9492. Time: 349.9271 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #149: GFLOPs: 228.7315. Time: 449.7011 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #150: GFLOPs: 189.3767. Time: 543.1544 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #151: GFLOPs: 210.1766. Time: 489.4017 us. Best GFLOPs: 369.1375
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #152: GFLOPs: 410.5319. Time: 250.5549 us. Best GFLOPs: 410.5319
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #153: GFLOPs: 112.9547. Time: 910.6377 us. Best GFLOPs: 410.5319
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #154: GFLOPs: 32.5926. Time: 3155.9556 us. Best GFLOPs: 410.5319
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #155: GFLOPs: 362.6830. Time: 283.6108 us. Best GFLOPs: 410.5319
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #156: GFLOPs: 34.0905. Time: 3017.2846 us. Best GFLOPs: 410.5319
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #157: GFLOPs: 34.6028. Time: 2972.6172 us. Best GFLOPs: 410.5319
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #158: GFLOPs: 364.5956. Time: 282.1230 us. Best GFLOPs: 410.5319
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #159: GFLOPs: 568.9622. Time: 180.7867 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #160: GFLOPs: 140.8541. Time: 730.2650 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #161: GFLOPs: 165.8214. Time: 620.3106 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #162: GFLOPs: 174.0022. Time: 591.1467 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #163: GFLOPs: 220.4840. Time: 466.5228 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #164: GFLOPs: 256.2713. Time: 401.3747 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #165: GFLOPs: 221.4069. Time: 464.5781 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #166: GFLOPs: 194.4220. Time: 529.0595 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #167: GFLOPs: 234.9225. Time: 437.8500 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #168: GFLOPs: 148.5325. Time: 692.5139 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #169: GFLOPs: 345.8955. Time: 297.3754 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #170: GFLOPs: 199.4412. Time: 515.7449 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #171: GFLOPs: 203.9947. Time: 504.2328 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #172: GFLOPs: 103.4705. Time: 994.1073 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #173: GFLOPs: 163.0729. Time: 630.7659 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #174: GFLOPs: 275.4655. Time: 373.4071 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #175: GFLOPs: 171.4644. Time: 599.8961 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #176: GFLOPs: 272.2445. Time: 377.8251 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #177: GFLOPs: 139.2065. Time: 738.9083 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #178: GFLOPs: 13.4883. Time: 7625.9421 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #179: GFLOPs: 208.6254. Time: 493.0407 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #180: GFLOPs: 216.0455. Time: 476.1071 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #181: GFLOPs: 171.5679. Time: 599.5340 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #182: GFLOPs: 93.0656. Time: 1105.2499 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #183: GFLOPs: 161.1161. Time: 638.4265 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #184: GFLOPs: 392.0325. Time: 262.3782 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #185: GFLOPs: 104.8626. Time: 980.9101 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #186: GFLOPs: 222.7356. Time: 461.8067 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #187: GFLOPs: 405.0323. Time: 253.9570 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #188: GFLOPs: 59.6188. Time: 1725.3068 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #189: GFLOPs: 213.5577. Time: 481.6534 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #190: GFLOPs: 44.7926. Time: 2296.3795 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #191: GFLOPs: 25.0215. Time: 4110.8983 us. Best GFLOPs: 568.9622
2024-04-29 14:50:34 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #192: GFLOPs: 145.3251. Time: 707.7977 us. Best GFLOPs: 568.9622
2024-04-29 15:11:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:11:17 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 15:11:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:11:20 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 15:11:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:11:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:11:36 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:11:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:11:44 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9827  0.9827  0.9372  0.9129  0.7656  0.7580  0.7574  0.7534  0.7300  0.7300  0.7264  0.7170  0.6862  0.6719  0.6662  0.6596
[17 : 32]:	0.6563  0.6554  0.6494  0.6461  0.6424  0.6382  0.6382  0.6206  0.6201  0.6194  0.6110  0.6097  0.6019  0.6019  0.6000  0.5990
[33 : 48]:	0.5990  0.5966  0.5962  0.5940  0.5922  0.5914  0.5913  0.5895  0.5844  0.5840  0.5821  0.5821  0.5789  0.5682  0.5646  0.5631
[49 : 64]:	0.5598  0.5576  0.5504  0.5490  0.5400  0.5382  0.5382  0.5366  0.5341  0.5317  0.5308  0.5300  0.5249  0.5182  0.5127  0.5127
2024-04-29 15:11:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:11:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #193: GFLOPs: 657.8631. Time: 156.3559 us. Best GFLOPs: 657.8631
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #194: GFLOPs: 659.5355. Time: 155.9595 us. Best GFLOPs: 659.5355
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #195: GFLOPs: 838.3725. Time: 122.6910 us. Best GFLOPs: 838.3725
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #196: GFLOPs: 656.1590. Time: 156.7620 us. Best GFLOPs: 838.3725
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #197: GFLOPs: 785.4746. Time: 130.9537 us. Best GFLOPs: 838.3725
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #198: GFLOPs: 978.2170. Time: 105.1513 us. Best GFLOPs: 978.2170
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #199: GFLOPs: 940.4777. Time: 109.3708 us. Best GFLOPs: 978.2170
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #200: GFLOPs: 775.1532. Time: 132.6974 us. Best GFLOPs: 978.2170
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #201: GFLOPs: 765.3769. Time: 134.3924 us. Best GFLOPs: 978.2170
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #202: GFLOPs: 747.9798. Time: 137.5182 us. Best GFLOPs: 978.2170
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #203: GFLOPs: 979.3504. Time: 105.0296 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #204: GFLOPs: 422.5685. Time: 243.4181 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #205: GFLOPs: 359.7494. Time: 285.9235 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #206: GFLOPs: 609.5876. Time: 168.7383 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #207: GFLOPs: 70.9199. Time: 1450.3795 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #208: GFLOPs: 352.5821. Time: 291.7357 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #209: GFLOPs: 677.6470. Time: 151.7911 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #210: GFLOPs: 175.7666. Time: 585.2126 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #211: GFLOPs: 372.5503. Time: 276.0991 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #212: GFLOPs: 352.8926. Time: 291.4791 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #213: GFLOPs: 246.5254. Time: 417.2422 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #214: GFLOPs: 148.9850. Time: 690.4103 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #215: GFLOPs: 22.0309. Time: 4668.9425 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #216: GFLOPs: 364.6858. Time: 282.0532 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #217: GFLOPs: 334.8114. Time: 307.2201 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #218: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(32), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(32) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(32), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(32) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(1)):
                for ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(32) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 32, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #219: GFLOPs: 351.4666. Time: 292.6617 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #220: GFLOPs: 366.8036. Time: 280.4248 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #221: GFLOPs: 364.7574. Time: 281.9979 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #222: GFLOPs: 363.6757. Time: 282.8366 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #223: GFLOPs: 309.0681. Time: 332.8094 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #224: GFLOPs: 121.9741. Time: 843.3001 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #225: GFLOPs: 122.2458. Time: 841.4257 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #226: GFLOPs: 304.5185. Time: 337.7817 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #227: GFLOPs: 363.1934. Time: 283.2122 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #228: GFLOPs: 372.5386. Time: 276.1078 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #229: GFLOPs: 198.6459. Time: 517.8098 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #230: GFLOPs: 356.3436. Time: 288.6562 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #231: GFLOPs: 128.4508. Time: 800.7796 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #232: GFLOPs: 143.3083. Time: 717.7591 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #233: GFLOPs: 335.5122. Time: 306.5784 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #234: GFLOPs: 265.6633. Time: 387.1848 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #235: GFLOPs: 355.0443. Time: 289.7126 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #236: GFLOPs: 353.1906. Time: 291.2331 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #237: GFLOPs: 680.3552. Time: 151.1869 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #238: GFLOPs: 636.6653. Time: 161.5618 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #239: GFLOPs: 188.1302. Time: 546.7534 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #240: GFLOPs: 112.1539. Time: 917.1402 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #241: GFLOPs: 639.3683. Time: 160.8788 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #242: GFLOPs: 161.2501. Time: 637.8961 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #243: GFLOPs: 302.0008. Time: 340.5977 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #244: GFLOPs: 354.6768. Time: 290.0128 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #245: GFLOPs: 52.5458. Time: 1957.5452 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #246: GFLOPs: 642.8999. Time: 159.9951 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #247: GFLOPs: 642.6270. Time: 160.0630 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #248: GFLOPs: 569.8562. Time: 180.5031 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #249: GFLOPs: 281.2838. Time: 365.6834 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #250: GFLOPs: 19.3237. Time: 5323.0394 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #251: GFLOPs: 640.5842. Time: 160.5734 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #252: GFLOPs: 650.7649. Time: 158.0614 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #253: GFLOPs: 640.7404. Time: 160.5343 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #254: GFLOPs: 121.4194. Time: 847.1531 us. Best GFLOPs: 979.3504
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #255: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(4), T.int64(7), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + oh_1 * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 8, 8])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 15:13:18 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #256: GFLOPs: 48.8953. Time: 2103.6971 us. Best GFLOPs: 979.3504
2024-04-29 15:32:16 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:32:17 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 15:32:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:32:19 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 15:32:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:32:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:32:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:32:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:32:44 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9903  0.9848  0.9714  0.9281  0.9264  0.9243  0.9243  0.9243  0.9237  0.9235  0.8996  0.8849  0.8849  0.8815  0.8760  0.8527
[17 : 32]:	0.8442  0.8368  0.8359  0.8359  0.8249  0.8192  0.8171  0.8167  0.8167  0.8167  0.8135  0.8134  0.8119  0.8051  0.7946  0.7914
[33 : 48]:	0.7912  0.7657  0.7657  0.7615  0.7615  0.7615  0.7613  0.7586  0.7586  0.7530  0.7530  0.7510  0.7403  0.7403  0.7390  0.7362
[49 : 64]:	0.7362  0.7360  0.7360  0.7334  0.7305  0.7289  0.7269  0.7244  0.7192  0.7174  0.7125  0.7112  0.7108  0.7089  0.7068  0.7058
2024-04-29 15:32:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:32:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #257: GFLOPs: 858.2380. Time: 119.8511 us. Best GFLOPs: 979.3504
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #258: GFLOPs: 844.9473. Time: 121.7364 us. Best GFLOPs: 979.3504
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #259: GFLOPs: 990.1116. Time: 103.8881 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #260: GFLOPs: 918.3203. Time: 112.0097 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #261: GFLOPs: 768.5930. Time: 133.8300 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #262: GFLOPs: 769.2508. Time: 133.7156 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #263: GFLOPs: 744.2273. Time: 138.2115 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #264: GFLOPs: 762.2084. Time: 134.9510 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #265: GFLOPs: 924.0174. Time: 111.3191 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #266: GFLOPs: 933.5300. Time: 110.1848 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #267: GFLOPs: 742.5077. Time: 138.5316 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #268: GFLOPs: 919.3756. Time: 111.8812 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #269: GFLOPs: 919.6622. Time: 111.8463 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #270: GFLOPs: 894.6930. Time: 114.9677 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #271: GFLOPs: 914.9573. Time: 112.4214 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #272: GFLOPs: 565.7049. Time: 181.8277 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #273: GFLOPs: 442.7233. Time: 232.3365 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #274: GFLOPs: 781.0639. Time: 131.6932 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #275: GFLOPs: 873.6141. Time: 117.7417 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #276: GFLOPs: 597.5936. Time: 172.1250 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #277: GFLOPs: 841.9556. Time: 122.1689 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #278: GFLOPs: 571.7811. Time: 179.8954 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #279: GFLOPs: 868.4341. Time: 118.4440 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #280: GFLOPs: 782.7797. Time: 131.4045 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #281: GFLOPs: 781.9335. Time: 131.5467 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #282: GFLOPs: 778.1385. Time: 132.1883 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #283: GFLOPs: 750.6658. Time: 137.0261 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #284: GFLOPs: 839.5040. Time: 122.5257 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #285: GFLOPs: 831.9064. Time: 123.6447 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #286: GFLOPs: 856.1788. Time: 120.1394 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #287: GFLOPs: 841.8220. Time: 122.1883 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #288: GFLOPs: 837.7202. Time: 122.7866 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #289: GFLOPs: 390.3873. Time: 263.4840 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #290: GFLOPs: 728.9266. Time: 141.1127 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #291: GFLOPs: 781.7094. Time: 131.5844 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #292: GFLOPs: 896.3533. Time: 114.7547 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #293: GFLOPs: 907.0081. Time: 113.4067 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #294: GFLOPs: 854.6943. Time: 120.3481 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #295: GFLOPs: 810.9285. Time: 126.8432 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #296: GFLOPs: 579.9235. Time: 177.3696 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #297: GFLOPs: 776.0043. Time: 132.5518 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #298: GFLOPs: 892.8643. Time: 115.2032 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #299: GFLOPs: 890.1962. Time: 115.5485 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #300: GFLOPs: 928.7942. Time: 110.7466 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #301: GFLOPs: 980.5930. Time: 104.8965 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #302: GFLOPs: 619.2001. Time: 166.1188 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #303: GFLOPs: 899.8635. Time: 114.3071 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #304: GFLOPs: 976.7259. Time: 105.3118 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #305: GFLOPs: 974.7872. Time: 105.5213 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #306: GFLOPs: 776.3959. Time: 132.4850 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #307: GFLOPs: 313.3522. Time: 328.2594 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #308: GFLOPs: 850.6647. Time: 120.9181 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #309: GFLOPs: 896.0963. Time: 114.7877 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #310: GFLOPs: 927.1742. Time: 110.9401 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #311: GFLOPs: 570.9630. Time: 180.1532 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #312: GFLOPs: 916.4420. Time: 112.2393 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #313: GFLOPs: 861.0970. Time: 119.4532 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #314: GFLOPs: 662.9424. Time: 155.1580 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #315: GFLOPs: 666.0691. Time: 154.4296 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #316: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(98), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #317: GFLOPs: 963.6364. Time: 106.7423 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #318: GFLOPs: 6.4595. Time: 15923.9254 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #319: GFLOPs: 205.9130. Time: 499.5352 us. Best GFLOPs: 990.1116
2024-04-29 15:34:23 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #320: GFLOPs: 26.6628. Time: 3857.8392 us. Best GFLOPs: 990.1116
2024-04-29 15:59:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:59:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 15:59:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:59:09 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 15:59:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:59:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:59:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:59:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 15:59:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9837  0.9732  0.9714  0.9656  0.9639  0.9539  0.9539  0.9499  0.9397  0.9379  0.9379  0.9365  0.9350  0.9328  0.9328  0.9304
[17 : 32]:	0.9296  0.9293  0.9272  0.9272  0.9246  0.9194  0.9188  0.9171  0.9165  0.9146  0.9135  0.9135  0.9082  0.9082  0.9055  0.9055
[33 : 48]:	0.9053  0.9037  0.9034  0.9028  0.9028  0.9019  0.9010  0.8985  0.8985  0.8941  0.8919  0.8835  0.8824  0.8800  0.8789  0.8789
[49 : 64]:	0.8789  0.8789  0.8787  0.8786  0.8767  0.8767  0.8765  0.8684  0.8681  0.8681  0.8676  0.8662  0.8649  0.8644  0.8644  0.8639
2024-04-29 15:59:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:59:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:00:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #321: GFLOPs: 487.0673. Time: 211.1840 us. Best GFLOPs: 990.1116
2024-04-29 16:00:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #322: GFLOPs: 976.6027. Time: 105.3251 us. Best GFLOPs: 990.1116
2024-04-29 16:00:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #323: GFLOPs: 972.8833. Time: 105.7278 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #324: GFLOPs: 985.4487. Time: 104.3797 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #325: GFLOPs: 986.5872. Time: 104.2592 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #326: GFLOPs: 967.0713. Time: 106.3632 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #327: GFLOPs: 981.1024. Time: 104.8421 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #328: GFLOPs: 932.4762. Time: 110.3093 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #329: GFLOPs: 942.1212. Time: 109.1800 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #330: GFLOPs: 926.0858. Time: 111.0705 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #331: GFLOPs: 942.6947. Time: 109.1136 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #332: GFLOPs: 917.6985. Time: 112.0856 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #333: GFLOPs: 916.1318. Time: 112.2773 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #334: GFLOPs: 929.1022. Time: 110.7099 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #335: GFLOPs: 927.5320. Time: 110.8973 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #336: GFLOPs: 921.4442. Time: 111.6300 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #337: GFLOPs: 916.1229. Time: 112.2784 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #338: GFLOPs: 914.9897. Time: 112.4174 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #339: GFLOPs: 930.1529. Time: 110.5848 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #340: GFLOPs: 681.2691. Time: 150.9841 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #341: GFLOPs: 921.2991. Time: 111.6476 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #342: GFLOPs: 877.6342. Time: 117.2024 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #343: GFLOPs: 872.7491. Time: 117.8584 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #344: GFLOPs: 972.5913. Time: 105.7595 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #345: GFLOPs: 361.3119. Time: 284.6870 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #346: GFLOPs: 893.5328. Time: 115.1170 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #347: GFLOPs: 928.6608. Time: 110.7625 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #348: GFLOPs: 965.0398. Time: 106.5871 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #349: GFLOPs: 873.5502. Time: 117.7503 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #350: GFLOPs: 879.2683. Time: 116.9845 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #351: GFLOPs: 892.3790. Time: 115.2658 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #352: GFLOPs: 887.0511. Time: 115.9581 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #353: GFLOPs: 916.8324. Time: 112.1915 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #354: GFLOPs: 889.4886. Time: 115.6404 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #355: GFLOPs: 889.6889. Time: 115.6143 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #356: GFLOPs: 912.6884. Time: 112.7009 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #357: GFLOPs: 799.1923. Time: 128.7059 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #358: GFLOPs: 896.8546. Time: 114.6906 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #359: GFLOPs: 889.8739. Time: 115.5903 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #360: GFLOPs: 920.1285. Time: 111.7896 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #361: GFLOPs: 918.1047. Time: 112.0360 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #362: GFLOPs: 888.7312. Time: 115.7389 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #363: GFLOPs: 897.1312. Time: 114.6552 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #364: GFLOPs: 896.2911. Time: 114.7627 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #365: GFLOPs: 893.7422. Time: 115.0900 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #366: GFLOPs: 849.8848. Time: 121.0291 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #367: GFLOPs: 887.3251. Time: 115.9223 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #368: GFLOPs: 851.6168. Time: 120.7830 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #369: GFLOPs: 890.8444. Time: 115.4644 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #370: GFLOPs: 724.6349. Time: 141.9484 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #371: GFLOPs: 849.0528. Time: 121.1477 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #372: GFLOPs: 894.3795. Time: 115.0080 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #373: GFLOPs: 891.4524. Time: 115.3856 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #374: GFLOPs: 853.9313. Time: 120.4556 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #375: GFLOPs: 850.7999. Time: 120.8989 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #376: GFLOPs: 845.8554. Time: 121.6057 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #377: GFLOPs: 932.8121. Time: 110.2696 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #378: GFLOPs: 941.5382. Time: 109.2476 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #379: GFLOPs: 890.6995. Time: 115.4832 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #380: GFLOPs: 868.2706. Time: 118.4663 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #381: GFLOPs: 888.5658. Time: 115.7605 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #382: GFLOPs: 45.2616. Time: 2272.5854 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #383: GFLOPs: 84.7614. Time: 1213.5335 us. Best GFLOPs: 990.1116
2024-04-29 16:00:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #384: GFLOPs: 67.5889. Time: 1521.8586 us. Best GFLOPs: 990.1116
2024-04-29 16:24:16 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:24:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 16:24:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 16:24:18 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 16:24:24 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 16:24:29 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 16:24:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 16:24:40 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 16:24:43 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9790  0.9770  0.9761  0.9680  0.9629  0.9489  0.9447  0.9427  0.9288  0.9286  0.9268  0.9268  0.9232  0.9232  0.9218  0.9216
[17 : 32]:	0.9202  0.9202  0.9202  0.9202  0.9176  0.9156  0.9155  0.9155  0.9126  0.9126  0.9126  0.9123  0.9123  0.9123  0.9105  0.9103
[33 : 48]:	0.9103  0.9098  0.9095  0.9087  0.9087  0.9068  0.9042  0.9026  0.9026  0.9024  0.9024  0.9019  0.9019  0.9013  0.9013  0.9012
[49 : 64]:	0.9012  0.9000  0.8974  0.8966  0.8918  0.8897  0.8897  0.8897  0.8889  0.8834  0.8825  0.8751  0.8741  0.8732  0.8713  0.8713
2024-04-29 16:24:43 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:24:43 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #385: GFLOPs: 953.0089. Time: 107.9327 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #386: GFLOPs: 974.9163. Time: 105.5073 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #387: GFLOPs: 974.7319. Time: 105.5273 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #388: GFLOPs: 982.7244. Time: 104.6690 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #389: GFLOPs: 972.0557. Time: 105.8178 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #390: GFLOPs: 931.8516. Time: 110.3832 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #391: GFLOPs: 932.5495. Time: 110.3006 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #392: GFLOPs: 926.4198. Time: 111.0304 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #393: GFLOPs: 913.5514. Time: 112.5944 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #394: GFLOPs: 975.7149. Time: 105.4210 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #395: GFLOPs: 977.9860. Time: 105.1762 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #396: GFLOPs: 976.3746. Time: 105.3497 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #397: GFLOPs: 929.7641. Time: 110.6311 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #398: GFLOPs: 936.1944. Time: 109.8712 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #399: GFLOPs: 899.1255. Time: 114.4009 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #400: GFLOPs: 917.6274. Time: 112.0943 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #401: GFLOPs: 928.5617. Time: 110.7743 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #402: GFLOPs: 787.9521. Time: 130.5419 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #403: GFLOPs: 929.2019. Time: 110.6980 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #404: GFLOPs: 269.8536. Time: 381.1726 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #405: GFLOPs: 906.8373. Time: 113.4281 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #406: GFLOPs: 907.7479. Time: 113.3143 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #407: GFLOPs: 973.8338. Time: 105.6246 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #408: GFLOPs: 965.1565. Time: 106.5742 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #409: GFLOPs: 890.3700. Time: 115.5259 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #410: GFLOPs: 884.3214. Time: 116.3161 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #411: GFLOPs: 885.0194. Time: 116.2243 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #412: GFLOPs: 458.3593. Time: 224.4109 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #413: GFLOPs: 882.7591. Time: 116.5219 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #414: GFLOPs: 888.4744. Time: 115.7724 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #415: GFLOPs: 896.3945. Time: 114.7495 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #416: GFLOPs: 964.1384. Time: 106.6868 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #417: GFLOPs: 970.7548. Time: 105.9596 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #418: GFLOPs: 899.9117. Time: 114.3010 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #419: GFLOPs: 927.5661. Time: 110.8932 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #420: GFLOPs: 885.9324. Time: 116.1046 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #421: GFLOPs: 887.9105. Time: 115.8459 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #422: GFLOPs: 888.6791. Time: 115.7457 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #423: GFLOPs: 820.3739. Time: 125.3828 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #424: GFLOPs: 788.3470. Time: 130.4766 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #425: GFLOPs: 887.7866. Time: 115.8621 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #426: GFLOPs: 884.8624. Time: 116.2450 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #427: GFLOPs: 889.8449. Time: 115.5941 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #428: GFLOPs: 873.4644. Time: 117.7619 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #429: GFLOPs: 884.7966. Time: 116.2536 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #430: GFLOPs: 891.9910. Time: 115.3160 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #431: GFLOPs: 884.0126. Time: 116.3567 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #432: GFLOPs: 961.9697. Time: 106.9273 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #433: GFLOPs: 974.3258. Time: 105.5713 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #434: GFLOPs: 891.2495. Time: 115.4119 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #435: GFLOPs: 967.2426. Time: 106.3444 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #436: GFLOPs: 900.9384. Time: 114.1707 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #437: GFLOPs: 966.2427. Time: 106.4544 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #438: GFLOPs: 969.6788. Time: 106.0772 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #439: GFLOPs: 971.7361. Time: 105.8526 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #440: GFLOPs: 967.4357. Time: 106.3231 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #441: GFLOPs: 969.2363. Time: 106.1256 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #442: GFLOPs: 902.4714. Time: 113.9768 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #443: GFLOPs: 931.2158. Time: 110.4586 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #444: GFLOPs: 969.5343. Time: 106.0930 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #445: GFLOPs: 806.1753. Time: 127.5911 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #446: GFLOPs: 30.5692. Time: 3364.8455 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #447: GFLOPs: 56.3369. Time: 1825.8149 us. Best GFLOPs: 990.1116
2024-04-29 16:26:05 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #448: GFLOPs: 66.4502. Time: 1547.9390 us. Best GFLOPs: 990.1116
2024-04-29 17:08:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:08:26 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:08:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:08:29 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:08:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:08:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:08:45 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:08:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:08:53 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9686  0.9681  0.9663  0.9658  0.9658  0.9625  0.9625  0.9625  0.9589  0.9589  0.9450  0.9440  0.9426  0.9377  0.9345  0.9345
[17 : 32]:	0.9283  0.9267  0.9254  0.9224  0.9211  0.9209  0.9209  0.9184  0.9182  0.9174  0.9174  0.9174  0.9079  0.9010  0.9008  0.9008
[33 : 48]:	0.9007  0.9006  0.9001  0.8999  0.8988  0.8977  0.8962  0.8958  0.8955  0.8930  0.8930  0.8925  0.8923  0.8917  0.8917  0.8875
[49 : 64]:	0.8859  0.8859  0.8841  0.8841  0.8802  0.8796  0.8750  0.8750  0.8687  0.8634  0.8617  0.8605  0.8599  0.8591  0.8591  0.8588
2024-04-29 17:08:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:08:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #449: GFLOPs: 972.0142. Time: 105.8223 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #450: GFLOPs: 976.1445. Time: 105.3746 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #451: GFLOPs: 984.9841. Time: 104.4289 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #452: GFLOPs: 966.0154. Time: 106.4795 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #453: GFLOPs: 934.2350. Time: 110.1016 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #454: GFLOPs: 982.8069. Time: 104.6602 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #455: GFLOPs: 968.1857. Time: 106.2408 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #456: GFLOPs: 742.2174. Time: 138.5858 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #457: GFLOPs: 941.5773. Time: 109.2431 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #458: GFLOPs: 924.8977. Time: 111.2132 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #459: GFLOPs: 930.1260. Time: 110.5880 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #460: GFLOPs: 946.1205. Time: 108.7185 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #461: GFLOPs: 902.7355. Time: 113.9434 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #462: GFLOPs: 894.9118. Time: 114.9396 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #463: GFLOPs: 926.1607. Time: 111.0615 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #464: GFLOPs: 934.5390. Time: 110.0658 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #465: GFLOPs: 910.8477. Time: 112.9286 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #466: GFLOPs: 921.9628. Time: 111.5672 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #467: GFLOPs: 907.2058. Time: 113.3820 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #468: GFLOPs: 907.6636. Time: 113.3248 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #469: GFLOPs: 956.4916. Time: 107.5397 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #470: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #471: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #472: GFLOPs: 936.4528. Time: 109.8409 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #473: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(7) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(7) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(7) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #474: GFLOPs: 875.9344. Time: 117.4298 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #475: GFLOPs: 892.4083. Time: 115.2620 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #476: GFLOPs: 882.1387. Time: 116.6039 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #477: GFLOPs: 945.2124. Time: 108.8229 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #478: GFLOPs: 893.2058. Time: 115.1591 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #479: GFLOPs: 932.7133. Time: 110.2813 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #480: GFLOPs: 910.3748. Time: 112.9873 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #481: GFLOPs: 890.1579. Time: 115.5534 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #482: GFLOPs: 852.2793. Time: 120.6891 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #483: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #484: GFLOPs: 899.5925. Time: 114.3415 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #485: GFLOPs: 900.7094. Time: 114.1998 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #486: GFLOPs: 880.5766. Time: 116.8107 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #487: GFLOPs: 878.0343. Time: 117.1490 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #488: GFLOPs: 128.9599. Time: 797.6186 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #489: GFLOPs: 852.1727. Time: 120.7042 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #490: GFLOPs: 877.7119. Time: 117.1920 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #491: GFLOPs: 862.2123. Time: 119.2987 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #492: GFLOPs: 840.3546. Time: 122.4017 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #493: GFLOPs: 903.1421. Time: 113.8922 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #494: GFLOPs: 897.4648. Time: 114.6126 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #495: GFLOPs: 876.9620. Time: 117.2922 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #496: GFLOPs: 323.3593. Time: 318.1006 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #497: GFLOPs: 444.3334. Time: 231.4946 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #498: GFLOPs: 886.9630. Time: 115.9697 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #499: GFLOPs: 867.8797. Time: 118.5197 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #500: GFLOPs: 884.6717. Time: 116.2700 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #501: GFLOPs: 931.1193. Time: 110.4701 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #502: GFLOPs: 881.4154. Time: 116.6996 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #503: GFLOPs: 132.1672. Time: 778.2626 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #504: GFLOPs: 135.5285. Time: 758.9607 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #505: GFLOPs: 881.8480. Time: 116.6423 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #506: GFLOPs: 830.6183. Time: 123.8364 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #507: GFLOPs: 881.0842. Time: 116.7434 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #508: GFLOPs: 837.4090. Time: 122.8322 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #509: GFLOPs: 484.6390. Time: 212.2421 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #510: GFLOPs: 86.4162. Time: 1190.2956 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #511: GFLOPs: 20.6329. Time: 4985.2872 us. Best GFLOPs: 990.1116
2024-04-29 17:10:28 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #512: GFLOPs: 82.9150. Time: 1240.5571 us. Best GFLOPs: 990.1116
2024-04-29 17:24:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:24:47 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:24:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:24:49 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:24:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:24:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:25:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:25:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:25:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9829  0.9818  0.9778  0.9753  0.9753  0.9751  0.9743  0.9730  0.9691  0.9508  0.9508  0.9414  0.9367  0.9341  0.9336  0.9336
[17 : 32]:	0.9281  0.9281  0.9228  0.9223  0.9203  0.9144  0.9144  0.9046  0.9046  0.9018  0.8976  0.8943  0.8941  0.8920  0.8863  0.8852
[33 : 48]:	0.8834  0.8826  0.8822  0.8814  0.8769  0.8745  0.8720  0.8711  0.8703  0.8681  0.8635  0.8621  0.8615  0.8615  0.8615  0.8608
[49 : 64]:	0.8601  0.8601  0.8597  0.8597  0.8553  0.8532  0.8516  0.8508  0.8507  0.8496  0.8423  0.8414  0.8371  0.8329  0.8329  0.8329
2024-04-29 17:25:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:25:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #513: GFLOPs: 956.3896. Time: 107.5512 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #514: GFLOPs: 976.4738. Time: 105.3390 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #515: GFLOPs: 962.4161. Time: 106.8777 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #516: GFLOPs: 960.8656. Time: 107.0501 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #517: GFLOPs: 972.5168. Time: 105.7676 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #518: GFLOPs: 973.5404. Time: 105.6564 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #519: GFLOPs: 983.7971. Time: 104.5549 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #520: GFLOPs: 980.6005. Time: 104.8957 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #521: GFLOPs: 973.4620. Time: 105.6649 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #522: GFLOPs: 892.5962. Time: 115.2378 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #523: GFLOPs: 898.7579. Time: 114.4477 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #524: GFLOPs: 938.2864. Time: 109.6262 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #525: GFLOPs: 976.8886. Time: 105.2943 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #526: GFLOPs: 911.0405. Time: 112.9047 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #527: GFLOPs: 928.9736. Time: 110.7252 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #528: GFLOPs: 926.4496. Time: 111.0269 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #529: GFLOPs: 957.2094. Time: 107.4590 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #530: GFLOPs: 934.6300. Time: 110.0551 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #531: GFLOPs: 936.1532. Time: 109.8760 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #532: GFLOPs: 916.6914. Time: 112.2088 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #533: GFLOPs: 452.0560. Time: 227.5399 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #534: GFLOPs: 917.4319. Time: 112.1182 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #535: GFLOPs: 916.2222. Time: 112.2662 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #536: GFLOPs: 894.0261. Time: 115.0535 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #537: GFLOPs: 893.7776. Time: 115.0854 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #538: GFLOPs: 889.2964. Time: 115.6654 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #539: GFLOPs: 879.4565. Time: 116.9595 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #540: GFLOPs: 891.6798. Time: 115.3562 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #541: GFLOPs: 881.7045. Time: 116.6613 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #542: GFLOPs: 908.2554. Time: 113.2510 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #543: GFLOPs: 894.5504. Time: 114.9860 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #544: GFLOPs: 880.8557. Time: 116.7737 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #545: GFLOPs: 782.6703. Time: 131.4229 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #546: GFLOPs: 923.1280. Time: 111.4264 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #547: GFLOPs: 891.8526. Time: 115.3339 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #548: GFLOPs: 926.2465. Time: 111.0512 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #549: GFLOPs: 932.1091. Time: 110.3528 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #550: GFLOPs: 891.6267. Time: 115.3631 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #551: GFLOPs: 860.4997. Time: 119.5361 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #552: GFLOPs: 426.7804. Time: 241.0157 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #553: GFLOPs: 844.5025. Time: 121.8005 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #554: GFLOPs: 718.8163. Time: 143.0975 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #555: GFLOPs: 859.1404. Time: 119.7253 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #556: GFLOPs: 853.8909. Time: 120.4613 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #557: GFLOPs: 714.9443. Time: 143.8725 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #558: GFLOPs: 462.5036. Time: 222.4000 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #559: GFLOPs: 842.6105. Time: 122.0740 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #560: GFLOPs: 838.3808. Time: 122.6898 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #561: GFLOPs: 852.6457. Time: 120.6372 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #562: GFLOPs: 851.6041. Time: 120.7848 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #563: GFLOPs: 865.3921. Time: 118.8603 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #564: GFLOPs: 860.6193. Time: 119.5195 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #565: GFLOPs: 920.8767. Time: 111.6988 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #566: GFLOPs: 930.1890. Time: 110.5805 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #567: GFLOPs: 854.7959. Time: 120.3338 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #568: GFLOPs: 843.3013. Time: 121.9740 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #569: GFLOPs: 839.3523. Time: 122.5478 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #570: GFLOPs: 760.8605. Time: 135.1901 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #571: GFLOPs: 766.1997. Time: 134.2480 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #572: GFLOPs: 850.9321. Time: 120.8802 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #573: GFLOPs: 629.7077. Time: 163.3469 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #574: GFLOPs: 33.0866. Time: 3108.8321 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #575: GFLOPs: 41.0919. Time: 2503.1894 us. Best GFLOPs: 990.1116
2024-04-29 17:26:33 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #576: GFLOPs: 0.7823. Time: 131487.7850 us. Best GFLOPs: 990.1116
2024-04-29 17:41:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:41:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:41:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:41:09 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:41:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:41:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:41:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:41:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:41:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9807  0.9795  0.9769  0.9761  0.9759  0.9758  0.9754  0.9734  0.9732  0.9730  0.9730  0.9730  0.9729  0.9724  0.9715  0.9650
[17 : 32]:	0.9606  0.9538  0.9377  0.9365  0.9365  0.9355  0.9354  0.9354  0.9350  0.9320  0.9320  0.9320  0.9307  0.9277  0.9247  0.9227
[33 : 48]:	0.9226  0.9226  0.9211  0.9167  0.9131  0.9094  0.9094  0.9084  0.9071  0.9071  0.9014  0.8989  0.8985  0.8985  0.8977  0.8937
[49 : 64]:	0.8878  0.8870  0.8757  0.8696  0.8682  0.8670  0.8616  0.8616  0.8577  0.8571  0.8541  0.8541  0.8541  0.8505  0.8474  0.8474
2024-04-29 17:41:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:41:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #577: GFLOPs: 488.2173. Time: 210.6865 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #578: GFLOPs: 975.4809. Time: 105.4462 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #579: GFLOPs: 970.5733. Time: 105.9794 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #580: GFLOPs: 969.3541. Time: 106.1127 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #581: GFLOPs: 978.8697. Time: 105.0812 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #582: GFLOPs: 978.2901. Time: 105.1435 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #583: GFLOPs: 969.9758. Time: 106.0447 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #584: GFLOPs: 978.3763. Time: 105.1342 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #585: GFLOPs: 967.4032. Time: 106.3267 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #586: GFLOPs: 974.7342. Time: 105.5270 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #587: GFLOPs: 975.4586. Time: 105.4487 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #588: GFLOPs: 968.1560. Time: 106.2440 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #589: GFLOPs: 983.2342. Time: 104.6148 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #590: GFLOPs: 963.1610. Time: 106.7950 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #591: GFLOPs: 978.8957. Time: 105.0784 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #592: GFLOPs: 973.1074. Time: 105.7034 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #593: GFLOPs: 978.6899. Time: 105.1005 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #594: GFLOPs: 269.6638. Time: 381.4408 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #595: GFLOPs: 934.8993. Time: 110.0234 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #596: GFLOPs: 926.5646. Time: 111.0131 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #597: GFLOPs: 930.4024. Time: 110.5552 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #598: GFLOPs: 935.6716. Time: 109.9326 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #599: GFLOPs: 929.1706. Time: 110.7017 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #600: GFLOPs: 929.7477. Time: 110.6330 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #601: GFLOPs: 941.5562. Time: 109.2455 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #602: GFLOPs: 932.8905. Time: 110.2603 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #603: GFLOPs: 926.7136. Time: 110.9952 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #604: GFLOPs: 925.5318. Time: 111.1370 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #605: GFLOPs: 936.4696. Time: 109.8389 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #606: GFLOPs: 467.2088. Time: 220.1602 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #607: GFLOPs: 454.1356. Time: 226.4980 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #608: GFLOPs: 463.7963. Time: 221.7801 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #609: GFLOPs: 469.4231. Time: 219.1217 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #610: GFLOPs: 936.7910. Time: 109.8012 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #611: GFLOPs: 929.5570. Time: 110.6557 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #612: GFLOPs: 960.8494. Time: 107.0519 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #613: GFLOPs: 896.8370. Time: 114.6929 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #614: GFLOPs: 916.3268. Time: 112.2534 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #615: GFLOPs: 922.2083. Time: 111.5375 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #616: GFLOPs: 983.6158. Time: 104.5742 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #617: GFLOPs: 784.3546. Time: 131.1407 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #618: GFLOPs: 977.7464. Time: 105.2019 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #619: GFLOPs: 882.0886. Time: 116.6105 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #620: GFLOPs: 924.0229. Time: 111.3185 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #621: GFLOPs: 936.2510. Time: 109.8645 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #622: GFLOPs: 926.2371. Time: 111.0523 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #623: GFLOPs: 882.9657. Time: 116.4947 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #624: GFLOPs: 901.7495. Time: 114.0680 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #625: GFLOPs: 898.3909. Time: 114.4945 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #626: GFLOPs: 928.0475. Time: 110.8357 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #627: GFLOPs: 861.4354. Time: 119.4063 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #628: GFLOPs: 916.5859. Time: 112.2217 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #629: GFLOPs: 657.1822. Time: 156.5179 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #630: GFLOPs: 921.0228. Time: 111.6811 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #631: GFLOPs: 791.3514. Time: 129.9812 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #632: GFLOPs: 869.9234. Time: 118.2412 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #633: GFLOPs: 932.1087. Time: 110.3528 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #634: GFLOPs: 850.5193. Time: 120.9388 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #635: GFLOPs: 863.6753. Time: 119.0966 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #636: GFLOPs: 858.3653. Time: 119.8334 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #637: GFLOPs: 860.2305. Time: 119.5735 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #638: GFLOPs: 118.0539. Time: 871.3035 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #639: GFLOPs: 41.4054. Time: 2484.2380 us. Best GFLOPs: 990.1116
2024-04-29 17:43:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #640: GFLOPs: 132.7700. Time: 774.7295 us. Best GFLOPs: 990.1116
2024-04-29 17:57:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:57:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:57:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:57:34 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:57:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:57:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:57:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:57:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 17:57:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9730  0.9682  0.9682  0.9682  0.9680  0.9677  0.9672  0.9618  0.9575  0.9562  0.9549  0.9422  0.9407  0.9338  0.9317  0.9308
[17 : 32]:	0.9266  0.9256  0.9249  0.9246  0.9246  0.9246  0.9214  0.9199  0.9160  0.9151  0.9144  0.9077  0.9030  0.9009  0.9009  0.9009
[33 : 48]:	0.8968  0.8926  0.8891  0.8853  0.8803  0.8788  0.8788  0.8780  0.8776  0.8774  0.8774  0.8715  0.8688  0.8688  0.8671  0.8658
[49 : 64]:	0.8626  0.8604  0.8545  0.8545  0.8456  0.8454  0.8454  0.8439  0.8409  0.8386  0.8349  0.8344  0.8342  0.8292  0.8280  0.8269
2024-04-29 17:57:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:57:59 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #641: GFLOPs: 471.7590. Time: 218.0368 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #642: GFLOPs: 961.9849. Time: 106.9256 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #643: GFLOPs: 975.7429. Time: 105.4179 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #644: GFLOPs: 960.3200. Time: 107.1110 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #645: GFLOPs: 970.8453. Time: 105.9497 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #646: GFLOPs: 975.0228. Time: 105.4958 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #647: GFLOPs: 491.3095. Time: 209.3605 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #648: GFLOPs: 969.0523. Time: 106.1458 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #649: GFLOPs: 974.9973. Time: 105.4986 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #650: GFLOPs: 965.7457. Time: 106.5092 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #651: GFLOPs: 924.9587. Time: 111.2058 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #652: GFLOPs: 940.2003. Time: 109.4031 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #653: GFLOPs: 917.0309. Time: 112.1672 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #654: GFLOPs: 914.0061. Time: 112.5384 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #655: GFLOPs: 941.8232. Time: 109.2146 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #656: GFLOPs: 946.7439. Time: 108.6469 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #657: GFLOPs: 895.4876. Time: 114.8657 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #658: GFLOPs: 928.4404. Time: 110.7888 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #659: GFLOPs: 924.7417. Time: 111.2319 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #660: GFLOPs: 971.5635. Time: 105.8714 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #661: GFLOPs: 977.0775. Time: 105.2739 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #662: GFLOPs: 984.4285. Time: 104.4878 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #663: GFLOPs: 898.3286. Time: 114.5024 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #664: GFLOPs: 909.2382. Time: 113.1285 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #665: GFLOPs: 926.0900. Time: 111.0700 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #666: GFLOPs: 898.8680. Time: 114.4337 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #667: GFLOPs: 912.1168. Time: 112.7715 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #668: GFLOPs: 891.8169. Time: 115.3385 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #669: GFLOPs: 888.1174. Time: 115.8189 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #670: GFLOPs: 926.7596. Time: 110.9897 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #671: GFLOPs: 934.1544. Time: 110.1111 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #672: GFLOPs: 924.1825. Time: 111.2992 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #673: GFLOPs: 893.4554. Time: 115.1270 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #674: GFLOPs: 879.2078. Time: 116.9926 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #675: GFLOPs: 865.8664. Time: 118.7952 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #676: GFLOPs: 857.8770. Time: 119.9016 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #677: GFLOPs: 662.8685. Time: 155.1753 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #678: GFLOPs: 851.6572. Time: 120.7772 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #679: GFLOPs: 854.1741. Time: 120.4214 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #680: GFLOPs: 858.0494. Time: 119.8775 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #681: GFLOPs: 910.7644. Time: 112.9390 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #682: GFLOPs: 911.9344. Time: 112.7941 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #683: GFLOPs: 927.3335. Time: 110.9210 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #684: GFLOPs: 918.6579. Time: 111.9686 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #685: GFLOPs: 863.5232. Time: 119.1176 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #686: GFLOPs: 860.6916. Time: 119.5095 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #687: GFLOPs: 853.6209. Time: 120.4994 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #688: GFLOPs: 856.9409. Time: 120.0325 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #689: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(49) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(49) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(49) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b104)
b124 = sch.decompose_reduction(block=b104, loop=l108)
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #690: GFLOPs: 897.5115. Time: 114.6067 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #691: GFLOPs: 842.7640. Time: 122.0517 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #692: GFLOPs: 860.4006. Time: 119.5499 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #693: GFLOPs: 860.7665. Time: 119.4991 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #694: GFLOPs: 835.3909. Time: 123.1289 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #695: GFLOPs: 837.3589. Time: 122.8396 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #696: GFLOPs: 784.8082. Time: 131.0649 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #697: GFLOPs: 836.1988. Time: 123.0100 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #698: GFLOPs: 758.0817. Time: 135.6856 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #699: GFLOPs: 778.1416. Time: 132.1878 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #700: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(98), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #701: GFLOPs: 920.1159. Time: 111.7911 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #702: GFLOPs: 52.0550. Time: 1976.0005 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #703: GFLOPs: 171.2716. Time: 600.5711 us. Best GFLOPs: 990.1116
2024-04-29 17:59:46 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #704: GFLOPs: 18.9931. Time: 5415.6931 us. Best GFLOPs: 990.1116
2024-04-29 18:14:54 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:14:55 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 18:14:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:14:57 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 18:15:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:15:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:15:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:15:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:15:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9639  0.9540  0.9493  0.9414  0.9356  0.9293  0.9293  0.9286  0.9271  0.9268  0.9268  0.9170  0.9158  0.9103  0.9022  0.8970
[17 : 32]:	0.8941  0.8924  0.8920  0.8820  0.8788  0.8766  0.8766  0.8740  0.8691  0.8666  0.8666  0.8661  0.8556  0.8502  0.8429  0.8383
[33 : 48]:	0.8319  0.8236  0.8233  0.8211  0.8207  0.8207  0.8189  0.8189  0.8171  0.8148  0.8137  0.8112  0.8056  0.8052  0.8052  0.8039
[49 : 64]:	0.8003  0.7987  0.7947  0.7932  0.7919  0.7898  0.7877  0.7868  0.7854  0.7845  0.7840  0.7840  0.7840  0.7840  0.7834  0.7834
2024-04-29 18:15:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:15:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #705: GFLOPs: 966.6782. Time: 106.4065 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #706: GFLOPs: 959.9009. Time: 107.1577 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #707: GFLOPs: 984.8927. Time: 104.4386 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #708: GFLOPs: 897.7045. Time: 114.5820 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #709: GFLOPs: 934.1975. Time: 110.1061 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #710: GFLOPs: 959.1619. Time: 107.2403 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #711: GFLOPs: 942.4259. Time: 109.1447 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #712: GFLOPs: 917.9166. Time: 112.0590 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #713: GFLOPs: 930.8634. Time: 110.5004 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #714: GFLOPs: 946.9161. Time: 108.6271 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #715: GFLOPs: 933.5695. Time: 110.1801 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #716: GFLOPs: 967.0430. Time: 106.3663 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #717: GFLOPs: 921.6793. Time: 111.6015 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #718: GFLOPs: 977.8734. Time: 105.1883 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #719: GFLOPs: 923.1595. Time: 111.4226 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #720: GFLOPs: 892.5647. Time: 115.2418 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #721: GFLOPs: 897.4015. Time: 114.6207 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #722: GFLOPs: 898.5220. Time: 114.4778 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #723: GFLOPs: 936.6483. Time: 109.8179 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #724: GFLOPs: 895.3776. Time: 114.8798 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #725: GFLOPs: 626.1029. Time: 164.2874 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #726: GFLOPs: 869.2462. Time: 118.3333 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #727: GFLOPs: 894.7795. Time: 114.9566 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #728: GFLOPs: 980.6195. Time: 104.8937 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #729: GFLOPs: 857.5290. Time: 119.9502 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #730: GFLOPs: 853.8792. Time: 120.4629 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #731: GFLOPs: 849.1160. Time: 121.1387 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #732: GFLOPs: 857.0509. Time: 120.0171 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #733: GFLOPs: 826.7421. Time: 124.4170 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #734: GFLOPs: 845.0101. Time: 121.7273 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #735: GFLOPs: 861.8651. Time: 119.3468 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #736: GFLOPs: 932.3418. Time: 110.3252 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #737: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #738: GFLOPs: 439.5398. Time: 234.0193 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #739: GFLOPs: 816.0422. Time: 126.0484 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #740: GFLOPs: 834.8659. Time: 123.2064 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #741: GFLOPs: 781.6852. Time: 131.5885 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #742: GFLOPs: 789.5795. Time: 130.2729 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #743: GFLOPs: 715.4364. Time: 143.7735 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #744: GFLOPs: 852.1736. Time: 120.7040 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #745: GFLOPs: 851.2523. Time: 120.8347 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #746: GFLOPs: 817.4200. Time: 125.8359 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #747: GFLOPs: 855.5614. Time: 120.2261 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #748: GFLOPs: 573.5591. Time: 179.3378 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #749: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(7) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(7) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(7) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #750: GFLOPs: 776.0430. Time: 132.5452 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #751: GFLOPs: 788.1900. Time: 130.5026 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #752: GFLOPs: 784.8276. Time: 131.0616 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #753: GFLOPs: 876.3808. Time: 117.3700 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #754: GFLOPs: 769.2907. Time: 133.7086 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #755: GFLOPs: 935.8726. Time: 109.9090 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #756: GFLOPs: 975.4181. Time: 105.4530 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #757: GFLOPs: 732.3158. Time: 140.4596 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #758: GFLOPs: 743.1667. Time: 138.4088 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #759: GFLOPs: 777.1817. Time: 132.3510 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #760: GFLOPs: 776.3992. Time: 132.4844 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #761: GFLOPs: 767.8511. Time: 133.9593 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #762: GFLOPs: 847.3300. Time: 121.3940 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #763: GFLOPs: 779.4111. Time: 131.9725 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #764: GFLOPs: 789.2265. Time: 130.3312 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #765: GFLOPs: 786.8029. Time: 130.7326 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #766: GFLOPs: 37.5734. Time: 2737.5928 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #767: GFLOPs: 50.7269. Time: 2027.7381 us. Best GFLOPs: 990.1116
2024-04-29 18:17:03 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #768: GFLOPs: 16.6571. Time: 6175.1938 us. Best GFLOPs: 990.1116
2024-04-29 18:40:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:40:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 18:40:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:40:35 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 18:40:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:40:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:40:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:40:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 18:40:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9794  0.9728  0.9658  0.9608  0.9608  0.9608  0.9597  0.9448  0.9438  0.9428  0.9428  0.9428  0.9363  0.9363  0.9355  0.9336
[17 : 32]:	0.9305  0.9305  0.9285  0.9278  0.9200  0.9192  0.9171  0.9134  0.9106  0.9106  0.9101  0.9101  0.9028  0.8979  0.8979  0.8968
[33 : 48]:	0.8958  0.8958  0.8957  0.8947  0.8947  0.8937  0.8906  0.8885  0.8861  0.8857  0.8834  0.8812  0.8762  0.8713  0.8701  0.8675
[49 : 64]:	0.8671  0.8658  0.8553  0.8552  0.8536  0.8501  0.8481  0.8444  0.8433  0.8424  0.8414  0.8386  0.8281  0.8264  0.8233  0.8210
2024-04-29 18:41:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:41:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #769: GFLOPs: 961.3704. Time: 106.9939 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #770: GFLOPs: 975.0785. Time: 105.4898 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #771: GFLOPs: 965.9656. Time: 106.4850 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #772: GFLOPs: 970.5150. Time: 105.9858 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #773: GFLOPs: 969.1721. Time: 106.1326 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #774: GFLOPs: 970.3066. Time: 106.0086 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #775: GFLOPs: 979.1451. Time: 105.0516 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #776: GFLOPs: 977.8237. Time: 105.1936 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #777: GFLOPs: 939.4592. Time: 109.4894 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #778: GFLOPs: 973.8945. Time: 105.6180 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #779: GFLOPs: 974.0882. Time: 105.5970 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #780: GFLOPs: 979.2289. Time: 105.0426 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #781: GFLOPs: 786.7746. Time: 130.7373 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #782: GFLOPs: 928.1658. Time: 110.8216 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #783: GFLOPs: 933.0724. Time: 110.2388 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #784: GFLOPs: 894.8346. Time: 114.9495 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #785: GFLOPs: 807.5377. Time: 127.3759 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #786: GFLOPs: 938.4936. Time: 109.6020 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #787: GFLOPs: 931.9923. Time: 110.3666 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #788: GFLOPs: 798.8818. Time: 128.7560 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #789: GFLOPs: 924.0849. Time: 111.3110 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #790: GFLOPs: 923.6310. Time: 111.3657 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #791: GFLOPs: 914.8517. Time: 112.4344 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #792: GFLOPs: 915.6422. Time: 112.3373 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #793: GFLOPs: 946.5578. Time: 108.6683 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #794: GFLOPs: 971.5963. Time: 105.8678 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #795: GFLOPs: 801.7220. Time: 128.2998 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #796: GFLOPs: 804.7531. Time: 127.8166 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #797: GFLOPs: 797.6469. Time: 128.9553 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #798: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(64) + oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(64) + oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b67)
l107 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l107)
b108 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131 = sch.get_loops(block=b108)
b132 = sch.decompose_reduction(block=b108, loop=l116)
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #799: GFLOPs: 980.3733. Time: 104.9200 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #800: GFLOPs: 655.8000. Time: 156.8478 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #801: GFLOPs: 939.2119. Time: 109.5182 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #802: GFLOPs: 723.7837. Time: 142.1154 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #803: GFLOPs: 969.2235. Time: 106.1270 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #804: GFLOPs: 982.3892. Time: 104.7047 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #805: GFLOPs: 981.1564. Time: 104.8363 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #806: GFLOPs: 463.3264. Time: 222.0050 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #807: GFLOPs: 927.1801. Time: 110.9394 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #808: GFLOPs: 890.1414. Time: 115.5556 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #809: GFLOPs: 895.9214. Time: 114.8101 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #810: GFLOPs: 888.3213. Time: 115.7923 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #811: GFLOPs: 937.6965. Time: 109.6952 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #812: GFLOPs: 925.3849. Time: 111.1546 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #813: GFLOPs: 895.3291. Time: 114.8860 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #814: GFLOPs: 931.0480. Time: 110.4785 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #815: GFLOPs: 809.7169. Time: 127.0330 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #816: GFLOPs: 894.2037. Time: 115.0306 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #817: GFLOPs: 825.8054. Time: 124.5582 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #818: GFLOPs: 857.5357. Time: 119.9493 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #819: GFLOPs: 817.9318. Time: 125.7572 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #820: GFLOPs: 864.3824. Time: 118.9992 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #821: GFLOPs: 956.0135. Time: 107.5935 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #822: GFLOPs: 858.4882. Time: 119.8162 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #823: GFLOPs: 895.3215. Time: 114.8870 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #824: GFLOPs: 818.7004. Time: 125.6391 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #825: GFLOPs: 862.7368. Time: 119.2262 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #826: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(49) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(49) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(49) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #827: GFLOPs: 848.7514. Time: 121.1907 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #828: GFLOPs: 796.6124. Time: 129.1228 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #829: GFLOPs: 791.9664. Time: 129.8803 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #830: GFLOPs: 90.3315. Time: 1138.7031 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #831: GFLOPs: 15.7670. Time: 6523.7922 us. Best GFLOPs: 990.1116
2024-04-29 18:42:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #832: GFLOPs: 27.1070. Time: 3794.6169 us. Best GFLOPs: 990.1116
2024-04-29 19:01:56 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:01:57 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 19:01:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:01:59 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 19:02:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:02:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:02:16 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:02:21 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:02:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9737  0.9732  0.9639  0.9565  0.9536  0.9532  0.9520  0.9504  0.9416  0.9415  0.9396  0.9354  0.9354  0.9240  0.9236  0.9208
[17 : 32]:	0.9197  0.9197  0.9179  0.9164  0.9159  0.9145  0.9145  0.9080  0.9080  0.9060  0.9060  0.9037  0.9023  0.8993  0.8969  0.8969
[33 : 48]:	0.8965  0.8965  0.8965  0.8953  0.8902  0.8880  0.8791  0.8713  0.8698  0.8698  0.8614  0.8614  0.8599  0.8562  0.8558  0.8529
[49 : 64]:	0.8524  0.8524  0.8511  0.8495  0.8469  0.8351  0.8334  0.8325  0.8271  0.8245  0.8162  0.8162  0.8160  0.8127  0.8118  0.8105
2024-04-29 19:02:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 19:02:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #833: GFLOPs: 959.5987. Time: 107.1915 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #834: GFLOPs: 973.3040. Time: 105.6821 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #835: GFLOPs: 964.1747. Time: 106.6827 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #836: GFLOPs: 964.6847. Time: 106.6263 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #837: GFLOPs: 968.4679. Time: 106.2098 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #838: GFLOPs: 932.7955. Time: 110.2715 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #839: GFLOPs: 971.9825. Time: 105.8258 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #840: GFLOPs: 979.6110. Time: 105.0017 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #841: GFLOPs: 963.5612. Time: 106.7507 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #842: GFLOPs: 922.4949. Time: 111.5028 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #843: GFLOPs: 946.3152. Time: 108.6961 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #844: GFLOPs: 926.4470. Time: 111.0272 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #845: GFLOPs: 919.2803. Time: 111.8928 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #846: GFLOPs: 903.0564. Time: 113.9030 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #847: GFLOPs: 924.8207. Time: 111.2224 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #848: GFLOPs: 797.8867. Time: 128.9166 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #849: GFLOPs: 909.9331. Time: 113.0422 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #850: GFLOPs: 836.7115. Time: 122.9346 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #851: GFLOPs: 920.7519. Time: 111.7139 us. Best GFLOPs: 990.1116
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #852: GFLOPs: 1047.3607. Time: 98.2095 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #853: GFLOPs: 907.8551. Time: 113.3009 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #854: GFLOPs: 1046.2623. Time: 98.3126 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #855: GFLOPs: 1029.6396. Time: 99.8998 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #856: GFLOPs: 1041.5721. Time: 98.7553 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #857: GFLOPs: 1042.8959. Time: 98.6300 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #858: GFLOPs: 1045.2114. Time: 98.4115 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #859: GFLOPs: 1026.7094. Time: 100.1849 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #860: GFLOPs: 916.1864. Time: 112.2706 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #861: GFLOPs: 1030.7480. Time: 99.7924 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #862: GFLOPs: 926.5507. Time: 111.0148 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #863: GFLOPs: 885.1595. Time: 116.2059 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #864: GFLOPs: 879.9934. Time: 116.8881 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #865: GFLOPs: 1044.0068. Time: 98.5250 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #866: GFLOPs: 1028.4937. Time: 100.0111 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #867: GFLOPs: 1023.3084. Time: 100.5179 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #868: GFLOPs: 929.0205. Time: 110.7196 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #869: GFLOPs: 885.3896. Time: 116.1757 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #870: GFLOPs: 884.9568. Time: 116.2326 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #871: GFLOPs: 862.2597. Time: 119.2921 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #872: GFLOPs: 923.0934. Time: 111.4305 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #873: GFLOPs: 1015.5403. Time: 101.2868 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #874: GFLOPs: 1025.2524. Time: 100.3273 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #875: GFLOPs: 1043.7387. Time: 98.5503 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #876: GFLOPs: 1020.4542. Time: 100.7990 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #877: GFLOPs: 862.1458. Time: 119.3079 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #878: GFLOPs: 849.4664. Time: 121.0887 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #879: GFLOPs: 859.3914. Time: 119.6903 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #880: GFLOPs: 840.6822. Time: 122.3540 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #881: GFLOPs: 961.1137. Time: 107.0225 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #882: GFLOPs: 978.4960. Time: 105.1213 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #883: GFLOPs: 863.1581. Time: 119.1680 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #884: GFLOPs: 921.8048. Time: 111.5863 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #885: GFLOPs: 679.7147. Time: 151.3294 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #886: GFLOPs: 807.5443. Time: 127.3748 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #887: GFLOPs: 864.1055. Time: 119.0373 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #888: GFLOPs: 860.8608. Time: 119.4860 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #889: GFLOPs: 814.0786. Time: 126.3524 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #890: GFLOPs: 860.9437. Time: 119.4745 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #891: GFLOPs: 107.5078. Time: 956.7754 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #892: GFLOPs: 107.3682. Time: 958.0193 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #893: GFLOPs: 790.5488. Time: 130.1131 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #894: GFLOPs: 1.7703. Time: 58102.8880 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #895: GFLOPs: 6.4060. Time: 16056.9361 us. Best GFLOPs: 1047.3607
2024-04-29 19:03:49 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #896: GFLOPs: 6.3635. Time: 16164.1310 us. Best GFLOPs: 1047.3607
2024-04-29 19:18:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:18:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 19:18:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:18:48 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 19:18:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:18:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:19:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:19:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x117efca8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a37d68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x80a6f78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x80b5418)]: 0 failure(s)
2024-04-29 19:19:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9904  0.9903  0.9846  0.9846  0.9846  0.9789  0.9787  0.9787  0.9787  0.9753  0.9227  0.9204  0.9199  0.9199  0.9150  0.9148
[17 : 32]:	0.9128  0.9099  0.9067  0.9066  0.9048  0.9009  0.9009  0.9008  0.8996  0.8935  0.8924  0.8892  0.8892  0.8892  0.8707  0.8705
[33 : 48]:	0.8678  0.8623  0.8586  0.8586  0.8586  0.8578  0.8556  0.8490  0.8486  0.8451  0.8451  0.8451  0.8339  0.8275  0.8266  0.8261
[49 : 64]:	0.8254  0.8243  0.8227  0.8182  0.8182  0.8182  0.8150  0.8133  0.8127  0.8124  0.8124  0.8089  0.8084  0.8037  0.8037  0.7994
2024-04-29 19:19:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 19:19:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #897: GFLOPs: 1043.8116. Time: 98.5435 us. Best GFLOPs: 1047.3607
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #898: GFLOPs: 1067.7212. Time: 96.3368 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #899: GFLOPs: 1047.6075. Time: 98.1864 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #900: GFLOPs: 1048.2811. Time: 98.1233 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #901: GFLOPs: 1043.9697. Time: 98.5285 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #902: GFLOPs: 1054.8442. Time: 97.5128 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #903: GFLOPs: 1038.0394. Time: 99.0914 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #904: GFLOPs: 822.8681. Time: 125.0028 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #905: GFLOPs: 1050.6986. Time: 97.8975 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #906: GFLOPs: 1046.3815. Time: 98.3014 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #907: GFLOPs: 974.9178. Time: 105.5072 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #908: GFLOPs: 970.7986. Time: 105.9548 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #909: GFLOPs: 971.1145. Time: 105.9204 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #910: GFLOPs: 970.9547. Time: 105.9378 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #911: GFLOPs: 491.5620. Time: 209.2529 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #912: GFLOPs: 953.6004. Time: 107.8657 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #913: GFLOPs: 508.4611. Time: 202.2983 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #914: GFLOPs: 975.3913. Time: 105.4559 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #915: GFLOPs: 815.5223. Time: 126.1287 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #916: GFLOPs: 459.7607. Time: 223.7268 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #917: GFLOPs: 980.4343. Time: 104.9135 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #918: GFLOPs: 957.0352. Time: 107.4786 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #919: GFLOPs: 959.0214. Time: 107.2560 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #920: GFLOPs: 980.9706. Time: 104.8561 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #921: GFLOPs: 972.6692. Time: 105.7511 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #922: GFLOPs: 982.0258. Time: 104.7435 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #923: GFLOPs: 975.1362. Time: 105.4835 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #924: GFLOPs: 959.1386. Time: 107.2429 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #925: GFLOPs: 952.7701. Time: 107.9597 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #926: GFLOPs: 947.0342. Time: 108.6136 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #927: GFLOPs: 910.2333. Time: 113.0049 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #928: GFLOPs: 89.7996. Time: 1145.4489 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #929: GFLOPs: 886.6279. Time: 116.0135 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #930: GFLOPs: 929.5662. Time: 110.6546 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #931: GFLOPs: 886.8610. Time: 115.9830 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #932: GFLOPs: 887.1901. Time: 115.9400 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #933: GFLOPs: 881.0096. Time: 116.7533 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #934: GFLOPs: 899.5381. Time: 114.3485 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #935: GFLOPs: 932.8865. Time: 110.2608 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #936: GFLOPs: 887.7741. Time: 115.8637 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #937: GFLOPs: 893.8354. Time: 115.0780 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #938: GFLOPs: 932.2997. Time: 110.3302 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #939: GFLOPs: 904.3852. Time: 113.7356 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #940: GFLOPs: 937.7173. Time: 109.6928 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #941: GFLOPs: 106.2314. Time: 968.2714 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #942: GFLOPs: 916.3064. Time: 112.2559 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #943: GFLOPs: 880.9880. Time: 116.7562 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #944: GFLOPs: 892.9575. Time: 115.1911 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #945: GFLOPs: 137.2880. Time: 749.2340 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #946: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #947: GFLOPs: 864.3465. Time: 119.0041 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #948: GFLOPs: 854.5520. Time: 120.3681 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #949: GFLOPs: 850.6085. Time: 120.9261 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #950: GFLOPs: 854.4256. Time: 120.3859 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #951: GFLOPs: 865.4847. Time: 118.8476 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #952: GFLOPs: 171.6507. Time: 599.2450 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #953: GFLOPs: 500.9658. Time: 205.3250 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #954: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #955: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #956: GFLOPs: 173.5634. Time: 592.6412 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #957: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #958: GFLOPs: 16.5075. Time: 6231.1396 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #959: GFLOPs: 84.6918. Time: 1214.5315 us. Best GFLOPs: 1067.7212
2024-04-29 19:20:58 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #960: GFLOPs: 179.0345. Time: 574.5306 us. Best GFLOPs: 1067.7212
