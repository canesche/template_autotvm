2024-04-28 20:36:06 [INFO] [task_scheduler.cc:160] Initializing Task #28: "fused_layout_transform_nn_batch_flatten"
2024-04-28 20:36:06 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), tensor: T.Buffer((T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_layout_trans = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(1), T.int64(1)):
            with T.block("T_layout_trans"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1 // T.int64(32), v_ax2, v_ax3, v_ax1 % T.int64(32)])
                T.writes(T_layout_trans[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"dst_layout": "NCHW", "input_shape": [1, 16, 1, 1, 32], "schedule_rule": "None", "src_layout": "NCHW32c"})
                T_layout_trans[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(v_ax0 < T.int64(1) and v_ax1 < T.int64(512) and v_ax2 < T.int64(1) and v_ax3 < T.int64(1), p0[v_ax0, v_ax1 // T.int64(32), v_ax2, v_ax3, v_ax1 % T.int64(32)], T.float32(0))
        for ax0, ax1 in T.grid(T.int64(1), T.int64(512)):
            with T.block("tensor"):
                v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                T.reads(T_layout_trans[v_ax0, v_ax1 % T.int64(512), T.int64(0), T.int64(0)])
                T.writes(tensor[v_ax0, v_ax1])
                tensor[v_ax0, v_ax1] = T_layout_trans[v_ax0, v_ax1 % T.int64(512), T.int64(0), T.int64(0)]
2024-04-28 20:36:06 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-28 20:36:06 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), tensor: T.Buffer((T.int64(1), T.int64(512)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.vectorize": 64})
            T_layout_trans = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(1), T.int64(1)))
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(1), T.int64(1)):
                with T.block("T_layout_trans"):
                    v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                    T.reads(p0[v_ax0, v_ax1 // T.int64(32), v_ax2, v_ax3, v_ax1 % T.int64(32)])
                    T.writes(T_layout_trans[v_ax0, v_ax1, v_ax2, v_ax3])
                    T.block_attr({"dst_layout": "NCHW", "input_shape": [1, 16, 1, 1, 32], "schedule_rule": "None", "src_layout": "NCHW32c"})
                    T_layout_trans[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(v_ax0 < T.int64(1) and v_ax1 < T.int64(512) and v_ax2 < T.int64(1) and v_ax3 < T.int64(1), p0[v_ax0, v_ax1 // T.int64(32), v_ax2, v_ax3, v_ax1 % T.int64(32)], T.float32(0))
            for ax0, ax1 in T.grid(T.int64(1), T.int64(512)):
                with T.block("tensor"):
                    v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                    T.reads(T_layout_trans[v_ax0, v_ax1 % T.int64(512), T.int64(0), T.int64(0)])
                    T.writes(tensor[v_ax0, v_ax1])
                    tensor[v_ax0, v_ax1] = T_layout_trans[v_ax0, v_ax1 % T.int64(512), T.int64(0), T.int64(0)]
b0 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.vectorize", ann_val=64)
2024-04-28 21:09:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:09:14 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 21:09:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31f52e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x329c3f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4093fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3371fd8)]: 0 failure(s)
2024-04-28 21:09:14 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 21:09:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31f52e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x329c3f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4093fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3371fd8)]: 0 failure(s)
2024-04-28 21:09:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31f52e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x329c3f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4093fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3371fd8)]: 0 failure(s)
2024-04-28 21:09:16 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31f52e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x329c3f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4093fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3371fd8)]: 0 failure(s)
2024-04-28 21:09:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x31f52e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x329c3f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4093fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3371fd8)]: 0 failure(s)
2024-04-28 21:09:17 [INFO] [evolutionary_search.cc:649] Scores of the best 1 candidates:
[1 : 1]:	0.3635
2024-04-28 21:09:17 [INFO] [evolutionary_search.cc:727] Got 1 candidate(s) with evolutionary search
2024-04-28 21:09:17 [INFO] [evolutionary_search.cc:730] Sending 1 candidates(s) for measurement
2024-04-28 21:13:05 [INFO] [task_scheduler.cc:131] [Task #28: fused_layout_transform_nn_batch_flatten] Trial #1: GFLOPs: 0.0000. Time: 20.8672 us. Best GFLOPs: 0.0000
