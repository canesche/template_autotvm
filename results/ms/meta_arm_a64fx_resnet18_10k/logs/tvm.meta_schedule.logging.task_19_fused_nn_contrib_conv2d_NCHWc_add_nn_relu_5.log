2024-04-28 20:35:31 [INFO] [task_scheduler.cc:160] Initializing Task #19: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5"
2024-04-28 20:35:31 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16), T.int64(256), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-28 20:35:31 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 20:35:31 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(9), T.int64(9), T.int64(128)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(16), oh_0 * T.int64(7) + ax2)
                        v_i3 = T.axis.spatial(T.int64(16), ow_1 * T.int64(7) + ax3)
                        v_i4 = T.axis.spatial(T.int64(128), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(16), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 1, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-28 20:35:31 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(128), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(15) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(15), p0[v_n, v_ic // T.int64(128), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(128)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(7), T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 1, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-28 20:35:31 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(16)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(9), T.int64(16)):
                        with T.block("data_pad"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_i1 = T.axis.spatial(T.int64(2), ic_0 // T.int64(8) + ax1)
                            v_i2 = T.axis.spatial(T.int64(16), oh_0 * T.int64(7) + ax2)
                            v_i3 = T.axis.spatial(T.int64(16), ow_1 * T.int64(7) + ax3)
                            v_i4 = T.axis.spatial(T.int64(128), ic_0 % T.int64(8) * T.int64(16) + ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(4)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(7), T.int64(14), T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3)
                        v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 1, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-28 20:56:47 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:56:47 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:56:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 20:56:52 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 20:56:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 20:57:04 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 20:57:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 20:57:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 20:57:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9995  0.9989  0.9988  0.9988  0.9987  0.9979  0.9979  0.9976  0.9974  0.9974  0.9974  0.9971  0.9969  0.9967  0.9964
[17 : 32]:	0.9953  0.9950  0.9946  0.9938  0.9938  0.9913  0.9912  0.9910  0.9910  0.9910  0.9902  0.9895  0.9892  0.9892  0.9891  0.9890
[33 : 48]:	0.9887  0.9885  0.9876  0.9874  0.9871  0.9869  0.9869  0.9844  0.9836  0.9835  0.9834  0.9824  0.9823  0.9823  0.9820  0.9817
[49 : 64]:	0.9782  0.9781  0.9780  0.9780  0.9771  0.9764  0.9757  0.9757  0.9752  0.9738  0.9738  0.9735  0.9734  0.9734  0.9734  0.9733
2024-04-28 20:57:18 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:57:18 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #1: GFLOPs: 25.1276. Time: 9205.4865 us. Best GFLOPs: 25.1276
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #2: GFLOPs: 35.1536. Time: 6580.0282 us. Best GFLOPs: 35.1536
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #3: GFLOPs: 44.9124. Time: 5150.2726 us. Best GFLOPs: 44.9124
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #4: GFLOPs: 35.1595. Time: 6578.9194 us. Best GFLOPs: 44.9124
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #5: GFLOPs: 40.4983. Time: 5711.6377 us. Best GFLOPs: 44.9124
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #6: GFLOPs: 9.8335. Time: 23522.7360 us. Best GFLOPs: 44.9124
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #7: GFLOPs: 45.6203. Time: 5070.3648 us. Best GFLOPs: 45.6203
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #8: GFLOPs: 3.7659. Time: 61423.1120 us. Best GFLOPs: 45.6203
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #9: GFLOPs: 223.6771. Time: 1034.1309 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #10: GFLOPs: 108.9006. Time: 2124.0586 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #11: GFLOPs: 5.1058. Time: 45303.7480 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #12: GFLOPs: 5.4040. Time: 42804.0950 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #13: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for i0_i1_i2_i3_i4_fused in T.parallel(T.int64(65536)):
            with T.block("data_pad"):
                v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                v_i1 = T.axis.spatial(T.int64(2), i0_i1_i2_i3_i4_fused // T.int64(32768))
                v_i2 = T.axis.spatial(T.int64(16), i0_i1_i2_i3_i4_fused % T.int64(32768) // T.int64(2048))
                v_i3 = T.axis.spatial(T.int64(16), i0_i1_i2_i3_i4_fused % T.int64(2048) // T.int64(128))
                v_i4 = T.axis.spatial(T.int64(128), i0_i1_i2_i3_i4_fused % T.int64(128))
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(448), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(14) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(14) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(14) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3)
                        v_ax4 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(4) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 8, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 2, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75 = sch.get_loops(block=b68)
l76 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l76)
l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b69)
l103 = sch.fuse(l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, preserve_unit_iters=True)
sch.parallel(loop=l103)
l104 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l104)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b70)
l111 = sch.fuse(l110, preserve_unit_iters=True)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b112)
b130 = sch.decompose_reduction(block=b112, loop=l114)
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #14: GFLOPs: 0.5820. Time: 397410.1680 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #15: GFLOPs: 8.8962. Time: 26001.1464 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #16: GFLOPs: 65.2293. Time: 3546.1269 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #17: GFLOPs: 3.0581. Time: 75638.1427 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #18: GFLOPs: 113.9193. Time: 2030.4839 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #19: GFLOPs: 61.2934. Time: 3773.8386 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #20: GFLOPs: 59.3381. Time: 3898.1936 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #21: GFLOPs: 3.0700. Time: 75345.8777 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #22: GFLOPs: 60.2594. Time: 3838.5946 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #23: GFLOPs: 37.3413. Time: 6194.5134 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #24: GFLOPs: 66.8557. Time: 3459.8606 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #25: GFLOPs: 2.6914. Time: 85943.9723 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #26: GFLOPs: 136.3819. Time: 1696.0566 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #27: GFLOPs: 66.7925. Time: 3463.1340 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #28: GFLOPs: 57.7403. Time: 4006.0613 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #29: GFLOPs: 30.2016. Time: 7658.9108 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #30: GFLOPs: 64.2596. Time: 3599.6376 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #31: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(14), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(9), T.int64(4), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(7) * T.int64(7) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(7) * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(7) * T.int64(7) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1)):
                    for ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(7) * T.int64(7) + oh_1 + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 2, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 2, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b68)
l80 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l81, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b70)
l118 = sch.fuse(l117, preserve_unit_iters=True)
sch.vectorize(loop=l118)
b119 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142 = sch.get_loops(block=b119)
b143 = sch.decompose_reduction(block=b119, loop=l127)
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #32: GFLOPs: 81.5765. Time: 2835.5141 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #33: GFLOPs: 4.5462. Time: 50879.9420 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #34: GFLOPs: 113.2247. Time: 2042.9415 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #35: GFLOPs: 20.1732. Time: 11466.2861 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #36: GFLOPs: 5.6254. Time: 41119.4320 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #37: GFLOPs: 143.6016. Time: 1610.7855 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #38: GFLOPs: 49.5891. Time: 4664.5589 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #39: GFLOPs: 48.7661. Time: 4743.2848 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #40: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(9), T.int64(4), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(7) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_2_init * T.int64(16) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(8) * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(16), T.int64(7), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_2 * T.int64(16) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(8) * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(7), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(8) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 16])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 4, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=9)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b68)
l86 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l86)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l87, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b70)
l112 = sch.fuse(l111, preserve_unit_iters=True)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b113)
b131 = sch.decompose_reduction(block=b113, loop=l115)
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #41: GFLOPs: 17.4583. Time: 13249.3780 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #42: GFLOPs: 73.0667. Time: 3165.7548 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #43: GFLOPs: 174.3856. Time: 1326.4365 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #44: GFLOPs: 2.0189. Time: 114573.2757 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #45: GFLOPs: 29.2045. Time: 7920.4120 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #46: GFLOPs: 161.3427. Time: 1433.6646 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #47: GFLOPs: 76.1803. Time: 3036.3663 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #48: GFLOPs: 9.6402. Time: 23994.4628 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #49: GFLOPs: 18.2721. Time: 12659.2384 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #50: GFLOPs: 30.0050. Time: 7709.0999 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #51: GFLOPs: 153.5133. Time: 1506.7841 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #52: GFLOPs: 75.4184. Time: 3067.0426 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #53: GFLOPs: 29.2650. Time: 7904.0387 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #54: GFLOPs: 1.2246. Time: 188882.2033 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #55: GFLOPs: 99.0974. Time: 2334.1823 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #56: GFLOPs: 17.2532. Time: 13406.8487 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #57: GFLOPs: 2.8633. Time: 80783.8380 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #58: GFLOPs: 11.9898. Time: 19292.3330 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #59: GFLOPs: 72.9991. Time: 3168.6865 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #60: GFLOPs: 55.9406. Time: 4134.9460 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #61: GFLOPs: 110.4712. Time: 2093.8615 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #62: GFLOPs: 12.7245. Time: 18178.4853 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #63: GFLOPs: 7.9014. Time: 29274.8178 us. Best GFLOPs: 223.6771
2024-04-28 21:12:38 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #64: GFLOPs: 90.4034. Time: 2558.6564 us. Best GFLOPs: 223.6771
2024-04-28 21:28:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:28:04 [INFO] [evolutionary_search.cc:715] Picked top 61 candidate(s) from database
2024-04-28 21:28:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 21:28:09 [INFO] [evolutionary_search.cc:723] Sampled 451 candidate(s)
2024-04-28 21:28:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 21:28:34 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 21:28:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 21:29:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 21:29:10 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9124  0.9015  0.8703  0.8298  0.7529  0.7463  0.7422  0.7182  0.7090  0.7046  0.6898  0.6866  0.6865  0.6865  0.6848  0.6723
[17 : 32]:	0.6686  0.6635  0.6629  0.6619  0.6595  0.6585  0.6573  0.6539  0.6522  0.6518  0.6481  0.6465  0.6461  0.6454  0.6448  0.6437
[33 : 48]:	0.6406  0.6402  0.6382  0.6373  0.6344  0.6325  0.6318  0.6286  0.6274  0.6274  0.6243  0.6229  0.6217  0.6216  0.6201  0.6172
[49 : 64]:	0.6166  0.6150  0.6138  0.6135  0.6135  0.6123  0.6090  0.6060  0.6057  0.6047  0.6045  0.6018  0.6003  0.6000  0.5990  0.5990
2024-04-28 21:29:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:29:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #65: GFLOPs: 127.9698. Time: 1807.5469 us. Best GFLOPs: 223.6771
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #66: GFLOPs: 115.7925. Time: 1997.6372 us. Best GFLOPs: 223.6771
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #67: GFLOPs: 405.5961. Time: 570.2998 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #68: GFLOPs: 115.4952. Time: 2002.7792 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #69: GFLOPs: 375.9434. Time: 615.2823 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #70: GFLOPs: 243.4192. Time: 950.2592 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #71: GFLOPs: 360.6377. Time: 641.3954 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #72: GFLOPs: 389.5391. Time: 593.8078 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #73: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_0, oc_block_0 in T.grid(T.int64(7), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(4), T.int64(128)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(14) + ax2)
                        v_i3 = T.axis.spatial(T.int64(16), ow_0 * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(128), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(14) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(14) + oh_1 + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(14) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(14) + oh_1 + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(64) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(14) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(14) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[16, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 2, 2, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=16)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b68)
l81 = sch.fuse(l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l81)
l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b69)
l106 = sch.fuse(l82, preserve_unit_iters=True)
sch.parallel(loop=l106)
l107 = sch.fuse(l105, preserve_unit_iters=True)
sch.vectorize(loop=l107)
sch.annotate(block_or_loop=l106, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l106, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112, l113, l114, l115 = sch.get_loops(block=b70)
l116 = sch.fuse(l115, preserve_unit_iters=True)
sch.vectorize(loop=l116)
b117 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141 = sch.get_loops(block=b117)
b142 = sch.decompose_reduction(block=b117, loop=l126)
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #74: GFLOPs: 78.3970. Time: 2950.5135 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #75: GFLOPs: 73.8558. Time: 3131.9343 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #76: GFLOPs: 229.5502. Time: 1007.6723 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #77: GFLOPs: 127.5578. Time: 1813.3847 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #78: GFLOPs: 140.4456. Time: 1646.9822 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #79: GFLOPs: 175.3471. Time: 1319.1626 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #80: GFLOPs: 85.2299. Time: 2713.9695 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #81: GFLOPs: 56.0367. Time: 4127.8540 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #82: GFLOPs: 88.3132. Time: 2619.2162 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #83: GFLOPs: 153.4728. Time: 1507.1814 us. Best GFLOPs: 405.5961
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #84: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(16), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + ax2)
                    v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(56) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(8), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(56) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(14)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(56) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 2, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 8, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b70)
l113 = sch.fuse(l112, preserve_unit_iters=True)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b114)
b134 = sch.decompose_reduction(block=b114, loop=l118)
2024-04-28 21:30:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #85: GFLOPs: 112.5977. Time: 2054.3164 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #86: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(1568), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0 in range(T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(4), T.int64(128)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + ax2)
                        v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(128), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(64) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[16, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 2, 2, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b68)
l81 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l81)
l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l82, preserve_unit_iters=True)
sch.parallel(loop=l105)
l106 = sch.fuse(l104, preserve_unit_iters=True)
sch.vectorize(loop=l106)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b115)
b139 = sch.decompose_reduction(block=b115, loop=l123)
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #87: GFLOPs: 128.7038. Time: 1797.2385 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #88: GFLOPs: 37.1075. Time: 6233.5540 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #89: GFLOPs: 111.9693. Time: 2065.8467 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #90: GFLOPs: 77.0147. Time: 3003.4709 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #91: GFLOPs: 89.2139. Time: 2592.7739 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #92: GFLOPs: 44.7568. Time: 5168.1809 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #93: GFLOPs: 57.5114. Time: 4022.0114 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #94: GFLOPs: 95.1157. Time: 2431.8944 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #95: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(784), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0 in range(T.int64(2)):
                for n_1, oc_chunk_1 in T.grid(T.int64(1), T.int64(2)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(4), T.int64(128)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + ax2)
                            v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                            v_i4 = T.axis.spatial(T.int64(128), ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2)):
                        for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                            for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                                with T.block("conv2d_NCHWc_init"):
                                    v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                    v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                    T.reads()
                                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                            for oc_block_3_fused in T.vectorized(T.int64(2)):
                                with T.block("conv2d_NCHWc_update"):
                                    v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                    v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2 + oh_3)
                                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                    v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(64) + ic_1)
                                    v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 2, 2, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=6)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b68)
l83 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b69)
l107 = sch.fuse(l84, preserve_unit_iters=True)
sch.parallel(loop=l107)
l108 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l108)
sch.annotate(block_or_loop=l107, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l107, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114, l115 = sch.get_loops(block=b70)
l116 = sch.fuse(l115, preserve_unit_iters=True)
sch.vectorize(loop=l116)
b117 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140 = sch.get_loops(block=b117)
b141 = sch.decompose_reduction(block=b117, loop=l125)
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #96: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(784), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0 in range(T.int64(2)):
                for n_1, oc_chunk_1 in T.grid(T.int64(1), T.int64(2)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(4), T.int64(128)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + ax2)
                            v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                            v_i4 = T.axis.spatial(T.int64(128), ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1)):
                        for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                            for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                                with T.block("conv2d_NCHWc_init"):
                                    v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                    v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                    T.reads()
                                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                            for oc_block_3_fused in T.vectorized(T.int64(2)):
                                with T.block("conv2d_NCHWc_update"):
                                    v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                    v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2 + oh_3)
                                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                    v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(64) + ic_1)
                                    v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 4, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=6)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b68)
l83 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b69)
l107 = sch.fuse(l84, preserve_unit_iters=True)
sch.parallel(loop=l107)
l108 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l108)
sch.annotate(block_or_loop=l107, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l107, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114, l115 = sch.get_loops(block=b70)
l116 = sch.fuse(l115, preserve_unit_iters=True)
sch.vectorize(loop=l116)
b117 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140 = sch.get_loops(block=b117)
b141 = sch.decompose_reduction(block=b117, loop=l125)
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #97: GFLOPs: 136.1057. Time: 1699.4976 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #98: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(784), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0 in range(T.int64(2)):
                for n_1, oc_chunk_1 in T.grid(T.int64(1), T.int64(2)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(4), T.int64(128)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + ax2)
                            v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                            v_i4 = T.axis.spatial(T.int64(128), ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1)):
                        for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                            for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                                with T.block("conv2d_NCHWc_init"):
                                    v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                    v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                    T.reads()
                                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                            for oc_block_3_fused in T.vectorized(T.int64(2)):
                                with T.block("conv2d_NCHWc_update"):
                                    v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                    v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2 + oh_3)
                                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                    v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                                    v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(98) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(98) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 4, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=6)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b68)
l83 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b69)
l107 = sch.fuse(l84, preserve_unit_iters=True)
sch.parallel(loop=l107)
l108 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l108)
sch.annotate(block_or_loop=l107, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l107, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114, l115 = sch.get_loops(block=b70)
l116 = sch.fuse(l115, preserve_unit_iters=True)
sch.vectorize(loop=l116)
b117 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140 = sch.get_loops(block=b117)
b141 = sch.decompose_reduction(block=b117, loop=l125)
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #99: GFLOPs: 213.7230. Time: 1082.2949 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #100: GFLOPs: 152.5756. Time: 1516.0446 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #101: GFLOPs: 298.0812. Time: 776.0013 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #102: GFLOPs: 128.1264. Time: 1805.3376 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #103: GFLOPs: 169.3845. Time: 1365.5994 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #104: GFLOPs: 126.0610. Time: 1834.9160 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #105: GFLOPs: 161.5094. Time: 1432.1856 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #106: GFLOPs: 161.3392. Time: 1433.6956 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #107: GFLOPs: 143.4892. Time: 1612.0475 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #108: GFLOPs: 146.5826. Time: 1578.0278 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #109: GFLOPs: 82.0208. Time: 2820.1545 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #110: GFLOPs: 90.4992. Time: 2555.9506 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #111: GFLOPs: 132.4227. Time: 1746.7656 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #112: GFLOPs: 193.9044. Time: 1192.9144 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #113: GFLOPs: 158.5037. Time: 1459.3441 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #114: GFLOPs: 89.0628. Time: 2597.1720 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #115: GFLOPs: 315.8468. Time: 732.3529 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #116: GFLOPs: 187.2286. Time: 1235.4485 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #117: GFLOPs: 149.9179. Time: 1542.9202 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #118: GFLOPs: 187.6210. Time: 1232.8647 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #119: GFLOPs: 134.9806. Time: 1713.6636 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #120: GFLOPs: 328.6309. Time: 703.8636 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #121: GFLOPs: 170.9401. Time: 1353.1721 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #122: GFLOPs: 166.7829. Time: 1386.9012 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #123: GFLOPs: 133.4602. Time: 1733.1859 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #124: GFLOPs: 103.6243. Time: 2232.2107 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #125: GFLOPs: 86.0546. Time: 2687.9608 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #126: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(3), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(98) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(49) // T.int64(7) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_1 in range(T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_2_init * T.int64(16) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(98) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(49) // T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(3), T.int64(1), T.int64(16), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_2 * T.int64(16) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(98) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(49) // T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(2) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(1), T.int64(1)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(98) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(49) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 16])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[128, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b68)
l85 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b70)
l113 = sch.fuse(l112, preserve_unit_iters=True)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b114)
b133 = sch.decompose_reduction(block=b114, loop=l117)
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #127: GFLOPs: 40.7179. Time: 5680.8229 us. Best GFLOPs: 405.5961
2024-04-28 21:30:35 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #128: GFLOPs: 12.2624. Time: 18863.4337 us. Best GFLOPs: 405.5961
2024-04-28 22:20:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:20:04 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:20:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 22:20:08 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 22:20:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 22:20:33 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 22:20:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 22:20:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 22:21:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9932  0.9375  0.9269  0.9236  0.9155  0.9016  0.8995  0.8995  0.8979  0.8945  0.8649  0.8636  0.8623  0.8566  0.8494  0.8475
[17 : 32]:	0.8391  0.8378  0.8354  0.8305  0.8186  0.8133  0.8131  0.7989  0.7929  0.7929  0.7929  0.7929  0.7926  0.7772  0.7765  0.7716
[33 : 48]:	0.7711  0.7687  0.7687  0.7636  0.7547  0.7542  0.7521  0.7417  0.7289  0.7250  0.7218  0.7218  0.7212  0.7151  0.7151  0.7151
[49 : 64]:	0.7112  0.7094  0.7070  0.7013  0.7013  0.7001  0.6992  0.6962  0.6929  0.6921  0.6899  0.6895  0.6781  0.6732  0.6714  0.6675
2024-04-28 22:21:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:21:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #129: GFLOPs: 327.2437. Time: 706.8474 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #130: GFLOPs: 308.1131. Time: 750.7353 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #131: GFLOPs: 388.6772. Time: 595.1246 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #132: GFLOPs: 318.9244. Time: 725.2858 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #133: GFLOPs: 389.3262. Time: 594.1325 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #134: GFLOPs: 380.4659. Time: 607.9686 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #135: GFLOPs: 328.2672. Time: 704.6436 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #136: GFLOPs: 303.4530. Time: 762.2642 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #137: GFLOPs: 316.7173. Time: 730.3401 us. Best GFLOPs: 405.5961
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #138: GFLOPs: 507.4370. Time: 455.8425 us. Best GFLOPs: 507.4370
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #139: GFLOPs: 103.3366. Time: 2238.4266 us. Best GFLOPs: 507.4370
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #140: GFLOPs: 304.2098. Time: 760.3678 us. Best GFLOPs: 507.4370
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #141: GFLOPs: 275.9184. Time: 838.3324 us. Best GFLOPs: 507.4370
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #142: GFLOPs: 96.1469. Time: 2405.8113 us. Best GFLOPs: 507.4370
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #143: GFLOPs: 590.6245. Time: 391.6386 us. Best GFLOPs: 590.6245
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #144: GFLOPs: 102.3069. Time: 2260.9557 us. Best GFLOPs: 590.6245
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #145: GFLOPs: 336.5762. Time: 687.2480 us. Best GFLOPs: 590.6245
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #146: GFLOPs: 104.4103. Time: 2215.4076 us. Best GFLOPs: 590.6245
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #147: GFLOPs: 336.0601. Time: 688.3035 us. Best GFLOPs: 590.6245
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #148: GFLOPs: 648.1988. Time: 356.8525 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #149: GFLOPs: 268.1719. Time: 862.5489 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #150: GFLOPs: 99.7122. Time: 2319.7907 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #151: GFLOPs: 102.2918. Time: 2261.2886 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #152: GFLOPs: 613.2651. Time: 377.1801 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #153: GFLOPs: 72.5584. Time: 3187.9319 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #154: GFLOPs: 104.4539. Time: 2214.4821 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #155: GFLOPs: 328.8015. Time: 703.4985 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #156: GFLOPs: 92.4273. Time: 2502.6303 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #157: GFLOPs: 145.5962. Time: 1588.7185 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #158: GFLOPs: 316.1754. Time: 731.5919 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #159: GFLOPs: 295.3802. Time: 783.0970 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #160: GFLOPs: 105.5993. Time: 2190.4630 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #161: GFLOPs: 95.6988. Time: 2417.0779 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #162: GFLOPs: 403.1489. Time: 573.7616 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #163: GFLOPs: 164.5197. Time: 1405.9794 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #164: GFLOPs: 87.1016. Time: 2655.6492 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #165: GFLOPs: 355.5775. Time: 650.5230 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #166: GFLOPs: 346.8019. Time: 666.9842 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #167: GFLOPs: 94.0523. Time: 2459.3895 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #168: GFLOPs: 498.6359. Time: 463.8883 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #169: GFLOPs: 329.0030. Time: 703.0675 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #170: GFLOPs: 154.4457. Time: 1497.6873 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #171: GFLOPs: 114.4752. Time: 2020.6243 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #172: GFLOPs: 327.0878. Time: 707.1843 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #173: GFLOPs: 315.9285. Time: 732.1636 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #174: GFLOPs: 106.0667. Time: 2180.8102 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #175: GFLOPs: 306.2376. Time: 755.3330 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #176: GFLOPs: 160.2240. Time: 1443.6746 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #177: GFLOPs: 78.0181. Time: 2964.8414 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #178: GFLOPs: 618.7730. Time: 373.8227 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #179: GFLOPs: 350.5106. Time: 659.9268 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #180: GFLOPs: 132.7209. Time: 1742.8406 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #181: GFLOPs: 133.3981. Time: 1733.9932 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #182: GFLOPs: 285.5119. Time: 810.1637 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #183: GFLOPs: 440.4477. Time: 525.1733 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #184: GFLOPs: 80.3751. Time: 2877.8999 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #185: GFLOPs: 359.8831. Time: 642.7402 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #186: GFLOPs: 88.3747. Time: 2617.3937 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #187: GFLOPs: 99.7727. Time: 2318.3832 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #188: GFLOPs: 179.8871. Time: 1285.8696 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #189: GFLOPs: 295.6244. Time: 782.4502 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #190: GFLOPs: 13.0371. Time: 17742.5013 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #191: GFLOPs: 36.8527. Time: 6276.6395 us. Best GFLOPs: 648.1988
2024-04-28 22:22:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #192: GFLOPs: 10.9790. Time: 21068.5898 us. Best GFLOPs: 648.1988
2024-04-28 23:24:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:24:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:24:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:24:06 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:24:18 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:24:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:24:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:24:53 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:25:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9534  0.9296  0.9079  0.9067  0.8964  0.8856  0.8856  0.8790  0.8707  0.8707  0.8643  0.8637  0.8607  0.8505  0.8497  0.8490
[17 : 32]:	0.8428  0.8428  0.8428  0.8405  0.8342  0.8208  0.8201  0.8135  0.8112  0.8097  0.8061  0.8053  0.8046  0.8009  0.7987  0.7916
[33 : 48]:	0.7916  0.7913  0.7897  0.7885  0.7862  0.7844  0.7836  0.7836  0.7805  0.7711  0.7709  0.7695  0.7670  0.7624  0.7624  0.7612
[49 : 64]:	0.7591  0.7574  0.7488  0.7473  0.7446  0.7414  0.7367  0.7358  0.7344  0.7305  0.7253  0.7251  0.7250  0.7246  0.7237  0.7224
2024-04-28 23:25:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:25:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #193: GFLOPs: 628.8299. Time: 367.8441 us. Best GFLOPs: 648.1988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #194: GFLOPs: 489.1581. Time: 472.8765 us. Best GFLOPs: 648.1988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #195: GFLOPs: 679.8516. Time: 340.2380 us. Best GFLOPs: 679.8516
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #196: GFLOPs: 728.0374. Time: 317.7191 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #197: GFLOPs: 701.3282. Time: 329.8190 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #198: GFLOPs: 668.5392. Time: 345.9952 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #199: GFLOPs: 669.6536. Time: 345.4194 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #200: GFLOPs: 527.4630. Time: 438.5357 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #201: GFLOPs: 695.4712. Time: 332.5966 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #202: GFLOPs: 694.9803. Time: 332.8315 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #203: GFLOPs: 719.1090. Time: 321.6638 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #204: GFLOPs: 651.2898. Time: 355.1589 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #205: GFLOPs: 703.7909. Time: 328.6649 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #206: GFLOPs: 624.8417. Time: 370.1920 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #207: GFLOPs: 517.5368. Time: 446.9467 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #208: GFLOPs: 534.9195. Time: 432.4228 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #209: GFLOPs: 611.0883. Time: 378.5236 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #210: GFLOPs: 617.9195. Time: 374.3390 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #211: GFLOPs: 627.2062. Time: 368.7963 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #212: GFLOPs: 663.2808. Time: 348.7382 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #213: GFLOPs: 485.4192. Time: 476.5188 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #214: GFLOPs: 499.2517. Time: 463.3161 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #215: GFLOPs: 665.2640. Time: 347.6986 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #216: GFLOPs: 562.1524. Time: 411.4745 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #217: GFLOPs: 691.7156. Time: 334.4024 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #218: GFLOPs: 580.5529. Time: 398.4329 us. Best GFLOPs: 728.0374
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #219: GFLOPs: 809.9988. Time: 285.5700 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #220: GFLOPs: 471.2347. Time: 490.8623 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #221: GFLOPs: 661.1930. Time: 349.8394 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #222: GFLOPs: 423.1902. Time: 546.5896 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #223: GFLOPs: 478.1752. Time: 483.7377 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #224: GFLOPs: 671.3176. Time: 344.5632 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #225: GFLOPs: 669.9168. Time: 345.2837 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #226: GFLOPs: 339.2007. Time: 681.9307 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #227: GFLOPs: 520.6944. Time: 444.2363 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #228: GFLOPs: 495.2426. Time: 467.0668 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #229: GFLOPs: 616.0458. Time: 375.4775 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #230: GFLOPs: 671.1049. Time: 344.6724 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #231: GFLOPs: 389.2258. Time: 594.2858 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #232: GFLOPs: 527.1239. Time: 438.8178 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #233: GFLOPs: 668.8610. Time: 345.8287 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #234: GFLOPs: 488.0356. Time: 473.9642 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #235: GFLOPs: 484.8264. Time: 477.1014 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #236: GFLOPs: 325.2281. Time: 711.2281 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #237: GFLOPs: 605.6252. Time: 381.9381 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #238: GFLOPs: 219.0025. Time: 1056.2042 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #239: GFLOPs: 256.7360. Time: 900.9698 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #240: GFLOPs: 633.6738. Time: 365.0322 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #241: GFLOPs: 424.0844. Time: 545.4370 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #242: GFLOPs: 545.1121. Time: 424.3373 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #243: GFLOPs: 586.5050. Time: 394.3894 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #244: GFLOPs: 732.4259. Time: 315.8154 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #245: GFLOPs: 612.0034. Time: 377.9576 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #246: GFLOPs: 626.0072. Time: 369.5027 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #247: GFLOPs: 619.3169. Time: 373.4943 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #248: GFLOPs: 494.2265. Time: 468.0270 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #249: GFLOPs: 605.3240. Time: 382.1282 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #250: GFLOPs: 509.0375. Time: 454.4093 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #251: GFLOPs: 383.4912. Time: 603.1725 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #252: GFLOPs: 277.3963. Time: 833.8662 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #253: GFLOPs: 464.0167. Time: 498.4979 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #254: GFLOPs: 8.3626. Time: 27660.2313 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #255: GFLOPs: 26.7901. Time: 8634.2018 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #256: GFLOPs: 28.7842. Time: 8036.0452 us. Best GFLOPs: 809.9988
2024-04-28 23:26:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:26:47 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:26:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:26:51 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:27:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:27:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:27:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:27:37 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-28 23:27:43 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9617  0.9090  0.9053  0.9007  0.8613  0.8337  0.8302  0.8272  0.8260  0.8234  0.8090  0.8073  0.8022  0.8022  0.8003  0.8003
[17 : 32]:	0.8002  0.7981  0.7934  0.7930  0.7902  0.7889  0.7862  0.7821  0.7811  0.7780  0.7763  0.7763  0.7719  0.7638  0.7638  0.7618
[33 : 48]:	0.7558  0.7547  0.7537  0.7495  0.7493  0.7472  0.7390  0.7374  0.7359  0.7335  0.7330  0.7329  0.7307  0.7304  0.7304  0.7283
[49 : 64]:	0.7265  0.7249  0.7249  0.7210  0.7209  0.7207  0.7206  0.7206  0.7204  0.7197  0.7192  0.7167  0.7133  0.7120  0.7110  0.7105
2024-04-28 23:27:43 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:27:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #257: GFLOPs: 580.3327. Time: 398.5841 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #258: GFLOPs: 758.7165. Time: 304.8719 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #259: GFLOPs: 711.2192. Time: 325.2322 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #260: GFLOPs: 702.1710. Time: 329.4231 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #261: GFLOPs: 690.9791. Time: 334.7588 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #262: GFLOPs: 668.8443. Time: 345.8374 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #263: GFLOPs: 672.4407. Time: 343.9878 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #264: GFLOPs: 522.3867. Time: 442.7972 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #265: GFLOPs: 770.8783. Time: 300.0621 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #266: GFLOPs: 693.0896. Time: 333.7395 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #267: GFLOPs: 770.7392. Time: 300.1163 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #268: GFLOPs: 712.3871. Time: 324.6990 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #269: GFLOPs: 584.9288. Time: 395.4522 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #270: GFLOPs: 568.7600. Time: 406.6941 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #271: GFLOPs: 670.3636. Time: 345.0536 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #272: GFLOPs: 672.8704. Time: 343.7681 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #273: GFLOPs: 691.5409. Time: 334.4869 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #274: GFLOPs: 676.6987. Time: 341.8233 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #275: GFLOPs: 656.0950. Time: 352.5577 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #276: GFLOPs: 707.6959. Time: 326.8514 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #277: GFLOPs: 637.0764. Time: 363.0826 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #278: GFLOPs: 717.0995. Time: 322.5652 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #279: GFLOPs: 388.5745. Time: 595.2819 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #280: GFLOPs: 638.6952. Time: 362.1624 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #281: GFLOPs: 704.4859. Time: 328.3406 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #282: GFLOPs: 456.9967. Time: 506.1555 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #283: GFLOPs: 528.4311. Time: 437.7323 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #284: GFLOPs: 527.9497. Time: 438.1314 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #285: GFLOPs: 585.4878. Time: 395.0746 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #286: GFLOPs: 711.1784. Time: 325.2508 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #287: GFLOPs: 564.7564. Time: 409.5772 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #288: GFLOPs: 698.3551. Time: 331.2231 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #289: GFLOPs: 605.9136. Time: 381.7563 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #290: GFLOPs: 653.6990. Time: 353.8500 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #291: GFLOPs: 526.5513. Time: 439.2950 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #292: GFLOPs: 631.0675. Time: 366.5398 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #293: GFLOPs: 582.7641. Time: 396.9211 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #294: GFLOPs: 606.4793. Time: 381.4003 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #295: GFLOPs: 479.6665. Time: 482.2337 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #296: GFLOPs: 651.5522. Time: 355.0158 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #297: GFLOPs: 619.3520. Time: 373.4732 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #298: GFLOPs: 537.5710. Time: 430.2899 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #299: GFLOPs: 585.6451. Time: 394.9685 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #300: GFLOPs: 604.2577. Time: 382.8025 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #301: GFLOPs: 566.5110. Time: 408.3087 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #302: GFLOPs: 409.1605. Time: 565.3316 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #303: GFLOPs: 409.7778. Time: 564.4800 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #304: GFLOPs: 685.5444. Time: 337.4127 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #305: GFLOPs: 595.1741. Time: 388.6449 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #306: GFLOPs: 591.0531. Time: 391.3546 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #307: GFLOPs: 600.9658. Time: 384.8994 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #308: GFLOPs: 626.0202. Time: 369.4951 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #309: GFLOPs: 518.9634. Time: 445.7180 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #310: GFLOPs: 648.5601. Time: 356.6537 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #311: GFLOPs: 730.6116. Time: 316.5996 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #312: GFLOPs: 713.9651. Time: 323.9813 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #313: GFLOPs: 647.1872. Time: 357.4103 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #314: GFLOPs: 504.6918. Time: 458.3220 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #315: GFLOPs: 530.2149. Time: 436.2596 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #316: GFLOPs: 586.1226. Time: 394.6467 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #317: GFLOPs: 536.4449. Time: 431.1932 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #318: GFLOPs: 13.0559. Time: 17717.0165 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #319: GFLOPs: 6.7163. Time: 34440.0690 us. Best GFLOPs: 809.9988
2024-04-28 23:29:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #320: GFLOPs: 4.8925. Time: 47278.5057 us. Best GFLOPs: 809.9988
2024-04-29 00:00:39 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:00:40 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:00:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:00:45 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:00:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:01:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:01:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:01:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:01:36 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9580  0.9359  0.9245  0.9153  0.8916  0.8857  0.8817  0.8817  0.8791  0.8784  0.8718  0.8701  0.8636  0.8634  0.8612  0.8521
[17 : 32]:	0.8462  0.8455  0.8454  0.8402  0.8369  0.8350  0.8298  0.8287  0.8261  0.8252  0.8248  0.8248  0.8246  0.8246  0.8246  0.8221
[33 : 48]:	0.8210  0.8207  0.8182  0.8175  0.8138  0.8129  0.8115  0.8105  0.8071  0.8067  0.8062  0.8059  0.8025  0.8025  0.8018  0.8003
[49 : 64]:	0.7949  0.7906  0.7812  0.7754  0.7744  0.7668  0.7655  0.7655  0.7632  0.7632  0.7630  0.7603  0.7559  0.7555  0.7529  0.7527
2024-04-29 00:01:36 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:01:36 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #321: GFLOPs: 812.9026. Time: 284.5499 us. Best GFLOPs: 812.9026
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #322: GFLOPs: 833.7049. Time: 277.4499 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #323: GFLOPs: 453.6529. Time: 509.8862 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #324: GFLOPs: 727.7917. Time: 317.8263 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #325: GFLOPs: 724.0811. Time: 319.4550 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #326: GFLOPs: 761.1452. Time: 303.8991 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #327: GFLOPs: 706.8490. Time: 327.2430 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #328: GFLOPs: 694.3315. Time: 333.1425 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #329: GFLOPs: 716.5472. Time: 322.8139 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #330: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(9), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(2) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(2) * T.int64(7) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(112) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(56) // T.int64(14) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(2) * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(16) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(112) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(56) // T.int64(14) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(2) * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7)):
                    for ax4_fused in T.vectorized(T.int64(16)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(112) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(56) // T.int64(14) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(2) * T.int64(7) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 4, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b68)
l85 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b70)
l112 = sch.fuse(l111, preserve_unit_iters=True)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131 = sch.get_loops(block=b113)
b132 = sch.decompose_reduction(block=b113, loop=l116)
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #331: GFLOPs: 799.1517. Time: 289.4461 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #332: GFLOPs: 388.9788. Time: 594.6631 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #333: GFLOPs: 701.6092. Time: 329.6869 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #334: GFLOPs: 676.5168. Time: 341.9152 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #335: GFLOPs: 704.7902. Time: 328.1989 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #336: GFLOPs: 676.0573. Time: 342.1476 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #337: GFLOPs: 626.4139. Time: 369.2628 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #338: GFLOPs: 731.4650. Time: 316.2303 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #339: GFLOPs: 673.6296. Time: 343.3806 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #340: GFLOPs: 672.4996. Time: 343.9576 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #341: GFLOPs: 663.4507. Time: 348.6489 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #342: GFLOPs: 657.8805. Time: 351.6009 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #343: GFLOPs: 645.4204. Time: 358.3887 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #344: GFLOPs: 383.6824. Time: 602.8720 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #345: GFLOPs: 664.8247. Time: 347.9284 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #346: GFLOPs: 666.3484. Time: 347.1328 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #347: GFLOPs: 651.3634. Time: 355.1188 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #348: GFLOPs: 654.1617. Time: 353.5997 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #349: GFLOPs: 659.1687. Time: 350.9138 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #350: GFLOPs: 683.7290. Time: 338.3085 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #351: GFLOPs: 626.1308. Time: 369.4297 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #352: GFLOPs: 629.1460. Time: 367.6592 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #353: GFLOPs: 655.0035. Time: 353.1452 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #354: GFLOPs: 564.2620. Time: 409.9361 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #355: GFLOPs: 663.2549. Time: 348.7518 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #356: GFLOPs: 646.6017. Time: 357.7339 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #357: GFLOPs: 593.2532. Time: 389.9033 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #358: GFLOPs: 646.7353. Time: 357.6600 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #359: GFLOPs: 636.4567. Time: 363.4361 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #360: GFLOPs: 538.3682. Time: 429.6527 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #361: GFLOPs: 651.4806. Time: 355.0549 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #362: GFLOPs: 666.8592. Time: 346.8669 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #363: GFLOPs: 743.2716. Time: 311.2071 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #364: GFLOPs: 659.1469. Time: 350.9253 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #365: GFLOPs: 672.8506. Time: 343.7782 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #366: GFLOPs: 685.1462. Time: 337.6088 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #367: GFLOPs: 609.7003. Time: 379.3854 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #368: GFLOPs: 643.6039. Time: 359.4002 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #369: GFLOPs: 659.3598. Time: 350.8120 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #370: GFLOPs: 588.2871. Time: 393.1947 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #371: GFLOPs: 667.3454. Time: 346.6142 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #372: GFLOPs: 472.4501. Time: 489.5995 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #373: GFLOPs: 646.1568. Time: 357.9802 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #374: GFLOPs: 559.6938. Time: 413.2820 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #375: GFLOPs: 638.2723. Time: 362.4023 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #376: GFLOPs: 637.6482. Time: 362.7570 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #377: GFLOPs: 573.0108. Time: 403.6771 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #378: GFLOPs: 578.8273. Time: 399.6207 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #379: GFLOPs: 637.7379. Time: 362.7060 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #380: GFLOPs: 699.4282. Time: 330.7149 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #381: GFLOPs: 658.5944. Time: 351.2198 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #382: GFLOPs: 33.1700. Time: 6973.5092 us. Best GFLOPs: 833.7049
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #383: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused in T.parallel(T.int64(1568), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(4), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(112) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) * T.int64(2) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_1 in range(T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(7) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(112) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(112) // T.int64(14) * T.int64(2) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(7) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(112) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(112) // T.int64(14) * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(7) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(112) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(112) // T.int64(14) * T.int64(2) + oc_block_1 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 4, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[8, 2, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b68)
l85 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b70)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130 = sch.get_loops(block=b112)
b131 = sch.decompose_reduction(block=b112, loop=l115)
2024-04-29 00:03:18 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #384: GFLOPs: 2.5072. Time: 92258.3380 us. Best GFLOPs: 833.7049
2024-04-29 00:48:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:48:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:48:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:48:13 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:48:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:48:37 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:48:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:49:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 00:49:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9564  0.9359  0.9256  0.8865  0.8858  0.8621  0.8621  0.8608  0.8608  0.8312  0.8308  0.8302  0.8302  0.8286  0.8286  0.8281
[17 : 32]:	0.8226  0.8178  0.8152  0.8152  0.8141  0.8115  0.8105  0.8095  0.8079  0.8071  0.8070  0.8050  0.8032  0.8028  0.8014  0.8000
[33 : 48]:	0.7999  0.7992  0.7992  0.7977  0.7975  0.7928  0.7928  0.7921  0.7917  0.7912  0.7905  0.7898  0.7880  0.7847  0.7830  0.7782
[49 : 64]:	0.7781  0.7779  0.7774  0.7752  0.7749  0.7746  0.7703  0.7697  0.7680  0.7642  0.7628  0.7628  0.7622  0.7598  0.7581  0.7531
2024-04-29 00:49:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:49:07 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #385: GFLOPs: 415.1959. Time: 557.1138 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #386: GFLOPs: 742.7198. Time: 311.4382 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #387: GFLOPs: 830.3286. Time: 278.5781 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #388: GFLOPs: 776.4662. Time: 297.9027 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #389: GFLOPs: 820.6873. Time: 281.8508 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #390: GFLOPs: 729.8784. Time: 316.9177 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #391: GFLOPs: 731.5528. Time: 316.1923 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #392: GFLOPs: 721.9680. Time: 320.3900 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #393: GFLOPs: 714.8150. Time: 323.5961 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #394: GFLOPs: 750.2700. Time: 308.3042 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #395: GFLOPs: 753.8526. Time: 306.8390 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #396: GFLOPs: 737.9677. Time: 313.4437 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #397: GFLOPs: 736.0711. Time: 314.2514 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #398: GFLOPs: 741.9685. Time: 311.7536 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #399: GFLOPs: 748.8956. Time: 308.8700 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #400: GFLOPs: 676.9897. Time: 341.6763 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #401: GFLOPs: 746.4782. Time: 309.8702 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #402: GFLOPs: 397.9743. Time: 581.2219 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #403: GFLOPs: 674.7217. Time: 342.8249 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #404: GFLOPs: 723.3966. Time: 319.7573 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #405: GFLOPs: 619.6335. Time: 373.3035 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #406: GFLOPs: 339.6992. Time: 680.9299 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #407: GFLOPs: 676.9473. Time: 341.6977 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #408: GFLOPs: 684.1632. Time: 338.0938 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #409: GFLOPs: 658.1100. Time: 351.4782 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #410: GFLOPs: 296.9224. Time: 779.0296 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #411: GFLOPs: 829.3245. Time: 278.9154 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #412: GFLOPs: 639.2091. Time: 361.8712 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #413: GFLOPs: 718.4417. Time: 321.9626 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #414: GFLOPs: 609.5449. Time: 379.4820 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #415: GFLOPs: 711.1027. Time: 325.2854 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #416: GFLOPs: 752.6193. Time: 307.3418 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #417: GFLOPs: 711.6882. Time: 325.0178 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #418: GFLOPs: 673.3319. Time: 343.5324 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #419: GFLOPs: 655.7819. Time: 352.7261 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #420: GFLOPs: 734.6443. Time: 314.8617 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #421: GFLOPs: 717.5627. Time: 322.3570 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #422: GFLOPs: 656.0300. Time: 352.5926 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #423: GFLOPs: 407.5354. Time: 567.5859 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #424: GFLOPs: 743.3444. Time: 311.1766 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #425: GFLOPs: 674.4698. Time: 342.9529 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #426: GFLOPs: 736.2784. Time: 314.1629 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #427: GFLOPs: 659.6265. Time: 350.6702 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #428: GFLOPs: 627.6317. Time: 368.5463 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #429: GFLOPs: 619.1589. Time: 373.5897 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #430: GFLOPs: 626.3943. Time: 369.2744 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #431: GFLOPs: 806.0801. Time: 286.9583 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #432: GFLOPs: 686.4418. Time: 336.9715 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #433: GFLOPs: 598.6917. Time: 386.3614 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #434: GFLOPs: 639.5675. Time: 361.6684 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #435: GFLOPs: 657.3654. Time: 351.8764 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #436: GFLOPs: 772.9390. Time: 299.2621 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #437: GFLOPs: 796.2389. Time: 290.5050 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #438: GFLOPs: 646.6292. Time: 357.7187 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #439: GFLOPs: 706.8708. Time: 327.2329 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #440: GFLOPs: 669.4922. Time: 345.5027 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #441: GFLOPs: 662.8601. Time: 348.9595 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #442: GFLOPs: 127.8838. Time: 1808.7618 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #443: GFLOPs: 680.5061. Time: 339.9108 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #444: GFLOPs: 674.9273. Time: 342.7204 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #445: GFLOPs: 692.7474. Time: 333.9043 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #446: GFLOPs: 9.2264. Time: 25070.6708 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #447: GFLOPs: 4.7593. Time: 48602.1057 us. Best GFLOPs: 833.7049
2024-04-29 00:50:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #448: GFLOPs: 76.3551. Time: 3029.4168 us. Best GFLOPs: 833.7049
2024-04-29 01:39:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:39:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:39:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 01:39:21 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 01:39:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 01:39:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 01:39:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 01:40:07 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 01:40:14 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9817  0.9646  0.9392  0.9186  0.9114  0.9094  0.9094  0.9088  0.9075  0.8987  0.8892  0.8892  0.8788  0.8788  0.8756  0.8756
[17 : 32]:	0.8734  0.8715  0.8692  0.8688  0.8672  0.8658  0.8658  0.8613  0.8609  0.8588  0.8588  0.8586  0.8571  0.8535  0.8469  0.8467
[33 : 48]:	0.8418  0.8410  0.8399  0.8390  0.8378  0.8353  0.8326  0.8326  0.8325  0.8271  0.8268  0.8265  0.8265  0.8229  0.8215  0.8150
[49 : 64]:	0.8095  0.8090  0.8056  0.8053  0.8050  0.8039  0.8037  0.8017  0.7971  0.7969  0.7951  0.7934  0.7926  0.7903  0.7897  0.7885
2024-04-29 01:40:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:40:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #449: GFLOPs: 755.7992. Time: 306.0487 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #450: GFLOPs: 766.4033. Time: 301.8141 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #451: GFLOPs: 828.5288. Time: 279.1832 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #452: GFLOPs: 828.1226. Time: 279.3202 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #453: GFLOPs: 790.4717. Time: 292.6245 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #454: GFLOPs: 754.3288. Time: 306.6453 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #455: GFLOPs: 708.4918. Time: 326.4842 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #456: GFLOPs: 724.0216. Time: 319.4813 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #457: GFLOPs: 784.9613. Time: 294.6787 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #458: GFLOPs: 792.5735. Time: 291.8485 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #459: GFLOPs: 823.0772. Time: 281.0324 us. Best GFLOPs: 833.7049
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #460: GFLOPs: 841.3374. Time: 274.9329 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #461: GFLOPs: 727.2978. Time: 318.0421 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #462: GFLOPs: 729.0490. Time: 317.2782 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #463: GFLOPs: 823.5755. Time: 280.8624 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #464: GFLOPs: 833.5989. Time: 277.4852 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #465: GFLOPs: 744.8327. Time: 310.5548 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #466: GFLOPs: 681.9491. Time: 339.1915 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #467: GFLOPs: 749.7513. Time: 308.5175 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #468: GFLOPs: 737.5834. Time: 313.6071 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #469: GFLOPs: 704.6948. Time: 328.2433 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #470: GFLOPs: 705.1323. Time: 328.0396 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #471: GFLOPs: 701.8843. Time: 329.5577 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #472: GFLOPs: 779.1575. Time: 296.8737 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #473: GFLOPs: 354.3510. Time: 652.7746 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #474: GFLOPs: 727.5159. Time: 317.9468 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #475: GFLOPs: 821.6451. Time: 281.5222 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #476: GFLOPs: 731.0733. Time: 316.3997 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #477: GFLOPs: 720.6123. Time: 320.9928 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #478: GFLOPs: 705.9084. Time: 327.6790 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #479: GFLOPs: 713.0797. Time: 324.3836 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #480: GFLOPs: 714.8285. Time: 323.5900 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #481: GFLOPs: 716.2789. Time: 322.9348 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #482: GFLOPs: 762.6247. Time: 303.3095 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #483: GFLOPs: 782.7328. Time: 295.5177 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #484: GFLOPs: 701.3306. Time: 329.8179 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #485: GFLOPs: 772.0498. Time: 299.6068 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #486: GFLOPs: 742.7822. Time: 311.4121 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #487: GFLOPs: 672.0421. Time: 344.1918 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #488: GFLOPs: 801.9860. Time: 288.4232 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #489: GFLOPs: 724.3450. Time: 319.3386 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #490: GFLOPs: 682.9063. Time: 338.7161 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #491: GFLOPs: 672.2380. Time: 344.0915 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #492: GFLOPs: 699.7543. Time: 330.5608 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #493: GFLOPs: 605.8129. Time: 381.8198 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #494: GFLOPs: 672.5251. Time: 343.9446 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #495: GFLOPs: 718.4855. Time: 321.9430 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #496: GFLOPs: 659.0020. Time: 351.0025 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #497: GFLOPs: 740.9378. Time: 312.1873 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #498: GFLOPs: 696.9777. Time: 331.8777 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #499: GFLOPs: 690.7326. Time: 334.8783 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #500: GFLOPs: 487.2429. Time: 474.7352 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #501: GFLOPs: 593.5490. Time: 389.7090 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #502: GFLOPs: 652.9061. Time: 354.2796 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #503: GFLOPs: 128.7781. Time: 1796.2009 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #504: GFLOPs: 692.9743. Time: 333.7950 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #505: GFLOPs: 657.7199. Time: 351.6867 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #506: GFLOPs: 649.1463. Time: 356.3316 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #507: GFLOPs: 651.8735. Time: 354.8409 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #508: GFLOPs: 630.8331. Time: 366.6760 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #509: GFLOPs: 738.6125. Time: 313.1701 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #510: GFLOPs: 13.5844. Time: 17027.7297 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #511: GFLOPs: 92.0221. Time: 2513.6493 us. Best GFLOPs: 841.3374
2024-04-29 01:41:56 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #512: GFLOPs: 11.7706. Time: 19651.5930 us. Best GFLOPs: 841.3374
2024-04-29 02:20:37 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:20:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 02:20:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 02:20:42 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 02:20:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 02:21:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 02:21:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 02:21:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 02:21:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0093  1.0008  0.9522  0.9304  0.9304  0.9291  0.9272  0.9271  0.9250  0.9196  0.9188  0.9188  0.9173  0.9150  0.9136  0.9136
[17 : 32]:	0.9115  0.9080  0.9043  0.8997  0.8997  0.8947  0.8869  0.8866  0.8855  0.8820  0.8820  0.8806  0.8791  0.8783  0.8771  0.8761
[33 : 48]:	0.8748  0.8748  0.8739  0.8717  0.8713  0.8713  0.8706  0.8704  0.8664  0.8663  0.8629  0.8615  0.8588  0.8525  0.8519  0.8517
[49 : 64]:	0.8494  0.8494  0.8460  0.8459  0.8459  0.8450  0.8414  0.8407  0.8407  0.8380  0.8361  0.8351  0.8321  0.8240  0.8200  0.8164
2024-04-29 02:21:36 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:21:36 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #513: GFLOPs: 903.4002. Time: 256.0453 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #514: GFLOPs: 862.3557. Time: 268.2320 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #515: GFLOPs: 411.3789. Time: 562.2831 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #516: GFLOPs: 408.5562. Time: 566.1678 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #517: GFLOPs: 816.1728. Time: 283.4098 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #518: GFLOPs: 792.0337. Time: 292.0474 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #519: GFLOPs: 820.8656. Time: 281.7896 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #520: GFLOPs: 812.8167. Time: 284.5800 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #521: GFLOPs: 790.2141. Time: 292.7198 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #522: GFLOPs: 818.0610. Time: 282.7556 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #523: GFLOPs: 781.5230. Time: 295.9751 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #524: GFLOPs: 783.1914. Time: 295.3446 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #525: GFLOPs: 786.0033. Time: 294.2880 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #526: GFLOPs: 739.1842. Time: 312.9279 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #527: GFLOPs: 756.0414. Time: 305.9507 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #528: GFLOPs: 758.3101. Time: 305.0353 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #529: GFLOPs: 729.4712. Time: 317.0946 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #530: GFLOPs: 769.3499. Time: 300.6582 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #531: GFLOPs: 770.5525. Time: 300.1890 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #532: GFLOPs: 797.7501. Time: 289.9546 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #533: GFLOPs: 713.6520. Time: 324.1235 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #534: GFLOPs: 812.7306. Time: 284.6101 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #535: GFLOPs: 661.9111. Time: 349.4599 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #536: GFLOPs: 720.5974. Time: 320.9995 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #537: GFLOPs: 691.8364. Time: 334.3440 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #538: GFLOPs: 728.9744. Time: 317.3107 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #539: GFLOPs: 735.2061. Time: 314.6211 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #540: GFLOPs: 811.5396. Time: 285.0278 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #541: GFLOPs: 760.5219. Time: 304.1482 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #542: GFLOPs: 732.5741. Time: 315.7515 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #543: GFLOPs: 766.6676. Time: 301.7101 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #544: GFLOPs: 734.9828. Time: 314.7167 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #545: GFLOPs: 770.4557. Time: 300.2267 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #546: GFLOPs: 704.6267. Time: 328.2750 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #547: GFLOPs: 787.4873. Time: 293.7335 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #548: GFLOPs: 685.6409. Time: 337.3652 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #549: GFLOPs: 745.7769. Time: 310.1616 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #550: GFLOPs: 732.5636. Time: 315.7560 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #551: GFLOPs: 769.6807. Time: 300.5290 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #552: GFLOPs: 778.0228. Time: 297.3066 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #553: GFLOPs: 730.5869. Time: 316.6103 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #554: GFLOPs: 779.6799. Time: 296.6748 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #555: GFLOPs: 713.4685. Time: 324.2068 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #556: GFLOPs: 751.6868. Time: 307.7230 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #557: GFLOPs: 693.3128. Time: 333.6320 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #558: GFLOPs: 756.8885. Time: 305.6082 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #559: GFLOPs: 738.0915. Time: 313.3912 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #560: GFLOPs: 784.0950. Time: 295.0043 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #561: GFLOPs: 769.3228. Time: 300.6688 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #562: GFLOPs: 764.7225. Time: 302.4775 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #563: GFLOPs: 708.5869. Time: 326.4404 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #564: GFLOPs: 683.4862. Time: 338.4287 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #565: GFLOPs: 751.8354. Time: 307.6622 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #566: GFLOPs: 745.7443. Time: 310.1752 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #567: GFLOPs: 744.4604. Time: 310.7101 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #568: GFLOPs: 652.1201. Time: 354.7067 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #569: GFLOPs: 780.1532. Time: 296.4948 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #570: GFLOPs: 763.3943. Time: 303.0038 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #571: GFLOPs: 730.5971. Time: 316.6059 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #572: GFLOPs: 653.4129. Time: 354.0049 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #573: GFLOPs: 673.4328. Time: 343.4810 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #574: GFLOPs: 28.6417. Time: 8076.0272 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #575: GFLOPs: 2.2797. Time: 101466.9080 us. Best GFLOPs: 903.4002
2024-04-29 02:23:21 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #576: GFLOPs: 30.9469. Time: 7474.4490 us. Best GFLOPs: 903.4002
2024-04-29 03:00:39 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:00:41 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:00:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 03:00:45 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 03:00:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 03:01:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 03:01:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 03:01:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x385b0f8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b9a428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3ce4f28)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x365a2e8)]: 0 failure(s)
2024-04-29 03:01:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9649  0.8958  0.8894  0.8847  0.8752  0.8739  0.8733  0.8715  0.8709  0.8697  0.8669  0.8669  0.8662  0.8618  0.8618  0.8618
[17 : 32]:	0.8614  0.8613  0.8599  0.8590  0.8561  0.8543  0.8532  0.8464  0.8452  0.8439  0.8433  0.8380  0.8377  0.8367  0.8255  0.8226
[33 : 48]:	0.8226  0.8226  0.8222  0.8209  0.8203  0.8164  0.8130  0.8130  0.8127  0.8087  0.8075  0.8069  0.8045  0.8026  0.8026  0.8024
[49 : 64]:	0.8017  0.7957  0.7956  0.7934  0.7919  0.7905  0.7899  0.7894  0.7882  0.7879  0.7844  0.7838  0.7818  0.7817  0.7804  0.7804
2024-04-29 03:01:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:01:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:03:27 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #577: GFLOPs: 391.1016. Time: 591.4355 us. Best GFLOPs: 903.4002
2024-04-29 03:03:27 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #578: GFLOPs: 426.3525. Time: 542.5355 us. Best GFLOPs: 903.4002
2024-04-29 03:03:27 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #579: GFLOPs: 828.1483. Time: 279.3115 us. Best GFLOPs: 903.4002
2024-04-29 03:03:27 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #580: GFLOPs: 848.6562. Time: 272.5619 us. Best GFLOPs: 903.4002
2024-04-29 03:03:27 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #581: GFLOPs: 823.0023. Time: 281.0580 us. Best GFLOPs: 903.4002
2024-04-29 03:03:27 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #582: GFLOPs: 801.2751. Time: 288.6791 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #583: GFLOPs: 793.4096. Time: 291.5409 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #584: GFLOPs: 780.8090. Time: 296.2457 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #585: GFLOPs: 833.9606. Time: 277.3649 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #586: GFLOPs: 811.0827. Time: 285.1884 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #587: GFLOPs: 801.7162. Time: 288.5202 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #588: GFLOPs: 799.1303. Time: 289.4539 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #589: GFLOPs: 813.8873. Time: 284.2056 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #590: GFLOPs: 795.8333. Time: 290.6530 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #591: GFLOPs: 775.3116. Time: 298.3463 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #592: GFLOPs: 784.1118. Time: 294.9979 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #593: GFLOPs: 785.8001. Time: 294.3641 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #594: GFLOPs: 794.5085. Time: 291.1377 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #595: GFLOPs: 812.8245. Time: 284.5772 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #596: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(128)), "float32"), p1: T.Buffer((T.int64(16), T.int64(2), T.int64(3), T.int64(3), T.int64(128), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(16), T.int64(16), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(3), T.int64(9), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(112) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(7) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + ow_1 * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(16) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(112) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(7) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7)):
                    for ax4_fused in T.vectorized(T.int64(16)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(112) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(7) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 4, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b70)
l113 = sch.fuse(l112, preserve_unit_iters=True)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b114)
b134 = sch.decompose_reduction(block=b114, loop=l118)
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #597: GFLOPs: 814.1081. Time: 284.1286 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #598: GFLOPs: 768.8199. Time: 300.8655 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #599: GFLOPs: 787.5564. Time: 293.7077 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #600: GFLOPs: 774.7864. Time: 298.5486 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #601: GFLOPs: 626.4419. Time: 369.2463 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #602: GFLOPs: 776.7440. Time: 297.7962 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #603: GFLOPs: 625.6170. Time: 369.7332 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #604: GFLOPs: 766.4596. Time: 301.7920 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #605: GFLOPs: 761.6669. Time: 303.6910 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #606: GFLOPs: 762.6301. Time: 303.3074 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #607: GFLOPs: 788.7371. Time: 293.2680 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #608: GFLOPs: 784.3965. Time: 294.8909 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #609: GFLOPs: 719.5200. Time: 321.4801 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #610: GFLOPs: 791.9551. Time: 292.0764 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #611: GFLOPs: 619.1518. Time: 373.5939 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #612: GFLOPs: 750.1649. Time: 308.3473 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #613: GFLOPs: 597.0774. Time: 387.4060 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #614: GFLOPs: 724.7251. Time: 319.1712 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #615: GFLOPs: 812.8769. Time: 284.5589 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #616: GFLOPs: 806.8663. Time: 286.6787 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #617: GFLOPs: 742.3563. Time: 311.5908 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #618: GFLOPs: 711.3424. Time: 325.1758 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #619: GFLOPs: 769.7157. Time: 300.5153 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #620: GFLOPs: 803.5655. Time: 287.8563 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #621: GFLOPs: 729.9402. Time: 316.8908 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #622: GFLOPs: 750.7930. Time: 308.0894 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #623: GFLOPs: 705.6635. Time: 327.7927 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #624: GFLOPs: 731.4653. Time: 316.2301 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #625: GFLOPs: 704.2598. Time: 328.4461 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #626: GFLOPs: 713.7981. Time: 324.0571 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #627: GFLOPs: 736.6603. Time: 314.0000 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #628: GFLOPs: 740.0976. Time: 312.5417 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #629: GFLOPs: 681.2571. Time: 339.5361 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #630: GFLOPs: 650.7075. Time: 355.4767 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #631: GFLOPs: 780.9512. Time: 296.1918 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #632: GFLOPs: 594.7869. Time: 388.8979 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #633: GFLOPs: 720.6685. Time: 320.9678 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #634: GFLOPs: 729.0224. Time: 317.2898 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #635: GFLOPs: 782.7163. Time: 295.5239 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #636: GFLOPs: 712.6511. Time: 324.5787 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #637: GFLOPs: 651.8398. Time: 354.8592 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #638: GFLOPs: 11.8010. Time: 19601.0340 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #639: GFLOPs: 1.8556. Time: 124656.4210 us. Best GFLOPs: 903.4002
2024-04-29 03:03:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #640: GFLOPs: 64.0557. Time: 3611.0957 us. Best GFLOPs: 903.4002
