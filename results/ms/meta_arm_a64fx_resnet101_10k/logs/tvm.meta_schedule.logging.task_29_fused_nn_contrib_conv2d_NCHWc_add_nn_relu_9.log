2024-04-29 07:26:49 [INFO] [task_scheduler.cc:160] Initializing Task #29: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9"
2024-04-29 07:26:49 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4), T.int64(256), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 07:26:50 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 07:26:50 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(4)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(29), T.int64(29), T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(128), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 4, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[128, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-29 07:26:50 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(4), T.int64(1), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(29), T.int64(15), T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ow_1 * T.int64(14) + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_1 in range(T.int64(1)):
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(128), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(2) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(7), T.int64(1)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 4, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[128, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 07:26:50 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(4)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(29), T.int64(29), T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(128), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(14), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 4, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[128, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 07:57:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:57:25 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 07:57:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 07:57:31 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 07:57:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 07:57:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 07:57:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 07:57:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 07:57:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9996  0.9996  0.9986  0.9985  0.9980  0.9979  0.9978  0.9975  0.9972  0.9968  0.9963  0.9958  0.9953  0.9951  0.9942  0.9927
[17 : 32]:	0.9923  0.9920  0.9918  0.9901  0.9900  0.9897  0.9896  0.9896  0.9895  0.9893  0.9882  0.9881  0.9879  0.9876  0.9871  0.9866
[33 : 48]:	0.9865  0.9865  0.9862  0.9842  0.9831  0.9829  0.9827  0.9805  0.9805  0.9803  0.9795  0.9794  0.9785  0.9780  0.9778  0.9778
[49 : 64]:	0.9776  0.9772  0.9766  0.9752  0.9751  0.9743  0.9743  0.9741  0.9727  0.9726  0.9723  0.9716  0.9712  0.9711  0.9705  0.9704
2024-04-29 07:57:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:57:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #1: GFLOPs: 11.2415. Time: 20576.4726 us. Best GFLOPs: 11.2415
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #2: GFLOPs: 56.0050. Time: 4130.1898 us. Best GFLOPs: 56.0050
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #3: GFLOPs: 24.9385. Time: 9275.2544 us. Best GFLOPs: 56.0050
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #4: GFLOPs: 96.9921. Time: 2384.8473 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #5: GFLOPs: 44.8699. Time: 5155.1572 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #6: GFLOPs: 5.0570. Time: 45740.3980 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #7: GFLOPs: 3.6211. Time: 63877.9010 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #8: GFLOPs: 6.3301. Time: 36541.4810 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #9: GFLOPs: 6.7881. Time: 34075.9030 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #10: GFLOPs: 10.8805. Time: 21259.2586 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #11: GFLOPs: 3.4196. Time: 67642.4600 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #12: GFLOPs: 3.3191. Time: 69691.6220 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #13: GFLOPs: 47.4917. Time: 4870.5657 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #14: GFLOPs: 57.7204. Time: 4007.4467 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #15: GFLOPs: 50.1380. Time: 4613.4944 us. Best GFLOPs: 96.9921
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #16: GFLOPs: 122.0498. Time: 1895.2219 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #17: GFLOPs: 18.8406. Time: 12277.2853 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #18: GFLOPs: 101.9938. Time: 2267.8965 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #19: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(7)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(32) + oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0 in range(T.int64(8)):
                    for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(3)):
                        for ax3_ax4_fused in T.vectorized(T.int64(60)):
                            with T.block("data_pad"):
                                v_i0 = T.axis.spatial(T.int64(1), ax0)
                                v_i1 = T.axis.spatial(T.int64(64), ic_0 * T.int64(8) + ax1)
                                v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(14) + oh_1 * T.int64(2) + ax2)
                                v_i3 = T.axis.spatial(T.int64(30), ow_1 * T.int64(14) + ax3_ax4_fused // T.int64(4))
                                v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(7)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(32) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(7) + oh_1 + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(32) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 4, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l85, l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b69)
l111 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l111)
l112 = sch.fuse(l110, preserve_unit_iters=True)
sch.vectorize(loop=l112)
sch.annotate(block_or_loop=l111, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l111, ann_key="pragma_unroll_explicit", ann_val=1)
l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b70)
l119 = sch.fuse(l117, l118, preserve_unit_iters=True)
sch.vectorize(loop=l119)
b120 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142 = sch.get_loops(block=b120)
b143 = sch.decompose_reduction(block=b120, loop=l127)
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #20: GFLOPs: 3.5977. Time: 64294.1167 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #21: GFLOPs: 19.3299. Time: 11966.4779 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #22: GFLOPs: 24.5833. Time: 9409.2825 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #23: GFLOPs: 19.6997. Time: 11741.8677 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #24: GFLOPs: 50.8947. Time: 4544.9036 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #25: GFLOPs: 99.7747. Time: 2318.3363 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #26: GFLOPs: 34.7497. Time: 6656.4928 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #27: GFLOPs: 6.0587. Time: 38178.3703 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #28: GFLOPs: 35.8829. Time: 6446.2840 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #29: GFLOPs: 4.9715. Time: 46527.6893 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #30: GFLOPs: 54.8323. Time: 4218.5248 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #31: GFLOPs: 19.6334. Time: 11781.5012 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #32: GFLOPs: 91.6373. Time: 2524.2063 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #33: GFLOPs: 2.9406. Time: 78662.1110 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #34: GFLOPs: 49.4332. Time: 4679.2720 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #35: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(7), T.int64(14), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0 in T.grid(T.int64(4), T.int64(3)):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(27), T.int64(29)):
                        for ax4_fused in T.vectorized(T.int64(4)):
                            with T.block("data_pad"):
                                v_i0 = T.axis.spatial(T.int64(1), ax0)
                                v_i1 = T.axis.spatial(T.int64(64), ic_0 * T.int64(16) + ax1)
                                v_i2 = T.axis.spatial(T.int64(30), kh_0 + ax2)
                                v_i3 = T.axis.spatial(T.int64(30), ax3)
                                v_i4 = T.axis.spatial(T.int64(4), ax4_fused)
                                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(64), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(7), T.int64(14), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 2, 2, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=11)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87 = sch.get_loops(block=b68)
l88 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l88)
l89 = sch.fuse(l87, preserve_unit_iters=True)
sch.vectorize(loop=l89)
l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b69)
l112 = sch.fuse(l90, preserve_unit_iters=True)
sch.parallel(loop=l112)
sch.annotate(block_or_loop=l112, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l112, ann_key="pragma_unroll_explicit", ann_val=1)
l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b70)
l119 = sch.fuse(l117, l118, preserve_unit_iters=True)
sch.vectorize(loop=l119)
b120 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142 = sch.get_loops(block=b120)
b143 = sch.decompose_reduction(block=b120, loop=l127)
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #36: GFLOPs: 4.6363. Time: 49890.9393 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #37: GFLOPs: 30.0579. Time: 7695.5382 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #38: GFLOPs: 3.1109. Time: 74355.7857 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #39: GFLOPs: 67.5779. Time: 3422.8847 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #40: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_fused_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(29), T.int64(29)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(7), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(1)):
                    for ax3_ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_fused_fused * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ax3_ax4_fused // T.int64(4))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 1, 4, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77 = sch.get_loops(block=b68)
l78 = sch.fuse(l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l78)
l79 = sch.fuse(l77, preserve_unit_iters=True)
sch.vectorize(loop=l79)
l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l80, preserve_unit_iters=True)
sch.parallel(loop=l105)
l106 = sch.fuse(l104, preserve_unit_iters=True)
sch.vectorize(loop=l106)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b70)
l121 = sch.fuse(l119, l120, preserve_unit_iters=True)
sch.vectorize(loop=l121)
b122 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147 = sch.get_loops(block=b122)
b148 = sch.decompose_reduction(block=b122, loop=l132)
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #41: GFLOPs: 2.7343. Time: 84594.7493 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #42: GFLOPs: 38.8998. Time: 5946.3343 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #43: GFLOPs: 13.1198. Time: 17630.7617 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #44: GFLOPs: 54.8271. Time: 4218.9218 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #45: GFLOPs: 50.5369. Time: 4577.0756 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #46: GFLOPs: 92.7981. Time: 2492.6302 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #47: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused in T.parallel(T.int64(1568), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(64), T.int64(3)):
                for ax3_ax4_fused in T.vectorized(T.int64(12)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(196) // T.int64(14) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                        v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_1 in range(T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(196) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(196) // T.int64(14) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(4), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(196) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(196) // T.int64(14) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1)):
                    for ax4_fused in T.vectorized(T.int64(2)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(196) * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(196) // T.int64(14) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 2, 4, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b68)
l85 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86 = sch.fuse(l83, l84, preserve_unit_iters=True)
sch.vectorize(loop=l86)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l87, preserve_unit_iters=True)
sch.parallel(loop=l105)
l106 = sch.fuse(l104, preserve_unit_iters=True)
sch.vectorize(loop=l106)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b115)
b134 = sch.decompose_reduction(block=b115, loop=l118)
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #48: GFLOPs: 119.1991. Time: 1940.5454 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #49: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(7), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_1 * T.int64(64) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(3), T.int64(3), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_1 * T.int64(64) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(2) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh - T.int64(1), v_ow * T.int64(2) + v_kw - T.int64(1), v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh * T.int64(2) + v_kh and v_oh * T.int64(2) + v_kh < T.int64(29) and T.int64(1) <= v_ow * T.int64(2) + v_kw and v_ow * T.int64(2) + v_kw < T.int64(29), p0[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh - T.int64(1), v_ow * T.int64(2) + v_kw - T.int64(1), v_ic % T.int64(4)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(64), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[128, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69 = sch.get_child_blocks(b67)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b68)
l96 = sch.fuse(l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l96)
l97 = sch.fuse(l95, preserve_unit_iters=True)
sch.vectorize(loop=l97)
sch.annotate(block_or_loop=l96, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l96, ann_key="pragma_unroll_explicit", ann_val=1)
l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l102, l103, preserve_unit_iters=True)
sch.vectorize(loop=l104)
b105 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127 = sch.get_loops(block=b105)
b128 = sch.decompose_reduction(block=b105, loop=l112)
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #50: GFLOPs: 15.0505. Time: 15369.0229 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #51: GFLOPs: 35.2528. Time: 6561.5078 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #52: GFLOPs: 1.1890. Time: 194542.2403 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #53: GFLOPs: 15.1283. Time: 15289.9554 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #54: GFLOPs: 6.5493. Time: 35318.3837 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #55: GFLOPs: 62.6199. Time: 3693.8981 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #56: GFLOPs: 55.1285. Time: 4195.8583 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #57: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(14), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2)):
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(64), T.int64(5)):
                    for ax3_ax4_fused in T.vectorized(T.int64(60)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(4) + ax2)
                            v_i3 = T.axis.spatial(T.int64(30), ow_1 * T.int64(14) + ax3_ax4_fused // T.int64(4))
                            v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_1 in range(T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(32) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(4), T.int64(4), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(32) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(2)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(32) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 4, 4, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b68)
l85 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86 = sch.fuse(l83, l84, preserve_unit_iters=True)
sch.vectorize(loop=l86)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l87, preserve_unit_iters=True)
sch.parallel(loop=l109)
sch.annotate(block_or_loop=l109, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l109, ann_key="pragma_unroll_explicit", ann_val=1)
l110, l111, l112, l113, l114, l115 = sch.get_loops(block=b70)
l116 = sch.fuse(l114, l115, preserve_unit_iters=True)
sch.vectorize(loop=l116)
b117 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b117)
b140 = sch.decompose_reduction(block=b117, loop=l124)
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #58: GFLOPs: 47.5199. Time: 4867.6709 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #59: GFLOPs: 14.6925. Time: 15743.5509 us. Best GFLOPs: 122.0498
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #60: GFLOPs: 123.7275. Time: 1869.5219 us. Best GFLOPs: 123.7275
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #61: GFLOPs: 17.4978. Time: 13219.4788 us. Best GFLOPs: 123.7275
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #62: GFLOPs: 114.1244. Time: 2026.8353 us. Best GFLOPs: 123.7275
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #63: GFLOPs: 40.2242. Time: 5750.5582 us. Best GFLOPs: 123.7275
2024-04-29 08:21:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #64: GFLOPs: 16.5150. Time: 14006.1446 us. Best GFLOPs: 123.7275
2024-04-29 08:47:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:47:43 [INFO] [evolutionary_search.cc:715] Picked top 58 candidate(s) from database
2024-04-29 08:47:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 08:47:48 [INFO] [evolutionary_search.cc:723] Sampled 454 candidate(s)
2024-04-29 08:47:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 08:48:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 08:48:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 08:48:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 08:48:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0030  0.9884  0.9862  0.9742  0.9742  0.9738  0.9210  0.9065  0.8961  0.8961  0.8900  0.8876  0.8731  0.8341  0.8341  0.8227
[17 : 32]:	0.8184  0.8146  0.7959  0.7900  0.7896  0.7896  0.7896  0.7885  0.7880  0.7879  0.7851  0.7845  0.7826  0.7826  0.7822  0.7811
[33 : 48]:	0.7804  0.7783  0.7783  0.7763  0.7680  0.7674  0.7665  0.7649  0.7615  0.7615  0.7582  0.7515  0.7499  0.7460  0.7436  0.7417
[49 : 64]:	0.7403  0.7374  0.7371  0.7348  0.7342  0.7278  0.7265  0.7254  0.7254  0.7247  0.7226  0.7213  0.7202  0.7179  0.7164  0.7091
2024-04-29 08:48:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:48:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #65: GFLOPs: 86.9590. Time: 2660.0057 us. Best GFLOPs: 123.7275
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #66: GFLOPs: 123.5770. Time: 1871.7994 us. Best GFLOPs: 123.7275
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #67: GFLOPs: 131.8705. Time: 1754.0790 us. Best GFLOPs: 131.8705
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #68: GFLOPs: 142.5006. Time: 1623.2306 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #69: GFLOPs: 111.7652. Time: 2069.6192 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #70: GFLOPs: 89.6135. Time: 2581.2101 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #71: GFLOPs: 125.9513. Time: 1836.5136 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #72: GFLOPs: 85.9106. Time: 2692.4665 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #73: GFLOPs: 112.5299. Time: 2055.5554 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #74: GFLOPs: 114.0413. Time: 2028.3120 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #75: GFLOPs: 113.5438. Time: 2037.1999 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #76: GFLOPs: 72.3236. Time: 3198.2821 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #77: GFLOPs: 140.4088. Time: 1647.4137 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #78: GFLOPs: 125.9573. Time: 1836.4265 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #79: GFLOPs: 111.3546. Time: 2077.2507 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #80: GFLOPs: 73.9019. Time: 3129.9804 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #81: GFLOPs: 99.9101. Time: 2315.1944 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #82: GFLOPs: 125.9763. Time: 1836.1492 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #83: GFLOPs: 103.7086. Time: 2230.3978 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #84: GFLOPs: 114.6625. Time: 2017.3231 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #85: GFLOPs: 141.2576. Time: 1637.5150 us. Best GFLOPs: 142.5006
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #86: GFLOPs: 144.6863. Time: 1598.7098 us. Best GFLOPs: 144.6863
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #87: GFLOPs: 101.6989. Time: 2274.4719 us. Best GFLOPs: 144.6863
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #88: GFLOPs: 83.9934. Time: 2753.9228 us. Best GFLOPs: 144.6863
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #89: GFLOPs: 105.3814. Time: 2194.9917 us. Best GFLOPs: 144.6863
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #90: GFLOPs: 80.8346. Time: 2861.5395 us. Best GFLOPs: 144.6863
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #91: GFLOPs: 90.2921. Time: 2561.8105 us. Best GFLOPs: 144.6863
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #92: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(128), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(29), T.int64(29)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(14), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(2) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(14), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(2) + oc_block_1 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[64, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b68)
l81 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l81)
l82 = sch.fuse(l80, preserve_unit_iters=True)
sch.vectorize(loop=l82)
l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l83, preserve_unit_iters=True)
sch.parallel(loop=l105)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b70)
b117 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b117)
b140 = sch.decompose_reduction(block=b117, loop=l124)
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #93: GFLOPs: 66.4934. Time: 3478.7113 us. Best GFLOPs: 144.6863
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #94: GFLOPs: 73.5052. Time: 3146.8714 us. Best GFLOPs: 144.6863
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #95: GFLOPs: 149.3301. Time: 1548.9938 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #96: GFLOPs: 61.7035. Time: 3748.7540 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #97: GFLOPs: 76.6183. Time: 3019.0079 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #98: GFLOPs: 101.0899. Time: 2288.1738 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #99: GFLOPs: 51.1041. Time: 4526.2747 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #100: GFLOPs: 40.9303. Time: 5651.3534 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #101: GFLOPs: 7.9247. Time: 29188.7332 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #102: GFLOPs: 93.4058. Time: 2476.4124 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #103: GFLOPs: 143.5334. Time: 1611.5506 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #104: GFLOPs: 66.7418. Time: 3465.7671 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #105: GFLOPs: 78.4738. Time: 2947.6271 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #106: GFLOPs: 67.2283. Time: 3440.6827 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #107: GFLOPs: 139.5757. Time: 1657.2464 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #108: GFLOPs: 69.1367. Time: 3345.7125 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #109: GFLOPs: 100.4694. Time: 2302.3064 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #110: GFLOPs: 144.4453. Time: 1601.3763 us. Best GFLOPs: 149.3301
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #111: GFLOPs: 157.8715. Time: 1465.1877 us. Best GFLOPs: 157.8715
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #112: GFLOPs: 48.4477. Time: 4774.4568 us. Best GFLOPs: 157.8715
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #113: GFLOPs: 136.7851. Time: 1691.0565 us. Best GFLOPs: 157.8715
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #114: GFLOPs: 115.8947. Time: 1995.8759 us. Best GFLOPs: 157.8715
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #115: GFLOPs: 77.7730. Time: 2974.1852 us. Best GFLOPs: 157.8715
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #116: GFLOPs: 178.4265. Time: 1296.3955 us. Best GFLOPs: 178.4265
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #117: GFLOPs: 207.6604. Time: 1113.8927 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #118: GFLOPs: 192.9618. Time: 1198.7416 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #119: GFLOPs: 26.4113. Time: 8758.0610 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #120: GFLOPs: 122.7203. Time: 1884.8656 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #121: GFLOPs: 166.1735. Time: 1391.9868 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #122: GFLOPs: 6.7226. Time: 34408.2542 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #123: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(3), T.int64(29)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(4) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(4) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(7) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(4) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(1), T.int64(14), T.int64(1)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), ax0)
                    v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(16) + ax1)
                    v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(4) + ax2)
                    v_ax3 = T.axis.spatial(T.int64(14), ax3)
                    v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) + ax4)
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 8, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=9)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b68)
l86 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l86)
l87 = sch.fuse(l85, preserve_unit_iters=True)
sch.vectorize(loop=l87)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l88, preserve_unit_iters=True)
sch.parallel(loop=l105)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b70)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b112)
b130 = sch.decompose_reduction(block=b112, loop=l114)
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #124: GFLOPs: 152.1779. Time: 1520.0058 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #125: GFLOPs: 35.7640. Time: 6467.7079 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #126: GFLOPs: 5.3694. Time: 43079.8770 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #127: GFLOPs: 19.7370. Time: 11719.6968 us. Best GFLOPs: 207.6604
2024-04-29 08:50:03 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #128: GFLOPs: 44.1797. Time: 5235.6878 us. Best GFLOPs: 207.6604
2024-04-29 10:04:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:04:45 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:04:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:04:49 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:05:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:05:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:05:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:05:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:05:36 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9488  0.9488  0.9488  0.9488  0.9488  0.8992  0.8731  0.8731  0.8731  0.8731  0.8731  0.8731  0.8593  0.8527  0.8525  0.8525
[17 : 32]:	0.8505  0.8230  0.8126  0.8085  0.8085  0.8026  0.7787  0.7782  0.7782  0.7782  0.7782  0.7543  0.7479  0.7469  0.7469  0.7469
[33 : 48]:	0.7469  0.7436  0.7390  0.7384  0.7366  0.7366  0.7366  0.7358  0.7358  0.7348  0.7326  0.7326  0.7326  0.7326  0.7326  0.7306
[49 : 64]:	0.7306  0.7231  0.7225  0.7225  0.7194  0.7194  0.7192  0.7170  0.7155  0.7119  0.7067  0.7067  0.7059  0.7035  0.6998  0.6985
2024-04-29 10:05:37 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:05:37 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #129: GFLOPs: 58.5403. Time: 3951.3157 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #130: GFLOPs: 105.9179. Time: 2183.8750 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #131: GFLOPs: 184.1333. Time: 1256.2170 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #132: GFLOPs: 135.0548. Time: 1712.7222 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #133: GFLOPs: 68.6878. Time: 3367.5734 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #134: GFLOPs: 51.2599. Time: 4512.5242 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #135: GFLOPs: 191.8915. Time: 1205.4276 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #136: GFLOPs: 76.9350. Time: 3006.5830 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #137: GFLOPs: 141.8445. Time: 1630.7395 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #138: GFLOPs: 157.1196. Time: 1472.1993 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #139: GFLOPs: 167.5935. Time: 1380.1929 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #140: GFLOPs: 190.9746. Time: 1211.2150 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #141: GFLOPs: 109.9010. Time: 2104.7248 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #142: GFLOPs: 113.0645. Time: 2045.8354 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #143: GFLOPs: 149.8519. Time: 1543.5995 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #144: GFLOPs: 109.1543. Time: 2119.1230 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #145: GFLOPs: 183.7909. Time: 1258.5575 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #146: GFLOPs: 156.2892. Time: 1480.0215 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #147: GFLOPs: 144.6751. Time: 1598.8330 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #148: GFLOPs: 147.9082. Time: 1563.8848 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #149: GFLOPs: 143.7329. Time: 1609.3138 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #150: GFLOPs: 51.0126. Time: 4534.3970 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #151: GFLOPs: 148.5458. Time: 1557.1720 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #152: GFLOPs: 186.0335. Time: 1243.3855 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #153: GFLOPs: 194.5393. Time: 1189.0214 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #154: GFLOPs: 172.9021. Time: 1337.8169 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #155: GFLOPs: 158.5925. Time: 1458.5263 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #156: GFLOPs: 148.0764. Time: 1562.1081 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #157: GFLOPs: 160.8071. Time: 1438.4401 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #158: GFLOPs: 185.9020. Time: 1244.2650 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #159: GFLOPs: 172.1072. Time: 1343.9956 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #160: GFLOPs: 146.6950. Time: 1576.8178 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #161: GFLOPs: 151.3488. Time: 1528.3329 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #162: GFLOPs: 154.5977. Time: 1496.2149 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #163: GFLOPs: 174.9280. Time: 1322.3235 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #164: GFLOPs: 174.6293. Time: 1324.5854 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #165: GFLOPs: 190.0047. Time: 1217.3983 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #166: GFLOPs: 176.0489. Time: 1313.9039 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #167: GFLOPs: 159.5454. Time: 1449.8157 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #168: GFLOPs: 91.4964. Time: 2528.0931 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #169: GFLOPs: 130.5189. Time: 1772.2448 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #170: GFLOPs: 135.2567. Time: 1710.1659 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #171: GFLOPs: 167.1437. Time: 1383.9071 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #172: GFLOPs: 157.9536. Time: 1464.4262 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #173: GFLOPs: 90.2496. Time: 2563.0178 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #174: GFLOPs: 108.8031. Time: 2125.9629 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #175: GFLOPs: 162.4095. Time: 1424.2476 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #176: GFLOPs: 135.3235. Time: 1709.3210 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #177: GFLOPs: 139.6561. Time: 1656.2923 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #178: GFLOPs: 54.8364. Time: 4218.2051 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #179: GFLOPs: 159.4593. Time: 1450.5978 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #180: GFLOPs: 121.5870. Time: 1902.4349 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #181: GFLOPs: 101.4049. Time: 2281.0676 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #182: GFLOPs: 91.6238. Time: 2524.5783 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #183: GFLOPs: 179.6931. Time: 1287.2579 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #184: GFLOPs: 100.1858. Time: 2308.8240 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #185: GFLOPs: 103.2767. Time: 2239.7251 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #186: GFLOPs: 174.4425. Time: 1326.0037 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #187: GFLOPs: 112.4036. Time: 2057.8637 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #188: GFLOPs: 123.6938. Time: 1870.0320 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #189: GFLOPs: 133.5149. Time: 1732.4765 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #190: GFLOPs: 15.8903. Time: 14556.7237 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #191: GFLOPs: 68.6761. Time: 3368.1507 us. Best GFLOPs: 207.6604
2024-04-29 10:06:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #192: GFLOPs: 3.0720. Time: 75297.5743 us. Best GFLOPs: 207.6604
2024-04-29 10:47:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:47:39 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:47:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:47:44 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:47:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:48:05 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:48:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:48:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 10:48:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8857  0.8857  0.8757  0.8757  0.8757  0.8757  0.8652  0.8593  0.8593  0.8593  0.8552  0.8477  0.8477  0.8477  0.8399  0.8399
[17 : 32]:	0.8399  0.8384  0.8199  0.8199  0.8100  0.8077  0.8074  0.8074  0.8064  0.8064  0.8053  0.8053  0.8053  0.8042  0.8042  0.8025
[33 : 48]:	0.7999  0.7999  0.7987  0.7987  0.7963  0.7946  0.7946  0.7932  0.7919  0.7919  0.7919  0.7919  0.7915  0.7862  0.7862  0.7862
[49 : 64]:	0.7862  0.7853  0.7849  0.7849  0.7849  0.7843  0.7830  0.7830  0.7830  0.7830  0.7754  0.7754  0.7740  0.7724  0.7724  0.7724
2024-04-29 10:48:32 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:48:32 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #193: GFLOPs: 129.9082. Time: 1780.5759 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #194: GFLOPs: 174.7999. Time: 1323.2920 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #195: GFLOPs: 195.6013. Time: 1182.5653 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #196: GFLOPs: 195.2935. Time: 1184.4294 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #197: GFLOPs: 184.8791. Time: 1251.1496 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #198: GFLOPs: 188.4985. Time: 1227.1259 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #199: GFLOPs: 175.6692. Time: 1316.7438 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #200: GFLOPs: 149.9558. Time: 1542.5298 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #201: GFLOPs: 196.7595. Time: 1175.6045 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #202: GFLOPs: 187.2667. Time: 1235.1976 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #203: GFLOPs: 171.9378. Time: 1345.3200 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #204: GFLOPs: 153.6854. Time: 1505.0963 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #205: GFLOPs: 199.1028. Time: 1161.7688 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #206: GFLOPs: 144.0486. Time: 1605.7873 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #207: GFLOPs: 129.6404. Time: 1784.2542 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #208: GFLOPs: 179.1071. Time: 1291.4696 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #209: GFLOPs: 157.9212. Time: 1464.7266 us. Best GFLOPs: 207.6604
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #210: GFLOPs: 210.3010. Time: 1099.9059 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #211: GFLOPs: 153.6464. Time: 1505.4786 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #212: GFLOPs: 150.2666. Time: 1539.3398 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #213: GFLOPs: 86.5344. Time: 2673.0573 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #214: GFLOPs: 152.4681. Time: 1517.1133 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #215: GFLOPs: 171.3691. Time: 1349.7849 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #216: GFLOPs: 195.4968. Time: 1183.1977 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #217: GFLOPs: 188.1391. Time: 1229.4697 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #218: GFLOPs: 196.7550. Time: 1175.6316 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #219: GFLOPs: 182.5574. Time: 1267.0610 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #220: GFLOPs: 167.7262. Time: 1379.1012 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #221: GFLOPs: 150.5472. Time: 1536.4708 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #222: GFLOPs: 155.3136. Time: 1489.3186 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #223: GFLOPs: 149.3747. Time: 1548.5308 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #224: GFLOPs: 148.5537. Time: 1557.0892 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #225: GFLOPs: 154.7580. Time: 1494.6652 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #226: GFLOPs: 194.8129. Time: 1187.3513 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #227: GFLOPs: 175.8980. Time: 1315.0312 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #228: GFLOPs: 152.9674. Time: 1512.1616 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #229: GFLOPs: 156.2949. Time: 1479.9672 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #230: GFLOPs: 178.1068. Time: 1298.7224 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #231: GFLOPs: 177.9644. Time: 1299.7618 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #232: GFLOPs: 179.5857. Time: 1288.0276 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #233: GFLOPs: 191.1661. Time: 1210.0019 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #234: GFLOPs: 122.5223. Time: 1887.9130 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #235: GFLOPs: 152.0652. Time: 1521.1329 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #236: GFLOPs: 166.5653. Time: 1388.7125 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #237: GFLOPs: 137.9217. Time: 1677.1205 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #238: GFLOPs: 185.2245. Time: 1248.8161 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #239: GFLOPs: 195.8449. Time: 1181.0948 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #240: GFLOPs: 157.8612. Time: 1465.2831 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #241: GFLOPs: 144.9027. Time: 1596.3223 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #242: GFLOPs: 105.6066. Time: 2190.3110 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #243: GFLOPs: 186.0374. Time: 1243.3598 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #244: GFLOPs: 56.5745. Time: 4088.6160 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #245: GFLOPs: 185.8820. Time: 1244.3987 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #246: GFLOPs: 143.4575. Time: 1612.4034 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #247: GFLOPs: 154.7657. Time: 1494.5906 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #248: GFLOPs: 154.6424. Time: 1495.7823 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #249: GFLOPs: 171.0769. Time: 1352.0900 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #250: GFLOPs: 162.2493. Time: 1425.6540 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #251: GFLOPs: 148.6547. Time: 1556.0316 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #252: GFLOPs: 196.4167. Time: 1177.6563 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #253: GFLOPs: 146.0161. Time: 1584.1495 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #254: GFLOPs: 33.1859. Time: 6970.1610 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #255: GFLOPs: 44.5988. Time: 5186.4885 us. Best GFLOPs: 210.3010
2024-04-29 10:49:57 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #256: GFLOPs: 16.3900. Time: 14112.9897 us. Best GFLOPs: 210.3010
2024-04-29 11:07:13 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 11:07:14 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 11:07:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 11:07:19 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 11:07:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 11:07:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 11:07:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 11:08:02 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 11:08:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9064  0.9030  0.9030  0.9030  0.9030  0.9030  0.9030  0.9030  0.9030  0.9030  0.8918  0.8900  0.8900  0.8900  0.8900  0.8900
[17 : 32]:	0.8843  0.8818  0.8802  0.8791  0.8791  0.8751  0.8689  0.8689  0.8689  0.8689  0.8689  0.8652  0.8631  0.8631  0.8631  0.8606
[33 : 48]:	0.8580  0.8545  0.8545  0.8545  0.8545  0.8545  0.8545  0.8474  0.8474  0.8474  0.8468  0.8468  0.8449  0.8449  0.8436  0.8434
[49 : 64]:	0.8434  0.8434  0.8434  0.8434  0.8386  0.8352  0.8348  0.8320  0.8320  0.8308  0.8291  0.8291  0.8275  0.8250  0.8250  0.8250
2024-04-29 11:08:08 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 11:08:08 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #257: GFLOPs: 71.0156. Time: 3257.1900 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #258: GFLOPs: 158.9812. Time: 1454.9604 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #259: GFLOPs: 164.7958. Time: 1403.6239 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #260: GFLOPs: 173.3926. Time: 1334.0326 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #261: GFLOPs: 165.6942. Time: 1396.0140 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #262: GFLOPs: 177.5375. Time: 1302.8876 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #263: GFLOPs: 103.4799. Time: 2235.3269 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #264: GFLOPs: 194.9756. Time: 1186.3602 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #265: GFLOPs: 182.6188. Time: 1266.6349 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #266: GFLOPs: 187.7177. Time: 1232.2299 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #267: GFLOPs: 152.0449. Time: 1521.3360 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #268: GFLOPs: 162.1306. Time: 1426.6973 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #269: GFLOPs: 186.0188. Time: 1243.4841 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #270: GFLOPs: 195.6490. Time: 1182.2775 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #271: GFLOPs: 187.8441. Time: 1231.4006 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #272: GFLOPs: 162.7657. Time: 1421.1311 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #273: GFLOPs: 161.8934. Time: 1428.7879 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #274: GFLOPs: 150.9914. Time: 1531.9505 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #275: GFLOPs: 103.6016. Time: 2232.7013 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #276: GFLOPs: 185.6886. Time: 1245.6948 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #277: GFLOPs: 161.9471. Time: 1428.3141 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #278: GFLOPs: 148.5913. Time: 1556.6954 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #279: GFLOPs: 163.4881. Time: 1414.8511 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #280: GFLOPs: 190.7045. Time: 1212.9308 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #281: GFLOPs: 157.5592. Time: 1468.0921 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #282: GFLOPs: 178.3448. Time: 1296.9894 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #283: GFLOPs: 161.1132. Time: 1435.7067 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #284: GFLOPs: 167.1968. Time: 1383.4680 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #285: GFLOPs: 130.4368. Time: 1773.3597 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #286: GFLOPs: 129.7775. Time: 1782.3694 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #287: GFLOPs: 132.9943. Time: 1739.2576 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #288: GFLOPs: 178.1123. Time: 1298.6829 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #289: GFLOPs: 178.9687. Time: 1292.4684 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #290: GFLOPs: 176.0632. Time: 1313.7972 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #291: GFLOPs: 153.1354. Time: 1510.5026 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #292: GFLOPs: 148.6142. Time: 1556.4557 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #293: GFLOPs: 164.8585. Time: 1403.0902 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #294: GFLOPs: 146.9387. Time: 1574.2031 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #295: GFLOPs: 191.9722. Time: 1204.9208 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #296: GFLOPs: 140.3781. Time: 1647.7741 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #297: GFLOPs: 192.0608. Time: 1204.3651 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #298: GFLOPs: 185.4925. Time: 1247.0120 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #299: GFLOPs: 153.6196. Time: 1505.7409 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #300: GFLOPs: 173.9605. Time: 1329.6773 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #301: GFLOPs: 181.3413. Time: 1275.5578 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #302: GFLOPs: 159.6413. Time: 1448.9443 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #303: GFLOPs: 166.7390. Time: 1387.2664 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #304: GFLOPs: 159.8068. Time: 1447.4440 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #305: GFLOPs: 149.4070. Time: 1548.1958 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #306: GFLOPs: 196.8547. Time: 1175.0360 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #307: GFLOPs: 147.6445. Time: 1566.6782 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #308: GFLOPs: 201.8262. Time: 1146.0920 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #309: GFLOPs: 100.4768. Time: 2302.1381 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #310: GFLOPs: 158.5215. Time: 1459.1798 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #311: GFLOPs: 119.4107. Time: 1937.1082 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #312: GFLOPs: 202.2555. Time: 1143.6594 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #313: GFLOPs: 174.2642. Time: 1327.3602 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #314: GFLOPs: 128.6482. Time: 1798.0143 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #315: GFLOPs: 191.2546. Time: 1209.4420 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #316: GFLOPs: 171.9269. Time: 1345.4051 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #317: GFLOPs: 177.8771. Time: 1300.3998 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #318: GFLOPs: 62.5007. Time: 3700.9427 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #319: GFLOPs: 14.3111. Time: 16163.0606 us. Best GFLOPs: 210.3010
2024-04-29 11:09:41 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #320: GFLOPs: 12.4746. Time: 18542.6303 us. Best GFLOPs: 210.3010
2024-04-29 12:04:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:04:47 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:04:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:04:52 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 12:05:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:05:13 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:05:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:05:35 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:05:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8657  0.8602  0.8602  0.8602  0.8602  0.8602  0.8580  0.8580  0.8580  0.8580  0.8580  0.8580  0.8580  0.8580  0.8580  0.8580
[17 : 32]:	0.8580  0.8498  0.8498  0.8498  0.8498  0.8498  0.8498  0.8498  0.8498  0.8460  0.8460  0.8364  0.8364  0.8364  0.8364  0.8311
[33 : 48]:	0.8311  0.8311  0.8311  0.8311  0.8263  0.8263  0.8263  0.8263  0.8245  0.8192  0.8192  0.8180  0.8174  0.8164  0.8158  0.8147
[49 : 64]:	0.8147  0.8147  0.8147  0.8147  0.8147  0.8147  0.8137  0.8137  0.8115  0.8108  0.8108  0.8057  0.8057  0.8049  0.8038  0.8038
2024-04-29 12:05:41 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:05:41 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #321: GFLOPs: 195.7123. Time: 1181.8948 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #322: GFLOPs: 158.3133. Time: 1461.0984 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #323: GFLOPs: 164.1652. Time: 1409.0156 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #324: GFLOPs: 189.5397. Time: 1220.3848 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #325: GFLOPs: 182.3604. Time: 1268.4299 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #326: GFLOPs: 158.3725. Time: 1460.5521 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #327: GFLOPs: 186.4059. Time: 1240.9017 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #328: GFLOPs: 193.5284. Time: 1195.2320 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #329: GFLOPs: 197.2117. Time: 1172.9087 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #330: GFLOPs: 185.4441. Time: 1247.3371 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #331: GFLOPs: 104.3660. Time: 2216.3486 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #332: GFLOPs: 196.3903. Time: 1177.8145 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #333: GFLOPs: 162.9860. Time: 1419.2100 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #334: GFLOPs: 194.2291. Time: 1190.9199 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #335: GFLOPs: 84.7687. Time: 2728.7345 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #336: GFLOPs: 139.1722. Time: 1662.0517 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #337: GFLOPs: 156.8754. Time: 1474.4906 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #338: GFLOPs: 169.8797. Time: 1361.6187 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #339: GFLOPs: 191.5195. Time: 1207.7693 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #340: GFLOPs: 190.4499. Time: 1214.5523 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #341: GFLOPs: 173.3854. Time: 1334.0882 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #342: GFLOPs: 187.8647. Time: 1231.2656 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #343: GFLOPs: 177.2123. Time: 1305.2785 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #344: GFLOPs: 164.7337. Time: 1404.1535 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #345: GFLOPs: 155.0516. Time: 1491.8352 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #346: GFLOPs: 170.9528. Time: 1353.0717 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #347: GFLOPs: 169.3359. Time: 1365.9909 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #348: GFLOPs: 160.9557. Time: 1437.1121 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #349: GFLOPs: 156.5465. Time: 1477.5884 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #350: GFLOPs: 153.6590. Time: 1505.3553 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #351: GFLOPs: 181.9846. Time: 1271.0490 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #352: GFLOPs: 192.1685. Time: 1203.6906 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #353: GFLOPs: 123.5960. Time: 1871.5116 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #354: GFLOPs: 182.2244. Time: 1269.3766 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #355: GFLOPs: 163.6722. Time: 1413.2601 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #356: GFLOPs: 164.0864. Time: 1409.6928 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #357: GFLOPs: 194.4355. Time: 1189.6557 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #358: GFLOPs: 160.1654. Time: 1444.2027 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #359: GFLOPs: 198.3282. Time: 1166.3061 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #360: GFLOPs: 187.2198. Time: 1235.5071 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #361: GFLOPs: 162.7893. Time: 1420.9245 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #362: GFLOPs: 157.7531. Time: 1466.2872 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #363: GFLOPs: 197.4199. Time: 1171.6722 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #364: GFLOPs: 191.1225. Time: 1210.2779 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #365: GFLOPs: 129.2398. Time: 1789.7842 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #366: GFLOPs: 136.4727. Time: 1694.9272 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #367: GFLOPs: 177.8861. Time: 1300.3345 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #368: GFLOPs: 161.3443. Time: 1433.6511 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #369: GFLOPs: 187.3802. Time: 1234.4495 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #370: GFLOPs: 157.1510. Time: 1471.9055 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #371: GFLOPs: 177.9934. Time: 1299.5503 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #372: GFLOPs: 164.7348. Time: 1404.1435 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #373: GFLOPs: 159.8613. Time: 1446.9502 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #374: GFLOPs: 186.7513. Time: 1238.6063 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #375: GFLOPs: 150.4617. Time: 1537.3440 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #376: GFLOPs: 200.4586. Time: 1153.9107 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #377: GFLOPs: 166.2851. Time: 1391.0531 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #378: GFLOPs: 161.2126. Time: 1434.8221 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #379: GFLOPs: 98.9585. Time: 2337.4581 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #380: GFLOPs: 168.4784. Time: 1372.9440 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #381: GFLOPs: 168.2022. Time: 1375.1983 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #382: GFLOPs: 12.2216. Time: 18926.3689 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #383: GFLOPs: 10.5744. Time: 21874.7238 us. Best GFLOPs: 210.3010
2024-04-29 12:07:11 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #384: GFLOPs: 46.6640. Time: 4956.9589 us. Best GFLOPs: 210.3010
2024-04-29 12:54:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:54:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:54:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:54:21 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 12:54:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:54:42 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:54:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:55:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a7ea48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x17e870e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11d05a78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x30c3098)]: 0 failure(s)
2024-04-29 12:55:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8967  0.8967  0.8967  0.8796  0.8796  0.8796  0.8734  0.8734  0.8734  0.8734  0.8734  0.8673  0.8673  0.8475  0.8475  0.8433
[17 : 32]:	0.8405  0.8405  0.8397  0.8392  0.8392  0.8392  0.8392  0.8392  0.8392  0.8392  0.8392  0.8392  0.8360  0.8360  0.8360  0.8360
[33 : 48]:	0.8360  0.8316  0.8312  0.8296  0.8296  0.8296  0.8282  0.8282  0.8253  0.8245  0.8196  0.8180  0.8180  0.8159  0.8159  0.8159
[49 : 64]:	0.8159  0.8159  0.8159  0.8159  0.8159  0.8159  0.8159  0.8156  0.8144  0.8144  0.8135  0.8133  0.8122  0.8122  0.8104  0.8104
2024-04-29 12:55:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:55:09 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #385: GFLOPs: 180.2158. Time: 1283.5242 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #386: GFLOPs: 167.0470. Time: 1384.7083 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #387: GFLOPs: 163.6096. Time: 1413.8008 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #388: GFLOPs: 184.5372. Time: 1253.4676 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #389: GFLOPs: 178.3228. Time: 1297.1498 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #390: GFLOPs: 175.9087. Time: 1314.9515 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #391: GFLOPs: 190.6031. Time: 1213.5763 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #392: GFLOPs: 168.5851. Time: 1372.0749 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #393: GFLOPs: 165.9528. Time: 1393.8379 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #394: GFLOPs: 207.7456. Time: 1113.4356 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #395: GFLOPs: 151.0425. Time: 1531.4323 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #396: GFLOPs: 206.9033. Time: 1117.9687 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #397: GFLOPs: 106.0330. Time: 2181.5035 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #398: GFLOPs: 163.0933. Time: 1418.2765 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #399: GFLOPs: 181.7856. Time: 1272.4408 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #400: GFLOPs: 173.5334. Time: 1332.9501 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #401: GFLOPs: 207.0876. Time: 1116.9737 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #402: GFLOPs: 205.2533. Time: 1126.9555 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #403: GFLOPs: 109.7661. Time: 2107.3105 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #404: GFLOPs: 176.9703. Time: 1307.0629 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #405: GFLOPs: 195.0137. Time: 1186.1285 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #406: GFLOPs: 105.0432. Time: 2202.0585 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #407: GFLOPs: 152.4206. Time: 1517.5856 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #408: GFLOPs: 181.8594. Time: 1271.9244 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #409: GFLOPs: 159.7745. Time: 1447.7365 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #410: GFLOPs: 70.9912. Time: 3258.3085 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #411: GFLOPs: 171.5456. Time: 1348.3959 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #412: GFLOPs: 184.9631. Time: 1250.5810 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #413: GFLOPs: 128.1885. Time: 1804.4621 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #414: GFLOPs: 134.9686. Time: 1713.8164 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #415: GFLOPs: 185.4133. Time: 1247.5446 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #416: GFLOPs: 129.4583. Time: 1786.7634 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #417: GFLOPs: 163.6800. Time: 1413.1927 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #418: GFLOPs: 182.8136. Time: 1265.2851 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #419: GFLOPs: 178.1848. Time: 1298.1546 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #420: GFLOPs: 145.4867. Time: 1589.9145 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #421: GFLOPs: 178.9869. Time: 1292.3368 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #422: GFLOPs: 178.5564. Time: 1295.4524 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #423: GFLOPs: 146.3999. Time: 1579.9963 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #424: GFLOPs: 168.5798. Time: 1372.1178 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #425: GFLOPs: 161.2805. Time: 1434.2180 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #426: GFLOPs: 177.9365. Time: 1299.9657 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #427: GFLOPs: 177.9523. Time: 1299.8505 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #428: GFLOPs: 158.1290. Time: 1462.8018 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #429: GFLOPs: 158.8405. Time: 1456.2496 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #430: GFLOPs: 191.3685. Time: 1208.7219 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #431: GFLOPs: 164.1529. Time: 1409.1212 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #432: GFLOPs: 187.1558. Time: 1235.9295 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #433: GFLOPs: 160.0939. Time: 1444.8482 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #434: GFLOPs: 188.8089. Time: 1225.1081 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #435: GFLOPs: 159.7161. Time: 1448.2658 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #436: GFLOPs: 177.5724. Time: 1302.6312 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #437: GFLOPs: 192.5882. Time: 1201.0670 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #438: GFLOPs: 139.1226. Time: 1662.6439 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #439: GFLOPs: 187.2538. Time: 1235.2828 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:121] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #440: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(64), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(5), T.int64(29)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(32) * T.int64(4) + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(16) * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(32) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(7) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(32) // T.int64(16) * T.int64(2) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(16) * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(32) * T.int64(2) + oh_1 * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(32) // T.int64(16) * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(14), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(16) * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(32) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(32) // T.int64(16) * T.int64(2) + oc_block_1 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 16, 2, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=6)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b68)
l83 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84 = sch.fuse(l82, preserve_unit_iters=True)
sch.vectorize(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l105)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b115)
b136 = sch.decompose_reduction(block=b115, loop=l120)
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #441: GFLOPs: 144.6169. Time: 1599.4772 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #442: GFLOPs: 145.2192. Time: 1592.8428 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #443: GFLOPs: 188.9289. Time: 1224.3305 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #444: GFLOPs: 200.3915. Time: 1154.2970 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #445: GFLOPs: 161.3796. Time: 1433.3367 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #446: GFLOPs: 108.9256. Time: 2123.5725 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #447: GFLOPs: 4.2129. Time: 54904.9547 us. Best GFLOPs: 210.3010
2024-04-29 12:56:49 [INFO] [task_scheduler.cc:131] [Task #29: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_9] Trial #448: GFLOPs: 14.3836. Time: 16081.6457 us. Best GFLOPs: 210.3010
