2024-04-29 07:26:58 [INFO] [task_scheduler.cc:160] Initializing Task #32: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10"
2024-04-29 07:26:58 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64), T.int64(1024), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 07:26:58 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 07:26:58 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 2, 2, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1024, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 07:26:58 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 2, 2, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1024, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 07:26:58 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(16) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 2, 2, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1024, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 07:59:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:59:31 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 07:59:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 07:59:34 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 07:59:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 07:59:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 07:59:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 07:59:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 07:59:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9990  0.9988  0.9984  0.9981  0.9972  0.9956  0.9947  0.9943  0.9927  0.9914  0.9909  0.9900  0.9886  0.9875  0.9874  0.9872
[17 : 32]:	0.9871  0.9868  0.9867  0.9864  0.9859  0.9848  0.9820  0.9817  0.9811  0.9811  0.9806  0.9800  0.9792  0.9791  0.9789  0.9784
[33 : 48]:	0.9784  0.9774  0.9770  0.9763  0.9763  0.9757  0.9749  0.9745  0.9744  0.9736  0.9733  0.9731  0.9730  0.9727  0.9724  0.9724
[49 : 64]:	0.9720  0.9713  0.9710  0.9705  0.9699  0.9695  0.9686  0.9675  0.9675  0.9674  0.9669  0.9653  0.9648  0.9646  0.9643  0.9641
2024-04-29 07:59:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:59:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #1: GFLOPs: 4.9025. Time: 20981.2356 us. Best GFLOPs: 4.9025
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #2: GFLOPs: 108.5573. Time: 947.5254 us. Best GFLOPs: 108.5573
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #3: GFLOPs: 29.2164. Time: 3520.6476 us. Best GFLOPs: 108.5573
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #4: GFLOPs: 66.5634. Time: 1545.3057 us. Best GFLOPs: 108.5573
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #5: GFLOPs: 1.2092. Time: 85062.5537 us. Best GFLOPs: 108.5573
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #6: GFLOPs: 9.7292. Time: 10572.4212 us. Best GFLOPs: 108.5573
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #7: GFLOPs: 176.2479. Time: 583.6142 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #8: GFLOPs: 100.8497. Time: 1019.9419 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #9: GFLOPs: 55.4855. Time: 1853.8322 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #10: GFLOPs: 42.5745. Time: 2416.0206 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #11: GFLOPs: 0.6372. Time: 161425.1733 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #12: GFLOPs: 19.8055. Time: 5193.5361 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #13: GFLOPs: 115.0700. Time: 893.8975 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #14: GFLOPs: 15.0029. Time: 6856.0690 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #15: GFLOPs: 24.0862. Time: 4270.5197 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #16: GFLOPs: 2.4849. Time: 41394.8103 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #17: GFLOPs: 34.1598. Time: 3011.1645 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #18: GFLOPs: 16.1355. Time: 6374.7963 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #19: GFLOPs: 11.0757. Time: 9287.0637 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #20: GFLOPs: 3.7233. Time: 27626.0877 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #21: GFLOPs: 59.7716. Time: 1720.8978 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #22: GFLOPs: 55.9776. Time: 1837.5341 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #23: GFLOPs: 15.7040. Time: 6549.9767 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #24: GFLOPs: 111.5344. Time: 922.2337 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #25: GFLOPs: 60.7309. Time: 1693.7136 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #26: GFLOPs: 32.2441. Time: 3190.0653 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #27: GFLOPs: 1.6308. Time: 63074.7380 us. Best GFLOPs: 176.2479
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #28: GFLOPs: 227.7333. Time: 451.6722 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #29: GFLOPs: 65.1723. Time: 1578.2891 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #30: GFLOPs: 99.6244. Time: 1032.4858 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #31: GFLOPs: 69.4101. Time: 1481.9277 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #32: GFLOPs: 218.1097. Time: 471.6011 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #33: GFLOPs: 1.7037. Time: 60374.0617 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #34: GFLOPs: 34.6994. Time: 2964.3356 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #35: GFLOPs: 113.1540. Time: 909.0335 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #36: GFLOPs: 113.0003. Time: 910.2705 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #37: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(14), T.int64(14)):
                for oc_block_3_fused_init in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(14) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(32) + oc_block_2_init * T.int64(16) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(14)):
                for oc_block_3_fused in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(32) + oc_block_2 * T.int64(16) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(784)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(12544))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(12544) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(64))
                    v_ax4 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(64))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 16])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #38: GFLOPs: 60.2110. Time: 1708.3384 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #39: GFLOPs: 89.7462. Time: 1146.1300 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #40: GFLOPs: 27.5841. Time: 3728.9894 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #41: GFLOPs: 109.0702. Time: 943.0693 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #42: GFLOPs: 99.8484. Time: 1030.1695 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #43: GFLOPs: 142.3444. Time: 722.6191 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #44: GFLOPs: 60.4834. Time: 1700.6440 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #45: GFLOPs: 156.0801. Time: 659.0258 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #46: GFLOPs: 138.8483. Time: 740.8144 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #47: GFLOPs: 157.9044. Time: 651.4118 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #48: GFLOPs: 11.3904. Time: 9030.5140 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #49: GFLOPs: 0.7175. Time: 143352.7633 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #50: GFLOPs: 27.1520. Time: 3788.3367 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #51: GFLOPs: 110.3560. Time: 932.0816 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #52: GFLOPs: 165.7999. Time: 620.3911 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #53: GFLOPs: 13.8818. Time: 7409.7500 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #54: GFLOPs: 19.8446. Time: 5183.3030 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #55: GFLOPs: 0.6713. Time: 153227.4550 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #56: GFLOPs: 67.2549. Time: 1529.4167 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #57: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(98), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(32)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init * T.int64(32) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(32)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 * T.int64(32) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(784)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(12544))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(12544) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(64))
                    v_ax4 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(64))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 32])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #58: GFLOPs: 23.5755. Time: 4363.0378 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #59: GFLOPs: 0.3630. Time: 283390.6007 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #60: GFLOPs: 8.1497. Time: 12621.4767 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #61: GFLOPs: 89.4717. Time: 1149.6464 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #62: GFLOPs: 51.3234. Time: 2004.1704 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #63: GFLOPs: 0.9470. Time: 108619.8723 us. Best GFLOPs: 227.7333
2024-04-29 08:21:12 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #64: GFLOPs: 141.6167. Time: 726.3324 us. Best GFLOPs: 227.7333
2024-04-29 08:25:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:25:02 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 08:25:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:25:04 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-29 08:25:10 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:25:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:25:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:25:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:25:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8517  0.8328  0.8155  0.8008  0.7986  0.7864  0.7646  0.7627  0.7611  0.7593  0.7558  0.7544  0.7471  0.7441  0.7434  0.7399
[17 : 32]:	0.7332  0.7327  0.7310  0.7259  0.7258  0.7223  0.7223  0.7220  0.7170  0.7164  0.7126  0.7116  0.7057  0.7036  0.7009  0.6971
[33 : 48]:	0.6957  0.6939  0.6928  0.6873  0.6873  0.6873  0.6831  0.6831  0.6826  0.6826  0.6817  0.6802  0.6796  0.6795  0.6795  0.6795
[49 : 64]:	0.6795  0.6782  0.6772  0.6772  0.6770  0.6768  0.6760  0.6752  0.6752  0.6743  0.6731  0.6719  0.6715  0.6710  0.6709  0.6707
2024-04-29 08:25:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:25:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #65: GFLOPs: 91.3073. Time: 1126.5343 us. Best GFLOPs: 227.7333
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #66: GFLOPs: 87.7997. Time: 1171.5398 us. Best GFLOPs: 227.7333
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #67: GFLOPs: 564.4495. Time: 182.2321 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #68: GFLOPs: 488.3864. Time: 210.6136 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #69: GFLOPs: 480.8631. Time: 213.9087 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #70: GFLOPs: 178.8569. Time: 575.1011 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #71: GFLOPs: 385.8707. Time: 266.5681 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #72: GFLOPs: 127.1450. Time: 809.0042 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #73: GFLOPs: 191.2472. Time: 537.8421 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #74: GFLOPs: 139.5772. Time: 736.9458 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #75: GFLOPs: 128.5395. Time: 800.2271 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #76: GFLOPs: 179.1159. Time: 574.2694 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #77: GFLOPs: 149.3429. Time: 688.7558 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #78: GFLOPs: 152.4273. Time: 674.8189 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #79: GFLOPs: 119.3061. Time: 862.1590 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #80: GFLOPs: 186.2305. Time: 552.3306 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #81: GFLOPs: 188.9027. Time: 544.5173 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #82: GFLOPs: 363.9697. Time: 282.6081 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #83: GFLOPs: 183.9344. Time: 559.2256 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #84: GFLOPs: 158.8520. Time: 647.5262 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #85: GFLOPs: 115.4340. Time: 891.0792 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #86: GFLOPs: 73.1283. Time: 1406.5807 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #87: GFLOPs: 73.0976. Time: 1407.1702 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #88: GFLOPs: 154.8430. Time: 664.2909 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #89: GFLOPs: 177.4035. Time: 579.8126 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #90: GFLOPs: 109.5823. Time: 938.6622 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #91: GFLOPs: 56.3096. Time: 1826.7017 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #92: GFLOPs: 120.2770. Time: 855.1991 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #93: GFLOPs: 114.3144. Time: 899.8065 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #94: GFLOPs: 153.9379. Time: 668.1967 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #95: GFLOPs: 197.1362. Time: 521.7752 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #96: GFLOPs: 361.5346. Time: 284.5116 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #97: GFLOPs: 124.4772. Time: 826.3426 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #98: GFLOPs: 100.0308. Time: 1028.2908 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #99: GFLOPs: 213.2763. Time: 482.2889 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #100: GFLOPs: 139.5305. Time: 737.1922 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #101: GFLOPs: 160.9310. Time: 639.1609 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #102: GFLOPs: 155.9399. Time: 659.6183 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #103: GFLOPs: 109.0926. Time: 942.8764 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #104: GFLOPs: 133.2220. Time: 772.1009 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #105: GFLOPs: 218.2255. Time: 471.3509 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #106: GFLOPs: 108.8232. Time: 945.2100 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #107: GFLOPs: 70.4480. Time: 1460.0952 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #108: GFLOPs: 108.5547. Time: 947.5480 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #109: GFLOPs: 214.4287. Time: 479.6969 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #110: GFLOPs: 153.9618. Time: 668.0929 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #111: GFLOPs: 199.5703. Time: 515.4114 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #112: GFLOPs: 217.9426. Time: 471.9628 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #113: GFLOPs: 210.5098. Time: 488.6272 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #114: GFLOPs: 443.6177. Time: 231.8681 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #115: GFLOPs: 138.1338. Time: 744.6464 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #116: GFLOPs: 136.9855. Time: 750.8883 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #117: GFLOPs: 153.0177. Time: 672.2153 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #118: GFLOPs: 67.0102. Time: 1535.0026 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #119: GFLOPs: 218.3928. Time: 470.9898 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #120: GFLOPs: 199.2323. Time: 516.2856 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #121: GFLOPs: 198.9002. Time: 517.1477 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #122: GFLOPs: 170.6693. Time: 602.6908 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #123: GFLOPs: 80.9679. Time: 1270.3893 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #124: GFLOPs: 206.0698. Time: 499.1552 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #125: GFLOPs: 18.8495. Time: 5456.9477 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #126: GFLOPs: 225.9452. Time: 455.2467 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #127: GFLOPs: 181.3045. Time: 567.3373 us. Best GFLOPs: 564.4495
2024-04-29 08:26:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #128: GFLOPs: 55.9106. Time: 1839.7362 us. Best GFLOPs: 564.4495
2024-04-29 08:46:11 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:46:12 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 08:46:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:46:14 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 08:46:19 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:46:25 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:46:30 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:46:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 08:46:39 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9269  0.9227  0.8991  0.8969  0.8940  0.8898  0.8898  0.8808  0.8808  0.8800  0.8753  0.8687  0.8658  0.8652  0.8620  0.8620
[17 : 32]:	0.8613  0.8613  0.8612  0.8612  0.8612  0.8590  0.8577  0.8525  0.8502  0.8502  0.8376  0.8373  0.8373  0.8342  0.8326  0.8301
[33 : 48]:	0.8301  0.8290  0.8233  0.8224  0.8103  0.8067  0.8067  0.8067  0.8056  0.8055  0.8029  0.8021  0.7995  0.7992  0.7930  0.7929
[49 : 64]:	0.7879  0.7866  0.7819  0.7818  0.7816  0.7804  0.7796  0.7708  0.7708  0.7702  0.7668  0.7668  0.7614  0.7603  0.7598  0.7514
2024-04-29 08:46:39 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:46:39 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #129: GFLOPs: 203.8684. Time: 504.5451 us. Best GFLOPs: 564.4495
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #130: GFLOPs: 217.4836. Time: 472.9588 us. Best GFLOPs: 564.4495
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #131: GFLOPs: 563.2497. Time: 182.6202 us. Best GFLOPs: 564.4495
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #132: GFLOPs: 646.8150. Time: 159.0266 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #133: GFLOPs: 161.4995. Time: 636.9109 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #134: GFLOPs: 228.5302. Time: 450.0972 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #135: GFLOPs: 267.9272. Time: 383.9132 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #136: GFLOPs: 573.2198. Time: 179.4439 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #137: GFLOPs: 574.2204. Time: 179.1312 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #138: GFLOPs: 181.8362. Time: 565.6785 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #139: GFLOPs: 261.9708. Time: 392.6422 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #140: GFLOPs: 159.2956. Time: 645.7229 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #141: GFLOPs: 646.0175. Time: 159.2229 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #142: GFLOPs: 198.4722. Time: 518.2630 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #143: GFLOPs: 444.1485. Time: 231.5910 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #144: GFLOPs: 485.8371. Time: 211.7187 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #145: GFLOPs: 149.0343. Time: 690.1822 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #146: GFLOPs: 147.8085. Time: 695.9060 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #147: GFLOPs: 279.2833. Time: 368.3028 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #148: GFLOPs: 278.9259. Time: 368.7746 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #149: GFLOPs: 279.3042. Time: 368.2752 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #150: GFLOPs: 173.0824. Time: 594.2879 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #151: GFLOPs: 244.3283. Time: 420.9941 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #152: GFLOPs: 154.8372. Time: 664.3156 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #153: GFLOPs: 250.7986. Time: 410.1331 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #154: GFLOPs: 249.9022. Time: 411.6042 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #155: GFLOPs: 200.6128. Time: 512.7329 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #156: GFLOPs: 581.1208. Time: 177.0042 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #157: GFLOPs: 572.1873. Time: 179.7677 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #158: GFLOPs: 148.6195. Time: 692.1084 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #159: GFLOPs: 269.8823. Time: 381.1321 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #160: GFLOPs: 485.8077. Time: 211.7315 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #161: GFLOPs: 416.0186. Time: 247.2505 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #162: GFLOPs: 149.0912. Time: 689.9187 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #163: GFLOPs: 162.1871. Time: 634.2108 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #164: GFLOPs: 497.7107. Time: 206.6678 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #165: GFLOPs: 242.7269. Time: 423.7717 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #166: GFLOPs: 192.1527. Time: 535.3075 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #167: GFLOPs: 196.5675. Time: 523.2849 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #168: GFLOPs: 194.6765. Time: 528.3679 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #169: GFLOPs: 273.8292. Time: 375.6386 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #170: GFLOPs: 505.4433. Time: 203.5061 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #171: GFLOPs: 160.2231. Time: 641.9847 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #172: GFLOPs: 350.0372. Time: 293.8568 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #173: GFLOPs: 146.2422. Time: 703.3594 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #174: GFLOPs: 607.2728. Time: 169.3815 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #175: GFLOPs: 169.7579. Time: 605.9264 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #176: GFLOPs: 242.2087. Time: 424.6784 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #177: GFLOPs: 237.3534. Time: 433.3655 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #178: GFLOPs: 161.4955. Time: 636.9269 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #179: GFLOPs: 160.0312. Time: 642.7547 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #180: GFLOPs: 166.9961. Time: 615.9471 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #181: GFLOPs: 230.7466. Time: 445.7739 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #182: GFLOPs: 167.0316. Time: 615.8165 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #183: GFLOPs: 239.8640. Time: 428.8297 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #184: GFLOPs: 167.5475. Time: 613.9201 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #185: GFLOPs: 142.3231. Time: 722.7275 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #186: GFLOPs: 436.8149. Time: 235.4792 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #187: GFLOPs: 152.6869. Time: 673.6712 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #188: GFLOPs: 111.3867. Time: 923.4566 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #189: GFLOPs: 152.4821. Time: 674.5762 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #190: GFLOPs: 10.1171. Time: 10167.0228 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #191: GFLOPs: 92.1221. Time: 1116.5703 us. Best GFLOPs: 646.8150
2024-04-29 08:47:43 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #192: GFLOPs: 182.3328. Time: 564.1376 us. Best GFLOPs: 646.8150
2024-04-29 09:12:10 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:12:11 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:12:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:12:13 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:12:18 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:12:23 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:12:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:12:34 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:12:37 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9152  0.9134  0.9021  0.8890  0.8861  0.8801  0.8801  0.8781  0.8763  0.8763  0.8710  0.8394  0.8394  0.8376  0.8230  0.8230
[17 : 32]:	0.8161  0.8137  0.8005  0.8005  0.8005  0.7973  0.7853  0.7716  0.7716  0.7527  0.7527  0.7496  0.7496  0.7471  0.7471  0.7345
[33 : 48]:	0.7343  0.7343  0.7337  0.7330  0.7330  0.7251  0.7187  0.7180  0.7168  0.7168  0.7168  0.7125  0.7125  0.7125  0.7093  0.7070
[49 : 64]:	0.6982  0.6982  0.6907  0.6693  0.6611  0.6611  0.6591  0.6586  0.6577  0.6572  0.6521  0.6481  0.6478  0.6406  0.6357  0.6344
2024-04-29 09:12:38 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:12:38 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #193: GFLOPs: 604.6551. Time: 170.1148 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #194: GFLOPs: 604.3043. Time: 170.2136 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #195: GFLOPs: 642.8856. Time: 159.9986 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #196: GFLOPs: 521.9250. Time: 197.0797 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #197: GFLOPs: 187.3078. Time: 549.1537 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #198: GFLOPs: 318.3504. Time: 323.1056 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #199: GFLOPs: 232.1420. Time: 443.0942 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #200: GFLOPs: 252.6403. Time: 407.1432 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #201: GFLOPs: 253.9948. Time: 404.9721 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #202: GFLOPs: 188.2274. Time: 546.4710 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #203: GFLOPs: 570.7872. Time: 180.2087 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #204: GFLOPs: 582.4282. Time: 176.6068 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #205: GFLOPs: 579.0719. Time: 177.6305 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #206: GFLOPs: 544.0406. Time: 189.0683 us. Best GFLOPs: 646.8150
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #207: GFLOPs: 652.3703. Time: 157.6724 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #208: GFLOPs: 641.5688. Time: 160.3270 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #209: GFLOPs: 192.9798. Time: 533.0132 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #210: GFLOPs: 181.9997. Time: 565.1703 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #211: GFLOPs: 604.7661. Time: 170.0836 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #212: GFLOPs: 590.3122. Time: 174.2481 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #213: GFLOPs: 590.5420. Time: 174.1803 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #214: GFLOPs: 232.3056. Time: 442.7823 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #215: GFLOPs: 151.7650. Time: 677.7635 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #216: GFLOPs: 251.5509. Time: 408.9065 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #217: GFLOPs: 249.1034. Time: 412.9241 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #218: GFLOPs: 606.2431. Time: 169.6692 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #219: GFLOPs: 606.3072. Time: 169.6513 us. Best GFLOPs: 652.3703
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #220: GFLOPs: 654.6902. Time: 157.1137 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #221: GFLOPs: 652.9866. Time: 157.5236 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #222: GFLOPs: 604.7099. Time: 170.0994 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #223: GFLOPs: 599.7034. Time: 171.5195 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #224: GFLOPs: 200.4408. Time: 513.1730 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #225: GFLOPs: 234.6308. Time: 438.3942 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #226: GFLOPs: 235.1424. Time: 437.4404 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #227: GFLOPs: 522.0652. Time: 197.0267 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #228: GFLOPs: 486.5173. Time: 211.4227 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #229: GFLOPs: 489.9711. Time: 209.9324 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #230: GFLOPs: 566.5510. Time: 181.5561 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #231: GFLOPs: 478.2214. Time: 215.0903 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #232: GFLOPs: 549.9820. Time: 187.0258 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #233: GFLOPs: 489.6994. Time: 210.0489 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #234: GFLOPs: 487.7337. Time: 210.8954 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #235: GFLOPs: 487.9042. Time: 210.8217 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #236: GFLOPs: 546.8692. Time: 188.0903 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #237: GFLOPs: 403.4433. Time: 254.9573 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #238: GFLOPs: 548.0816. Time: 187.6743 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #239: GFLOPs: 207.0909. Time: 496.6940 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #240: GFLOPs: 426.9298. Time: 240.9314 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #241: GFLOPs: 233.6963. Time: 440.1472 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #242: GFLOPs: 232.2677. Time: 442.8544 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #243: GFLOPs: 133.6560. Time: 769.5936 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #244: GFLOPs: 549.3227. Time: 187.2502 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #245: GFLOPs: 195.2093. Time: 526.9258 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #246: GFLOPs: 214.1005. Time: 480.4323 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #247: GFLOPs: 136.6386. Time: 752.7944 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #248: GFLOPs: 206.2000. Time: 498.8399 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #249: GFLOPs: 159.3924. Time: 645.3305 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #250: GFLOPs: 137.2451. Time: 749.4679 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #251: GFLOPs: 396.3237. Time: 259.5374 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #252: GFLOPs: 439.8953. Time: 233.8302 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #253: GFLOPs: 402.1351. Time: 255.7867 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #254: GFLOPs: 21.6270. Time: 4756.1362 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #255: GFLOPs: 77.2546. Time: 1331.4516 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #256: GFLOPs: 119.4121. Time: 861.3934 us. Best GFLOPs: 654.6902
2024-04-29 09:13:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:13:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:13:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:13:48 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:13:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:13:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:14:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:14:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:14:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9585  0.9585  0.9577  0.9399  0.9181  0.9181  0.9181  0.9181  0.9161  0.9054  0.9054  0.9054  0.9054  0.9041  0.9028  0.9000
[17 : 32]:	0.9000  0.9000  0.8714  0.8562  0.8431  0.8431  0.8303  0.8253  0.8253  0.8243  0.8149  0.8149  0.8149  0.8149  0.7997  0.7997
[33 : 48]:	0.7779  0.7747  0.7747  0.7514  0.7393  0.7392  0.7389  0.7318  0.7292  0.7250  0.7168  0.7167  0.7164  0.7164  0.7157  0.7140
[49 : 64]:	0.7127  0.7073  0.7073  0.7073  0.7043  0.7043  0.6917  0.6849  0.6849  0.6842  0.6831  0.6753  0.6753  0.6753  0.6703  0.6633
2024-04-29 09:14:13 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:14:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #257: GFLOPs: 648.6672. Time: 158.5725 us. Best GFLOPs: 654.6902
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #258: GFLOPs: 652.7268. Time: 157.5863 us. Best GFLOPs: 654.6902
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #259: GFLOPs: 657.5467. Time: 156.4312 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #260: GFLOPs: 625.4653. Time: 164.4548 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #261: GFLOPs: 604.5948. Time: 170.1318 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #262: GFLOPs: 599.5438. Time: 171.5651 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #263: GFLOPs: 604.7508. Time: 170.0879 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #264: GFLOPs: 599.5789. Time: 171.5551 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #265: GFLOPs: 608.6686. Time: 168.9931 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #266: GFLOPs: 598.2930. Time: 171.9238 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #267: GFLOPs: 602.0895. Time: 170.8397 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #268: GFLOPs: 606.5226. Time: 169.5910 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #269: GFLOPs: 606.5047. Time: 169.5960 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #270: GFLOPs: 604.3654. Time: 170.1964 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #271: GFLOPs: 597.2072. Time: 172.2364 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #272: GFLOPs: 604.7408. Time: 170.0907 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #273: GFLOPs: 604.8093. Time: 170.0715 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #274: GFLOPs: 590.8185. Time: 174.0988 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #275: GFLOPs: 643.8073. Time: 159.7695 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #276: GFLOPs: 422.5375. Time: 243.4359 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #277: GFLOPs: 549.2885. Time: 187.2619 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #278: GFLOPs: 547.9156. Time: 187.7311 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #279: GFLOPs: 565.3545. Time: 181.9404 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #280: GFLOPs: 548.1409. Time: 187.6540 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #281: GFLOPs: 548.2326. Time: 187.6226 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #282: GFLOPs: 577.1532. Time: 178.2209 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #283: GFLOPs: 424.9873. Time: 242.0326 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #284: GFLOPs: 423.3378. Time: 242.9757 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #285: GFLOPs: 429.7697. Time: 239.3394 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #286: GFLOPs: 420.9957. Time: 244.3274 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #287: GFLOPs: 494.3744. Time: 208.0626 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #288: GFLOPs: 490.1641. Time: 209.8497 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #289: GFLOPs: 407.8607. Time: 252.1959 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #290: GFLOPs: 546.0349. Time: 188.3777 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #291: GFLOPs: 431.5209. Time: 238.3681 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #292: GFLOPs: 219.6860. Time: 468.2173 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #293: GFLOPs: 128.5678. Time: 800.0509 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #294: GFLOPs: 307.9826. Time: 333.9825 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #295: GFLOPs: 199.1837. Time: 516.4118 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #296: GFLOPs: 487.2722. Time: 211.0952 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #297: GFLOPs: 281.5738. Time: 365.3067 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #298: GFLOPs: 353.6642. Time: 290.8432 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #299: GFLOPs: 562.8125. Time: 182.7621 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #300: GFLOPs: 282.6092. Time: 363.9683 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #301: GFLOPs: 240.1574. Time: 428.3057 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #302: GFLOPs: 240.6711. Time: 427.3915 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #303: GFLOPs: 251.5410. Time: 408.9226 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #304: GFLOPs: 485.6518. Time: 211.7995 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #305: GFLOPs: 481.4879. Time: 213.6311 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #306: GFLOPs: 422.0954. Time: 243.6909 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #307: GFLOPs: 217.4164. Time: 473.1052 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #308: GFLOPs: 420.9681. Time: 244.3435 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #309: GFLOPs: 281.5752. Time: 365.3050 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #310: GFLOPs: 283.5133. Time: 362.8077 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #311: GFLOPs: 137.0655. Time: 750.4502 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #312: GFLOPs: 320.2707. Time: 321.1683 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #313: GFLOPs: 231.7271. Time: 443.8877 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #314: GFLOPs: 408.9421. Time: 251.5290 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #315: GFLOPs: 166.9318. Time: 616.1844 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #316: GFLOPs: 159.3495. Time: 645.5043 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #317: GFLOPs: 158.8867. Time: 647.3846 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #318: GFLOPs: 88.0271. Time: 1168.5133 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #319: GFLOPs: 105.0734. Time: 978.9421 us. Best GFLOPs: 657.5467
2024-04-29 09:15:31 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #320: GFLOPs: 182.2145. Time: 564.5038 us. Best GFLOPs: 657.5467
2024-04-29 09:41:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:41:33 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:41:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:41:35 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:41:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:41:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:41:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:41:57 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:42:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9712  0.9712  0.9712  0.9683  0.9319  0.9280  0.9231  0.9209  0.9202  0.9202  0.9177  0.9177  0.9076  0.9051  0.8408  0.8382
[17 : 32]:	0.8382  0.8382  0.8382  0.8373  0.8286  0.8286  0.8286  0.8282  0.8282  0.8257  0.8247  0.8161  0.7790  0.7667  0.7612  0.7508
[33 : 48]:	0.7301  0.7286  0.7187  0.7176  0.7002  0.6917  0.6737  0.6725  0.6688  0.6686  0.6680  0.6577  0.6577  0.6546  0.6542  0.6542
[49 : 64]:	0.6542  0.6438  0.6436  0.6419  0.6416  0.6416  0.6415  0.6415  0.6391  0.6366  0.6344  0.6344  0.6338  0.6338  0.6322  0.6320
2024-04-29 09:42:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:42:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #321: GFLOPs: 322.8653. Time: 318.5873 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #322: GFLOPs: 642.3494. Time: 160.1322 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #323: GFLOPs: 651.6264. Time: 157.8524 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #324: GFLOPs: 651.5986. Time: 157.8591 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #325: GFLOPs: 644.6477. Time: 159.5613 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #326: GFLOPs: 370.3340. Time: 277.7514 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #327: GFLOPs: 599.4895. Time: 171.5807 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #328: GFLOPs: 600.0287. Time: 171.4265 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #329: GFLOPs: 608.7197. Time: 168.9789 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #330: GFLOPs: 612.3755. Time: 167.9701 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #331: GFLOPs: 611.5083. Time: 168.2084 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #332: GFLOPs: 607.7821. Time: 169.2396 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #333: GFLOPs: 605.9759. Time: 169.7440 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #334: GFLOPs: 614.2474. Time: 167.4583 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #335: GFLOPs: 583.5498. Time: 176.2674 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #336: GFLOPs: 554.2897. Time: 185.5723 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #337: GFLOPs: 546.5869. Time: 188.1875 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #338: GFLOPs: 473.5040. Time: 217.2332 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #339: GFLOPs: 551.1625. Time: 186.6252 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #340: GFLOPs: 552.5897. Time: 186.1432 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #341: GFLOPs: 579.0996. Time: 177.6220 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #342: GFLOPs: 586.4699. Time: 175.3897 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #343: GFLOPs: 583.4280. Time: 176.3042 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #344: GFLOPs: 575.9328. Time: 178.5986 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #345: GFLOPs: 574.2035. Time: 179.1365 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #346: GFLOPs: 551.2754. Time: 186.5869 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #347: GFLOPs: 547.0001. Time: 188.0453 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #348: GFLOPs: 576.3799. Time: 178.4601 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #349: GFLOPs: 550.8406. Time: 186.7342 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #350: GFLOPs: 521.0651. Time: 197.4049 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #351: GFLOPs: 560.6774. Time: 183.4581 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #352: GFLOPs: 407.5988. Time: 252.3580 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #353: GFLOPs: 490.7756. Time: 209.5882 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #354: GFLOPs: 146.1879. Time: 703.6206 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #355: GFLOPs: 534.1430. Time: 192.5716 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #356: GFLOPs: 491.5364. Time: 209.2638 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #357: GFLOPs: 490.7728. Time: 209.5894 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #358: GFLOPs: 400.6401. Time: 256.7411 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #359: GFLOPs: 429.0042. Time: 239.7664 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #360: GFLOPs: 459.3870. Time: 223.9088 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #361: GFLOPs: 293.0388. Time: 351.0142 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #362: GFLOPs: 458.7124. Time: 224.2381 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #363: GFLOPs: 93.5953. Time: 1098.9948 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #364: GFLOPs: 458.4005. Time: 224.3907 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #365: GFLOPs: 457.6051. Time: 224.7807 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #366: GFLOPs: 584.5936. Time: 175.9527 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #367: GFLOPs: 432.5498. Time: 237.8011 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #368: GFLOPs: 426.8340. Time: 240.9855 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #369: GFLOPs: 425.0572. Time: 241.9929 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #370: GFLOPs: 431.6469. Time: 238.2985 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #371: GFLOPs: 222.7876. Time: 461.6990 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #372: GFLOPs: 146.7193. Time: 701.0721 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #373: GFLOPs: 427.9960. Time: 240.3312 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #374: GFLOPs: 431.8800. Time: 238.1698 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #375: GFLOPs: 212.7349. Time: 483.5164 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #376: GFLOPs: 239.2067. Time: 430.0080 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #377: GFLOPs: 214.7545. Time: 478.9693 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #378: GFLOPs: 217.6197. Time: 472.6630 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #379: GFLOPs: 235.6840. Time: 436.4353 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #380: GFLOPs: 168.6644. Time: 609.8547 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #381: GFLOPs: 420.4832. Time: 244.6252 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #382: GFLOPs: 48.8934. Time: 2103.7781 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #383: GFLOPs: 0.9848. Time: 104445.7117 us. Best GFLOPs: 657.5467
2024-04-29 09:43:19 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #384: GFLOPs: 35.6221. Time: 2887.5586 us. Best GFLOPs: 657.5467
2024-04-29 09:57:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:57:41 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:57:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:57:43 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:57:49 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:57:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:58:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:58:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 09:58:08 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9688  0.9476  0.9288  0.9288  0.9220  0.9220  0.9220  0.9220  0.9220  0.9220  0.9220  0.9213  0.9213  0.9207  0.9115  0.9087
[17 : 32]:	0.8941  0.8941  0.8941  0.8941  0.8941  0.8941  0.8941  0.8941  0.8941  0.8928  0.8928  0.8898  0.8722  0.8630  0.8510  0.8423
[33 : 48]:	0.8423  0.8324  0.8288  0.8122  0.8106  0.8106  0.8106  0.8105  0.8105  0.8005  0.8002  0.7949  0.7949  0.7925  0.7724  0.7443
[49 : 64]:	0.7401  0.7400  0.7384  0.7335  0.7328  0.7242  0.7193  0.7162  0.7129  0.7000  0.6991  0.6946  0.6929  0.6899  0.6667  0.6667
2024-04-29 09:58:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:58:09 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #385: GFLOPs: 328.8663. Time: 312.7739 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #386: GFLOPs: 651.0448. Time: 157.9934 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #387: GFLOPs: 604.8180. Time: 170.0690 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #388: GFLOPs: 607.7839. Time: 169.2391 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #389: GFLOPs: 599.2458. Time: 171.6504 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #390: GFLOPs: 597.2161. Time: 172.2338 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #391: GFLOPs: 605.1002. Time: 169.9897 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #392: GFLOPs: 551.5296. Time: 186.5009 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #393: GFLOPs: 597.9866. Time: 172.0119 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #394: GFLOPs: 610.8677. Time: 168.3847 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #395: GFLOPs: 606.5722. Time: 169.5772 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #396: GFLOPs: 606.2328. Time: 169.6721 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #397: GFLOPs: 605.2322. Time: 169.9526 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #398: GFLOPs: 592.9803. Time: 173.4641 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #399: GFLOPs: 653.1024. Time: 157.4957 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #400: GFLOPs: 600.8592. Time: 171.1895 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #401: GFLOPs: 601.1264. Time: 171.1134 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #402: GFLOPs: 594.4554. Time: 173.0337 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #403: GFLOPs: 558.1865. Time: 184.2768 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #404: GFLOPs: 548.9138. Time: 187.3897 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #405: GFLOPs: 604.7473. Time: 170.0889 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #406: GFLOPs: 610.2179. Time: 168.5641 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #407: GFLOPs: 597.2249. Time: 172.2313 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #408: GFLOPs: 600.5131. Time: 171.2882 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #409: GFLOPs: 605.6354. Time: 169.8395 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #410: GFLOPs: 600.1592. Time: 171.3892 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #411: GFLOPs: 605.9881. Time: 169.7406 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #412: GFLOPs: 646.3051. Time: 159.1521 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #413: GFLOPs: 575.8405. Time: 178.6272 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #414: GFLOPs: 449.4936. Time: 228.8371 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #415: GFLOPs: 586.7465. Time: 175.3071 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #416: GFLOPs: 575.5354. Time: 178.7219 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #417: GFLOPs: 574.5356. Time: 179.0329 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #418: GFLOPs: 548.5177. Time: 187.5250 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #419: GFLOPs: 547.1429. Time: 187.9962 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #420: GFLOPs: 527.6252. Time: 194.9505 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #421: GFLOPs: 522.4600. Time: 196.8778 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #422: GFLOPs: 523.0608. Time: 196.6517 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #423: GFLOPs: 522.2124. Time: 196.9712 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #424: GFLOPs: 530.1241. Time: 194.0315 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #425: GFLOPs: 536.0685. Time: 191.8800 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #426: GFLOPs: 508.2312. Time: 202.3898 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #427: GFLOPs: 506.3370. Time: 203.1469 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #428: GFLOPs: 571.5698. Time: 179.9619 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #429: GFLOPs: 567.8706. Time: 181.1342 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #430: GFLOPs: 534.3956. Time: 192.4806 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #431: GFLOPs: 534.7403. Time: 192.3565 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #432: GFLOPs: 478.7612. Time: 214.8478 us. Best GFLOPs: 657.5467
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #433: GFLOPs: 762.6063. Time: 134.8806 us. Best GFLOPs: 762.6063
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #434: GFLOPs: 495.0566. Time: 207.7758 us. Best GFLOPs: 762.6063
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #435: GFLOPs: 426.3462. Time: 241.2612 us. Best GFLOPs: 762.6063
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #436: GFLOPs: 915.6028. Time: 112.3422 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #437: GFLOPs: 433.2715. Time: 237.4049 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #438: GFLOPs: 480.8774. Time: 213.9023 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #439: GFLOPs: 39.1205. Time: 2629.3328 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #440: GFLOPs: 582.0097. Time: 176.7338 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #441: GFLOPs: 487.3081. Time: 211.0796 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #442: GFLOPs: 224.0764. Time: 459.0434 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #443: GFLOPs: 39.0804. Time: 2632.0320 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #444: GFLOPs: 43.8041. Time: 2348.1997 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #445: GFLOPs: 39.1220. Time: 2629.2330 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #446: GFLOPs: 25.5131. Time: 4031.6811 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #447: GFLOPs: 70.4304. Time: 1460.4596 us. Best GFLOPs: 915.6028
2024-04-29 09:59:20 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #448: GFLOPs: 5.6621. Time: 18166.5728 us. Best GFLOPs: 915.6028
2024-04-29 10:25:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:25:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:25:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:25:34 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:25:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:25:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:25:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:25:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:26:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9754  0.9259  0.8578  0.7802  0.7802  0.7647  0.7622  0.7561  0.7462  0.7442  0.7381  0.7350  0.7303  0.7070  0.7070  0.6831
[17 : 32]:	0.6716  0.6659  0.6611  0.6603  0.6602  0.6581  0.6575  0.6533  0.6533  0.6533  0.6533  0.6533  0.6519  0.6519  0.6474  0.6474
[33 : 48]:	0.6474  0.6474  0.6474  0.6471  0.6449  0.6394  0.6257  0.6241  0.6241  0.6241  0.6162  0.6129  0.6117  0.6096  0.6074  0.6038
[49 : 64]:	0.5967  0.5967  0.5891  0.5874  0.5808  0.5806  0.5733  0.5729  0.5673  0.5614  0.5525  0.5436  0.5386  0.5377  0.5377  0.5326
2024-04-29 10:26:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:26:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #449: GFLOPs: 469.6357. Time: 219.0225 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #450: GFLOPs: 778.3866. Time: 132.1462 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #451: GFLOPs: 774.9197. Time: 132.7374 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #452: GFLOPs: 626.3308. Time: 164.2276 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #453: GFLOPs: 626.7426. Time: 164.1197 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #454: GFLOPs: 856.9314. Time: 120.0339 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #455: GFLOPs: 481.2132. Time: 213.7531 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #456: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(98), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(49) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(49) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(49) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b104)
b124 = sch.decompose_reduction(block=b104, loop=l108)
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #457: GFLOPs: 849.2807. Time: 121.1152 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #458: GFLOPs: 697.8976. Time: 147.3867 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #459: GFLOPs: 449.0911. Time: 229.0422 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #460: GFLOPs: 811.9243. Time: 126.6877 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #461: GFLOPs: 566.6734. Time: 181.5169 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #462: GFLOPs: 738.0879. Time: 139.3612 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #463: GFLOPs: 745.0235. Time: 138.0638 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #464: GFLOPs: 676.0442. Time: 152.1510 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #465: GFLOPs: 558.2968. Time: 184.2403 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #466: GFLOPs: 659.1510. Time: 156.0504 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #467: GFLOPs: 746.0323. Time: 137.8771 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #468: GFLOPs: 607.9003. Time: 169.2067 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #469: GFLOPs: 659.1043. Time: 156.0615 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #470: GFLOPs: 656.3312. Time: 156.7209 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #471: GFLOPs: 610.7064. Time: 168.4292 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #472: GFLOPs: 616.7601. Time: 166.7760 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #473: GFLOPs: 594.8726. Time: 172.9123 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #474: GFLOPs: 561.3134. Time: 183.2502 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #475: GFLOPs: 597.2122. Time: 172.2349 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #476: GFLOPs: 607.6030. Time: 169.2895 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #477: GFLOPs: 653.4740. Time: 157.4061 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #478: GFLOPs: 651.9864. Time: 157.7653 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #479: GFLOPs: 597.9643. Time: 172.0183 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #480: GFLOPs: 602.6841. Time: 170.6712 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #481: GFLOPs: 558.5791. Time: 184.1472 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #482: GFLOPs: 613.2907. Time: 167.7195 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #483: GFLOPs: 608.2473. Time: 169.1102 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #484: GFLOPs: 290.5142. Time: 354.0646 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #485: GFLOPs: 618.0554. Time: 166.4265 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #486: GFLOPs: 650.9535. Time: 158.0156 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #487: GFLOPs: 596.3960. Time: 172.4707 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #488: GFLOPs: 576.7956. Time: 178.3314 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #489: GFLOPs: 584.9836. Time: 175.8353 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #490: GFLOPs: 575.0075. Time: 178.8860 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #491: GFLOPs: 419.4232. Time: 245.2434 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #492: GFLOPs: 539.9907. Time: 190.4863 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #493: GFLOPs: 610.8351. Time: 168.3937 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #494: GFLOPs: 194.8483. Time: 527.9021 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #495: GFLOPs: 589.2119. Time: 174.5735 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #496: GFLOPs: 420.2079. Time: 244.7855 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #497: GFLOPs: 538.0429. Time: 191.1758 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #498: GFLOPs: 535.0001. Time: 192.2632 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #499: GFLOPs: 538.4581. Time: 191.0284 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #500: GFLOPs: 551.6942. Time: 186.4453 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #501: GFLOPs: 439.7496. Time: 233.9077 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #502: GFLOPs: 322.3843. Time: 319.0627 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #503: GFLOPs: 444.6233. Time: 231.3437 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #504: GFLOPs: 534.2885. Time: 192.5192 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #505: GFLOPs: 564.9788. Time: 182.0613 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #506: GFLOPs: 581.8956. Time: 176.7685 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #507: GFLOPs: 534.3477. Time: 192.4979 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #508: GFLOPs: 582.3158. Time: 176.6409 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #509: GFLOPs: 29.0472. Time: 3541.1592 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #510: GFLOPs: 80.3743. Time: 1279.7727 us. Best GFLOPs: 915.6028
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #511: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(7), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(32)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(32) + oc_block_2_init * T.int64(32) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(32)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(32) + oc_block_2 * T.int64(32) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + ax1)
                        v_ax2, v_ax3, v_ax4 = T.axis.remap("SSS", [ax2, ax3, ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 32])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 10:27:37 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #512: GFLOPs: 8.2065. Time: 12534.1326 us. Best GFLOPs: 915.6028
2024-04-29 10:39:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:39:02 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:39:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:39:04 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:39:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:39:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:39:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:39:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:39:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9056  0.8966  0.8931  0.8653  0.8653  0.8628  0.8601  0.8569  0.8569  0.8568  0.8568  0.8500  0.8500  0.8482  0.8482  0.8441
[17 : 32]:	0.8434  0.8425  0.8425  0.8347  0.8295  0.8190  0.7969  0.7903  0.7792  0.7724  0.7702  0.7702  0.7648  0.7648  0.7648  0.7637
[33 : 48]:	0.7601  0.7410  0.7408  0.7402  0.7402  0.7303  0.7275  0.7274  0.7274  0.7219  0.7143  0.7104  0.7104  0.7063  0.6979  0.6943
[49 : 64]:	0.6850  0.6846  0.6839  0.6823  0.6810  0.6810  0.6810  0.6808  0.6791  0.6784  0.6761  0.6747  0.6740  0.6719  0.6684  0.6659
2024-04-29 10:39:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:39:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #513: GFLOPs: 390.8912. Time: 263.1443 us. Best GFLOPs: 915.6028
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #514: GFLOPs: 856.5090. Time: 120.0931 us. Best GFLOPs: 915.6028
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #515: GFLOPs: 677.0389. Time: 151.9275 us. Best GFLOPs: 915.6028
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #516: GFLOPs: 810.1186. Time: 126.9700 us. Best GFLOPs: 915.6028
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #517: GFLOPs: 832.2104. Time: 123.5995 us. Best GFLOPs: 915.6028
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #518: GFLOPs: 650.4851. Time: 158.1294 us. Best GFLOPs: 915.6028
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #519: GFLOPs: 854.7723. Time: 120.3371 us. Best GFLOPs: 915.6028
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #520: GFLOPs: 926.8398. Time: 110.9801 us. Best GFLOPs: 926.8398
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #521: GFLOPs: 934.6328. Time: 110.0548 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #522: GFLOPs: 885.4151. Time: 116.1724 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #523: GFLOPs: 881.5254. Time: 116.6850 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #524: GFLOPs: 719.3574. Time: 142.9898 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #525: GFLOPs: 718.1559. Time: 143.2291 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #526: GFLOPs: 765.7291. Time: 134.3305 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #527: GFLOPs: 754.8465. Time: 136.2672 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #528: GFLOPs: 649.0949. Time: 158.4680 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #529: GFLOPs: 919.7579. Time: 111.8346 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #530: GFLOPs: 586.9578. Time: 175.2439 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #531: GFLOPs: 771.5788. Time: 133.3121 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #532: GFLOPs: 774.0429. Time: 132.8877 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #533: GFLOPs: 782.3749. Time: 131.4725 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #534: GFLOPs: 288.9070. Time: 356.0343 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #535: GFLOPs: 735.9616. Time: 139.7638 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #536: GFLOPs: 929.3909. Time: 110.6755 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #537: GFLOPs: 932.7663. Time: 110.2750 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #538: GFLOPs: 825.8619. Time: 124.5496 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #539: GFLOPs: 254.5292. Time: 404.1218 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #540: GFLOPs: 934.4977. Time: 110.0707 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #541: GFLOPs: 670.4712. Time: 153.4157 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #542: GFLOPs: 660.3859. Time: 155.7586 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #543: GFLOPs: 664.9656. Time: 154.6859 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #544: GFLOPs: 827.1534. Time: 124.3552 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #545: GFLOPs: 726.6144. Time: 141.5617 us. Best GFLOPs: 934.6328
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #546: GFLOPs: 938.5462. Time: 109.5959 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #547: GFLOPs: 930.8220. Time: 110.5053 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #548: GFLOPs: 708.6759. Time: 145.1451 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #549: GFLOPs: 707.8473. Time: 145.3150 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #550: GFLOPs: 522.8376. Time: 196.7357 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #551: GFLOPs: 678.3822. Time: 151.6266 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #552: GFLOPs: 854.5809. Time: 120.3640 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #553: GFLOPs: 872.3342. Time: 117.9144 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #554: GFLOPs: 651.3081. Time: 157.9296 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #555: GFLOPs: 613.9323. Time: 167.5442 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #556: GFLOPs: 628.2344. Time: 163.7300 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #557: GFLOPs: 607.9548. Time: 169.1915 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #558: GFLOPs: 475.6816. Time: 216.2387 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #559: GFLOPs: 629.5604. Time: 163.3851 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #560: GFLOPs: 609.4300. Time: 168.7820 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #561: GFLOPs: 733.2077. Time: 140.2888 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #562: GFLOPs: 730.7139. Time: 140.7675 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #563: GFLOPs: 658.9550. Time: 156.0969 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #564: GFLOPs: 730.9581. Time: 140.7205 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #565: GFLOPs: 871.1592. Time: 118.0735 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #566: GFLOPs: 878.4467. Time: 117.0940 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #567: GFLOPs: 874.2637. Time: 117.6542 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #568: GFLOPs: 612.8493. Time: 167.8403 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #569: GFLOPs: 326.6870. Time: 314.8604 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #570: GFLOPs: 643.0199. Time: 159.9652 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #571: GFLOPs: 543.6170. Time: 189.2156 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #572: GFLOPs: 642.9785. Time: 159.9755 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #573: GFLOPs: 652.5357. Time: 157.6324 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #574: GFLOPs: 133.5786. Time: 770.0397 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #575: GFLOPs: 78.9650. Time: 1302.6125 us. Best GFLOPs: 938.5462
2024-04-29 10:40:45 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #576: GFLOPs: 66.1107. Time: 1555.8885 us. Best GFLOPs: 938.5462
2024-04-29 10:52:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:52:36 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:52:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:52:38 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:52:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:52:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:52:55 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:53:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 10:53:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9597  0.9559  0.9541  0.9395  0.9347  0.9266  0.9266  0.9202  0.9173  0.9150  0.9150  0.9091  0.9091  0.9076  0.9060  0.8935
[17 : 32]:	0.8855  0.8819  0.8819  0.8800  0.8744  0.8734  0.8725  0.8710  0.8710  0.8708  0.8708  0.8694  0.8626  0.8617  0.8617  0.8587
[33 : 48]:	0.8350  0.8335  0.8282  0.8251  0.8162  0.8156  0.8145  0.8138  0.8138  0.8138  0.8137  0.8072  0.8072  0.8072  0.8036  0.8036
[49 : 64]:	0.8033  0.8033  0.8033  0.8015  0.7988  0.7986  0.7971  0.7971  0.7909  0.7889  0.7889  0.7844  0.7844  0.7844  0.7810  0.7810
2024-04-29 10:53:04 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:53:04 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #577: GFLOPs: 607.5101. Time: 169.3154 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #578: GFLOPs: 898.0673. Time: 114.5357 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #579: GFLOPs: 931.6472. Time: 110.4075 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #580: GFLOPs: 893.9593. Time: 115.0621 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #581: GFLOPs: 893.5007. Time: 115.1211 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #582: GFLOPs: 875.4548. Time: 117.4941 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #583: GFLOPs: 879.6709. Time: 116.9310 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #584: GFLOPs: 925.9462. Time: 111.0872 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #585: GFLOPs: 928.5880. Time: 110.7712 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #586: GFLOPs: 930.3046. Time: 110.5668 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #587: GFLOPs: 714.4193. Time: 143.9782 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #588: GFLOPs: 865.5870. Time: 118.8336 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #589: GFLOPs: 869.6529. Time: 118.2780 us. Best GFLOPs: 938.5462
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #590: GFLOPs: 938.5719. Time: 109.5929 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #591: GFLOPs: 894.3320. Time: 115.0141 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #592: GFLOPs: 925.2476. Time: 111.1711 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #593: GFLOPs: 915.6118. Time: 112.3411 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #594: GFLOPs: 813.9012. Time: 126.3800 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #595: GFLOPs: 808.5329. Time: 127.2191 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #596: GFLOPs: 815.2599. Time: 126.1693 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #597: GFLOPs: 926.7664. Time: 110.9889 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #598: GFLOPs: 815.4323. Time: 126.1427 us. Best GFLOPs: 938.5719
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #599: GFLOPs: 969.0600. Time: 106.1449 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #600: GFLOPs: 878.4666. Time: 117.0913 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #601: GFLOPs: 875.4141. Time: 117.4996 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #602: GFLOPs: 888.6817. Time: 115.7454 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #603: GFLOPs: 891.3758. Time: 115.3956 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #604: GFLOPs: 925.1255. Time: 111.1858 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #605: GFLOPs: 901.6945. Time: 114.0750 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #606: GFLOPs: 425.6309. Time: 241.6667 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #607: GFLOPs: 858.7003. Time: 119.7866 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #608: GFLOPs: 722.4906. Time: 142.3697 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #609: GFLOPs: 818.1923. Time: 125.7171 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #610: GFLOPs: 864.7301. Time: 118.9513 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #611: GFLOPs: 781.8244. Time: 131.5651 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #612: GFLOPs: 788.7826. Time: 130.4045 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #613: GFLOPs: 517.0000. Time: 198.9571 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #614: GFLOPs: 780.2057. Time: 131.8381 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #615: GFLOPs: 863.8068. Time: 119.0785 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #616: GFLOPs: 775.8957. Time: 132.5704 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #617: GFLOPs: 772.0718. Time: 133.2270 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #618: GFLOPs: 770.4439. Time: 133.5085 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #619: GFLOPs: 768.3655. Time: 133.8696 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #620: GFLOPs: 733.4843. Time: 140.2359 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #621: GFLOPs: 733.5971. Time: 140.2143 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #622: GFLOPs: 728.1965. Time: 141.2542 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #623: GFLOPs: 729.6848. Time: 140.9661 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #624: GFLOPs: 723.3543. Time: 142.1998 us. Best GFLOPs: 969.0600
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #625: GFLOPs: 985.6694. Time: 104.3563 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #626: GFLOPs: 903.9358. Time: 113.7922 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #627: GFLOPs: 984.1184. Time: 104.5208 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #628: GFLOPs: 776.2798. Time: 132.5048 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #629: GFLOPs: 819.0908. Time: 125.5792 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #630: GFLOPs: 904.4892. Time: 113.7225 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #631: GFLOPs: 918.5860. Time: 111.9773 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #632: GFLOPs: 919.6788. Time: 111.8443 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #633: GFLOPs: 850.2323. Time: 120.9796 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #634: GFLOPs: 780.1668. Time: 131.8446 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #635: GFLOPs: 781.5786. Time: 131.6065 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #636: GFLOPs: 742.3026. Time: 138.5699 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #637: GFLOPs: 797.4850. Time: 128.9815 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #638: GFLOPs: 11.0213. Time: 9332.9505 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #639: GFLOPs: 35.0178. Time: 2937.3893 us. Best GFLOPs: 985.6694
2024-04-29 10:54:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #640: GFLOPs: 196.4381. Time: 523.6294 us. Best GFLOPs: 985.6694
2024-04-29 11:41:52 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 11:41:53 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 11:41:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 11:41:55 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 11:42:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 11:42:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 11:42:11 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 11:42:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 11:42:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9709  0.9574  0.9402  0.9402  0.9402  0.9345  0.9345  0.9329  0.9304  0.9182  0.9182  0.9182  0.9182  0.9173  0.9103  0.9086
[17 : 32]:	0.9086  0.9067  0.9060  0.9059  0.9056  0.9056  0.9049  0.9036  0.8988  0.8972  0.8966  0.8966  0.8942  0.8942  0.8933  0.8914
[33 : 48]:	0.8914  0.8907  0.8893  0.8890  0.8885  0.8875  0.8875  0.8866  0.8856  0.8854  0.8848  0.8777  0.8702  0.8702  0.8702  0.8679
[49 : 64]:	0.8679  0.8634  0.8634  0.8580  0.8577  0.8557  0.8511  0.8511  0.8468  0.8442  0.8411  0.8411  0.8406  0.8401  0.8367  0.8366
2024-04-29 11:42:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 11:42:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #641: GFLOPs: 976.8669. Time: 105.2966 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #642: GFLOPs: 983.5249. Time: 104.5838 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #643: GFLOPs: 981.2211. Time: 104.8294 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #644: GFLOPs: 984.3368. Time: 104.4976 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #645: GFLOPs: 974.2152. Time: 105.5832 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #646: GFLOPs: 984.3235. Time: 104.4990 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #647: GFLOPs: 975.9228. Time: 105.3985 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #648: GFLOPs: 927.4597. Time: 110.9060 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #649: GFLOPs: 891.7718. Time: 115.3443 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #650: GFLOPs: 922.6212. Time: 111.4876 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #651: GFLOPs: 919.9092. Time: 111.8163 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #652: GFLOPs: 932.4907. Time: 110.3076 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #653: GFLOPs: 915.4781. Time: 112.3575 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #654: GFLOPs: 927.1752. Time: 110.9400 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #655: GFLOPs: 893.4441. Time: 115.1284 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #656: GFLOPs: 461.8275. Time: 222.7256 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #657: GFLOPs: 918.1692. Time: 112.0282 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #658: GFLOPs: 887.1709. Time: 115.9425 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #659: GFLOPs: 920.2007. Time: 111.7808 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #660: GFLOPs: 900.3917. Time: 114.2401 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #661: GFLOPs: 912.8497. Time: 112.6810 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #662: GFLOPs: 930.2508. Time: 110.5732 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #663: GFLOPs: 895.8862. Time: 114.8146 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #664: GFLOPs: 882.4619. Time: 116.5612 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #665: GFLOPs: 880.5725. Time: 116.8113 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #666: GFLOPs: 928.9435. Time: 110.7288 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #667: GFLOPs: 917.4830. Time: 112.1119 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #668: GFLOPs: 924.0006. Time: 111.3211 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #669: GFLOPs: 897.2624. Time: 114.6385 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #670: GFLOPs: 899.7928. Time: 114.3161 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #671: GFLOPs: 925.5481. Time: 111.1350 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #672: GFLOPs: 925.3185. Time: 111.1626 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #673: GFLOPs: 930.5141. Time: 110.5419 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #674: GFLOPs: 933.7949. Time: 110.1535 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #675: GFLOPs: 892.0031. Time: 115.3144 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #676: GFLOPs: 896.4102. Time: 114.7475 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #677: GFLOPs: 928.0996. Time: 110.8295 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #678: GFLOPs: 931.4325. Time: 110.4329 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #679: GFLOPs: 931.4277. Time: 110.4335 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #680: GFLOPs: 855.3927. Time: 120.2498 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #681: GFLOPs: 899.3217. Time: 114.3760 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #682: GFLOPs: 926.7623. Time: 110.9894 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #683: GFLOPs: 895.8691. Time: 114.8168 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #684: GFLOPs: 907.4633. Time: 113.3498 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #685: GFLOPs: 923.5163. Time: 111.3795 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #686: GFLOPs: 931.1710. Time: 110.4639 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #687: GFLOPs: 921.1693. Time: 111.6633 us. Best GFLOPs: 985.6694
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #688: GFLOPs: 987.4366. Time: 104.1695 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #689: GFLOPs: 979.7395. Time: 104.9879 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #690: GFLOPs: 873.0252. Time: 117.8211 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #691: GFLOPs: 928.7118. Time: 110.7564 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #692: GFLOPs: 855.9406. Time: 120.1728 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #693: GFLOPs: 663.4590. Time: 155.0372 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #694: GFLOPs: 850.8326. Time: 120.8943 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #695: GFLOPs: 463.2696. Time: 222.0322 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #696: GFLOPs: 572.9468. Time: 179.5294 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #697: GFLOPs: 814.3120. Time: 126.3162 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #698: GFLOPs: 820.5737. Time: 125.3523 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #699: GFLOPs: 851.8860. Time: 120.7448 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #700: GFLOPs: 857.7405. Time: 119.9206 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #701: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(49) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(49) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(49) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b103)
b122 = sch.decompose_reduction(block=b103, loop=l106)
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #702: GFLOPs: 127.1644. Time: 808.8803 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #703: GFLOPs: 65.9253. Time: 1560.2633 us. Best GFLOPs: 987.4366
2024-04-29 11:44:08 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #704: GFLOPs: 9.5630. Time: 10756.1073 us. Best GFLOPs: 987.4366
2024-04-29 12:00:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:00:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:00:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:00:53 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 12:00:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:01:04 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:01:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:01:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:01:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9849  0.9614  0.9472  0.9364  0.9353  0.9247  0.9234  0.9211  0.9132  0.9132  0.9111  0.9109  0.9104  0.9082  0.9072  0.9071
[17 : 32]:	0.9057  0.9057  0.9057  0.9050  0.9041  0.9025  0.9020  0.9012  0.9008  0.9000  0.9000  0.9000  0.9000  0.8995  0.8995  0.8995
[33 : 48]:	0.8981  0.8981  0.8980  0.8974  0.8972  0.8963  0.8957  0.8934  0.8911  0.8911  0.8911  0.8852  0.8840  0.8749  0.8692  0.8591
[49 : 64]:	0.8540  0.8540  0.8481  0.8441  0.8418  0.8354  0.8304  0.8302  0.8297  0.8281  0.8280  0.8280  0.8280  0.8273  0.8273  0.8266
2024-04-29 12:01:18 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:01:18 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #705: GFLOPs: 990.9306. Time: 103.8022 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #706: GFLOPs: 978.9248. Time: 105.0753 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #707: GFLOPs: 925.1511. Time: 111.1827 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #708: GFLOPs: 928.4399. Time: 110.7889 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #709: GFLOPs: 927.0184. Time: 110.9587 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #710: GFLOPs: 928.8570. Time: 110.7391 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #711: GFLOPs: 928.1380. Time: 110.8249 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #712: GFLOPs: 916.7016. Time: 112.2075 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #713: GFLOPs: 921.3630. Time: 111.6398 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #714: GFLOPs: 935.8988. Time: 109.9059 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #715: GFLOPs: 889.1159. Time: 115.6889 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #716: GFLOPs: 930.5742. Time: 110.5348 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #717: GFLOPs: 928.1197. Time: 110.8271 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #718: GFLOPs: 885.6722. Time: 116.1387 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #719: GFLOPs: 896.5031. Time: 114.7356 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #720: GFLOPs: 900.2512. Time: 114.2579 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #721: GFLOPs: 892.1940. Time: 115.2897 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #722: GFLOPs: 893.9770. Time: 115.0598 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #723: GFLOPs: 898.3205. Time: 114.5035 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #724: GFLOPs: 925.5296. Time: 111.1372 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #725: GFLOPs: 886.6418. Time: 116.0117 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #726: GFLOPs: 898.4283. Time: 114.4897 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #727: GFLOPs: 897.6954. Time: 114.5832 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #728: GFLOPs: 903.7757. Time: 113.8123 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #729: GFLOPs: 919.9594. Time: 111.8102 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #730: GFLOPs: 902.1943. Time: 114.0118 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #731: GFLOPs: 902.8573. Time: 113.9281 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #732: GFLOPs: 898.1231. Time: 114.5286 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #733: GFLOPs: 884.1788. Time: 116.3348 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #734: GFLOPs: 932.3671. Time: 110.3222 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #735: GFLOPs: 902.2155. Time: 114.0091 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #736: GFLOPs: 888.2957. Time: 115.7957 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #737: GFLOPs: 896.9362. Time: 114.6802 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #738: GFLOPs: 902.2834. Time: 114.0005 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #739: GFLOPs: 980.3224. Time: 104.9255 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #740: GFLOPs: 894.0765. Time: 115.0470 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #741: GFLOPs: 927.8232. Time: 110.8625 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #742: GFLOPs: 901.8183. Time: 114.0593 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #743: GFLOPs: 447.2441. Time: 229.9880 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #744: GFLOPs: 898.9966. Time: 114.4173 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #745: GFLOPs: 920.2018. Time: 111.7807 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #746: GFLOPs: 919.4820. Time: 111.8682 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #747: GFLOPs: 914.0556. Time: 112.5323 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #748: GFLOPs: 453.9922. Time: 226.5696 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #749: GFLOPs: 917.3208. Time: 112.1318 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #750: GFLOPs: 938.7995. Time: 109.5663 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #751: GFLOPs: 924.3710. Time: 111.2765 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #752: GFLOPs: 985.1008. Time: 104.4165 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #753: GFLOPs: 848.1823. Time: 121.2720 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #754: GFLOPs: 852.0663. Time: 120.7192 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #755: GFLOPs: 811.3915. Time: 126.7709 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #756: GFLOPs: 855.4866. Time: 120.2366 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #757: GFLOPs: 847.4068. Time: 121.3830 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #758: GFLOPs: 809.6907. Time: 127.0371 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #759: GFLOPs: 924.7882. Time: 111.2263 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #760: GFLOPs: 819.0157. Time: 125.5908 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #761: GFLOPs: 683.8391. Time: 150.4167 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #762: GFLOPs: 813.0905. Time: 126.5060 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #763: GFLOPs: 646.5753. Time: 159.0856 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #764: GFLOPs: 857.6903. Time: 119.9277 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #765: GFLOPs: 854.1055. Time: 120.4310 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #766: GFLOPs: 21.5668. Time: 4769.4159 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #767: GFLOPs: 4.0780. Time: 25223.6073 us. Best GFLOPs: 990.9306
2024-04-29 12:02:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #768: GFLOPs: 99.9540. Time: 1029.0811 us. Best GFLOPs: 990.9306
2024-04-29 12:33:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:33:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:33:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:33:09 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 12:33:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:33:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:33:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:33:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 12:33:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9779  0.9764  0.9764  0.9764  0.9757  0.9725  0.9725  0.9712  0.9508  0.9508  0.9508  0.9466  0.9462  0.9452  0.9452  0.9419
[17 : 32]:	0.9398  0.9361  0.9361  0.9360  0.9360  0.9347  0.9327  0.9327  0.9327  0.9251  0.9241  0.9237  0.9237  0.9237  0.9194  0.9166
[33 : 48]:	0.9142  0.9122  0.9122  0.9102  0.9100  0.9093  0.9054  0.9054  0.9053  0.9027  0.9026  0.9019  0.9019  0.9019  0.9014  0.8997
[49 : 64]:	0.8993  0.8971  0.8956  0.8947  0.8947  0.8903  0.8900  0.8900  0.8869  0.8868  0.8861  0.8858  0.8854  0.8845  0.8845  0.8784
2024-04-29 12:33:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:33:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #769: GFLOPs: 987.1304. Time: 104.2018 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #770: GFLOPs: 985.3748. Time: 104.3875 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #771: GFLOPs: 986.9298. Time: 104.2230 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #772: GFLOPs: 981.5716. Time: 104.7919 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #773: GFLOPs: 982.0075. Time: 104.7454 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #774: GFLOPs: 979.0470. Time: 105.0622 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #775: GFLOPs: 985.4145. Time: 104.3833 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #776: GFLOPs: 864.8917. Time: 118.9291 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #777: GFLOPs: 936.4103. Time: 109.8459 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #778: GFLOPs: 925.8397. Time: 111.1000 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #779: GFLOPs: 934.6830. Time: 110.0489 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #780: GFLOPs: 927.0899. Time: 110.9502 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #781: GFLOPs: 923.8693. Time: 111.3370 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #782: GFLOPs: 926.8992. Time: 110.9730 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #783: GFLOPs: 929.8284. Time: 110.6234 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #784: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(49) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(49) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(49) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=98)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b103)
b122 = sch.decompose_reduction(block=b103, loop=l106)
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #785: GFLOPs: 934.0287. Time: 110.1259 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #786: GFLOPs: 933.1606. Time: 110.2284 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #787: GFLOPs: 921.9411. Time: 111.5698 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #788: GFLOPs: 985.9468. Time: 104.3269 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #789: GFLOPs: 767.3653. Time: 134.0441 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #790: GFLOPs: 927.5042. Time: 110.9006 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #791: GFLOPs: 923.3390. Time: 111.4009 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #792: GFLOPs: 937.8658. Time: 109.6754 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #793: GFLOPs: 928.5854. Time: 110.7715 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #794: GFLOPs: 929.9332. Time: 110.6110 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #795: GFLOPs: 916.4926. Time: 112.2331 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #796: GFLOPs: 930.5979. Time: 110.5319 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #797: GFLOPs: 927.1594. Time: 110.9419 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #798: GFLOPs: 929.4710. Time: 110.6660 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #799: GFLOPs: 925.0877. Time: 111.1903 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #800: GFLOPs: 934.3076. Time: 110.0931 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #801: GFLOPs: 682.8543. Time: 150.6336 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #802: GFLOPs: 459.2314. Time: 223.9847 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #803: GFLOPs: 929.3639. Time: 110.6787 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #804: GFLOPs: 927.9826. Time: 110.8435 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #805: GFLOPs: 917.7689. Time: 112.0770 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #806: GFLOPs: 905.8009. Time: 113.5578 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #807: GFLOPs: 897.3003. Time: 114.6336 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #808: GFLOPs: 899.7146. Time: 114.3260 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #809: GFLOPs: 890.5380. Time: 115.5041 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #810: GFLOPs: 906.4376. Time: 113.4781 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #811: GFLOPs: 896.7011. Time: 114.7102 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #812: GFLOPs: 900.9093. Time: 114.1744 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #813: GFLOPs: 904.4700. Time: 113.7249 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #814: GFLOPs: 903.4529. Time: 113.8530 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #815: GFLOPs: 891.6594. Time: 115.3588 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #816: GFLOPs: 926.9492. Time: 110.9670 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #817: GFLOPs: 899.9385. Time: 114.2976 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #818: GFLOPs: 924.7188. Time: 111.2347 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #819: GFLOPs: 890.7596. Time: 115.4754 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #820: GFLOPs: 928.4994. Time: 110.7818 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #821: GFLOPs: 472.9495. Time: 217.4879 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #822: GFLOPs: 443.0266. Time: 232.1775 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #823: GFLOPs: 897.1751. Time: 114.6496 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #824: GFLOPs: 904.3792. Time: 113.7364 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #825: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) // T.int64(7) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) // T.int64(7) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) // T.int64(7) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=98)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b103)
b122 = sch.decompose_reduction(block=b103, loop=l106)
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #826: GFLOPs: 892.0432. Time: 115.3092 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #827: GFLOPs: 892.9028. Time: 115.1982 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #828: GFLOPs: 917.5629. Time: 112.1022 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #829: GFLOPs: 856.3588. Time: 120.1141 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #830: GFLOPs: 31.9865. Time: 3215.7530 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #831: GFLOPs: 8.1990. Time: 12545.5953 us. Best GFLOPs: 990.9306
2024-04-29 12:35:21 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #832: GFLOPs: 154.5593. Time: 665.5102 us. Best GFLOPs: 990.9306
2024-04-29 13:04:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 13:04:22 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 13:04:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 13:04:24 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 13:04:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 13:04:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 13:04:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 13:04:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13d61068)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x153af578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3699a58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x460dea8)]: 0 failure(s)
2024-04-29 13:04:49 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9831  0.9807  0.9767  0.9670  0.9589  0.9463  0.9439  0.9439  0.9439  0.9424  0.9418  0.9400  0.9400  0.9362  0.9362  0.9326
[17 : 32]:	0.9326  0.9303  0.9293  0.9282  0.9282  0.9282  0.9282  0.9282  0.9280  0.9244  0.9244  0.9229  0.9216  0.9172  0.9143  0.9143
[33 : 48]:	0.9143  0.9116  0.9099  0.9097  0.9070  0.9060  0.9049  0.9049  0.9049  0.9028  0.9016  0.8995  0.8990  0.8977  0.8974  0.8956
[49 : 64]:	0.8919  0.8919  0.8883  0.8851  0.8751  0.8731  0.8715  0.8715  0.8699  0.8687  0.8687  0.8676  0.8676  0.8633  0.8604  0.8603
2024-04-29 13:04:49 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 13:04:49 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #833: GFLOPs: 982.5803. Time: 104.6844 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #834: GFLOPs: 981.4376. Time: 104.8063 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #835: GFLOPs: 989.0017. Time: 104.0047 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #836: GFLOPs: 987.6978. Time: 104.1420 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #837: GFLOPs: 986.4301. Time: 104.2758 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #838: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(28) // T.int64(7) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(28) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(28) // T.int64(7) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(28) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(28) // T.int64(7) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(28) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b104)
b124 = sch.decompose_reduction(block=b104, loop=l108)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #839: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=392)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #840: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=392)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #841: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(64) + oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(64) + oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(49) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b67)
l107 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l107)
b108 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131 = sch.get_loops(block=b108)
b132 = sch.decompose_reduction(block=b108, loop=l116)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #842: GFLOPs: 936.9873. Time: 109.7782 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #843: GFLOPs: 931.2967. Time: 110.4490 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #844: GFLOPs: 986.8763. Time: 104.2287 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #845: GFLOPs: 945.6369. Time: 108.7741 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #846: GFLOPs: 940.0430. Time: 109.4214 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #847: GFLOPs: 944.0287. Time: 108.9594 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #848: GFLOPs: 936.5557. Time: 109.8288 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #849: GFLOPs: 923.9661. Time: 111.3253 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #850: GFLOPs: 925.6564. Time: 111.1220 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #851: GFLOPs: 938.6607. Time: 109.5825 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #852: GFLOPs: 935.8119. Time: 109.9161 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #853: GFLOPs: 929.9814. Time: 110.6052 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #854: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(7) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=98)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b103)
b122 = sch.decompose_reduction(block=b103, loop=l106)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #855: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(7) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(7) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=196)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #856: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(98) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(64) + oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(98) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(98) // T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_0 * T.int64(64) + oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(98) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(98) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b67)
l107 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l107)
b108 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131 = sch.get_loops(block=b108)
b132 = sch.decompose_reduction(block=b108, loop=l116)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #857: GFLOPs: 931.1747. Time: 110.4635 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #858: GFLOPs: 926.1580. Time: 111.0618 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #859: GFLOPs: 929.1368. Time: 110.7058 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #860: GFLOPs: 919.5847. Time: 111.8557 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #861: GFLOPs: 924.7596. Time: 111.2298 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #862: GFLOPs: 939.0133. Time: 109.5414 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #863: GFLOPs: 919.3488. Time: 111.8844 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #864: GFLOPs: 932.3818. Time: 110.3205 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #865: GFLOPs: 931.3992. Time: 110.4369 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #866: GFLOPs: 939.4303. Time: 109.4927 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #867: GFLOPs: 923.8197. Time: 111.3429 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #868: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(2)):
                for ax3_ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14))
                        v_ax4 = T.axis.spatial(T.int64(64), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=392)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #869: GFLOPs: 939.9272. Time: 109.4349 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #870: GFLOPs: 894.4773. Time: 114.9954 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #871: GFLOPs: 894.8876. Time: 114.9427 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #872: GFLOPs: 902.8684. Time: 113.9267 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #873: GFLOPs: 903.1261. Time: 113.8942 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #874: GFLOPs: 408.8138. Time: 251.6079 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #875: GFLOPs: 896.8073. Time: 114.6967 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #876: GFLOPs: 898.0786. Time: 114.5343 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #877: GFLOPs: 905.5908. Time: 113.5842 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #878: GFLOPs: 900.2826. Time: 114.2539 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #879: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=392)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #880: GFLOPs: 903.3080. Time: 113.8712 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #881: GFLOPs: 897.8143. Time: 114.5680 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #882: GFLOPs: 899.9159. Time: 114.3005 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #883: GFLOPs: 894.5652. Time: 114.9841 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #884: GFLOPs: 609.8852. Time: 168.6560 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #885: GFLOPs: 924.6316. Time: 111.2452 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #886: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(49) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(49) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(98) // T.int64(49) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(98) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=98)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b103)
b122 = sch.decompose_reduction(block=b103, loop=l106)
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #887: GFLOPs: 923.1779. Time: 111.4204 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #888: GFLOPs: 923.8893. Time: 111.3346 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #889: GFLOPs: 851.4750. Time: 120.8031 us. Best GFLOPs: 990.9306
2024-04-29 13:06:26 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #890: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(64), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(98) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=196)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 13:06:27 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #891: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(2), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(512), T.int64(64)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(64)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(14), T.int64(14), T.int64(64)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(98) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(64), oc_block_1 * T.int64(64) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(98) * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(98) // T.int64(49) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 64, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=28)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b104)
b124 = sch.decompose_reduction(block=b104, loop=l108)
2024-04-29 13:06:27 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #892: GFLOPs: 326.3541. Time: 315.1815 us. Best GFLOPs: 990.9306
2024-04-29 13:06:27 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #893: GFLOPs: 887.4945. Time: 115.9002 us. Best GFLOPs: 990.9306
2024-04-29 13:06:27 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #894: GFLOPs: 90.5007. Time: 1136.5748 us. Best GFLOPs: 990.9306
2024-04-29 13:06:27 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #895: GFLOPs: 65.2476. Time: 1576.4685 us. Best GFLOPs: 990.9306
2024-04-29 13:06:27 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_10] Trial #896: GFLOPs: 150.1394. Time: 685.1019 us. Best GFLOPs: 990.9306
