2024-04-29 07:26:02 [INFO] [task_scheduler.cc:160] Initializing Task #15: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3"
2024-04-29 07:26:02 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32), T.int64(64), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 07:26:02 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 07:26:02 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(58), T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), oh_0 * T.int64(14) + oh_1 * T.int64(7) + ax2)
                        v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(14), T.int64(4), T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 14, 2, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-29 07:26:02 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(4)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(64), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(57) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(57), p0[v_n, v_ic // T.int64(64), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(64)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(4), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(2), oc_chunk_0 + ax1)
                        v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), ow_1 * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(4) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 14, 2, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 07:26:02 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(4)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(6), T.int64(64)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), oh_0 * T.int64(14) + oh_1 * T.int64(7) + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), ow_1 * T.int64(4) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(56), T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(2), oc_chunk_0 + ax1)
                        v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(16) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 14, 2, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=9)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 07:43:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:43:01 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 07:43:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 07:43:07 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 07:43:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 07:43:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 07:43:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 07:43:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 07:43:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9991  0.9973  0.9973  0.9972  0.9968  0.9956  0.9954  0.9951  0.9946  0.9928  0.9924  0.9921  0.9919  0.9916  0.9911
[17 : 32]:	0.9910  0.9908  0.9905  0.9903  0.9901  0.9900  0.9897  0.9895  0.9894  0.9891  0.9890  0.9881  0.9876  0.9871  0.9869  0.9861
[33 : 48]:	0.9854  0.9852  0.9844  0.9841  0.9838  0.9835  0.9829  0.9827  0.9827  0.9823  0.9823  0.9819  0.9809  0.9797  0.9787  0.9784
[49 : 64]:	0.9783  0.9778  0.9773  0.9770  0.9769  0.9766  0.9765  0.9761  0.9755  0.9743  0.9732  0.9722  0.9721  0.9720  0.9719  0.9718
2024-04-29 07:43:32 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:43:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #1: GFLOPs: 5.0407. Time: 45948.6940 us. Best GFLOPs: 5.0407
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #2: GFLOPs: 12.7760. Time: 18128.6467 us. Best GFLOPs: 12.7760
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #3: GFLOPs: 21.0226. Time: 11017.2977 us. Best GFLOPs: 21.0226
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #4: GFLOPs: 27.6096. Time: 8388.8493 us. Best GFLOPs: 27.6096
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #5: GFLOPs: 8.2881. Time: 27945.3020 us. Best GFLOPs: 27.6096
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #6: GFLOPs: 30.5870. Time: 7572.2610 us. Best GFLOPs: 30.5870
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #7: GFLOPs: 46.0020. Time: 5034.8377 us. Best GFLOPs: 46.0020
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #8: GFLOPs: 30.1613. Time: 7679.1381 us. Best GFLOPs: 46.0020
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #9: GFLOPs: 36.3140. Time: 6378.0556 us. Best GFLOPs: 46.0020
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #10: GFLOPs: 51.4280. Time: 4503.6280 us. Best GFLOPs: 51.4280
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #11: GFLOPs: 33.7258. Time: 6867.5231 us. Best GFLOPs: 51.4280
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #12: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(10), T.int64(30)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(8) * T.int64(8) + ax2)
                        v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(28) + ax3)
                        v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(8), T.int64(1), T.int64(8)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(28), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(8) * T.int64(8) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(28) + ow_1 * T.int64(28) + ow_2_init * T.int64(28) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(8) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(28), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(8) * T.int64(8) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(28) + ow_1 * T.int64(28) + ow_2 * T.int64(28) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(8) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(3136)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(2), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(100352))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(100352) // T.int64(1792))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(1792) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 8, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 28])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 8, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b67)
l80 = sch.fuse(l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81 = sch.fuse(l79, preserve_unit_iters=True)
sch.vectorize(loop=l81)
l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b68)
l104 = sch.fuse(l82, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109 = sch.get_loops(block=b69)
l110 = sch.fuse(l105, l106, l107, l108, l109, preserve_unit_iters=True)
l111, l112 = sch.split(loop=l110, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l111)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b113)
b136 = sch.decompose_reduction(block=b113, loop=l120)
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #13: GFLOPs: 38.3580. Time: 6038.1838 us. Best GFLOPs: 51.4280
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #14: GFLOPs: 66.7406. Time: 3470.3360 us. Best GFLOPs: 66.7406
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #15: GFLOPs: 95.1751. Time: 2433.5392 us. Best GFLOPs: 95.1751
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #16: GFLOPs: 8.1483. Time: 28424.6050 us. Best GFLOPs: 95.1751
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #17: GFLOPs: 100.9385. Time: 2294.5890 us. Best GFLOPs: 100.9385
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #18: GFLOPs: 35.8849. Time: 6454.3124 us. Best GFLOPs: 100.9385
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #19: GFLOPs: 22.8443. Time: 10138.7227 us. Best GFLOPs: 100.9385
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #20: GFLOPs: 8.0055. Time: 28931.7327 us. Best GFLOPs: 100.9385
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #21: GFLOPs: 7.8456. Time: 29521.4338 us. Best GFLOPs: 100.9385
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #22: GFLOPs: 141.8255. Time: 1633.0798 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #23: GFLOPs: 6.0026. Time: 38585.1737 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #24: GFLOPs: 12.8271. Time: 18056.5080 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #25: GFLOPs: 65.7227. Time: 3524.0852 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #26: GFLOPs: 22.1488. Time: 10457.1266 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #27: GFLOPs: 23.5459. Time: 9836.6488 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #28: GFLOPs: 7.7905. Time: 29730.1925 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #29: GFLOPs: 10.7231. Time: 21599.4152 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #30: GFLOPs: 25.9975. Time: 8909.0142 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #31: GFLOPs: 62.6878. Time: 3694.6946 us. Best GFLOPs: 141.8255
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #32: GFLOPs: 201.6724. Time: 1148.4585 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #33: GFLOPs: 44.9436. Time: 5153.3993 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #34: GFLOPs: 65.1789. Time: 3553.4851 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #35: GFLOPs: 43.3449. Time: 5343.4809 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #36: GFLOPs: 24.0385. Time: 9635.0449 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #37: GFLOPs: 130.7812. Time: 1770.9913 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #38: GFLOPs: 14.0941. Time: 16433.2569 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #39: GFLOPs: 77.6406. Time: 2983.1370 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #40: GFLOPs: 62.1902. Time: 3724.2567 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #41: GFLOPs: 32.9723. Time: 7024.4560 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #42: GFLOPs: 6.0067. Time: 38559.2703 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #43: GFLOPs: 48.3690. Time: 4788.4487 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #44: GFLOPs: 15.0840. Time: 15354.8533 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #45: GFLOPs: 3.2833. Time: 70542.6687 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #46: GFLOPs: 104.6459. Time: 2213.2972 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #47: GFLOPs: 4.3159. Time: 53665.0957 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #48: GFLOPs: 45.5851. Time: 5080.8819 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #49: GFLOPs: 45.5076. Time: 5089.5340 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #50: GFLOPs: 25.8945. Time: 8944.4535 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #51: GFLOPs: 15.3568. Time: 15082.0460 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #52: GFLOPs: 1.2050. Time: 192212.2617 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #53: GFLOPs: 55.8116. Time: 4149.8956 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #54: GFLOPs: 36.2023. Time: 6397.7208 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #55: GFLOPs: 15.5270. Time: 14916.7450 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #56: GFLOPs: 52.0202. Time: 4452.3575 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #57: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for i0_i1_i2_i3_fused in T.parallel(T.int64(3364)):
            for i4_fused in T.vectorized(T.int64(64)):
                with T.block("data_pad"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i2 = T.axis.spatial(T.int64(58), i0_i1_i2_i3_fused // T.int64(58))
                    v_i3 = T.axis.spatial(T.int64(58), i0_i1_i2_i3_fused % T.int64(58))
                    v_i4 = T.axis.spatial(T.int64(64), i4_fused)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(28), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(28) + oh_1 * T.int64(14) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), ow_1 * T.int64(56) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(14), T.int64(28), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(28) + oh_1 * T.int64(14) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), ow_1 * T.int64(56) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(2) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(28), T.int64(56)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(28) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 14, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 28, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75 = sch.get_loops(block=b68)
l76 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l76)
l77 = sch.fuse(l75, preserve_unit_iters=True)
sch.vectorize(loop=l77)
l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l78, l79, l80, l81, l82, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b70)
l112 = sch.fuse(l111, preserve_unit_iters=True)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b113)
b136 = sch.decompose_reduction(block=b113, loop=l120)
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #58: GFLOPs: 2.6066. Time: 88857.3330 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #59: GFLOPs: 23.7293. Time: 9760.6229 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #60: GFLOPs: 10.2422. Time: 22613.5772 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #61: GFLOPs: 17.5722. Time: 13180.6176 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #62: GFLOPs: 146.3741. Time: 1582.3323 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #63: GFLOPs: 8.4593. Time: 27379.5337 us. Best GFLOPs: 201.6724
2024-04-29 08:20:25 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #64: GFLOPs: 84.5751. Time: 2738.5421 us. Best GFLOPs: 201.6724
2024-04-29 08:33:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:33:49 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 08:33:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 08:33:54 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-29 08:34:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 08:34:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 08:34:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 08:34:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 08:34:53 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0077  1.0077  1.0014  1.0001  1.0001  1.0001  0.9964  0.9523  0.9507  0.9479  0.9479  0.9357  0.9327  0.9122  0.9062  0.8961
[17 : 32]:	0.8930  0.8928  0.8874  0.8681  0.8579  0.8579  0.8579  0.8579  0.8537  0.8487  0.8408  0.8408  0.8400  0.8400  0.8400  0.8400
[33 : 48]:	0.8400  0.8400  0.8400  0.8400  0.8392  0.8358  0.8358  0.8133  0.8128  0.8121  0.8121  0.8121  0.8121  0.8121  0.8121  0.8101
[49 : 64]:	0.8074  0.8007  0.7963  0.7954  0.7937  0.7915  0.7898  0.7886  0.7831  0.7826  0.7823  0.7823  0.7819  0.7786  0.7786  0.7786
2024-04-29 08:34:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:34:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #65: GFLOPs: 182.5800. Time: 1268.5534 us. Best GFLOPs: 201.6724
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #66: GFLOPs: 281.0679. Time: 824.0444 us. Best GFLOPs: 281.0679
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #67: GFLOPs: 169.4189. Time: 1367.0988 us. Best GFLOPs: 281.0679
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #68: GFLOPs: 324.8438. Time: 712.9962 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #69: GFLOPs: 180.3793. Time: 1284.0299 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #70: GFLOPs: 108.4734. Time: 2135.2003 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #71: GFLOPs: 117.4966. Time: 1971.2262 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #72: GFLOPs: 182.5853. Time: 1268.5160 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #73: GFLOPs: 101.4050. Time: 2284.0328 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #74: GFLOPs: 225.7190. Time: 1026.1097 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #75: GFLOPs: 93.3395. Time: 2481.3974 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #76: GFLOPs: 121.8447. Time: 1900.8828 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #77: GFLOPs: 46.4723. Time: 4983.8786 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #78: GFLOPs: 119.2736. Time: 1941.8588 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #79: GFLOPs: 218.3052. Time: 1060.9570 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #80: GFLOPs: 176.4597. Time: 1312.5517 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #81: GFLOPs: 91.1745. Time: 2540.3210 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #82: GFLOPs: 128.1522. Time: 1807.3230 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #83: GFLOPs: 190.4560. Time: 1216.0943 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #84: GFLOPs: 45.9310. Time: 5042.6218 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #85: GFLOPs: 178.5477. Time: 1297.2017 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #86: GFLOPs: 208.8343. Time: 1109.0728 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #87: GFLOPs: 118.2691. Time: 1958.3514 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #88: GFLOPs: 118.9792. Time: 1946.6638 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #89: GFLOPs: 48.6934. Time: 4756.5418 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #90: GFLOPs: 308.9113. Time: 749.7700 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #91: GFLOPs: 246.1644. Time: 940.8852 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #92: GFLOPs: 117.3534. Time: 1973.6313 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #93: GFLOPs: 73.0738. Time: 3169.5698 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #94: GFLOPs: 154.2284. Time: 1501.7490 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #95: GFLOPs: 222.2007. Time: 1042.3567 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #96: GFLOPs: 243.9126. Time: 949.5713 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #97: GFLOPs: 97.6105. Time: 2372.8217 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #98: GFLOPs: 243.7066. Time: 950.3741 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #99: GFLOPs: 100.9261. Time: 2294.8709 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #100: GFLOPs: 106.6609. Time: 2171.4831 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #101: GFLOPs: 191.3953. Time: 1210.1261 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #102: GFLOPs: 115.7193. Time: 2001.5022 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #103: GFLOPs: 53.4948. Time: 4329.6289 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #104: GFLOPs: 95.3294. Time: 2429.6008 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #105: GFLOPs: 149.5025. Time: 1549.2213 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #106: GFLOPs: 255.1359. Time: 907.8001 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #107: GFLOPs: 256.3761. Time: 903.4089 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #108: GFLOPs: 151.0634. Time: 1533.2130 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #109: GFLOPs: 101.2293. Time: 2287.9967 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #110: GFLOPs: 126.1882. Time: 1835.4518 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #111: GFLOPs: 246.0375. Time: 941.3705 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #112: GFLOPs: 95.3655. Time: 2428.6803 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #113: GFLOPs: 100.3917. Time: 2307.0884 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #114: GFLOPs: 256.5242. Time: 902.8871 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #115: GFLOPs: 110.6697. Time: 2092.8259 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #116: GFLOPs: 82.1802. Time: 2818.3467 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #117: GFLOPs: 40.1842. Time: 5763.7653 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #118: GFLOPs: 266.1841. Time: 870.1212 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #119: GFLOPs: 83.3563. Time: 2778.5823 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #120: GFLOPs: 37.7374. Time: 6137.4799 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #121: GFLOPs: 228.7328. Time: 1012.5895 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #122: GFLOPs: 208.0925. Time: 1113.0265 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #123: GFLOPs: 40.6258. Time: 5701.1143 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #124: GFLOPs: 41.0170. Time: 5646.7412 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #125: GFLOPs: 99.9111. Time: 2318.1844 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #126: GFLOPs: 69.4746. Time: 3333.7704 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #127: GFLOPs: 111.1176. Time: 2084.3905 us. Best GFLOPs: 324.8438
2024-04-29 08:36:03 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #128: GFLOPs: 109.2233. Time: 2120.5407 us. Best GFLOPs: 324.8438
2024-04-29 09:19:18 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:19:19 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:19:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 09:19:23 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:19:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 09:19:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 09:20:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 09:20:14 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 09:20:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9376  0.9376  0.9376  0.8823  0.8667  0.8383  0.8286  0.8286  0.8212  0.8124  0.8124  0.8124  0.8124  0.8109  0.8095  0.8008
[17 : 32]:	0.8008  0.8008  0.7973  0.7861  0.7810  0.7770  0.7770  0.7770  0.7745  0.7658  0.7622  0.7588  0.7566  0.7518  0.7505  0.7493
[33 : 48]:	0.7488  0.7465  0.7423  0.7380  0.7380  0.7379  0.7323  0.7316  0.7280  0.7272  0.7231  0.7209  0.7132  0.7119  0.7119  0.7097
[49 : 64]:	0.7097  0.7096  0.7087  0.7048  0.7044  0.7026  0.6977  0.6937  0.6927  0.6830  0.6825  0.6825  0.6817  0.6813  0.6811  0.6811
2024-04-29 09:20:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:20:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #129: GFLOPs: 317.9662. Time: 728.4185 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #130: GFLOPs: 291.2094. Time: 795.3465 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #131: GFLOPs: 298.9788. Time: 774.6783 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #132: GFLOPs: 120.8961. Time: 1915.7969 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #133: GFLOPs: 297.4100. Time: 778.7646 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #134: GFLOPs: 63.1605. Time: 3667.0471 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #135: GFLOPs: 139.0264. Time: 1665.9595 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #136: GFLOPs: 73.2791. Time: 3160.6882 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #137: GFLOPs: 85.3556. Time: 2713.5006 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #138: GFLOPs: 130.0285. Time: 1781.2429 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #139: GFLOPs: 156.0863. Time: 1483.8740 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #140: GFLOPs: 179.4456. Time: 1290.7113 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #141: GFLOPs: 98.6959. Time: 2346.7280 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #142: GFLOPs: 121.3762. Time: 1908.2201 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #143: GFLOPs: 317.9349. Time: 728.4900 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #144: GFLOPs: 127.6267. Time: 1814.7644 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #145: GFLOPs: 106.2136. Time: 2180.6280 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #146: GFLOPs: 173.2761. Time: 1336.6672 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #147: GFLOPs: 144.0119. Time: 1608.2870 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #148: GFLOPs: 200.9716. Time: 1152.4634 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #149: GFLOPs: 180.3163. Time: 1284.4782 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #150: GFLOPs: 151.5638. Time: 1528.1509 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #151: GFLOPs: 177.6828. Time: 1303.5162 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #152: GFLOPs: 121.8280. Time: 1901.1427 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #153: GFLOPs: 193.2774. Time: 1198.3421 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #154: GFLOPs: 302.4089. Time: 765.8916 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #155: GFLOPs: 317.4008. Time: 729.7159 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #156: GFLOPs: 174.1751. Time: 1329.7675 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #157: GFLOPs: 168.7012. Time: 1372.9149 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #158: GFLOPs: 232.5207. Time: 996.0937 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #159: GFLOPs: 216.3459. Time: 1070.5652 us. Best GFLOPs: 324.8438
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #160: GFLOPs: 456.4572. Time: 507.4132 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #161: GFLOPs: 231.5171. Time: 1000.4117 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #162: GFLOPs: 411.2133. Time: 563.2415 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #163: GFLOPs: 329.9245. Time: 702.0163 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #164: GFLOPs: 94.7328. Time: 2444.9021 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #165: GFLOPs: 134.0676. Time: 1727.5793 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #166: GFLOPs: 222.5743. Time: 1040.6074 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #167: GFLOPs: 185.0319. Time: 1251.7428 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #168: GFLOPs: 312.0174. Time: 742.3061 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #169: GFLOPs: 130.7212. Time: 1771.8043 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #170: GFLOPs: 130.6571. Time: 1772.6737 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #171: GFLOPs: 209.0580. Time: 1107.8862 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #172: GFLOPs: 313.5738. Time: 738.6216 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #173: GFLOPs: 108.2343. Time: 2139.9170 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #174: GFLOPs: 161.7869. Time: 1431.5894 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #175: GFLOPs: 192.9379. Time: 1200.4507 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #176: GFLOPs: 140.1299. Time: 1652.8413 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #177: GFLOPs: 104.3574. Time: 2219.4153 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #178: GFLOPs: 180.2450. Time: 1284.9864 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #179: GFLOPs: 252.8141. Time: 916.1371 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #180: GFLOPs: 213.0044. Time: 1087.3597 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #181: GFLOPs: 189.1194. Time: 1224.6887 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #182: GFLOPs: 161.4622. Time: 1434.4683 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #183: GFLOPs: 224.1041. Time: 1033.5038 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #184: GFLOPs: 197.3750. Time: 1173.4636 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #185: GFLOPs: 157.2764. Time: 1472.6458 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #186: GFLOPs: 146.8877. Time: 1576.7997 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #187: GFLOPs: 84.7014. Time: 2734.4579 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #188: GFLOPs: 70.3991. Time: 3289.9909 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #189: GFLOPs: 125.7535. Time: 1841.7974 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #190: GFLOPs: 112.5458. Time: 2057.9385 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #191: GFLOPs: 140.2825. Time: 1651.0433 us. Best GFLOPs: 456.4572
2024-04-29 09:21:28 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #192: GFLOPs: 138.8767. Time: 1667.7555 us. Best GFLOPs: 456.4572
2024-04-29 10:06:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:06:59 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:07:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:07:03 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:07:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:07:29 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:07:41 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:07:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:08:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9692  0.9279  0.8200  0.7919  0.7810  0.7571  0.7566  0.7514  0.7401  0.7167  0.7145  0.7113  0.7104  0.7064  0.7014  0.6972
[17 : 32]:	0.6948  0.6918  0.6905  0.6884  0.6789  0.6789  0.6727  0.6683  0.6622  0.6622  0.6622  0.6622  0.6622  0.6622  0.6555  0.6550
[33 : 48]:	0.6521  0.6508  0.6474  0.6453  0.6412  0.6368  0.6368  0.6310  0.6242  0.6240  0.6240  0.6240  0.6240  0.6240  0.6240  0.6235
[49 : 64]:	0.6223  0.6195  0.6189  0.6189  0.6189  0.6185  0.6172  0.6159  0.6159  0.6137  0.6133  0.6126  0.6126  0.6113  0.6094  0.6057
2024-04-29 10:08:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:08:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #193: GFLOPs: 449.7308. Time: 515.0023 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #194: GFLOPs: 427.6924. Time: 541.5398 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #195: GFLOPs: 199.6138. Time: 1160.3024 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #196: GFLOPs: 442.8781. Time: 522.9711 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #197: GFLOPs: 141.7969. Time: 1633.4094 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #198: GFLOPs: 255.5782. Time: 906.2293 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #199: GFLOPs: 134.2030. Time: 1725.8361 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #200: GFLOPs: 212.8319. Time: 1088.2412 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #201: GFLOPs: 97.3606. Time: 2378.9140 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #202: GFLOPs: 191.1522. Time: 1211.6652 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #203: GFLOPs: 190.2966. Time: 1217.1130 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #204: GFLOPs: 173.0109. Time: 1338.7157 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #205: GFLOPs: 199.4393. Time: 1161.3181 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #206: GFLOPs: 289.7428. Time: 799.3724 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #207: GFLOPs: 151.9297. Time: 1524.4707 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #208: GFLOPs: 100.4278. Time: 2306.2573 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #209: GFLOPs: 140.8861. Time: 1643.9691 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #210: GFLOPs: 348.5097. Time: 664.5796 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #211: GFLOPs: 292.4392. Time: 792.0020 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #212: GFLOPs: 275.9910. Time: 839.2029 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #213: GFLOPs: 239.4120. Time: 967.4219 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #214: GFLOPs: 96.8553. Time: 2391.3242 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #215: GFLOPs: 322.8103. Time: 717.4877 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #216: GFLOPs: 111.3747. Time: 2079.5791 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #217: GFLOPs: 101.3536. Time: 2285.1922 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #218: GFLOPs: 70.1352. Time: 3302.3703 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #219: GFLOPs: 352.7856. Time: 656.5245 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #220: GFLOPs: 201.0519. Time: 1152.0031 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #221: GFLOPs: 166.2715. Time: 1392.9770 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #222: GFLOPs: 299.9902. Time: 772.0667 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #223: GFLOPs: 215.1854. Time: 1076.3391 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #224: GFLOPs: 183.1762. Time: 1264.4239 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #225: GFLOPs: 145.8021. Time: 1588.5393 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #226: GFLOPs: 102.2046. Time: 2266.1653 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #227: GFLOPs: 291.3102. Time: 795.0714 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #228: GFLOPs: 436.1567. Time: 531.0302 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #229: GFLOPs: 183.8517. Time: 1259.7785 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #230: GFLOPs: 276.2960. Time: 838.2765 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #231: GFLOPs: 144.7945. Time: 1599.5936 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #232: GFLOPs: 189.8246. Time: 1220.1392 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #233: GFLOPs: 174.4269. Time: 1327.8480 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #234: GFLOPs: 78.0062. Time: 2969.1533 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #235: GFLOPs: 336.4967. Time: 688.3051 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #236: GFLOPs: 356.3544. Time: 649.9496 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #237: GFLOPs: 184.9141. Time: 1252.5403 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #238: GFLOPs: 309.4692. Time: 748.4183 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #239: GFLOPs: 216.1962. Time: 1071.3064 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #240: GFLOPs: 178.8660. Time: 1294.8937 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #241: GFLOPs: 149.4257. Time: 1550.0169 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #242: GFLOPs: 139.2400. Time: 1663.4038 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #243: GFLOPs: 191.3902. Time: 1210.1579 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #244: GFLOPs: 167.0065. Time: 1386.8465 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #245: GFLOPs: 164.2681. Time: 1409.9663 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #246: GFLOPs: 149.2740. Time: 1551.5929 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #247: GFLOPs: 110.5555. Time: 2094.9875 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #248: GFLOPs: 101.3104. Time: 2286.1661 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #249: GFLOPs: 208.7179. Time: 1109.6911 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #250: GFLOPs: 102.6019. Time: 2257.3896 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #251: GFLOPs: 91.4029. Time: 2533.9716 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #252: GFLOPs: 438.2309. Time: 528.5168 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #253: GFLOPs: 239.4550. Time: 967.2481 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #254: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused in T.parallel(T.int64(448), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(58)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(224) // T.int64(16) * T.int64(4) + ax2)
                        v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(224) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(224) // T.int64(16) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(2) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), ow_1 * T.int64(28) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(16) // T.int64(2) * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(4), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(224) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(224) // T.int64(16) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(2) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), ow_1 * T.int64(28) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(16) // T.int64(2) * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(28)):
                    for ax4_fused in T.vectorized(T.int64(2)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(224) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(224) // T.int64(16) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(56), ow_1 * T.int64(28) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(16) // T.int64(2) * T.int64(4) + oc_block_1 * T.int64(2) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 2, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 14, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[8, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85 = sch.fuse(l83, preserve_unit_iters=True)
sch.vectorize(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l105)
l106 = sch.fuse(l104, preserve_unit_iters=True)
sch.vectorize(loop=l106)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
l115 = sch.fuse(l114, preserve_unit_iters=True)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b116)
b136 = sch.decompose_reduction(block=b116, loop=l120)
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #255: GFLOPs: 180.6784. Time: 1281.9039 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #256: GFLOPs: 45.1638. Time: 5128.2740 us. Best GFLOPs: 456.4572
2024-04-29 10:09:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:09:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:09:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:09:37 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:09:49 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:10:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:10:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:10:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:10:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.7968  0.7780  0.7780  0.7780  0.7780  0.7633  0.7625  0.7595  0.7404  0.7198  0.7163  0.7140  0.7093  0.7079  0.7071  0.7030
[17 : 32]:	0.6971  0.6801  0.6758  0.6758  0.6695  0.6630  0.6580  0.6569  0.6564  0.6557  0.6535  0.6492  0.6477  0.6471  0.6450  0.6412
[33 : 48]:	0.6412  0.6403  0.6356  0.6344  0.6338  0.6324  0.6320  0.6306  0.6246  0.6238  0.6189  0.6183  0.6171  0.6164  0.6164  0.6142
[49 : 64]:	0.6118  0.6117  0.6114  0.6114  0.6111  0.6103  0.6077  0.6077  0.6047  0.6012  0.6006  0.5939  0.5930  0.5920  0.5850  0.5840
2024-04-29 10:10:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:10:36 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #257: GFLOPs: 220.2076. Time: 1051.7912 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #258: GFLOPs: 54.9374. Time: 4215.9297 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #259: GFLOPs: 45.1956. Time: 5124.6730 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #260: GFLOPs: 52.3396. Time: 4425.1863 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #261: GFLOPs: 225.0659. Time: 1029.0873 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #262: GFLOPs: 124.7614. Time: 1856.4436 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #263: GFLOPs: 95.9761. Time: 2413.2308 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #264: GFLOPs: 130.2801. Time: 1777.8038 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #265: GFLOPs: 205.8123. Time: 1125.3575 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #266: GFLOPs: 114.7076. Time: 2019.1550 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #267: GFLOPs: 156.8339. Time: 1476.8008 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #268: GFLOPs: 113.5628. Time: 2039.5091 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #269: GFLOPs: 87.4729. Time: 2647.8190 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #270: GFLOPs: 122.0928. Time: 1897.0198 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #271: GFLOPs: 107.4997. Time: 2154.5405 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #272: GFLOPs: 121.9031. Time: 1899.9719 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #273: GFLOPs: 105.8110. Time: 2188.9257 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #274: GFLOPs: 159.0271. Time: 1456.4340 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #275: GFLOPs: 168.7696. Time: 1372.3587 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #276: GFLOPs: 70.4496. Time: 3287.6318 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #277: GFLOPs: 160.0620. Time: 1447.0165 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #278: GFLOPs: 100.4995. Time: 2304.6126 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #279: GFLOPs: 175.2322. Time: 1321.7458 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #280: GFLOPs: 142.6956. Time: 1623.1224 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #281: GFLOPs: 79.8059. Time: 2902.1970 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #282: GFLOPs: 158.3037. Time: 1463.0889 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #283: GFLOPs: 207.5318. Time: 1116.0333 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #284: GFLOPs: 97.1211. Time: 2384.7792 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #285: GFLOPs: 165.7435. Time: 1397.4147 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #286: GFLOPs: 148.4405. Time: 1560.3047 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #287: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused in T.parallel(T.int64(392), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(10)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) + ax2)
                        v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(56) * T.int64(8) + ax3)
                        v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(56) * T.int64(8) + ow_1 * T.int64(8) + ow_2_init * T.int64(8) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(32) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(56) * T.int64(8) + ow_1 * T.int64(8) + ow_2 * T.int64(8) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(32) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(3136)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(2), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(100352))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(100352) // T.int64(1792))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(1792) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 56, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 8])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b67)
l83 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84 = sch.fuse(l82, preserve_unit_iters=True)
sch.vectorize(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b68)
l104 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110 = sch.get_loops(block=b69)
l111 = sch.fuse(l106, l107, l108, l109, l110, preserve_unit_iters=True)
l112, l113 = sch.split(loop=l111, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l112)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b114)
b134 = sch.decompose_reduction(block=b114, loop=l118)
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #288: GFLOPs: 47.5273. Time: 4873.2522 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #289: GFLOPs: 231.2892. Time: 1001.3976 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #290: GFLOPs: 292.5346. Time: 791.7438 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #291: GFLOPs: 132.1834. Time: 1752.2044 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #292: GFLOPs: 209.7523. Time: 1104.2188 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #293: GFLOPs: 356.5957. Time: 649.5098 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #294: GFLOPs: 202.1554. Time: 1145.7144 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #295: GFLOPs: 172.6620. Time: 1341.4205 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #296: GFLOPs: 232.3790. Time: 996.7013 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #297: GFLOPs: 196.8356. Time: 1176.6796 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #298: GFLOPs: 216.9256. Time: 1067.7044 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #299: GFLOPs: 172.9849. Time: 1338.9173 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #300: GFLOPs: 313.8612. Time: 737.9453 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #301: GFLOPs: 426.4335. Time: 543.1385 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #302: GFLOPs: 349.0941. Time: 663.4671 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #303: GFLOPs: 348.1558. Time: 665.2551 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #304: GFLOPs: 314.3066. Time: 736.8997 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #305: GFLOPs: 362.4844. Time: 638.9582 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #306: GFLOPs: 130.5903. Time: 1773.5802 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #307: GFLOPs: 132.4561. Time: 1748.5970 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #308: GFLOPs: 133.1123. Time: 1739.9771 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #309: GFLOPs: 431.6591. Time: 536.5633 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #310: GFLOPs: 107.6446. Time: 2151.6407 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #311: GFLOPs: 363.4461. Time: 637.2676 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #312: GFLOPs: 359.7863. Time: 643.7499 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #313: GFLOPs: 313.7588. Time: 738.1862 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #314: GFLOPs: 158.4506. Time: 1461.7323 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #315: GFLOPs: 291.0714. Time: 795.7238 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #316: GFLOPs: 335.6395. Time: 690.0629 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #317: GFLOPs: 90.9318. Time: 2547.1013 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #318: GFLOPs: 98.1579. Time: 2359.5896 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #319: GFLOPs: 64.8545. Time: 3571.2627 us. Best GFLOPs: 456.4572
2024-04-29 10:12:05 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #320: GFLOPs: 41.8867. Time: 5529.4939 us. Best GFLOPs: 456.4572
2024-04-29 10:49:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:49:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:50:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:50:02 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:50:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:50:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:50:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:50:53 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 10:51:01 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9576  0.9576  0.9541  0.8478  0.8434  0.8395  0.8389  0.8078  0.8049  0.7823  0.7823  0.7796  0.7790  0.7777  0.7613  0.7596
[17 : 32]:	0.7554  0.7354  0.7257  0.7081  0.7027  0.6910  0.6907  0.6879  0.6824  0.6821  0.6805  0.6770  0.6749  0.6521  0.6509  0.6505
[33 : 48]:	0.6505  0.6470  0.6464  0.6460  0.6384  0.6383  0.6368  0.6368  0.6351  0.6308  0.6290  0.6288  0.6286  0.6285  0.6268  0.6242
[49 : 64]:	0.6242  0.6227  0.6211  0.6208  0.6191  0.6187  0.6169  0.6152  0.6147  0.6109  0.6109  0.6082  0.6070  0.6034  0.6031  0.6031
2024-04-29 10:51:01 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:51:01 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #321: GFLOPs: 448.0814. Time: 516.8981 us. Best GFLOPs: 456.4572
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #322: GFLOPs: 444.9989. Time: 520.4786 us. Best GFLOPs: 456.4572
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #323: GFLOPs: 460.5543. Time: 502.8993 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #324: GFLOPs: 308.7343. Time: 750.1998 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #325: GFLOPs: 321.7067. Time: 719.9490 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #326: GFLOPs: 309.3483. Time: 748.7109 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #327: GFLOPs: 308.5803. Time: 750.5743 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #328: GFLOPs: 450.5681. Time: 514.0454 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #329: GFLOPs: 184.0459. Time: 1258.4490 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #330: GFLOPs: 98.4186. Time: 2353.3406 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #331: GFLOPs: 110.8467. Time: 2089.4841 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #332: GFLOPs: 356.1903. Time: 650.2491 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #333: GFLOPs: 356.1907. Time: 650.2484 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #334: GFLOPs: 110.9926. Time: 2086.7372 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #335: GFLOPs: 221.2939. Time: 1046.6281 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #336: GFLOPs: 312.2935. Time: 741.6499 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #337: GFLOPs: 348.9406. Time: 663.7589 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #338: GFLOPs: 296.7021. Time: 780.6229 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #339: GFLOPs: 221.7080. Time: 1044.6730 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #340: GFLOPs: 349.2062. Time: 663.2540 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #341: GFLOPs: 385.9473. Time: 600.1141 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #342: GFLOPs: 184.4195. Time: 1255.8998 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #343: GFLOPs: 227.1602. Time: 1019.5995 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #344: GFLOPs: 218.1017. Time: 1061.9469 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #345: GFLOPs: 290.4052. Time: 797.5492 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #346: GFLOPs: 307.5819. Time: 753.0105 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #347: GFLOPs: 289.9679. Time: 798.7520 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #348: GFLOPs: 305.5334. Time: 758.0593 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #349: GFLOPs: 304.7025. Time: 760.1264 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #350: GFLOPs: 318.8989. Time: 726.2879 us. Best GFLOPs: 460.5543
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #351: GFLOPs: 462.2101. Time: 501.0977 us. Best GFLOPs: 462.2101
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #352: GFLOPs: 480.8121. Time: 481.7109 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #353: GFLOPs: 231.0601. Time: 1002.3902 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #354: GFLOPs: 197.3878. Time: 1173.3879 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #355: GFLOPs: 107.1905. Time: 2160.7553 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #356: GFLOPs: 227.1925. Time: 1019.4546 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #357: GFLOPs: 430.9330. Time: 537.4674 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #358: GFLOPs: 388.6250. Time: 595.9792 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #359: GFLOPs: 179.2470. Time: 1292.1411 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #360: GFLOPs: 89.8692. Time: 2577.2163 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #361: GFLOPs: 199.9558. Time: 1158.3180 us. Best GFLOPs: 480.8121
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #362: GFLOPs: 489.3366. Time: 473.3192 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #363: GFLOPs: 344.5244. Time: 672.2671 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #364: GFLOPs: 145.4577. Time: 1592.3003 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #365: GFLOPs: 186.8990. Time: 1239.2382 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #366: GFLOPs: 183.8971. Time: 1259.4672 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #367: GFLOPs: 168.5748. Time: 1373.9443 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #368: GFLOPs: 172.1061. Time: 1345.7537 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #369: GFLOPs: 313.4803. Time: 738.8420 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #370: GFLOPs: 248.1902. Time: 933.2054 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #371: GFLOPs: 188.9679. Time: 1225.6706 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #372: GFLOPs: 165.5754. Time: 1398.8337 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #373: GFLOPs: 252.2305. Time: 918.2570 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #374: GFLOPs: 293.2048. Time: 789.9339 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #375: GFLOPs: 271.4439. Time: 853.2607 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #376: GFLOPs: 201.3804. Time: 1150.1240 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #377: GFLOPs: 319.7484. Time: 724.3584 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #378: GFLOPs: 106.5637. Time: 2173.4645 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #379: GFLOPs: 153.7660. Time: 1506.2655 us. Best GFLOPs: 489.3366
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #380: GFLOPs: 516.0120. Time: 448.8508 us. Best GFLOPs: 516.0120
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #381: GFLOPs: 340.0242. Time: 681.1645 us. Best GFLOPs: 516.0120
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #382: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(16)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(28) + ax2)
                        v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(4) * T.int64(14) + ax3)
                        v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_0 in range(T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(16)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(8) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_1 * T.int64(14) + oh_2_init * T.int64(14) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(4) * T.int64(14) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(8) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(4) * T.int64(14) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(28), T.int64(14)):
                    for ax4_fused in T.vectorized(T.int64(32)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(28) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(4) * T.int64(14) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 14, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 16, 2, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b68)
l80 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81 = sch.fuse(l79, preserve_unit_iters=True)
sch.vectorize(loop=l81)
l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l82, preserve_unit_iters=True)
sch.parallel(loop=l105)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b70)
l113 = sch.fuse(l112, preserve_unit_iters=True)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b114)
b138 = sch.decompose_reduction(block=b114, loop=l122)
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #383: GFLOPs: 11.1808. Time: 20715.1564 us. Best GFLOPs: 516.0120
2024-04-29 10:52:36 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #384: GFLOPs: 69.3717. Time: 3338.7184 us. Best GFLOPs: 516.0120
2024-04-29 11:46:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 11:46:26 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 11:46:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 11:46:30 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 11:46:43 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 11:46:56 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 11:47:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 11:47:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 11:47:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9844  0.9844  0.9518  0.9270  0.8730  0.8651  0.8314  0.8180  0.8087  0.7862  0.7862  0.7856  0.7854  0.7843  0.7843  0.7695
[17 : 32]:	0.7695  0.7681  0.7649  0.7624  0.7613  0.7588  0.7563  0.7542  0.7521  0.7484  0.7307  0.7307  0.7307  0.7307  0.7307  0.7307
[33 : 48]:	0.7307  0.7263  0.7195  0.7175  0.7167  0.7162  0.7161  0.7078  0.7030  0.7004  0.7004  0.7004  0.6991  0.6965  0.6933  0.6885
[49 : 64]:	0.6834  0.6832  0.6785  0.6748  0.6708  0.6668  0.6647  0.6647  0.6647  0.6631  0.6583  0.6570  0.6504  0.6459  0.6448  0.6448
2024-04-29 11:47:32 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 11:47:32 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #385: GFLOPs: 519.0949. Time: 446.1851 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #386: GFLOPs: 100.9572. Time: 2294.1655 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #387: GFLOPs: 95.4265. Time: 2427.1280 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #388: GFLOPs: 401.3776. Time: 577.0437 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #389: GFLOPs: 445.7200. Time: 519.6366 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #390: GFLOPs: 229.6206. Time: 1008.6743 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #391: GFLOPs: 186.3176. Time: 1243.1054 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #392: GFLOPs: 164.7455. Time: 1405.8798 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #393: GFLOPs: 436.8792. Time: 530.1521 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #394: GFLOPs: 450.2372. Time: 514.4231 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #395: GFLOPs: 144.1958. Time: 1606.2350 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #396: GFLOPs: 234.5742. Time: 987.3736 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #397: GFLOPs: 108.1296. Time: 2141.9892 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #398: GFLOPs: 222.8984. Time: 1039.0939 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #399: GFLOPs: 44.3065. Time: 5227.4988 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #400: GFLOPs: 142.4064. Time: 1626.4190 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #401: GFLOPs: 156.1264. Time: 1483.4933 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #402: GFLOPs: 100.8487. Time: 2296.6337 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #403: GFLOPs: 431.1860. Time: 537.1520 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #404: GFLOPs: 330.3627. Time: 701.0853 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #405: GFLOPs: 425.5441. Time: 544.2736 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #406: GFLOPs: 330.0004. Time: 701.8550 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #407: GFLOPs: 153.6031. Time: 1507.8629 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #408: GFLOPs: 193.3250. Time: 1198.0470 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #409: GFLOPs: 196.3768. Time: 1179.4288 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #410: GFLOPs: 329.1579. Time: 703.6515 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #411: GFLOPs: 223.3368. Time: 1037.0544 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #412: GFLOPs: 223.9779. Time: 1034.0859 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #413: GFLOPs: 120.8532. Time: 1916.4771 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #414: GFLOPs: 468.8902. Time: 493.9587 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #415: GFLOPs: 205.9365. Time: 1124.6789 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #416: GFLOPs: 88.5376. Time: 2615.9779 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #417: GFLOPs: 160.1889. Time: 1445.8705 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #418: GFLOPs: 459.7080. Time: 503.8251 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #419: GFLOPs: 357.5366. Time: 647.8006 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #420: GFLOPs: 458.5408. Time: 505.1075 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #421: GFLOPs: 408.7196. Time: 566.6780 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #422: GFLOPs: 451.4996. Time: 512.9848 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #423: GFLOPs: 187.7087. Time: 1233.8926 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #424: GFLOPs: 335.5185. Time: 690.3120 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #425: GFLOPs: 380.8442. Time: 608.1553 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #426: GFLOPs: 183.8649. Time: 1259.6883 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #427: GFLOPs: 456.0668. Time: 507.8476 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #428: GFLOPs: 478.5191. Time: 484.0191 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #429: GFLOPs: 232.9358. Time: 994.3188 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #430: GFLOPs: 431.3400. Time: 536.9602 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #431: GFLOPs: 283.1666. Time: 817.9369 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #432: GFLOPs: 330.0671. Time: 701.7131 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #433: GFLOPs: 357.5316. Time: 647.8096 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #434: GFLOPs: 358.1557. Time: 646.6808 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #435: GFLOPs: 305.6906. Time: 757.6693 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #436: GFLOPs: 185.7156. Time: 1247.1352 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #437: GFLOPs: 171.7600. Time: 1348.4650 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #438: GFLOPs: 205.8483. Time: 1125.1607 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #439: GFLOPs: 148.8063. Time: 1556.4688 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #440: GFLOPs: 155.1695. Time: 1492.6418 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #441: GFLOPs: 424.3844. Time: 545.7609 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #442: GFLOPs: 209.4409. Time: 1105.8606 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #443: GFLOPs: 306.2976. Time: 756.1679 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #444: GFLOPs: 348.8002. Time: 664.0260 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #445: GFLOPs: 318.7986. Time: 726.5165 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #446: GFLOPs: 4.2749. Time: 54179.6270 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #447: GFLOPs: 14.6428. Time: 15817.4831 us. Best GFLOPs: 519.0949
2024-04-29 11:48:53 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #448: GFLOPs: 67.6185. Time: 3425.2828 us. Best GFLOPs: 519.0949
2024-04-29 12:25:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:25:41 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:25:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:25:45 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 12:25:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:26:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:26:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:26:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:26:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9233  0.9080  0.8934  0.8798  0.8462  0.7832  0.7763  0.7750  0.7718  0.7662  0.7662  0.7662  0.7662  0.7662  0.7643  0.7636
[17 : 32]:	0.7583  0.7583  0.7489  0.7425  0.7385  0.7362  0.7294  0.7293  0.7288  0.7202  0.7188  0.7153  0.7148  0.7147  0.7117  0.7088
[33 : 48]:	0.7078  0.7074  0.7040  0.7009  0.6980  0.6828  0.6827  0.6811  0.6736  0.6736  0.6736  0.6734  0.6726  0.6717  0.6703  0.6692
[49 : 64]:	0.6652  0.6651  0.6632  0.6626  0.6602  0.6602  0.6591  0.6503  0.6486  0.6445  0.6416  0.6416  0.6409  0.6387  0.6357  0.6348
2024-04-29 12:26:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:26:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #449: GFLOPs: 442.2331. Time: 523.7338 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #450: GFLOPs: 456.6091. Time: 507.2445 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #451: GFLOPs: 234.5712. Time: 987.3864 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #452: GFLOPs: 492.5557. Time: 470.2258 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #453: GFLOPs: 460.3504. Time: 503.1220 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #454: GFLOPs: 430.7139. Time: 537.7408 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #455: GFLOPs: 409.3359. Time: 565.8248 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #456: GFLOPs: 331.6889. Time: 698.2821 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #457: GFLOPs: 209.9847. Time: 1102.9964 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #458: GFLOPs: 198.5287. Time: 1166.6446 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #459: GFLOPs: 444.5625. Time: 520.9896 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #460: GFLOPs: 84.7270. Time: 2733.6308 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #461: GFLOPs: 83.3509. Time: 2778.7637 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #462: GFLOPs: 160.6947. Time: 1441.3200 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #463: GFLOPs: 430.4394. Time: 538.0837 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #464: GFLOPs: 411.0766. Time: 563.4288 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #465: GFLOPs: 338.7407. Time: 683.7454 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #466: GFLOPs: 220.6753. Time: 1049.5621 us. Best GFLOPs: 519.0949
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #467: GFLOPs: 522.9646. Time: 442.8835 us. Best GFLOPs: 522.9646
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #468: GFLOPs: 426.1546. Time: 543.4939 us. Best GFLOPs: 522.9646
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #469: GFLOPs: 473.0273. Time: 489.6386 us. Best GFLOPs: 522.9646
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #470: GFLOPs: 523.0366. Time: 442.8226 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #471: GFLOPs: 320.7223. Time: 722.1588 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #472: GFLOPs: 198.2197. Time: 1168.4634 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #473: GFLOPs: 185.7320. Time: 1247.0245 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #474: GFLOPs: 332.5628. Time: 696.4471 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #475: GFLOPs: 320.4396. Time: 722.7958 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #476: GFLOPs: 399.0524. Time: 580.4061 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #477: GFLOPs: 320.1354. Time: 723.4827 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #478: GFLOPs: 391.7058. Time: 591.2918 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #479: GFLOPs: 342.5045. Time: 676.2318 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #480: GFLOPs: 452.4068. Time: 511.9560 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #481: GFLOPs: 406.2045. Time: 570.1867 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #482: GFLOPs: 320.4943. Time: 722.6725 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #483: GFLOPs: 329.3778. Time: 703.1817 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #484: GFLOPs: 355.2037. Time: 652.0551 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #485: GFLOPs: 361.0039. Time: 641.5787 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #486: GFLOPs: 119.4189. Time: 1939.4951 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #487: GFLOPs: 427.9067. Time: 541.2685 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #488: GFLOPs: 341.6362. Time: 677.9505 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #489: GFLOPs: 108.9157. Time: 2126.5297 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #490: GFLOPs: 475.7774. Time: 486.8083 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #491: GFLOPs: 88.8509. Time: 2606.7528 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #492: GFLOPs: 356.4517. Time: 649.7723 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #493: GFLOPs: 394.7308. Time: 586.7605 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #494: GFLOPs: 409.2806. Time: 565.9012 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #495: GFLOPs: 346.8984. Time: 667.6664 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #496: GFLOPs: 144.2062. Time: 1606.1195 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #497: GFLOPs: 388.2854. Time: 596.5004 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #498: GFLOPs: 353.0222. Time: 656.0846 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #499: GFLOPs: 430.1978. Time: 538.3859 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #500: GFLOPs: 330.1092. Time: 701.6236 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #501: GFLOPs: 346.4357. Time: 668.5582 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #502: GFLOPs: 346.1851. Time: 669.0422 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #503: GFLOPs: 135.3123. Time: 1711.6873 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #504: GFLOPs: 464.6869. Time: 498.4268 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #505: GFLOPs: 175.8873. Time: 1316.8231 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #506: GFLOPs: 314.6575. Time: 736.0779 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #507: GFLOPs: 339.9598. Time: 681.2935 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #508: GFLOPs: 338.5533. Time: 684.1239 us. Best GFLOPs: 523.0366
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #509: GFLOPs: 531.6871. Time: 435.6179 us. Best GFLOPs: 531.6871
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #510: GFLOPs: 102.1983. Time: 2266.3042 us. Best GFLOPs: 531.6871
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #511: GFLOPs: 6.2807. Time: 36876.7650 us. Best GFLOPs: 531.6871
2024-04-29 12:28:08 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #512: GFLOPs: 10.5838. Time: 21883.7564 us. Best GFLOPs: 531.6871
2024-04-29 12:56:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:56:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:56:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:56:55 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 12:57:08 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:57:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:57:36 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:57:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xda1fb38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x10250938)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x11f5f9a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb3895d8)]: 0 failure(s)
2024-04-29 12:57:58 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9532  0.9288  0.8589  0.8586  0.8048  0.8047  0.8000  0.7941  0.7934  0.7921  0.7858  0.7778  0.7742  0.7615  0.7582  0.7490
[17 : 32]:	0.7466  0.7299  0.7293  0.7232  0.7201  0.7192  0.7192  0.7192  0.7192  0.7157  0.7151  0.7111  0.7100  0.7096  0.7065  0.7065
[33 : 48]:	0.7055  0.6993  0.6945  0.6945  0.6940  0.6935  0.6931  0.6930  0.6904  0.6894  0.6894  0.6894  0.6887  0.6858  0.6858  0.6858
[49 : 64]:	0.6778  0.6778  0.6778  0.6778  0.6778  0.6778  0.6778  0.6778  0.6778  0.6754  0.6753  0.6740  0.6732  0.6715  0.6673  0.6672
2024-04-29 12:57:58 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:57:58 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #513: GFLOPs: 103.6564. Time: 2234.4237 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #514: GFLOPs: 393.3673. Time: 588.7943 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #515: GFLOPs: 467.0181. Time: 495.9388 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #516: GFLOPs: 435.7719. Time: 531.4992 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #517: GFLOPs: 455.9871. Time: 507.9363 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #518: GFLOPs: 218.7248. Time: 1058.9218 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #519: GFLOPs: 443.2555. Time: 522.5258 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #520: GFLOPs: 476.1299. Time: 486.4480 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #521: GFLOPs: 453.7886. Time: 510.3972 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #522: GFLOPs: 89.7005. Time: 2582.0634 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #523: GFLOPs: 501.7985. Time: 461.5645 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #524: GFLOPs: 395.6209. Time: 585.4403 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #525: GFLOPs: 425.5651. Time: 544.2467 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #526: GFLOPs: 408.7244. Time: 566.6714 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #527: GFLOPs: 407.3655. Time: 568.5617 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #528: GFLOPs: 404.6130. Time: 572.4295 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #529: GFLOPs: 451.2645. Time: 513.2520 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #530: GFLOPs: 393.5124. Time: 588.5771 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #531: GFLOPs: 171.9575. Time: 1346.9163 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #532: GFLOPs: 419.4105. Time: 552.2333 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #533: GFLOPs: 401.3627. Time: 577.0652 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #534: GFLOPs: 115.3120. Time: 2008.5714 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #535: GFLOPs: 491.2311. Time: 471.4938 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #536: GFLOPs: 479.2989. Time: 483.2317 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #537: GFLOPs: 490.2959. Time: 472.3931 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #538: GFLOPs: 411.3431. Time: 563.0638 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #539: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused in T.parallel(T.int64(784), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(6)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(28) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) * T.int64(4) + ax3)
                        v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(28) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) * T.int64(4) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(32) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(2), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(32), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(28) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(32) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(32) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(4)):
                    for ax4_fused in T.vectorized(T.int64(32)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                            v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused // T.int64(28) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(14) // T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused_fused % T.int64(7) * T.int64(4) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[28, 2, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 2, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[2, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b68)
l85 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86 = sch.fuse(l84, preserve_unit_iters=True)
sch.vectorize(loop=l86)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l87, preserve_unit_iters=True)
sch.parallel(loop=l105)
l106 = sch.fuse(l104, preserve_unit_iters=True)
sch.vectorize(loop=l106)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b115)
b134 = sch.decompose_reduction(block=b115, loop=l118)
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #540: GFLOPs: 414.6833. Time: 558.5284 us. Best GFLOPs: 531.6871
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #541: GFLOPs: 827.9061. Time: 279.7569 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #542: GFLOPs: 429.4264. Time: 539.3531 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #543: GFLOPs: 441.9119. Time: 524.1145 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #544: GFLOPs: 62.9579. Time: 3678.8432 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #545: GFLOPs: 441.9116. Time: 524.1148 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #546: GFLOPs: 389.2571. Time: 595.0114 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #547: GFLOPs: 429.9900. Time: 538.6461 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #548: GFLOPs: 429.4821. Time: 539.2831 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #549: GFLOPs: 414.2285. Time: 559.1417 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #550: GFLOPs: 391.3894. Time: 591.7697 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #551: GFLOPs: 363.3458. Time: 637.4435 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #552: GFLOPs: 182.5875. Time: 1268.5010 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #553: GFLOPs: 468.3373. Time: 494.5419 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #554: GFLOPs: 128.2274. Time: 1806.2636 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #555: GFLOPs: 136.1755. Time: 1700.8379 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #556: GFLOPs: 141.7296. Time: 1634.1852 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #557: GFLOPs: 406.9732. Time: 569.1098 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #558: GFLOPs: 391.3716. Time: 591.7967 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #559: GFLOPs: 82.7425. Time: 2799.1964 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #560: GFLOPs: 425.7826. Time: 543.9687 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #561: GFLOPs: 115.4678. Time: 2005.8611 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #562: GFLOPs: 108.6493. Time: 2131.7426 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #563: GFLOPs: 158.5005. Time: 1461.2720 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #564: GFLOPs: 140.7856. Time: 1645.1423 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #565: GFLOPs: 144.6801. Time: 1600.8589 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #566: GFLOPs: 177.1178. Time: 1307.6744 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #567: GFLOPs: 173.5166. Time: 1334.8145 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #568: GFLOPs: 478.1251. Time: 484.4180 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #569: GFLOPs: 216.1397. Time: 1071.5865 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #570: GFLOPs: 362.4647. Time: 638.9930 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #571: GFLOPs: 444.6488. Time: 520.8884 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #572: GFLOPs: 346.3831. Time: 668.6598 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #573: GFLOPs: 406.7138. Time: 569.4728 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #574: GFLOPs: 86.9332. Time: 2664.2572 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:131] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #575: GFLOPs: 159.9678. Time: 1447.8693 us. Best GFLOPs: 827.9061
2024-04-29 12:59:37 [INFO] [task_scheduler.cc:121] [Task #15: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #576: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(30)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(4) * T.int64(4) + ax2)
                        v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(28) + ax3)
                        v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(1), T.int64(2), T.int64(4), T.int64(14)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(4) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(28) + ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(16) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8), T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(14)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(4) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(28) + ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(16) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(28)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(4) * T.int64(4) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(28) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 4])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 8, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=9)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b68)
l86 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l86)
l87 = sch.fuse(l85, preserve_unit_iters=True)
sch.vectorize(loop=l87)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l88, preserve_unit_iters=True)
sch.parallel(loop=l105)
l106 = sch.fuse(l104, preserve_unit_iters=True)
sch.vectorize(loop=l106)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b70)
l113 = sch.fuse(l112, preserve_unit_iters=True)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131 = sch.get_loops(block=b114)
b132 = sch.decompose_reduction(block=b114, loop=l116)
