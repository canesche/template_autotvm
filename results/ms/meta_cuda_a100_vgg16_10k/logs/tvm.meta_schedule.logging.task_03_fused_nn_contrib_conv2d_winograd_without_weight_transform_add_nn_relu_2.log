2024-04-30 01:34:54 [INFO] [task_scheduler.cc:160] Initializing Task #3: "fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2"
2024-04-30 01:34:54 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(114), T.int64(114)))
        input_tile = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)))
        B = T.alloc_buffer((T.int64(6), T.int64(6)))
        data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
        bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        A = T.alloc_buffer((T.int64(6), T.int64(4)))
        inverse = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)))
        conv2d_winograd = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(64), T.int64(114), T.int64(114)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(113) and T.int64(1) <= v_i3 and v_i3 < T.int64(113), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(64), T.int64(784), T.int64(6), T.int64(6)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps, v_p % T.int64(28) * T.int64(4) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps, v_p % T.int64(28) * T.int64(4) + v_nu]
        for i, j in T.grid(T.int64(6), T.int64(6)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(6), T.int64(6), T.int64(64), T.int64(784), T.int64(6), T.int64(6)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(6), T.int64(6), T.int64(128), T.int64(784), T.int64(64)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(6), T.int64(4)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(128), T.int64(784), T.int64(4), T.int64(4), T.int64(6), T.int64(6)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-30 01:34:54 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 01:34:54 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            input_tile_local = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(192), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(21), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(225792)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(37632))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(37632) // T.int64(6272))
                                    v2 = T.axis.spatial(T.int64(64), ci_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(6272) // T.int64(196))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + ax0_ax1_ax2_ax3_fused % T.int64(196))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(147456)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(24576))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(24576) // T.int64(4096))
                                    v2 = T.axis.spatial(T.int64(64), ci_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(128))
                                    v3 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(16), T.int64(7)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(32) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(16) + co_3 * T.int64(16) + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                    v_ci = T.axis.reduce(T.int64(64), ci_0 * T.int64(32) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(16), T.int64(7)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(32) + ax0)
                                v1 = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(16) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(64) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 6, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 3, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 8, 1, 1, 16])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[4, 4, 7, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[2, 4, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
2024-04-30 01:34:54 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            input_tile_local = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(192), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(21), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(225792)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(37632))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(37632) // T.int64(6272))
                                    v2 = T.axis.spatial(T.int64(64), ci_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(6272) // T.int64(196))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + ax0_ax1_ax2_ax3_fused % T.int64(196))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(147456)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(24576))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(24576) // T.int64(4096))
                                    v2 = T.axis.spatial(T.int64(64), ci_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(128))
                                    v3 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(16), T.int64(7)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(32) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(16) + co_3 * T.int64(16) + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                    v_ci = T.axis.reduce(T.int64(64), ci_0_fused * T.int64(32) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(16), T.int64(7)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(32) + ax0)
                                v1 = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(16) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 6, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 3, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 8, 1, 1, 16])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[4, 4, 7, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[2, 4, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-30 01:34:54 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            input_tile_local = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(128) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(192), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(21), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(225792)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(37632))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(37632) // T.int64(6272))
                                    v2 = T.axis.spatial(T.int64(64), ci_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(6272) // T.int64(196))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + ax0_ax1_ax2_ax3_fused % T.int64(196))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(147456)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(24576))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(24576) // T.int64(4096))
                                    v2 = T.axis.spatial(T.int64(64), ci_0_fused * T.int64(32) + ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(128))
                                    v3 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(16), T.int64(7)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(32) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(16) + co_3 * T.int64(16) + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                    v_ci = T.axis.reduce(T.int64(64), ci_0_fused * T.int64(32) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(16), T.int64(7)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(32) + ax0)
                                v1 = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(7) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(32) // T.int64(4) * T.int64(16) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(196) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(49) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) * T.int64(7) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 6, 1, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 3, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 8, 1, 1, 16])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[4, 4, 7, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[2, 4, 8])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-30 01:43:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 01:43:02 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 01:43:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 502 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:43:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1004 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:43:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1506 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:43:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2002 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:43:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2506 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:43:44 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-30 01:44:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 143 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:44:23 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:44:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:45:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 01:45:01 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9982  0.9945  0.9934  0.9930  0.9930  0.9929  0.9924  0.9915  0.9909  0.9907  0.9906  0.9904  0.9896  0.9891  0.9881
[17 : 32]:	0.9869  0.9866  0.9866  0.9859  0.9857  0.9849  0.9848  0.9847  0.9843  0.9830  0.9821  0.9821  0.9815  0.9810  0.9809  0.9804
[33 : 48]:	0.9799  0.9798  0.9797  0.9795  0.9791  0.9791  0.9789  0.9775  0.9775  0.9762  0.9757  0.9755  0.9751  0.9751  0.9740  0.9731
[49 : 64]:	0.9731  0.9725  0.9723  0.9714  0.9707  0.9679  0.9678  0.9663  0.9642  0.9633  0.9633  0.9628  0.9627  0.9625  0.9613  0.9608
2024-04-30 01:45:01 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 01:45:01 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #1: GFLOPs: 3475.7699. Time: 239.9830 us. Best GFLOPs: 3475.7699
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #2: GFLOPs: 3204.6367. Time: 260.2872 us. Best GFLOPs: 3475.7699
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #3: GFLOPs: 4842.4410. Time: 172.2532 us. Best GFLOPs: 4842.4410
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #4: GFLOPs: 206.2970. Time: 4043.3255 us. Best GFLOPs: 4842.4410
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #5: GFLOPs: 715.0363. Time: 1166.5503 us. Best GFLOPs: 4842.4410
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #6: GFLOPs: 2434.9724. Time: 342.5607 us. Best GFLOPs: 4842.4410
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #7: GFLOPs: 7815.6218. Time: 106.7255 us. Best GFLOPs: 7815.6218
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #8: GFLOPs: 5862.1520. Time: 142.2900 us. Best GFLOPs: 7815.6218
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #9: GFLOPs: 5576.6230. Time: 149.5754 us. Best GFLOPs: 7815.6218
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #10: GFLOPs: 496.3144. Time: 1680.6400 us. Best GFLOPs: 7815.6218
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #11: GFLOPs: 5925.5060. Time: 140.7687 us. Best GFLOPs: 7815.6218
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #12: GFLOPs: 3564.1999. Time: 234.0289 us. Best GFLOPs: 7815.6218
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #13: GFLOPs: 8125.6501. Time: 102.6534 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #14: GFLOPs: 4914.2661. Time: 169.7356 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #15: GFLOPs: 6041.7941. Time: 138.0593 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #16: GFLOPs: 5880.5140. Time: 141.8457 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #17: GFLOPs: 4845.9074. Time: 172.1300 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #18: GFLOPs: 2754.4789. Time: 302.8253 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #19: GFLOPs: 365.2212. Time: 2283.8924 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #20: GFLOPs: 5464.5659. Time: 152.6426 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #21: GFLOPs: 6325.0582. Time: 131.8764 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #22: GFLOPs: 849.0456. Time: 982.4276 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #23: GFLOPs: 687.2816. Time: 1213.6595 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #24: GFLOPs: 7003.4731. Time: 119.1017 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #25: GFLOPs: 1054.8748. Time: 790.7344 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #26: GFLOPs: 2004.9008. Time: 416.0434 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #27: GFLOPs: 3590.7488. Time: 232.2986 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #28: GFLOPs: 557.6096. Time: 1495.8958 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #29: GFLOPs: 3716.1454. Time: 224.4600 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #30: GFLOPs: 4935.8775. Time: 168.9924 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #31: GFLOPs: 823.4361. Time: 1012.9818 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #32: GFLOPs: 399.0941. Time: 2090.0480 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #33: GFLOPs: 3407.5739. Time: 244.7858 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #34: GFLOPs: 5420.7495. Time: 153.8765 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #35: GFLOPs: 5861.3625. Time: 142.3092 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #36: GFLOPs: 4536.0818. Time: 183.8869 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #37: GFLOPs: 5231.3596. Time: 159.4472 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #38: GFLOPs: 7012.6477. Time: 118.9459 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #39: GFLOPs: 635.4759. Time: 1312.6002 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #40: GFLOPs: 5943.9208. Time: 140.3326 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #41: GFLOPs: 29.6026. Time: 28177.4080 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #42: GFLOPs: 541.6895. Time: 1539.8597 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #43: GFLOPs: 908.9491. Time: 917.6816 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #44: GFLOPs: 516.5035. Time: 1614.9470 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #45: GFLOPs: 1265.0145. Time: 659.3804 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #46: GFLOPs: 357.5089. Time: 2333.1607 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #47: GFLOPs: 4938.6547. Time: 168.8974 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #48: GFLOPs: 664.8135. Time: 1254.6763 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #49: GFLOPs: 6083.6881. Time: 137.1086 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #50: GFLOPs: 5893.5856. Time: 141.5311 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #51: GFLOPs: 1947.2727. Time: 428.3559 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #52: GFLOPs: 2968.0113. Time: 281.0386 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #53: GFLOPs: 569.8384. Time: 1463.7938 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #54: GFLOPs: 282.5726. Time: 2951.8995 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #55: GFLOPs: 219.5886. Time: 3798.5848 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #56: GFLOPs: 4304.6297. Time: 193.7741 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #57: GFLOPs: 3435.6979. Time: 242.7821 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #58: GFLOPs: 766.7617. Time: 1087.8553 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #59: GFLOPs: 464.5761. Time: 1795.4559 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #60: GFLOPs: 1529.4886. Time: 545.3626 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #61: GFLOPs: 788.5838. Time: 1057.7516 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #62: GFLOPs: 2551.4716. Time: 326.9195 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #63: GFLOPs: 5181.8849. Time: 160.9696 us. Best GFLOPs: 8125.6501
2024-04-30 02:17:09 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #64: GFLOPs: 3689.7092. Time: 226.0682 us. Best GFLOPs: 8125.6501
2024-04-30 03:02:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 03:02:38 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-30 03:02:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 439 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:02:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 882 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:03:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1319 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:03:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1762 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:03:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2201 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:03:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2644 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:03:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3081 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:03:31 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-30 03:03:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:04:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 125 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:04:41 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:05:04 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 102 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 03:05:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4005  1.3016  1.2903  1.2565  1.2541  1.2535  1.0910  1.0814  1.0613  1.0613  1.0490  1.0176  1.0110  1.0110  0.9696  0.9655
[17 : 32]:	0.9640  0.9600  0.9598  0.9586  0.9517  0.9503  0.9503  0.9485  0.9484  0.9476  0.9465  0.9398  0.9357  0.9331  0.9328  0.9291
[33 : 48]:	0.9259  0.9249  0.9140  0.9129  0.9118  0.9096  0.9047  0.9042  0.8930  0.8922  0.8915  0.8915  0.8903  0.8876  0.8852  0.8850
[49 : 64]:	0.8848  0.8846  0.8815  0.8811  0.8809  0.8809  0.8806  0.8756  0.8746  0.8743  0.8743  0.8720  0.8677  0.8671  0.8663  0.8658
2024-04-30 03:05:10 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 03:05:10 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #65: GFLOPs: 716.9144. Time: 1163.4943 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #66: GFLOPs: 4046.0018. Time: 206.1605 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #67: GFLOPs: 3911.0868. Time: 213.2721 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #68: GFLOPs: 790.6081. Time: 1055.0433 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #69: GFLOPs: 796.6270. Time: 1047.0720 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #70: GFLOPs: 790.8101. Time: 1054.7739 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #71: GFLOPs: 791.6919. Time: 1053.5990 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #72: GFLOPs: 789.7367. Time: 1056.2075 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #73: GFLOPs: 727.1692. Time: 1147.0863 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #74: GFLOPs: 748.3855. Time: 1114.5671 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #75: GFLOPs: 1061.3942. Time: 785.8775 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #76: GFLOPs: 4936.2896. Time: 168.9783 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #77: GFLOPs: 7482.6972. Time: 111.4740 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #78: GFLOPs: 7556.3254. Time: 110.3878 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #79: GFLOPs: 7819.0900. Time: 106.6781 us. Best GFLOPs: 8125.6501
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #80: GFLOPs: 8183.0717. Time: 101.9331 us. Best GFLOPs: 8183.0717
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #81: GFLOPs: 8274.5761. Time: 100.8059 us. Best GFLOPs: 8274.5761
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #82: GFLOPs: 713.0856. Time: 1169.7414 us. Best GFLOPs: 8274.5761
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #83: GFLOPs: 8207.8335. Time: 101.6256 us. Best GFLOPs: 8274.5761
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #84: GFLOPs: 7691.2224. Time: 108.4517 us. Best GFLOPs: 8274.5761
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #85: GFLOPs: 7585.3604. Time: 109.9652 us. Best GFLOPs: 8274.5761
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #86: GFLOPs: 8839.0695. Time: 94.3681 us. Best GFLOPs: 8839.0695
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #87: GFLOPs: 8846.3132. Time: 94.2908 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #88: GFLOPs: 7714.2446. Time: 108.1280 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #89: GFLOPs: 4639.5450. Time: 179.7861 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #90: GFLOPs: 8643.2927. Time: 96.5056 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #91: GFLOPs: 8541.3345. Time: 97.6576 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #92: GFLOPs: 7137.3178. Time: 116.8682 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #93: GFLOPs: 6717.4081. Time: 124.1738 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #94: GFLOPs: 7621.8957. Time: 109.4381 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #95: GFLOPs: 7809.2212. Time: 106.8129 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #96: GFLOPs: 8771.4201. Time: 95.0959 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #97: GFLOPs: 5874.6715. Time: 141.9868 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #98: GFLOPs: 5966.9265. Time: 139.7915 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #99: GFLOPs: 7964.3720. Time: 104.7322 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #100: GFLOPs: 7496.3545. Time: 111.2709 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #101: GFLOPs: 7781.6742. Time: 107.1911 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #102: GFLOPs: 7674.9193. Time: 108.6820 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #103: GFLOPs: 8594.3430. Time: 97.0552 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #104: GFLOPs: 7579.5743. Time: 110.0492 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #105: GFLOPs: 8223.3543. Time: 101.4338 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #106: GFLOPs: 7778.4619. Time: 107.2353 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #107: GFLOPs: 3526.4358. Time: 236.5351 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #108: GFLOPs: 3838.8046. Time: 217.2879 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #109: GFLOPs: 6489.1126. Time: 128.5424 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #110: GFLOPs: 7611.7249. Time: 109.5843 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #111: GFLOPs: 5507.7344. Time: 151.4463 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #112: GFLOPs: 7716.9820. Time: 108.0896 us. Best GFLOPs: 8846.3132
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #113: GFLOPs: 9372.1204. Time: 89.0008 us. Best GFLOPs: 9372.1204
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #114: GFLOPs: 6489.6542. Time: 128.5316 us. Best GFLOPs: 9372.1204
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #115: GFLOPs: 7767.6005. Time: 107.3853 us. Best GFLOPs: 9372.1204
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #116: GFLOPs: 8144.3490. Time: 102.4177 us. Best GFLOPs: 9372.1204
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #117: GFLOPs: 7611.6817. Time: 109.5850 us. Best GFLOPs: 9372.1204
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #118: GFLOPs: 6583.4601. Time: 126.7002 us. Best GFLOPs: 9372.1204
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #119: GFLOPs: 7533.3682. Time: 110.7242 us. Best GFLOPs: 9372.1204
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #120: GFLOPs: 9972.9830. Time: 83.6385 us. Best GFLOPs: 9972.9830
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #121: GFLOPs: 6653.0386. Time: 125.3752 us. Best GFLOPs: 9972.9830
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #122: GFLOPs: 6425.7304. Time: 129.8103 us. Best GFLOPs: 9972.9830
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #123: GFLOPs: 7720.9516. Time: 108.0341 us. Best GFLOPs: 9972.9830
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #124: GFLOPs: 5595.7133. Time: 149.0651 us. Best GFLOPs: 9972.9830
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #125: GFLOPs: 8028.0842. Time: 103.9010 us. Best GFLOPs: 9972.9830
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #126: GFLOPs: 5457.5702. Time: 152.8383 us. Best GFLOPs: 9972.9830
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #127: GFLOPs: 4493.1877. Time: 185.6423 us. Best GFLOPs: 9972.9830
2024-04-30 03:06:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #128: GFLOPs: 5871.9474. Time: 142.0527 us. Best GFLOPs: 9972.9830
2024-04-30 04:21:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 04:21:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 04:21:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:21:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 810 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:21:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1206 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:21:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1609 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:21:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2012 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:21:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:21:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2818 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:21:58 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-30 04:22:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:22:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:23:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:23:24 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 04:23:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1087  1.0628  1.0474  1.0474  1.0395  1.0384  0.9788  0.9734  0.9617  0.9606  0.9587  0.9579  0.9524  0.9504  0.9441  0.9409
[17 : 32]:	0.9391  0.9355  0.9334  0.9331  0.9292  0.9276  0.9238  0.9197  0.9122  0.9107  0.9100  0.9007  0.8994  0.8966  0.8964  0.8936
[33 : 48]:	0.8911  0.8905  0.8874  0.8866  0.8856  0.8847  0.8833  0.8828  0.8828  0.8822  0.8820  0.8815  0.8813  0.8812  0.8812  0.8802
[49 : 64]:	0.8790  0.8779  0.8767  0.8758  0.8750  0.8749  0.8748  0.8721  0.8721  0.8721  0.8711  0.8689  0.8675  0.8670  0.8667  0.8666
2024-04-30 04:23:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 04:23:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #129: GFLOPs: 6068.8370. Time: 137.4441 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #130: GFLOPs: 9822.1576. Time: 84.9229 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #131: GFLOPs: 8745.3011. Time: 95.3799 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #132: GFLOPs: 8671.9728. Time: 96.1864 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #133: GFLOPs: 8525.0812. Time: 97.8437 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #134: GFLOPs: 8523.6802. Time: 97.8598 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #135: GFLOPs: 6129.6426. Time: 136.0807 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #136: GFLOPs: 8429.5581. Time: 98.9525 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #137: GFLOPs: 8187.4567. Time: 101.8785 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #138: GFLOPs: 89.2642. Time: 9344.4657 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #139: GFLOPs: 91.4553. Time: 9120.5818 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #140: GFLOPs: 7755.5240. Time: 107.5525 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #141: GFLOPs: 7627.6296. Time: 109.3558 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #142: GFLOPs: 7675.6643. Time: 108.6715 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #143: GFLOPs: 5640.4207. Time: 147.8836 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #144: GFLOPs: 97.2502. Time: 8577.1090 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #145: GFLOPs: 9494.9850. Time: 87.8491 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #146: GFLOPs: 9506.6819. Time: 87.7410 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #147: GFLOPs: 7282.0680. Time: 114.5452 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #148: GFLOPs: 3133.4321. Time: 266.2020 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #149: GFLOPs: 5837.2242. Time: 142.8977 us. Best GFLOPs: 9972.9830
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #150: GFLOPs: 10468.6419. Time: 79.6785 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #151: GFLOPs: 66.8841. Time: 12471.2104 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #152: GFLOPs: 60.3138. Time: 13829.7595 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #153: GFLOPs: 6670.0923. Time: 125.0546 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #154: GFLOPs: 99.9470. Time: 8345.6853 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #155: GFLOPs: 99.5784. Time: 8376.5761 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #156: GFLOPs: 93.2700. Time: 8943.1341 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #157: GFLOPs: 63.3683. Time: 13163.1355 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #158: GFLOPs: 5388.8178. Time: 154.7883 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #159: GFLOPs: 41.4868. Time: 20105.8302 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #160: GFLOPs: 5426.6698. Time: 153.7086 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #161: GFLOPs: 96.2211. Time: 8668.8429 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #162: GFLOPs: 92.8909. Time: 8979.6269 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #163: GFLOPs: 7411.2668. Time: 112.5483 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #164: GFLOPs: 8615.9884. Time: 96.8114 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #165: GFLOPs: 104.6537. Time: 7970.3433 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #166: GFLOPs: 107.5162. Time: 7758.1388 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #167: GFLOPs: 6700.9612. Time: 124.4785 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #168: GFLOPs: 8758.3692. Time: 95.2376 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #169: GFLOPs: 8759.5682. Time: 95.2245 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #170: GFLOPs: 6567.2075. Time: 127.0138 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #171: GFLOPs: 103.8969. Time: 8028.3960 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #172: GFLOPs: 5727.4673. Time: 145.6361 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #173: GFLOPs: 7535.0026. Time: 110.7001 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #174: GFLOPs: 7852.0304. Time: 106.2306 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #175: GFLOPs: 112.0198. Time: 7446.2356 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #176: GFLOPs: 8949.4005. Time: 93.2047 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #177: GFLOPs: 97.7350. Time: 8534.5675 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #178: GFLOPs: 8514.4594. Time: 97.9658 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #179: GFLOPs: 110.9010. Time: 7521.3530 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #180: GFLOPs: 111.9000. Time: 7454.2078 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #181: GFLOPs: 6324.1280. Time: 131.8958 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #182: GFLOPs: 6325.5515. Time: 131.8661 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #183: GFLOPs: 96.7899. Time: 8617.8989 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #184: GFLOPs: 8823.2791. Time: 94.5369 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #185: GFLOPs: 8959.6952. Time: 93.0976 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #186: GFLOPs: 41.7903. Time: 19959.8083 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #187: GFLOPs: 29.1053. Time: 28658.9430 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #188: GFLOPs: 8254.4996. Time: 101.0510 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #189: GFLOPs: 80.1291. Time: 10409.7793 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #190: GFLOPs: 1854.9227. Time: 449.6823 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #191: GFLOPs: 8485.0042. Time: 98.3059 us. Best GFLOPs: 10468.6419
2024-04-30 04:24:59 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #192: GFLOPs: 5282.6410. Time: 157.8994 us. Best GFLOPs: 10468.6419
2024-04-30 05:16:18 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 05:16:22 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 05:16:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:16:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 807 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:16:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1211 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:16:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1610 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:16:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2019 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:17:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2421 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:17:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2821 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:17:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3221 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:17:19 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-04-30 05:17:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:17:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:18:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:18:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 05:18:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0260  1.0034  0.9987  0.9889  0.9803  0.9787  0.9750  0.9588  0.9585  0.9564  0.9558  0.9546  0.9404  0.9404  0.9391  0.9387
[17 : 32]:	0.9385  0.9381  0.9350  0.9338  0.9338  0.9330  0.9243  0.9216  0.9203  0.9202  0.9199  0.9194  0.9192  0.9181  0.9168  0.9166
[33 : 48]:	0.9165  0.9133  0.9116  0.9112  0.9086  0.9071  0.9019  0.9015  0.9014  0.8965  0.8931  0.8886  0.8839  0.8831  0.8826  0.8812
[49 : 64]:	0.8789  0.8786  0.8782  0.8775  0.8775  0.8767  0.8757  0.8746  0.8729  0.8720  0.8715  0.8708  0.8706  0.8695  0.8692  0.8691
2024-04-30 05:18:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 05:18:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #193: GFLOPs: 10623.8017. Time: 78.5148 us. Best GFLOPs: 10623.8017
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #194: GFLOPs: 11111.6718. Time: 75.0675 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #195: GFLOPs: 11107.1608. Time: 75.0980 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #196: GFLOPs: 10474.4881. Time: 79.6340 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #197: GFLOPs: 11040.6228. Time: 75.5506 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #198: GFLOPs: 10920.9637. Time: 76.3784 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #199: GFLOPs: 10259.4920. Time: 81.3028 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #200: GFLOPs: 10127.5246. Time: 82.3623 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #201: GFLOPs: 10128.0174. Time: 82.3583 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #202: GFLOPs: 9306.8349. Time: 89.6251 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #203: GFLOPs: 9366.4672. Time: 89.0545 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #204: GFLOPs: 9915.6053. Time: 84.1225 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #205: GFLOPs: 9767.8180. Time: 85.3953 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #206: GFLOPs: 9764.5087. Time: 85.4242 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #207: GFLOPs: 8582.3854. Time: 97.1904 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #208: GFLOPs: 9429.8344. Time: 88.4560 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #209: GFLOPs: 1064.2075. Time: 783.8000 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #210: GFLOPs: 9841.9999. Time: 84.7517 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #211: GFLOPs: 9075.0698. Time: 91.9140 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #212: GFLOPs: 9605.3087. Time: 86.8401 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #213: GFLOPs: 9604.3993. Time: 86.8483 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #214: GFLOPs: 9591.5175. Time: 86.9649 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #215: GFLOPs: 9266.1073. Time: 90.0190 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #216: GFLOPs: 9355.3043. Time: 89.1607 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #217: GFLOPs: 9679.3377. Time: 86.1759 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #218: GFLOPs: 3867.6739. Time: 215.6660 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #219: GFLOPs: 9014.5877. Time: 92.5307 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #220: GFLOPs: 9946.0648. Time: 83.8649 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #221: GFLOPs: 9161.2219. Time: 91.0496 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #222: GFLOPs: 9231.1475. Time: 90.3599 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #223: GFLOPs: 9512.7269. Time: 87.6852 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #224: GFLOPs: 9598.6287. Time: 86.9005 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #225: GFLOPs: 8947.5219. Time: 93.2242 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #226: GFLOPs: 4525.8256. Time: 184.3036 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #227: GFLOPs: 9602.0586. Time: 86.8695 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #228: GFLOPs: 9591.1050. Time: 86.9687 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #229: GFLOPs: 9772.1109. Time: 85.3578 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #230: GFLOPs: 9753.1311. Time: 85.5239 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #231: GFLOPs: 8286.7178. Time: 100.6582 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #232: GFLOPs: 9332.5354. Time: 89.3783 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #233: GFLOPs: 4556.8334. Time: 183.0494 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #234: GFLOPs: 10919.6648. Time: 76.3875 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #235: GFLOPs: 8607.5936. Time: 96.9058 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #236: GFLOPs: 9298.7655. Time: 89.7029 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #237: GFLOPs: 9636.0746. Time: 86.5628 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #238: GFLOPs: 9425.7195. Time: 88.4947 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #239: GFLOPs: 10084.5616. Time: 82.7131 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #240: GFLOPs: 9370.6490. Time: 89.0147 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #241: GFLOPs: 9583.2472. Time: 87.0400 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #242: GFLOPs: 9591.8032. Time: 86.9624 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #243: GFLOPs: 9634.3581. Time: 86.5782 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #244: GFLOPs: 8661.4418. Time: 96.3033 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #245: GFLOPs: 10340.4727. Time: 80.6661 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #246: GFLOPs: 9250.1241. Time: 90.1746 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #247: GFLOPs: 9956.6321. Time: 83.7759 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #248: GFLOPs: 9752.1272. Time: 85.5327 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #249: GFLOPs: 8895.6916. Time: 93.7674 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #250: GFLOPs: 10269.7412. Time: 81.2217 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #251: GFLOPs: 4734.7090. Time: 176.1726 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #252: GFLOPs: 9867.9434. Time: 84.5288 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #253: GFLOPs: 9546.0002. Time: 87.3796 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #254: GFLOPs: 151.4664. Time: 5507.0011 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #255: GFLOPs: 7846.5604. Time: 106.3046 us. Best GFLOPs: 11111.6718
2024-04-30 05:20:02 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #256: GFLOPs: 1247.9771. Time: 668.3823 us. Best GFLOPs: 11111.6718
2024-04-30 06:01:52 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 06:01:56 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 06:02:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:02:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 806 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:02:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:02:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1611 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:02:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2016 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:02:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2420 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:02:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:02:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3224 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:02:51 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-30 06:03:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:03:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:03:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:04:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 06:04:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1674  1.0696  1.0524  1.0352  1.0085  1.0012  0.9925  0.9916  0.9819  0.9806  0.9755  0.9747  0.9742  0.9716  0.9707  0.9691
[17 : 32]:	0.9646  0.9634  0.9612  0.9612  0.9609  0.9584  0.9583  0.9582  0.9575  0.9574  0.9574  0.9572  0.9571  0.9546  0.9535  0.9517
[33 : 48]:	0.9495  0.9492  0.9492  0.9487  0.9483  0.9473  0.9471  0.9459  0.9415  0.9413  0.9411  0.9411  0.9408  0.9403  0.9373  0.9343
[49 : 64]:	0.9337  0.9332  0.9331  0.9329  0.9314  0.9304  0.9296  0.9284  0.9280  0.9275  0.9270  0.9266  0.9259  0.9244  0.9243  0.9242
2024-04-30 06:04:18 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 06:04:18 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #257: GFLOPs: 32.3107. Time: 25815.8072 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #258: GFLOPs: 249.6759. Time: 3340.8340 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #259: GFLOPs: 445.3488. Time: 1872.9719 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #260: GFLOPs: 446.3721. Time: 1868.6781 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #261: GFLOPs: 10697.6707. Time: 77.9727 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #262: GFLOPs: 10105.9156. Time: 82.5384 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #263: GFLOPs: 338.1866. Time: 2466.4664 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #264: GFLOPs: 11098.1768. Time: 75.1588 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #265: GFLOPs: 445.3926. Time: 1872.7876 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #266: GFLOPs: 322.6854. Time: 2584.9507 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #267: GFLOPs: 11099.0182. Time: 75.1531 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #268: GFLOPs: 410.5105. Time: 2031.9232 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #269: GFLOPs: 11058.5060. Time: 75.4284 us. Best GFLOPs: 11111.6718
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #270: GFLOPs: 11118.1924. Time: 75.0235 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #271: GFLOPs: 11089.8068. Time: 75.2155 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #272: GFLOPs: 11002.5177. Time: 75.8123 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #273: GFLOPs: 11048.1663. Time: 75.4990 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #274: GFLOPs: 11055.7944. Time: 75.4469 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #275: GFLOPs: 10371.5564. Time: 80.4244 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #276: GFLOPs: 11052.2636. Time: 75.4710 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #277: GFLOPs: 10389.3989. Time: 80.2862 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #278: GFLOPs: 10148.3335. Time: 82.1934 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #279: GFLOPs: 10928.3152. Time: 76.3270 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #280: GFLOPs: 10965.6003. Time: 76.0675 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #281: GFLOPs: 10329.2537. Time: 80.7537 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #282: GFLOPs: 10166.0500. Time: 82.0501 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #283: GFLOPs: 10379.9283. Time: 80.3595 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #284: GFLOPs: 10420.1414. Time: 80.0494 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #285: GFLOPs: 10503.0383. Time: 79.4176 us. Best GFLOPs: 11118.1924
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #286: GFLOPs: 11197.2399. Time: 74.4939 us. Best GFLOPs: 11197.2399
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #287: GFLOPs: 11028.6932. Time: 75.6323 us. Best GFLOPs: 11197.2399
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #288: GFLOPs: 11191.1634. Time: 74.5343 us. Best GFLOPs: 11197.2399
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #289: GFLOPs: 10218.7881. Time: 81.6267 us. Best GFLOPs: 11197.2399
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #290: GFLOPs: 10329.5161. Time: 80.7517 us. Best GFLOPs: 11197.2399
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #291: GFLOPs: 10253.9092. Time: 81.3471 us. Best GFLOPs: 11197.2399
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #292: GFLOPs: 298.4919. Time: 2794.4675 us. Best GFLOPs: 11197.2399
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #293: GFLOPs: 10425.5122. Time: 80.0081 us. Best GFLOPs: 11197.2399
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #294: GFLOPs: 11208.6788. Time: 74.4179 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #295: GFLOPs: 10747.3086. Time: 77.6125 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #296: GFLOPs: 10779.1685. Time: 77.3831 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #297: GFLOPs: 11017.5057. Time: 75.7091 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #298: GFLOPs: 10328.3301. Time: 80.7610 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #299: GFLOPs: 10238.1205. Time: 81.4726 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #300: GFLOPs: 9199.5613. Time: 90.6702 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #301: GFLOPs: 10443.5473. Time: 79.8700 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #302: GFLOPs: 10510.2719. Time: 79.3629 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #303: GFLOPs: 10435.3886. Time: 79.9324 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #304: GFLOPs: 9695.9722. Time: 86.0281 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #305: GFLOPs: 10516.5713. Time: 79.3154 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #306: GFLOPs: 10195.6014. Time: 81.8123 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #307: GFLOPs: 10331.7725. Time: 80.7340 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #308: GFLOPs: 10284.9328. Time: 81.1017 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #309: GFLOPs: 10304.3816. Time: 80.9487 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #310: GFLOPs: 10164.3645. Time: 82.0637 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #311: GFLOPs: 10472.7554. Time: 79.6472 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #312: GFLOPs: 9875.7950. Time: 84.4616 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #313: GFLOPs: 7962.1701. Time: 104.7611 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #314: GFLOPs: 9149.6769. Time: 91.1645 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #315: GFLOPs: 10105.0759. Time: 82.5452 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #316: GFLOPs: 9833.9158. Time: 84.8213 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #317: GFLOPs: 9846.8186. Time: 84.7102 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #318: GFLOPs: 1285.3005. Time: 648.9734 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #319: GFLOPs: 7312.8216. Time: 114.0635 us. Best GFLOPs: 11208.6788
2024-04-30 06:05:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #320: GFLOPs: 6379.9416. Time: 130.7419 us. Best GFLOPs: 11208.6788
2024-04-30 07:20:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 07:20:40 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 07:20:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 406 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:20:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:21:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1212 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:21:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1615 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:21:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2022 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:21:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2427 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:21:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2828 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:21:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3234 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:21:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3639 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:21:44 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-04-30 07:22:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:22:23 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:22:45 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 52 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:23:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 07:23:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9939  0.9926  0.9920  0.9918  0.9909  0.9877  0.9874  0.9874  0.9869  0.9869  0.9869  0.9861  0.9861  0.9856  0.9853  0.9853
[17 : 32]:	0.9851  0.9842  0.9842  0.9840  0.9837  0.9835  0.9835  0.9832  0.9814  0.9808  0.9777  0.9776  0.9772  0.9752  0.9747  0.9716
[33 : 48]:	0.9716  0.9708  0.9704  0.9702  0.9700  0.9695  0.9695  0.9692  0.9691  0.9691  0.9690  0.9690  0.9688  0.9684  0.9668  0.9664
[49 : 64]:	0.9664  0.9653  0.9632  0.9625  0.9614  0.9605  0.9602  0.9598  0.9595  0.9590  0.9586  0.9582  0.9561  0.9547  0.9545  0.9540
2024-04-30 07:23:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 07:23:12 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #321: GFLOPs: 10793.9499. Time: 77.2772 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #322: GFLOPs: 10867.2859. Time: 76.7557 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #323: GFLOPs: 10910.9655. Time: 76.4484 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #324: GFLOPs: 10685.4253. Time: 78.0620 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #325: GFLOPs: 10543.4789. Time: 79.1130 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #326: GFLOPs: 11149.5010. Time: 74.8128 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #327: GFLOPs: 11046.9937. Time: 75.5070 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #328: GFLOPs: 11128.4893. Time: 74.9541 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #329: GFLOPs: 11094.0753. Time: 75.1866 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #330: GFLOPs: 11108.6982. Time: 75.0876 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #331: GFLOPs: 11096.1620. Time: 75.1725 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #332: GFLOPs: 11149.9545. Time: 74.8098 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #333: GFLOPs: 11145.2204. Time: 74.8416 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #334: GFLOPs: 11087.8132. Time: 75.2291 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #335: GFLOPs: 11093.2429. Time: 75.1922 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #336: GFLOPs: 11064.8613. Time: 75.3851 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #337: GFLOPs: 11126.6331. Time: 74.9666 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #338: GFLOPs: 10983.1751. Time: 75.9458 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #339: GFLOPs: 10983.7231. Time: 75.9420 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #340: GFLOPs: 11027.4639. Time: 75.6408 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #341: GFLOPs: 11073.4373. Time: 75.3267 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #342: GFLOPs: 11104.6122. Time: 75.1153 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #343: GFLOPs: 11127.8019. Time: 74.9587 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #344: GFLOPs: 11095.1259. Time: 75.1795 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #345: GFLOPs: 11100.3049. Time: 75.1444 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #346: GFLOPs: 11086.3935. Time: 75.2387 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #347: GFLOPs: 11102.7594. Time: 75.1278 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #348: GFLOPs: 11056.6431. Time: 75.4411 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #349: GFLOPs: 11075.4596. Time: 75.3130 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #350: GFLOPs: 11118.1247. Time: 75.0240 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #351: GFLOPs: 10991.8640. Time: 75.8857 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #352: GFLOPs: 11098.2940. Time: 75.1580 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #353: GFLOPs: 11129.8131. Time: 74.9452 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #354: GFLOPs: 11174.0381. Time: 74.6486 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #355: GFLOPs: 10381.7561. Time: 80.3453 us. Best GFLOPs: 11208.6788
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #356: GFLOPs: 12192.1334. Time: 68.4151 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #357: GFLOPs: 11147.7723. Time: 74.8244 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #358: GFLOPs: 11065.3548. Time: 75.3818 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #359: GFLOPs: 11048.5595. Time: 75.4963 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #360: GFLOPs: 11170.9509. Time: 74.6692 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #361: GFLOPs: 11116.1577. Time: 75.0372 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #362: GFLOPs: 11132.6116. Time: 74.9263 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #363: GFLOPs: 11050.7478. Time: 75.4814 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #364: GFLOPs: 11051.8189. Time: 75.4741 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #365: GFLOPs: 11183.9480. Time: 74.5824 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #366: GFLOPs: 11180.4453. Time: 74.6058 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #367: GFLOPs: 11100.9671. Time: 75.1399 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #368: GFLOPs: 11168.4732. Time: 74.6858 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #369: GFLOPs: 11060.2066. Time: 75.4168 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #370: GFLOPs: 11135.4338. Time: 74.9073 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #371: GFLOPs: 11101.2326. Time: 75.1381 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #372: GFLOPs: 11196.5737. Time: 74.4983 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #373: GFLOPs: 11133.0542. Time: 74.9234 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #374: GFLOPs: 7902.4846. Time: 105.5524 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #375: GFLOPs: 8162.8633. Time: 102.1854 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #376: GFLOPs: 11136.7521. Time: 74.8985 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #377: GFLOPs: 10983.9824. Time: 75.9402 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #378: GFLOPs: 11098.5235. Time: 75.1565 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #379: GFLOPs: 7889.8994. Time: 105.7207 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #380: GFLOPs: 7977.1315. Time: 104.5646 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #381: GFLOPs: 7976.9573. Time: 104.5669 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #382: GFLOPs: 535.2378. Time: 1558.4210 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #383: GFLOPs: 419.6385. Time: 1987.7246 us. Best GFLOPs: 12192.1334
2024-04-30 07:24:25 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #384: GFLOPs: 1996.0790. Time: 417.8822 us. Best GFLOPs: 12192.1334
2024-04-30 08:37:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 08:37:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 08:37:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:37:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:37:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1212 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:37:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1614 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:37:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2021 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:37:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2425 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:37:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2827 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:38:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3231 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:38:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3635 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:38:08 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-30 08:38:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:38:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 50 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:39:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:39:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 08:39:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9517  0.9450  0.9425  0.9225  0.9225  0.9217  0.9215  0.9199  0.9195  0.9182  0.9173  0.9173  0.9171  0.9158  0.9158  0.9128
[17 : 32]:	0.9128  0.9128  0.9119  0.9113  0.9113  0.9103  0.9099  0.9098  0.9098  0.9094  0.9094  0.9092  0.9092  0.9090  0.9088  0.9084
[33 : 48]:	0.9079  0.9078  0.9076  0.9066  0.9064  0.9062  0.9062  0.9061  0.9058  0.9055  0.9053  0.9053  0.9053  0.9053  0.9046  0.9040
[49 : 64]:	0.9039  0.9039  0.9035  0.9034  0.9033  0.9030  0.9025  0.9023  0.9019  0.9018  0.9017  0.9016  0.9008  0.9003  0.9002  0.8996
2024-04-30 08:39:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 08:39:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #385: GFLOPs: 12085.2025. Time: 69.0204 us. Best GFLOPs: 12192.1334
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #386: GFLOPs: 11972.0679. Time: 69.6727 us. Best GFLOPs: 12192.1334
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #387: GFLOPs: 12185.6470. Time: 68.4515 us. Best GFLOPs: 12192.1334
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #388: GFLOPs: 11024.0311. Time: 75.6643 us. Best GFLOPs: 12192.1334
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #389: GFLOPs: 11076.8358. Time: 75.3036 us. Best GFLOPs: 12192.1334
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #390: GFLOPs: 11022.3779. Time: 75.6757 us. Best GFLOPs: 12192.1334
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #391: GFLOPs: 7949.1106. Time: 104.9332 us. Best GFLOPs: 12192.1334
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #392: GFLOPs: 11183.9818. Time: 74.5822 us. Best GFLOPs: 12192.1334
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #393: GFLOPs: 12250.7044. Time: 68.0880 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #394: GFLOPs: 11178.1231. Time: 74.6213 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #395: GFLOPs: 11208.5201. Time: 74.4189 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #396: GFLOPs: 11208.5201. Time: 74.4189 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #397: GFLOPs: 11864.1068. Time: 70.3067 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #398: GFLOPs: 11159.1356. Time: 74.7482 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #399: GFLOPs: 11159.3411. Time: 74.7469 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #400: GFLOPs: 11190.7711. Time: 74.5369 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #401: GFLOPs: 11190.4163. Time: 74.5393 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #402: GFLOPs: 11143.3449. Time: 74.8542 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #403: GFLOPs: 11268.4260. Time: 74.0233 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #404: GFLOPs: 11088.0345. Time: 75.2276 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #405: GFLOPs: 11088.8460. Time: 75.2221 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #406: GFLOPs: 11183.2824. Time: 74.5869 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #407: GFLOPs: 11153.7032. Time: 74.7847 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #408: GFLOPs: 11132.1307. Time: 74.9296 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #409: GFLOPs: 11256.4271. Time: 74.1022 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #410: GFLOPs: 11157.1316. Time: 74.7617 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #411: GFLOPs: 11153.7032. Time: 74.7847 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #412: GFLOPs: 11132.4331. Time: 74.9275 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #413: GFLOPs: 11131.9849. Time: 74.9306 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #414: GFLOPs: 11265.6643. Time: 74.0414 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #415: GFLOPs: 11154.4990. Time: 74.7793 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #416: GFLOPs: 11189.0213. Time: 74.5486 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #417: GFLOPs: 11075.2870. Time: 75.3141 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #418: GFLOPs: 11160.9541. Time: 74.7361 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #419: GFLOPs: 11106.9684. Time: 75.0993 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #420: GFLOPs: 11079.7358. Time: 75.2839 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #421: GFLOPs: 11127.7081. Time: 74.9594 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #422: GFLOPs: 11213.3337. Time: 74.3870 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #423: GFLOPs: 11263.4185. Time: 74.0562 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #424: GFLOPs: 11086.2741. Time: 75.2395 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #425: GFLOPs: 11125.7335. Time: 74.9727 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #426: GFLOPs: 11212.2766. Time: 74.3940 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #427: GFLOPs: 11143.1282. Time: 74.8556 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #428: GFLOPs: 11144.1523. Time: 74.8487 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #429: GFLOPs: 11143.2759. Time: 74.8546 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #430: GFLOPs: 11146.0933. Time: 74.8357 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #431: GFLOPs: 11051.8853. Time: 75.4736 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #432: GFLOPs: 11056.3392. Time: 75.4432 us. Best GFLOPs: 12250.7044
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #433: GFLOPs: 12374.6947. Time: 67.4058 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #434: GFLOPs: 11048.0054. Time: 75.5001 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #435: GFLOPs: 11042.9286. Time: 75.5348 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #436: GFLOPs: 10941.6445. Time: 76.2340 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #437: GFLOPs: 11045.2367. Time: 75.5191 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #438: GFLOPs: 11153.2160. Time: 74.7879 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #439: GFLOPs: 11110.1345. Time: 75.0779 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #440: GFLOPs: 11215.1509. Time: 74.3749 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #441: GFLOPs: 11072.4976. Time: 75.3331 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #442: GFLOPs: 11147.4944. Time: 74.8263 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #443: GFLOPs: 11050.8456. Time: 75.4807 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #444: GFLOPs: 11145.5129. Time: 74.8396 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #445: GFLOPs: 11134.0738. Time: 74.9165 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #446: GFLOPs: 4556.9808. Time: 183.0435 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #447: GFLOPs: 3613.7077. Time: 230.8227 us. Best GFLOPs: 12374.6947
2024-04-30 08:40:48 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #448: GFLOPs: 2747.0859. Time: 303.6402 us. Best GFLOPs: 12374.6947
2024-04-30 09:47:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 09:47:29 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 09:47:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:47:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:47:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:47:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 1617 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:48:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2021 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:48:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2425 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:48:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 2830 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:48:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3231 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:48:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 3629 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:48:32 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-04-30 09:48:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:49:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:49:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:49:58 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x458b7d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86159e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc94dd88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9c82368)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x8bb37a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8615a88)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86138a8)]: 0 failure(s)
2024-04-30 09:50:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1493  1.0050  1.0023  0.9822  0.9817  0.9803  0.9706  0.9686  0.9633  0.9628  0.9627  0.9627  0.9550  0.9541  0.9534  0.9526
[17 : 32]:	0.9523  0.9511  0.9506  0.9469  0.9467  0.9462  0.9455  0.9444  0.9441  0.9437  0.9426  0.9422  0.9401  0.9397  0.9396  0.9375
[33 : 48]:	0.9371  0.9365  0.9363  0.9324  0.9321  0.9275  0.9202  0.9186  0.9180  0.9174  0.9170  0.9162  0.9144  0.9144  0.9138  0.9127
[49 : 64]:	0.9127  0.9124  0.9091  0.9075  0.9075  0.9075  0.9065  0.9061  0.9058  0.9058  0.9058  0.9058  0.9058  0.9046  0.9046  0.9037
2024-04-30 09:50:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 09:50:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #449: GFLOPs: 11318.9711. Time: 73.6927 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #450: GFLOPs: 6218.2557. Time: 134.1414 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #451: GFLOPs: 12320.5076. Time: 67.7022 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #452: GFLOPs: 11993.9243. Time: 69.5457 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #453: GFLOPs: 6782.0532. Time: 122.9902 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #454: GFLOPs: 7031.3564. Time: 118.6294 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #455: GFLOPs: 6795.9993. Time: 122.7378 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #456: GFLOPs: 12125.2239. Time: 68.7926 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #457: GFLOPs: 12164.4792. Time: 68.5706 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #458: GFLOPs: 6704.5233. Time: 124.4124 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #459: GFLOPs: 12017.9131. Time: 69.4069 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #460: GFLOPs: 12018.1263. Time: 69.4056 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #461: GFLOPs: 12215.7985. Time: 68.2825 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #462: GFLOPs: 12320.6330. Time: 67.7015 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #463: GFLOPs: 12265.4591. Time: 68.0061 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #464: GFLOPs: 12086.5479. Time: 69.0127 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #465: GFLOPs: 12320.6330. Time: 67.7015 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #466: GFLOPs: 12121.1442. Time: 68.8158 us. Best GFLOPs: 12374.6947
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #467: GFLOPs: 12375.7449. Time: 67.4000 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #468: GFLOPs: 12000.0813. Time: 69.5100 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #469: GFLOPs: 12208.4858. Time: 68.3234 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #470: GFLOPs: 12112.4776. Time: 68.8650 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #471: GFLOPs: 12146.8634. Time: 68.6701 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #472: GFLOPs: 6657.7055. Time: 125.2873 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #473: GFLOPs: 12112.6256. Time: 68.8642 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #474: GFLOPs: 12333.0462. Time: 67.6334 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #475: GFLOPs: 12136.1189. Time: 68.7309 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #476: GFLOPs: 12066.6337. Time: 69.1266 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #477: GFLOPs: 12252.6092. Time: 68.0774 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #478: GFLOPs: 9772.6161. Time: 85.3534 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #479: GFLOPs: 12065.6038. Time: 69.1325 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #480: GFLOPs: 6469.1815. Time: 128.9384 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #481: GFLOPs: 12302.6861. Time: 67.8003 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #482: GFLOPs: 11828.7041. Time: 70.5171 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #483: GFLOPs: 12106.8145. Time: 68.8972 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #484: GFLOPs: 9163.2835. Time: 91.0291 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #485: GFLOPs: 6711.2499. Time: 124.2877 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #486: GFLOPs: 11807.1918. Time: 70.6456 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #487: GFLOPs: 11937.6481. Time: 69.8735 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #488: GFLOPs: 11238.9408. Time: 74.2175 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #489: GFLOPs: 11758.2589. Time: 70.9396 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #490: GFLOPs: 8547.6270. Time: 97.5857 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #491: GFLOPs: 11299.2501. Time: 73.8213 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #492: GFLOPs: 9952.5024. Time: 83.8107 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #493: GFLOPs: 11250.6592. Time: 74.1402 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #494: GFLOPs: 11205.3163. Time: 74.4402 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #495: GFLOPs: 11593.5027. Time: 71.9477 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #496: GFLOPs: 11171.8313. Time: 74.6633 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #497: GFLOPs: 11206.8436. Time: 74.4300 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #498: GFLOPs: 11231.5737. Time: 74.2662 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #499: GFLOPs: 11242.0386. Time: 74.1970 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #500: GFLOPs: 11149.1555. Time: 74.8152 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #501: GFLOPs: 11289.5690. Time: 73.8846 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #502: GFLOPs: 11252.7411. Time: 74.1265 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #503: GFLOPs: 11080.1560. Time: 75.2811 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #504: GFLOPs: 11180.0758. Time: 74.6082 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #505: GFLOPs: 11222.7314. Time: 74.3247 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #506: GFLOPs: 11238.8189. Time: 74.2183 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #507: GFLOPs: 11245.9549. Time: 74.1712 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #508: GFLOPs: 11244.2091. Time: 74.1827 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #509: GFLOPs: 11249.2096. Time: 74.1497 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #510: GFLOPs: 8071.4178. Time: 103.3432 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #511: GFLOPs: 1408.4828. Time: 592.2158 us. Best GFLOPs: 12375.7449
2024-04-30 09:51:17 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #512: GFLOPs: 4785.3683. Time: 174.3076 us. Best GFLOPs: 12375.7449
