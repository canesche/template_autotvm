2024-04-30 01:34:55 [INFO] [task_scheduler.cc:160] Initializing Task #4: "fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3"
2024-04-30 01:34:55 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(114), T.int64(114)))
        input_tile = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(6), T.int64(6)))
        B = T.alloc_buffer((T.int64(6), T.int64(6)))
        data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        A = T.alloc_buffer((T.int64(6), T.int64(4)))
        inverse = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)))
        conv2d_winograd = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(128), T.int64(114), T.int64(114)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(113) and T.int64(1) <= v_i3 and v_i3 < T.int64(113), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(128), T.int64(784), T.int64(6), T.int64(6)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps, v_p % T.int64(28) * T.int64(4) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps, v_p % T.int64(28) * T.int64(4) + v_nu]
        for i, j in T.grid(T.int64(6), T.int64(6)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(6), T.int64(6), T.int64(128), T.int64(784), T.int64(6), T.int64(6)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(6), T.int64(6), T.int64(128), T.int64(784), T.int64(128)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(6), T.int64(4)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(128), T.int64(784), T.int64(4), T.int64(4), T.int64(6), T.int64(6)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-30 01:34:55 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 01:34:55 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2352), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1806336)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(301056))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(301056) // T.int64(50176))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(50176) // T.int64(392))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + ax0_ax1_ax2_ax3_fused % T.int64(392))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36864)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(6144))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(6144) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(32), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(6), T.int64(1), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(784) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), nu_3 * T.int64(6) + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(784) // T.int64(98) + co_3 + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(98) * T.int64(2) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_0 * T.int64(128) + ci_1 * T.int64(4) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(6), T.int64(1), T.int64(2)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(784) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(6), ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(784) // T.int64(98) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(98) * T.int64(2) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 3, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 6])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[16, 1, 8, 1, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 2, 98, 2, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[1, 32, 4])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
2024-04-30 01:34:55 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2352), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1806336)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(301056))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(301056) // T.int64(50176))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(50176) // T.int64(392))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + ax0_ax1_ax2_ax3_fused % T.int64(392))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36864)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(6144))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(6144) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(32), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(6), T.int64(1), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(784) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), nu_3 * T.int64(6) + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(784) // T.int64(98) + co_3 + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(98) * T.int64(2) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_1 * T.int64(4) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(6), T.int64(1), T.int64(2)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(784) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(6), ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(784) // T.int64(98) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(98) * T.int64(2) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 3, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 6])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[16, 1, 8, 1, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 2, 98, 2, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[1, 32, 4])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-30 01:34:55 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(2352), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1806336)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(301056))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(301056) // T.int64(50176))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(50176) // T.int64(392))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + ax0_ax1_ax2_ax3_fused % T.int64(392))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36864)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(6144))
                                    v1 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused % T.int64(6144) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(32), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(6), T.int64(1), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(784) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), nu_3 * T.int64(6) + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(784) // T.int64(98) + co_3 + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(98) * T.int64(2) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_1 * T.int64(4) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(6), T.int64(1), T.int64(2)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(784) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(6), ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(8) + eps_2_nu_2_co_2_p_2_fused % T.int64(784) // T.int64(98) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(392) + eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(98) * T.int64(2) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 1, 3, 2, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 6])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[16, 1, 8, 1, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[2, 2, 98, 2, 1])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[1, 32, 4])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-30 01:46:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 01:46:21 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 01:46:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 503 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:46:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1005 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:46:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1510 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:46:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2013 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:47:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2519 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:47:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3023 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:47:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3530 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:47:24 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-30 01:47:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:48:04 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 147 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:48:23 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 132 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:48:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 01:48:43 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9996  0.9989  0.9988  0.9986  0.9985  0.9981  0.9981  0.9972  0.9954  0.9938  0.9933  0.9930  0.9928  0.9920  0.9910  0.9908
[17 : 32]:	0.9907  0.9885  0.9878  0.9869  0.9862  0.9851  0.9836  0.9835  0.9832  0.9818  0.9812  0.9809  0.9797  0.9796  0.9778  0.9754
[33 : 48]:	0.9752  0.9728  0.9722  0.9715  0.9714  0.9702  0.9689  0.9676  0.9665  0.9663  0.9661  0.9660  0.9659  0.9657  0.9646  0.9638
[49 : 64]:	0.9637  0.9636  0.9631  0.9587  0.9587  0.9571  0.9564  0.9564  0.9563  0.9560  0.9546  0.9536  0.9522  0.9514  0.9512  0.9508
2024-04-30 01:48:43 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 01:48:43 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #1: GFLOPs: 1948.5560. Time: 765.5064 us. Best GFLOPs: 1948.5560
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #2: GFLOPs: 6685.7478. Time: 223.1063 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #3: GFLOPs: 5408.7300. Time: 275.7823 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #4: GFLOPs: 427.7648. Time: 3487.0379 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #5: GFLOPs: 1218.3965. Time: 1224.2584 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #6: GFLOPs: 4295.3565. Time: 347.2662 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #7: GFLOPs: 939.4036. Time: 1587.8502 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #8: GFLOPs: 4954.7931. Time: 301.0483 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #9: GFLOPs: 4092.8623. Time: 364.4472 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #10: GFLOPs: 1842.5723. Time: 809.5379 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #11: GFLOPs: 4480.0697. Time: 332.9484 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #12: GFLOPs: 755.2913. Time: 1974.9096 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #13: GFLOPs: 83.2004. Time: 17928.1920 us. Best GFLOPs: 6685.7478
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #14: GFLOPs: 8800.2207. Time: 169.4994 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #15: GFLOPs: 209.5589. Time: 7117.9606 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #16: GFLOPs: 69.0666. Time: 21597.0128 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #17: GFLOPs: 565.3859. Time: 2638.2551 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #18: GFLOPs: 983.4072. Time: 1516.8000 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #19: GFLOPs: 1680.0612. Time: 887.8439 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #20: GFLOPs: 3587.0328. Time: 415.8401 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #21: GFLOPs: 155.6334. Time: 9584.2673 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #22: GFLOPs: 446.6218. Time: 3339.8102 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #23: GFLOPs: 21.6595. Time: 68867.4110 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #24: GFLOPs: 5636.8274. Time: 264.6226 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #25: GFLOPs: 5744.5073. Time: 259.6623 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #26: GFLOPs: 207.1301. Time: 7201.4264 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #27: GFLOPs: 5873.2293. Time: 253.9714 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #28: GFLOPs: 5767.8153. Time: 258.6130 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #29: GFLOPs: 2768.0087. Time: 538.8828 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #30: GFLOPs: 6472.1085. Time: 230.4708 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #31: GFLOPs: 2945.0854. Time: 506.4818 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #32: GFLOPs: 324.2158. Time: 4600.7389 us. Best GFLOPs: 8800.2207
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #33: GFLOPs: 8892.3200. Time: 167.7439 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #34: GFLOPs: 313.9154. Time: 4751.7011 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #35: GFLOPs: 4090.5303. Time: 364.6550 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #36: GFLOPs: 339.1347. Time: 4398.3473 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #37: GFLOPs: 8192.9023. Time: 182.0639 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #38: GFLOPs: 7807.2554. Time: 191.0572 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #39: GFLOPs: 7984.9119. Time: 186.8063 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #40: GFLOPs: 96.4428. Time: 15466.4960 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #41: GFLOPs: 454.4724. Time: 3282.1183 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #42: GFLOPs: 5973.1932. Time: 249.7211 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #43: GFLOPs: 7863.7751. Time: 189.6840 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #44: GFLOPs: 228.8948. Time: 6516.6721 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #45: GFLOPs: 1853.0460. Time: 804.9623 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #46: GFLOPs: 3656.8317. Time: 407.9029 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #47: GFLOPs: 5541.9945. Time: 269.1508 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #48: GFLOPs: 3899.2176. Time: 382.5465 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #49: GFLOPs: 6232.1494. Time: 239.3447 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #50: GFLOPs: 5796.9392. Time: 257.3137 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #51: GFLOPs: 6290.9227. Time: 237.1086 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #52: GFLOPs: 839.8655. Time: 1776.0369 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #53: GFLOPs: 4128.9625. Time: 361.2608 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #54: GFLOPs: 8152.8807. Time: 182.9577 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #55: GFLOPs: 8141.4251. Time: 183.2151 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #56: GFLOPs: 5764.2633. Time: 258.7724 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #57: GFLOPs: 90.1151. Time: 16552.5207 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #58: GFLOPs: 4150.0889. Time: 359.4217 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #59: GFLOPs: 3688.5046. Time: 404.4002 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #60: GFLOPs: 5331.8347. Time: 279.7596 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #61: GFLOPs: 912.9761. Time: 1633.8129 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #62: GFLOPs: 590.6484. Time: 2525.4144 us. Best GFLOPs: 8892.3200
2024-04-30 02:17:11 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #63: GFLOPs: 2628.8874. Time: 567.4005 us. Best GFLOPs: 8892.3200
2024-04-30 02:45:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 02:45:34 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-30 02:45:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 438 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:45:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 883 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:45:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1326 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:46:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1764 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:46:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2206 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:46:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2651 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:46:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3094 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:46:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3542 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:46:35 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-30 02:46:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 131 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:47:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 107 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:47:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 92 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:48:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 02:48:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2127  1.0921  1.0130  1.0128  1.0032  1.0007  0.9977  0.9833  0.9790  0.9750  0.9702  0.9529  0.9499  0.9494  0.9457  0.9429
[17 : 32]:	0.9368  0.9359  0.9313  0.9312  0.9311  0.9308  0.9296  0.9268  0.9259  0.9255  0.9244  0.9231  0.9230  0.9222  0.9199  0.9195
[33 : 48]:	0.9190  0.9183  0.9176  0.9166  0.9142  0.9137  0.9133  0.9133  0.9132  0.9129  0.9119  0.9106  0.9078  0.9072  0.9057  0.9055
[49 : 64]:	0.9047  0.9041  0.9017  0.9013  0.9007  0.9007  0.9006  0.9000  0.8984  0.8984  0.8976  0.8965  0.8944  0.8937  0.8935  0.8930
2024-04-30 02:48:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 02:48:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #64: GFLOPs: 1301.0302. Time: 1146.5008 us. Best GFLOPs: 8892.3200
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #65: GFLOPs: 1291.8289. Time: 1154.6669 us. Best GFLOPs: 8892.3200
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #66: GFLOPs: 8126.0805. Time: 183.5611 us. Best GFLOPs: 8892.3200
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #67: GFLOPs: 8827.8701. Time: 168.9685 us. Best GFLOPs: 8892.3200
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #68: GFLOPs: 8630.2144. Time: 172.8384 us. Best GFLOPs: 8892.3200
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #69: GFLOPs: 6023.9991. Time: 247.6149 us. Best GFLOPs: 8892.3200
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #70: GFLOPs: 8579.8454. Time: 173.8530 us. Best GFLOPs: 8892.3200
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #71: GFLOPs: 11501.1813. Time: 129.6938 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #72: GFLOPs: 8753.5501. Time: 170.4031 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #73: GFLOPs: 6008.7739. Time: 248.2423 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #74: GFLOPs: 9055.5573. Time: 164.7201 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #75: GFLOPs: 4563.6428. Time: 326.8512 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #76: GFLOPs: 8105.9651. Time: 184.0166 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #77: GFLOPs: 4548.8917. Time: 327.9111 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #78: GFLOPs: 8815.2664. Time: 169.2101 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #79: GFLOPs: 8773.7184. Time: 170.0114 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #80: GFLOPs: 11409.7135. Time: 130.7335 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #81: GFLOPs: 4531.3313. Time: 329.1819 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #82: GFLOPs: 7138.4864. Time: 208.9564 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #83: GFLOPs: 9790.0720. Time: 152.3617 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #84: GFLOPs: 6316.4996. Time: 236.1485 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #85: GFLOPs: 4632.0846. Time: 322.0218 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #86: GFLOPs: 4098.9612. Time: 363.9049 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #87: GFLOPs: 8954.4476. Time: 166.5800 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #88: GFLOPs: 6737.0432. Time: 221.4075 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #89: GFLOPs: 8122.5494. Time: 183.6409 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #90: GFLOPs: 596.4772. Time: 2500.7360 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #91: GFLOPs: 8510.6572. Time: 175.2664 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #92: GFLOPs: 9463.1049. Time: 157.6261 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #93: GFLOPs: 9868.8381. Time: 151.1457 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #94: GFLOPs: 4285.2791. Time: 348.0828 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #95: GFLOPs: 8222.6195. Time: 181.4060 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #96: GFLOPs: 8727.6445. Time: 170.9089 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #97: GFLOPs: 4561.2030. Time: 327.0260 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #98: GFLOPs: 7963.6350. Time: 187.3054 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #99: GFLOPs: 9990.5357. Time: 149.3045 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #100: GFLOPs: 8799.2166. Time: 169.5187 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #101: GFLOPs: 7997.7962. Time: 186.5054 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #102: GFLOPs: 9882.0750. Time: 150.9432 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #103: GFLOPs: 9875.5968. Time: 151.0422 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #104: GFLOPs: 3175.0919. Time: 469.7918 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #105: GFLOPs: 8529.0502. Time: 174.8884 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #106: GFLOPs: 7615.7683. Time: 195.8610 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #107: GFLOPs: 8590.0264. Time: 173.6470 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #108: GFLOPs: 8115.9140. Time: 183.7910 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #109: GFLOPs: 9911.0975. Time: 150.5012 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #110: GFLOPs: 9848.0131. Time: 151.4653 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #111: GFLOPs: 8379.0669. Time: 178.0189 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #112: GFLOPs: 8181.7340. Time: 182.3125 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #113: GFLOPs: 8566.7636. Time: 174.1185 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #114: GFLOPs: 8662.0161. Time: 172.2038 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #115: GFLOPs: 5147.5001. Time: 289.7780 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #116: GFLOPs: 8156.3611. Time: 182.8796 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #117: GFLOPs: 8164.5050. Time: 182.6972 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #118: GFLOPs: 7751.9771. Time: 192.4196 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #119: GFLOPs: 6359.9448. Time: 234.5354 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #120: GFLOPs: 8000.7464. Time: 186.4366 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #121: GFLOPs: 7750.5730. Time: 192.4544 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #122: GFLOPs: 4122.2428. Time: 361.8497 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #123: GFLOPs: 7967.0308. Time: 187.2256 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #124: GFLOPs: 9221.4094. Time: 161.7575 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #125: GFLOPs: 2533.0337. Time: 588.8718 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #126: GFLOPs: 2906.0788. Time: 513.2800 us. Best GFLOPs: 11501.1813
2024-04-30 02:49:21 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #127: GFLOPs: 807.3392. Time: 1847.5903 us. Best GFLOPs: 11501.1813
2024-04-30 03:33:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 03:33:18 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 03:33:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 404 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:33:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 806 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:33:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1210 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:33:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1615 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:33:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2019 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:34:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2426 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:34:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2829 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:34:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3235 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:34:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3640 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:34:23 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-30 03:34:43 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:35:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:35:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:35:51 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 03:35:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0998  1.0215  1.0208  1.0186  1.0067  1.0023  1.0023  0.9953  0.9801  0.9631  0.9476  0.9444  0.9393  0.9393  0.9372  0.9288
[17 : 32]:	0.9266  0.9218  0.9205  0.9133  0.9121  0.9072  0.9051  0.9031  0.8999  0.8971  0.8925  0.8908  0.8904  0.8896  0.8875  0.8874
[33 : 48]:	0.8871  0.8860  0.8839  0.8839  0.8805  0.8805  0.8743  0.8736  0.8732  0.8699  0.8699  0.8695  0.8648  0.8621  0.8609  0.8606
[49 : 64]:	0.8597  0.8586  0.8577  0.8571  0.8571  0.8544  0.8527  0.8524  0.8524  0.8524  0.8510  0.8499  0.8498  0.8492  0.8477  0.8473
2024-04-30 03:35:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 03:35:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #128: GFLOPs: 9405.1454. Time: 158.5975 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #129: GFLOPs: 11129.6713. Time: 134.0230 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #130: GFLOPs: 9134.8219. Time: 163.2908 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #131: GFLOPs: 11392.4351. Time: 130.9318 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #132: GFLOPs: 9133.3411. Time: 163.3172 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #133: GFLOPs: 11391.2423. Time: 130.9455 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #134: GFLOPs: 11391.9329. Time: 130.9376 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #135: GFLOPs: 11261.5136. Time: 132.4540 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #136: GFLOPs: 9561.9249. Time: 155.9971 us. Best GFLOPs: 11501.1813
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #137: GFLOPs: 11537.9961. Time: 129.2800 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #138: GFLOPs: 10036.5575. Time: 148.6199 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #139: GFLOPs: 11342.5759. Time: 131.5074 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #140: GFLOPs: 11051.0326. Time: 134.9767 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #141: GFLOPs: 11055.4739. Time: 134.9225 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #142: GFLOPs: 9637.1457. Time: 154.7795 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #143: GFLOPs: 9538.3705. Time: 156.3823 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #144: GFLOPs: 10126.5738. Time: 147.2988 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #145: GFLOPs: 11091.9728. Time: 134.4785 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #146: GFLOPs: 10699.2949. Time: 139.4141 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #147: GFLOPs: 8824.7201. Time: 169.0288 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #148: GFLOPs: 10754.3452. Time: 138.7004 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #149: GFLOPs: 9449.3162. Time: 157.8561 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #150: GFLOPs: 10773.2778. Time: 138.4567 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #151: GFLOPs: 10071.9321. Time: 148.0979 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #152: GFLOPs: 11536.5309. Time: 129.2964 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #153: GFLOPs: 9910.1592. Time: 150.5155 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #154: GFLOPs: 8213.3541. Time: 181.6106 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #155: GFLOPs: 10049.9689. Time: 148.4216 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #156: GFLOPs: 11438.3032. Time: 130.4068 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #157: GFLOPs: 9531.3199. Time: 156.4980 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #158: GFLOPs: 11002.2819. Time: 135.5748 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #159: GFLOPs: 10030.1149. Time: 148.7154 us. Best GFLOPs: 11537.9961
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #160: GFLOPs: 11540.7698. Time: 129.2489 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #161: GFLOPs: 9554.3353. Time: 156.1210 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #162: GFLOPs: 9650.2182. Time: 154.5698 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #163: GFLOPs: 9890.9214. Time: 150.8082 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #164: GFLOPs: 10054.6694. Time: 148.3522 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #165: GFLOPs: 9179.8418. Time: 162.4900 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #166: GFLOPs: 10022.8733. Time: 148.8228 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #167: GFLOPs: 9859.1776. Time: 151.2938 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #168: GFLOPs: 10226.5941. Time: 145.8582 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #169: GFLOPs: 9963.0833. Time: 149.7159 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #170: GFLOPs: 9950.0438. Time: 149.9121 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #171: GFLOPs: 4161.1329. Time: 358.4678 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #172: GFLOPs: 6811.9015. Time: 218.9744 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #173: GFLOPs: 9963.9816. Time: 149.7024 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #174: GFLOPs: 10193.0158. Time: 146.3386 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #175: GFLOPs: 8223.4199. Time: 181.3883 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #176: GFLOPs: 7649.8122. Time: 194.9894 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #177: GFLOPs: 8736.0530. Time: 170.7444 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #178: GFLOPs: 8146.4612. Time: 183.1019 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #179: GFLOPs: 10165.4580. Time: 146.7354 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #180: GFLOPs: 10164.3489. Time: 146.7514 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #181: GFLOPs: 8113.3941. Time: 183.8481 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #182: GFLOPs: 6752.9616. Time: 220.8856 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #183: GFLOPs: 7259.5478. Time: 205.4718 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #184: GFLOPs: 10194.1416. Time: 146.3225 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #185: GFLOPs: 10170.3625. Time: 146.6646 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #186: GFLOPs: 10869.1635. Time: 137.2352 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #187: GFLOPs: 8058.0627. Time: 185.1105 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #188: GFLOPs: 8340.8561. Time: 178.8344 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #189: GFLOPs: 268.2802. Time: 5559.9784 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #190: GFLOPs: 2573.7832. Time: 579.5485 us. Best GFLOPs: 11540.7698
2024-04-30 03:37:07 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #191: GFLOPs: 2953.0814. Time: 505.1104 us. Best GFLOPs: 11540.7698
2024-04-30 04:17:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 04:17:34 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 04:17:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:17:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 812 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:17:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1216 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:18:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1616 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:18:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:18:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2424 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:18:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2824 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:18:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3227 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:18:30 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-30 04:18:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:19:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:19:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:19:53 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:19:58 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0056  1.0056  1.0022  0.9995  0.9986  0.9956  0.9943  0.9904  0.9877  0.9865  0.9804  0.9765  0.9712  0.9706  0.9695  0.9683
[17 : 32]:	0.9681  0.9681  0.9674  0.9673  0.9670  0.9650  0.9649  0.9647  0.9646  0.9642  0.9636  0.9627  0.9616  0.9613  0.9598  0.9574
[33 : 48]:	0.9556  0.9553  0.9529  0.9527  0.9521  0.9517  0.9510  0.9508  0.9501  0.9473  0.9467  0.9462  0.9456  0.9450  0.9447  0.9427
[49 : 64]:	0.9426  0.9426  0.9414  0.9394  0.9393  0.9392  0.9391  0.9378  0.9373  0.9369  0.9359  0.9346  0.9344  0.9342  0.9327  0.9324
2024-04-30 04:19:58 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 04:19:58 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #192: GFLOPs: 11553.5017. Time: 129.1065 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #193: GFLOPs: 11273.4019. Time: 132.3143 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #194: GFLOPs: 11301.5282. Time: 131.9850 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #195: GFLOPs: 11305.2612. Time: 131.9414 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #196: GFLOPs: 11302.5239. Time: 131.9734 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #197: GFLOPs: 9060.7609. Time: 164.6255 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #198: GFLOPs: 11127.8735. Time: 134.0447 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #199: GFLOPs: 11299.6665. Time: 132.0067 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #200: GFLOPs: 11291.5025. Time: 132.1022 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #201: GFLOPs: 11340.9191. Time: 131.5266 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #202: GFLOPs: 11279.0108. Time: 132.2485 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #203: GFLOPs: 10995.9293. Time: 135.6531 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #204: GFLOPs: 11150.6517. Time: 133.7708 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #205: GFLOPs: 11473.5366. Time: 130.0063 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #206: GFLOPs: 11072.0846. Time: 134.7201 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #207: GFLOPs: 11124.2485. Time: 134.0884 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #208: GFLOPs: 11247.7000. Time: 132.6166 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #209: GFLOPs: 10897.2927. Time: 136.8810 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #210: GFLOPs: 11251.7583. Time: 132.5688 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #211: GFLOPs: 10900.3959. Time: 136.8420 us. Best GFLOPs: 11553.5017
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #212: GFLOPs: 11592.5552. Time: 128.6716 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #213: GFLOPs: 9165.8805. Time: 162.7375 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #214: GFLOPs: 11394.8914. Time: 130.9036 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #215: GFLOPs: 11134.6871. Time: 133.9626 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #216: GFLOPs: 10900.7897. Time: 136.8371 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #217: GFLOPs: 10812.2706. Time: 137.9573 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #218: GFLOPs: 11155.4399. Time: 133.7134 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #219: GFLOPs: 9987.6933. Time: 149.3470 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #220: GFLOPs: 11204.3319. Time: 133.1299 us. Best GFLOPs: 11592.5552
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #221: GFLOPs: 11902.0268. Time: 125.3259 us. Best GFLOPs: 11902.0268
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #222: GFLOPs: 9809.1908. Time: 152.0647 us. Best GFLOPs: 11902.0268
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #223: GFLOPs: 11346.7139. Time: 131.4594 us. Best GFLOPs: 11902.0268
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #224: GFLOPs: 11976.6361. Time: 124.5452 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #225: GFLOPs: 9161.5510. Time: 162.8144 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #226: GFLOPs: 10762.4730. Time: 138.5957 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #227: GFLOPs: 11368.2018. Time: 131.2109 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #228: GFLOPs: 10960.3434. Time: 136.0936 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #229: GFLOPs: 10941.0216. Time: 136.3339 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #230: GFLOPs: 11131.0400. Time: 134.0065 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #231: GFLOPs: 11483.1738. Time: 129.8972 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #232: GFLOPs: 10837.7058. Time: 137.6336 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #233: GFLOPs: 10001.1670. Time: 149.1458 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #234: GFLOPs: 11019.5223. Time: 135.3627 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #235: GFLOPs: 11097.7205. Time: 134.4089 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #236: GFLOPs: 10870.6864. Time: 137.2160 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #237: GFLOPs: 8910.5907. Time: 167.3999 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #238: GFLOPs: 10872.7176. Time: 137.1904 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #239: GFLOPs: 10647.5530. Time: 140.0915 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #240: GFLOPs: 11136.1070. Time: 133.9456 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #241: GFLOPs: 11957.3610. Time: 124.7459 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #242: GFLOPs: 11134.7744. Time: 133.9616 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #243: GFLOPs: 7747.2276. Time: 192.5375 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #244: GFLOPs: 10604.5590. Time: 140.6595 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #245: GFLOPs: 11052.5962. Time: 134.9576 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #246: GFLOPs: 11147.2531. Time: 133.8116 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #247: GFLOPs: 11097.8283. Time: 134.4076 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #248: GFLOPs: 11496.4264. Time: 129.7475 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #249: GFLOPs: 11017.1591. Time: 135.3917 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #250: GFLOPs: 9873.4248. Time: 151.0755 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #251: GFLOPs: 7456.1127. Time: 200.0549 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #252: GFLOPs: 11197.8085. Time: 133.2075 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #253: GFLOPs: 4943.3435. Time: 301.7456 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #254: GFLOPs: 276.0517. Time: 5403.4529 us. Best GFLOPs: 11976.6361
2024-04-30 04:21:04 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #255: GFLOPs: 4460.9661. Time: 334.3742 us. Best GFLOPs: 11976.6361
2024-04-30 04:33:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 04:33:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 04:33:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:34:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:34:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1215 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:34:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1624 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:34:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2030 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:34:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2433 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:34:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2835 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:34:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3235 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:34:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3642 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:35:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 4047 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:35:01 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-30 04:35:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:35:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:36:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:36:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 04:36:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9949  0.9886  0.9863  0.9863  0.9825  0.9798  0.9647  0.9646  0.9624  0.9615  0.9611  0.9586  0.9581  0.9572  0.9546  0.9534
[17 : 32]:	0.9534  0.9533  0.9529  0.9512  0.9512  0.9510  0.9508  0.9494  0.9494  0.9486  0.9486  0.9481  0.9476  0.9474  0.9465  0.9456
[33 : 48]:	0.9455  0.9451  0.9451  0.9449  0.9436  0.9433  0.9428  0.9425  0.9419  0.9413  0.9408  0.9403  0.9387  0.9386  0.9385  0.9384
[49 : 64]:	0.9378  0.9378  0.9378  0.9378  0.9376  0.9366  0.9363  0.9363  0.9359  0.9359  0.9358  0.9358  0.9347  0.9343  0.9335  0.9335
2024-04-30 04:36:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 04:36:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #256: GFLOPs: 9942.0091. Time: 150.0333 us. Best GFLOPs: 11976.6361
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #257: GFLOPs: 11998.7443. Time: 124.3157 us. Best GFLOPs: 11998.7443
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #258: GFLOPs: 11978.3879. Time: 124.5270 us. Best GFLOPs: 11998.7443
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #259: GFLOPs: 11974.2811. Time: 124.5697 us. Best GFLOPs: 11998.7443
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #260: GFLOPs: 11907.6574. Time: 125.2666 us. Best GFLOPs: 11998.7443
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #261: GFLOPs: 11853.8133. Time: 125.8356 us. Best GFLOPs: 11998.7443
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #262: GFLOPs: 11889.0361. Time: 125.4628 us. Best GFLOPs: 11998.7443
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #263: GFLOPs: 12005.6542. Time: 124.2441 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #264: GFLOPs: 11331.9707. Time: 131.6304 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #265: GFLOPs: 11318.3633. Time: 131.7887 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #266: GFLOPs: 11093.4803. Time: 134.4602 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #267: GFLOPs: 10543.1336. Time: 141.4790 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #268: GFLOPs: 11399.1154. Time: 130.8551 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #269: GFLOPs: 10976.1055. Time: 135.8981 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #270: GFLOPs: 11730.2666. Time: 127.1610 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #271: GFLOPs: 10241.4183. Time: 145.6470 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #272: GFLOPs: 11435.4237. Time: 130.4396 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #273: GFLOPs: 10663.5733. Time: 139.8811 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #274: GFLOPs: 11289.9225. Time: 132.1207 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #275: GFLOPs: 11911.2711. Time: 125.2286 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #276: GFLOPs: 11841.9559. Time: 125.9616 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #277: GFLOPs: 11195.6234. Time: 133.2335 us. Best GFLOPs: 12005.6542
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #278: GFLOPs: 12051.1323. Time: 123.7753 us. Best GFLOPs: 12051.1323
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #279: GFLOPs: 10520.4562. Time: 141.7840 us. Best GFLOPs: 12051.1323
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #280: GFLOPs: 10489.1621. Time: 142.2070 us. Best GFLOPs: 12051.1323
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #281: GFLOPs: 11336.5992. Time: 131.5767 us. Best GFLOPs: 12051.1323
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #282: GFLOPs: 11364.6071. Time: 131.2524 us. Best GFLOPs: 12051.1323
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #283: GFLOPs: 11643.6473. Time: 128.1069 us. Best GFLOPs: 12051.1323
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #284: GFLOPs: 11455.4787. Time: 130.2112 us. Best GFLOPs: 12051.1323
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #285: GFLOPs: 12079.5974. Time: 123.4836 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #286: GFLOPs: 7689.8011. Time: 193.9754 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #287: GFLOPs: 11539.1453. Time: 129.2671 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #288: GFLOPs: 11193.9023. Time: 133.2540 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #289: GFLOPs: 11964.8169. Time: 124.6682 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #290: GFLOPs: 11908.5838. Time: 125.2569 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #291: GFLOPs: 11511.0183. Time: 129.5830 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #292: GFLOPs: 11553.1387. Time: 129.1106 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #293: GFLOPs: 11341.3919. Time: 131.5211 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #294: GFLOPs: 10893.6929. Time: 136.9262 us. Best GFLOPs: 12079.5974
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #295: GFLOPs: 12098.8550. Time: 123.2870 us. Best GFLOPs: 12098.8550
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #296: GFLOPs: 12274.6883. Time: 121.5210 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #297: GFLOPs: 12003.4661. Time: 124.2668 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #298: GFLOPs: 11678.7354. Time: 127.7221 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #299: GFLOPs: 11372.1533. Time: 131.1653 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #300: GFLOPs: 11359.0703. Time: 131.3164 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #301: GFLOPs: 11534.7954. Time: 129.3159 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #302: GFLOPs: 11215.4843. Time: 132.9976 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #303: GFLOPs: 11323.7590. Time: 131.7259 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #304: GFLOPs: 11449.3449. Time: 130.2810 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #305: GFLOPs: 11369.7117. Time: 131.1935 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #306: GFLOPs: 9985.4956. Time: 149.3799 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #307: GFLOPs: 11463.3332. Time: 130.1220 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #308: GFLOPs: 11871.8835. Time: 125.6441 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #309: GFLOPs: 10833.3732. Time: 137.6886 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #310: GFLOPs: 11720.5271. Time: 127.2666 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #311: GFLOPs: 10420.3318. Time: 143.1463 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #312: GFLOPs: 10424.4215. Time: 143.0902 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #313: GFLOPs: 11379.8239. Time: 131.0769 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #314: GFLOPs: 11449.4524. Time: 130.2798 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #315: GFLOPs: 11408.9648. Time: 130.7421 us. Best GFLOPs: 12274.6883
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #316: GFLOPs: 12276.8098. Time: 121.5000 us. Best GFLOPs: 12276.8098
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #317: GFLOPs: 9490.5607. Time: 157.1701 us. Best GFLOPs: 12276.8098
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #318: GFLOPs: 7098.7640. Time: 210.1256 us. Best GFLOPs: 12276.8098
2024-04-30 04:37:38 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #319: GFLOPs: 4465.7619. Time: 334.0151 us. Best GFLOPs: 12276.8098
2024-04-30 05:30:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 05:30:41 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 05:30:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:30:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 803 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1211 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1614 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2021 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2427 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2833 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3235 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3642 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 4046 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:31:55 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-30 05:32:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 76 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:32:36 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 64 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:32:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:33:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 05:33:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3577  1.3512  1.3487  0.9741  0.9737  0.9686  0.9684  0.9674  0.9656  0.9656  0.9643  0.9617  0.9601  0.9593  0.9586  0.9573
[17 : 32]:	0.9570  0.9566  0.9562  0.9559  0.9555  0.9551  0.9548  0.9545  0.9543  0.9539  0.9536  0.9535  0.9532  0.9527  0.9526  0.9524
[33 : 48]:	0.9520  0.9512  0.9510  0.9510  0.9510  0.9505  0.9505  0.9501  0.9500  0.9497  0.9497  0.9492  0.9491  0.9483  0.9482  0.9473
[49 : 64]:	0.9469  0.9456  0.9453  0.9451  0.9440  0.9440  0.9428  0.9426  0.9424  0.9423  0.9422  0.9420  0.9407  0.9397  0.9393  0.9388
2024-04-30 05:33:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 05:33:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #320: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(6), T.int64(6)), scope="local")
        data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax0)
                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(6)):
                    for nu in T.unroll(T.int64(6)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(6)):
                            for r_b in T.unroll(T.int64(6)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                                    v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax2)
                        v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(6), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(3), T.int64(16), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(392) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(196) + p_3_init * T.int64(14) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(128)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(74)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2352))
                                        v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2352) // T.int64(784))
                                        v2 = T.axis.spatial(T.int64(128), ci_0)
                                        v3 = T.axis.spatial(T.int64(784), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(784))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4704))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(3)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) // T.int64(384))
                                        v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(384) // T.int64(128))
                                        v2 = T.axis.spatial(T.int64(128), ci_0)
                                        v3 = T.axis.spatial(T.int64(128), (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(16), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(392) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(196) + p_3 * T.int64(14) + p_4)
                                v_ci = T.axis.reduce(T.int64(128), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(3), T.int64(16), T.int64(196)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + ax0)
                            v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + ax1)
                            v2 = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(392) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(196) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(4)):
                        for ax3 in T.unroll(T.int64(4)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(6)):
                                for ax5 in T.unroll(T.int64(6)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                        v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784))
                        v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                        v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[3, 1, 2, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 1, 1, 3, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 8, 16, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 2, 2, 14, 14])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[128, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 32, 3], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #321: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(6), T.int64(6)), scope="local")
        data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax0)
                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(6)):
                    for nu in T.unroll(T.int64(6)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(6)):
                            for r_b in T.unroll(T.int64(6)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                                    v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax2)
                        v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(6), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(3), T.int64(16), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(98) + p_3_init * T.int64(7) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(128)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(74)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2352))
                                        v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2352) // T.int64(784))
                                        v2 = T.axis.spatial(T.int64(128), ci_0)
                                        v3 = T.axis.spatial(T.int64(784), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(784))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4704))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(3)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) // T.int64(384))
                                        v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(384) // T.int64(128))
                                        v2 = T.axis.spatial(T.int64(128), ci_0)
                                        v3 = T.axis.spatial(T.int64(128), (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(16), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(98) + p_3 * T.int64(7) + p_4)
                                v_ci = T.axis.reduce(T.int64(128), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(3), T.int64(16), T.int64(98)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + ax0)
                            v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + ax1)
                            v2 = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(98) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(4)):
                        for ax3 in T.unroll(T.int64(4)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(6)):
                                for ax5 in T.unroll(T.int64(6)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                        v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784))
                        v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                        v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[3, 1, 2, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 1, 1, 3, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 8, 16, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 4, 2, 14, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[128, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 32, 2], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 32, 3], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:121] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #322: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(6), T.int64(6)), scope="local")
        data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(128)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax0)
                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(6)):
                    for nu in T.unroll(T.int64(6)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(6)):
                            for r_b in T.unroll(T.int64(6)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                                    v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax2)
                        v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(6), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(3), T.int64(16), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(98) + p_3_init * T.int64(7) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(128)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(37)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(2352))
                                        v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2352) // T.int64(784))
                                        v2 = T.axis.spatial(T.int64(128), ci_0)
                                        v3 = T.axis.spatial(T.int64(784), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(784))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(4704))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(3)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) // T.int64(384))
                                        v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(384) // T.int64(128))
                                        v2 = T.axis.spatial(T.int64(128), ci_0)
                                        v3 = T.axis.spatial(T.int64(128), (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(16), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(98) + p_3 * T.int64(7) + p_4)
                                v_ci = T.axis.reduce(T.int64(128), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(3), T.int64(16), T.int64(98)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused // T.int64(16) + ax0)
                            v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(3) + ax1)
                            v2 = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(16) // T.int64(2) * T.int64(16) + ax2)
                            v3 = T.axis.spatial(T.int64(784), eps_1_nu_1_co_1_p_1_fused * T.int64(196) + eps_2_nu_2_co_2_p_2_fused % T.int64(2) * T.int64(98) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(4)):
                        for ax3 in T.unroll(T.int64(4)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(6)):
                                for ax5 in T.unroll(T.int64(6)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                        v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(784))
                        v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                        v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[3, 1, 2, 1, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 1, 1, 3, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 8, 16, 1])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[1, 4, 2, 14, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[128, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 32, 4], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144, l145 = sch.split(loop=l142, factors=[None, 32, 3], preserve_unit_iters=True)
sch.vectorize(loop=l145)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b146 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b146, ann_key="meta_schedule.unroll_explicit")
b147, b148, b149, b150, b151, b152, b153, b154, b155 = sch.get_child_blocks(b146)
l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b147)
l162, l163, l164, l165, l166, l167 = sch.get_loops(block=b148)
sch.annotate(block_or_loop=l162, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l162, ann_key="pragma_unroll_explicit", ann_val=1)
l168, l169, l170, l171, l172, l173 = sch.get_loops(block=b149)
l174, l175, l176, l177, l178, l179, l180 = sch.get_loops(block=b150)
l181, l182, l183, l184, l185, l186, l187 = sch.get_loops(block=b151)
l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199, l200, l201 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l188, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l188, ann_key="pragma_unroll_explicit", ann_val=1)
l202, l203, l204, l205, l206, l207, l208 = sch.get_loops(block=b153)
l209, l210, l211, l212, l213, l214, l215, l216 = sch.get_loops(block=b154)
sch.annotate(block_or_loop=l209, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l209, ann_key="pragma_unroll_explicit", ann_val=1)
l217, l218, l219, l220 = sch.get_loops(block=b155)
b221 = sch.get_block(name="data_pack", func_name="main")
l222, l223, l224, l225, l226, l227 = sch.get_loops(block=b221)
b228 = sch.decompose_reduction(block=b221, loop=l226)
b229 = sch.get_block(name="bgemm", func_name="main")
l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241, l242, l243 = sch.get_loops(block=b229)
b244 = sch.decompose_reduction(block=b229, loop=l233)
b245 = sch.get_block(name="inverse", func_name="main")
l246, l247, l248, l249, l250, l251, l252, l253 = sch.get_loops(block=b245)
b254 = sch.decompose_reduction(block=b245, loop=l252)
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #323: GFLOPs: 12091.1631. Time: 123.3655 us. Best GFLOPs: 12276.8098
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #324: GFLOPs: 12042.9189. Time: 123.8597 us. Best GFLOPs: 12276.8098
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #325: GFLOPs: 12877.3037. Time: 115.8342 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #326: GFLOPs: 11953.3957. Time: 124.7873 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #327: GFLOPs: 11954.3603. Time: 124.7772 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #328: GFLOPs: 11954.2680. Time: 124.7782 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #329: GFLOPs: 11879.4963. Time: 125.5636 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #330: GFLOPs: 12025.8930. Time: 124.0350 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #331: GFLOPs: 11708.5771. Time: 127.3965 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #332: GFLOPs: 11819.0595. Time: 126.2057 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #333: GFLOPs: 12269.7128. Time: 121.5703 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #334: GFLOPs: 11961.3642. Time: 124.7042 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #335: GFLOPs: 11761.3902. Time: 126.8245 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #336: GFLOPs: 11943.0278. Time: 124.8956 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #337: GFLOPs: 11986.2500. Time: 124.4453 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #338: GFLOPs: 11870.1105. Time: 125.6629 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #339: GFLOPs: 11829.8473. Time: 126.0906 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #340: GFLOPs: 11959.1374. Time: 124.7274 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #341: GFLOPs: 11949.9519. Time: 124.8233 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #342: GFLOPs: 11855.2625. Time: 125.8203 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #343: GFLOPs: 11954.2494. Time: 124.7784 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #344: GFLOPs: 11841.8622. Time: 125.9626 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #345: GFLOPs: 11995.8256. Time: 124.3459 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #346: GFLOPs: 11923.8696. Time: 125.0963 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #347: GFLOPs: 12430.2151. Time: 120.0005 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #348: GFLOPs: 11836.4462. Time: 126.0203 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #349: GFLOPs: 11692.9701. Time: 127.5666 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #350: GFLOPs: 11224.1427. Time: 132.8950 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #351: GFLOPs: 12425.9744. Time: 120.0415 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #352: GFLOPs: 11642.0901. Time: 128.1241 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #353: GFLOPs: 11936.7306. Time: 124.9615 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #354: GFLOPs: 12421.8925. Time: 120.0809 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #355: GFLOPs: 12022.5973. Time: 124.0690 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #356: GFLOPs: 11955.0867. Time: 124.7697 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #357: GFLOPs: 11391.8353. Time: 130.9387 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #358: GFLOPs: 11445.9672. Time: 130.3194 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #359: GFLOPs: 11793.7589. Time: 126.4764 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #360: GFLOPs: 12340.4529. Time: 120.8734 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #361: GFLOPs: 11723.2000. Time: 127.2376 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #362: GFLOPs: 11631.7510. Time: 128.2380 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #363: GFLOPs: 11793.1591. Time: 126.4828 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #364: GFLOPs: 11587.8802. Time: 128.7235 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #365: GFLOPs: 11398.4412. Time: 130.8628 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #366: GFLOPs: 12498.1930. Time: 119.3478 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #367: GFLOPs: 11440.1481. Time: 130.3857 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #368: GFLOPs: 11432.6709. Time: 130.4710 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #369: GFLOPs: 11569.6339. Time: 128.9265 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #370: GFLOPs: 11730.5036. Time: 127.1584 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #371: GFLOPs: 11642.9900. Time: 128.1142 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #372: GFLOPs: 11512.3728. Time: 129.5677 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #373: GFLOPs: 11528.0292. Time: 129.3918 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #374: GFLOPs: 11957.3737. Time: 124.7458 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #375: GFLOPs: 11740.3453. Time: 127.0518 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #376: GFLOPs: 11309.1447. Time: 131.8961 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #377: GFLOPs: 11438.4940. Time: 130.4046 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #378: GFLOPs: 11808.6392. Time: 126.3170 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #379: GFLOPs: 12376.1549. Time: 120.5247 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #380: GFLOPs: 11703.5267. Time: 127.4515 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #381: GFLOPs: 3050.2715. Time: 489.0162 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #382: GFLOPs: 722.0147. Time: 2065.9304 us. Best GFLOPs: 12877.3037
2024-04-30 05:34:53 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #383: GFLOPs: 6185.4138. Time: 241.1532 us. Best GFLOPs: 12877.3037
2024-04-30 06:08:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 06:08:59 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 06:09:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 402 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:09:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 806 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:09:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1212 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:09:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1618 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:09:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2020 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:09:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2424 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:09:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2829 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:09:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3231 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:10:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3635 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:10:02 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-30 06:10:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:10:42 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:11:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:11:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:11:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0065  0.9815  0.9806  0.9699  0.9691  0.9667  0.9645  0.9645  0.9630  0.9622  0.9601  0.9592  0.9581  0.9573  0.9569  0.9560
[17 : 32]:	0.9559  0.9559  0.9558  0.9557  0.9546  0.9528  0.9524  0.9524  0.9506  0.9497  0.9495  0.9488  0.9488  0.9482  0.9471  0.9468
[33 : 48]:	0.9466  0.9458  0.9453  0.9439  0.9439  0.9423  0.9419  0.9410  0.9402  0.9401  0.9391  0.9385  0.9379  0.9369  0.9368  0.9365
[49 : 64]:	0.9348  0.9342  0.9332  0.9332  0.9320  0.9320  0.9300  0.9300  0.9300  0.9294  0.9294  0.9293  0.9288  0.9287  0.9287  0.9283
2024-04-30 06:11:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 06:11:32 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #384: GFLOPs: 11938.3840. Time: 124.9442 us. Best GFLOPs: 12877.3037
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #385: GFLOPs: 12414.2247. Time: 120.1551 us. Best GFLOPs: 12877.3037
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #386: GFLOPs: 12962.7724. Time: 115.0705 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #387: GFLOPs: 12506.3575. Time: 119.2699 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #388: GFLOPs: 12428.1283. Time: 120.0207 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #389: GFLOPs: 11187.8934. Time: 133.3256 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #390: GFLOPs: 12412.8498. Time: 120.1684 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #391: GFLOPs: 12492.1296. Time: 119.4058 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #392: GFLOPs: 12346.1215. Time: 120.8179 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #393: GFLOPs: 10101.2433. Time: 147.6682 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #394: GFLOPs: 11989.4063. Time: 124.4125 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #395: GFLOPs: 12523.9946. Time: 119.1019 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #396: GFLOPs: 12390.2788. Time: 120.3873 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #397: GFLOPs: 12130.1177. Time: 122.9693 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #398: GFLOPs: 12691.9567. Time: 117.5258 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #399: GFLOPs: 12351.7609. Time: 120.7627 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #400: GFLOPs: 12657.4482. Time: 117.8462 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #401: GFLOPs: 12625.4516. Time: 118.1449 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #402: GFLOPs: 11456.9218. Time: 130.1948 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #403: GFLOPs: 12148.5308. Time: 122.7829 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #404: GFLOPs: 12146.4352. Time: 122.8041 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #405: GFLOPs: 12332.6146. Time: 120.9502 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #406: GFLOPs: 12096.1051. Time: 123.3151 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #407: GFLOPs: 12630.4302. Time: 118.0983 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #408: GFLOPs: 12416.4810. Time: 120.1332 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #409: GFLOPs: 11451.5748. Time: 130.2556 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #410: GFLOPs: 12136.0946. Time: 122.9087 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #411: GFLOPs: 12034.6569. Time: 123.9447 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #412: GFLOPs: 12050.2516. Time: 123.7843 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #413: GFLOPs: 11490.8688. Time: 129.8102 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #414: GFLOPs: 11522.8317. Time: 129.4501 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #415: GFLOPs: 12389.7945. Time: 120.3920 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #416: GFLOPs: 11491.7538. Time: 129.8002 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #417: GFLOPs: 10572.6650. Time: 141.0838 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #418: GFLOPs: 12264.7167. Time: 121.6198 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #419: GFLOPs: 11364.8530. Time: 131.2496 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #420: GFLOPs: 11503.7275. Time: 129.6651 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #421: GFLOPs: 12133.4204. Time: 122.9358 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #422: GFLOPs: 12155.2899. Time: 122.7146 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #423: GFLOPs: 12409.5698. Time: 120.2001 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #424: GFLOPs: 11924.3543. Time: 125.0912 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #425: GFLOPs: 12407.9353. Time: 120.2160 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #426: GFLOPs: 11077.9952. Time: 134.6482 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #427: GFLOPs: 12307.8031. Time: 121.1940 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #428: GFLOPs: 12087.6199. Time: 123.4016 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #429: GFLOPs: 11678.6870. Time: 127.7226 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #430: GFLOPs: 11372.2652. Time: 131.1640 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #431: GFLOPs: 11473.4996. Time: 130.0067 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #432: GFLOPs: 12149.3265. Time: 122.7749 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #433: GFLOPs: 11407.8466. Time: 130.7549 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #434: GFLOPs: 12589.9669. Time: 118.4778 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #435: GFLOPs: 11975.6293. Time: 124.5556 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #436: GFLOPs: 11684.1550. Time: 127.6628 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #437: GFLOPs: 11482.2496. Time: 129.9077 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #438: GFLOPs: 11810.5124. Time: 126.2970 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #439: GFLOPs: 11957.0859. Time: 124.7488 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #440: GFLOPs: 11960.9593. Time: 124.7084 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #441: GFLOPs: 11292.5907. Time: 132.0895 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #442: GFLOPs: 11405.7727. Time: 130.7787 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #443: GFLOPs: 12011.4473. Time: 124.1842 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #444: GFLOPs: 12940.6610. Time: 115.2671 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #445: GFLOPs: 1539.8831. Time: 968.6658 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #446: GFLOPs: 5738.5848. Time: 259.9303 us. Best GFLOPs: 12962.7724
2024-04-30 06:12:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #447: GFLOPs: 4624.6800. Time: 322.5374 us. Best GFLOPs: 12962.7724
2024-04-30 06:51:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 06:51:06 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 06:51:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:51:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:51:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1210 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:51:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1612 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:51:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2018 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:51:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:51:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2828 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:52:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3233 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:52:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3636 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:52:12 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-30 06:52:32 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:52:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:53:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:53:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 120 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 06:53:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0310  0.9594  0.9543  0.9543  0.9539  0.9535  0.9522  0.9503  0.9492  0.9486  0.9486  0.9485  0.9476  0.9473  0.9473  0.9472
[17 : 32]:	0.9469  0.9464  0.9459  0.9458  0.9458  0.9457  0.9457  0.9457  0.9456  0.9454  0.9452  0.9452  0.9452  0.9450  0.9450  0.9448
[33 : 48]:	0.9448  0.9448  0.9445  0.9443  0.9441  0.9437  0.9428  0.9428  0.9426  0.9420  0.9419  0.9419  0.9413  0.9411  0.9408  0.9405
[49 : 64]:	0.9401  0.9394  0.9391  0.9386  0.9386  0.9381  0.9380  0.9377  0.9371  0.9366  0.9365  0.9364  0.9364  0.9360  0.9354  0.9351
2024-04-30 06:53:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 06:53:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #448: GFLOPs: 12063.2044. Time: 123.6514 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #449: GFLOPs: 10889.3833. Time: 136.9804 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #450: GFLOPs: 12369.8616. Time: 120.5860 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #451: GFLOPs: 12108.6615. Time: 123.1872 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #452: GFLOPs: 12930.8791. Time: 115.3543 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #453: GFLOPs: 12448.1646. Time: 119.8275 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #454: GFLOPs: 12735.4327. Time: 117.1246 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #455: GFLOPs: 12147.9104. Time: 122.7892 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #456: GFLOPs: 12445.0083. Time: 119.8579 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #457: GFLOPs: 12184.7559. Time: 122.4179 us. Best GFLOPs: 12962.7724
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #458: GFLOPs: 13179.3601. Time: 113.1794 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #459: GFLOPs: 12487.4228. Time: 119.4508 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #460: GFLOPs: 12604.7982. Time: 118.3384 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #461: GFLOPs: 12380.0045. Time: 120.4872 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #462: GFLOPs: 12667.4431. Time: 117.7532 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #463: GFLOPs: 12222.9188. Time: 122.0357 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #464: GFLOPs: 12480.7852. Time: 119.5143 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #465: GFLOPs: 12671.0267. Time: 117.7199 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #466: GFLOPs: 13092.6815. Time: 113.9287 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #467: GFLOPs: 12242.8445. Time: 121.8371 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #468: GFLOPs: 12539.0591. Time: 118.9589 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #469: GFLOPs: 12664.5855. Time: 117.7798 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #470: GFLOPs: 12661.8626. Time: 117.8051 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #471: GFLOPs: 12388.5031. Time: 120.4045 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #472: GFLOPs: 11434.9969. Time: 130.4445 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #473: GFLOPs: 12616.4349. Time: 118.2293 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #474: GFLOPs: 12512.4407. Time: 119.2119 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #475: GFLOPs: 12517.0835. Time: 119.1677 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #476: GFLOPs: 12583.1054. Time: 118.5424 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #477: GFLOPs: 12359.6585. Time: 120.6855 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #478: GFLOPs: 12421.2125. Time: 120.0875 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #479: GFLOPs: 12152.1678. Time: 122.7462 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #480: GFLOPs: 12151.8135. Time: 122.7498 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #481: GFLOPs: 12168.8705. Time: 122.5777 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #482: GFLOPs: 12584.2097. Time: 118.5320 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #483: GFLOPs: 13012.1794. Time: 114.6335 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #484: GFLOPs: 12148.2332. Time: 122.7859 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #485: GFLOPs: 12572.4079. Time: 118.6433 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #486: GFLOPs: 12946.5727. Time: 115.2144 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #487: GFLOPs: 12501.7019. Time: 119.3143 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #488: GFLOPs: 12517.0829. Time: 119.1677 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #489: GFLOPs: 12417.7978. Time: 120.1205 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #490: GFLOPs: 12397.3284. Time: 120.3188 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #491: GFLOPs: 12500.7157. Time: 119.3237 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #492: GFLOPs: 12652.3468. Time: 117.8937 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #493: GFLOPs: 12567.2458. Time: 118.6920 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #494: GFLOPs: 12618.8669. Time: 118.2065 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #495: GFLOPs: 12611.9396. Time: 118.2714 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #496: GFLOPs: 12644.4057. Time: 117.9678 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #497: GFLOPs: 12530.5115. Time: 119.0400 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #498: GFLOPs: 12628.9715. Time: 118.1119 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #499: GFLOPs: 12571.9359. Time: 118.6478 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #500: GFLOPs: 13145.1209. Time: 113.4742 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #501: GFLOPs: 12543.8051. Time: 118.9138 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #502: GFLOPs: 12760.1119. Time: 116.8980 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #503: GFLOPs: 12371.1604. Time: 120.5733 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #504: GFLOPs: 12154.8473. Time: 122.7191 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #505: GFLOPs: 12508.8217. Time: 119.2464 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #506: GFLOPs: 11346.1052. Time: 131.4664 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #507: GFLOPs: 12494.8277. Time: 119.3800 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #508: GFLOPs: 12491.2880. Time: 119.4138 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #509: GFLOPs: 4335.3610. Time: 344.0618 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #510: GFLOPs: 1506.2130. Time: 990.3195 us. Best GFLOPs: 13179.3601
2024-04-30 06:55:00 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #511: GFLOPs: 6.8565. Time: 217548.8077 us. Best GFLOPs: 13179.3601
2024-04-30 07:31:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 07:31:54 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 07:32:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 806 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1213 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1617 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2022 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2422 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2826 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3232 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3640 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:32:56 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-30 07:33:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:33:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:34:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:34:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 07:34:30 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2548  1.2278  1.1853  1.1750  1.1499  0.9933  0.9930  0.9914  0.9908  0.9888  0.9860  0.9854  0.9839  0.9831  0.9829  0.9828
[17 : 32]:	0.9817  0.9817  0.9809  0.9807  0.9792  0.9785  0.9771  0.9694  0.9651  0.9645  0.9641  0.9633  0.9629  0.9628  0.9627  0.9627
[33 : 48]:	0.9626  0.9616  0.9614  0.9602  0.9599  0.9594  0.9590  0.9587  0.9586  0.9584  0.9583  0.9561  0.9561  0.9558  0.9554  0.9554
[49 : 64]:	0.9540  0.9540  0.9530  0.9526  0.9496  0.9490  0.9468  0.9461  0.9459  0.9455  0.9453  0.9452  0.9452  0.9451  0.9450  0.9446
2024-04-30 07:34:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 07:34:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #512: GFLOPs: 830.5759. Time: 1795.9010 us. Best GFLOPs: 13179.3601
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #513: GFLOPs: 480.2510. Time: 3105.9426 us. Best GFLOPs: 13179.3601
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #514: GFLOPs: 361.6149. Time: 4124.9192 us. Best GFLOPs: 13179.3601
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #515: GFLOPs: 354.3076. Time: 4209.9918 us. Best GFLOPs: 13179.3601
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #516: GFLOPs: 628.5910. Time: 2372.9773 us. Best GFLOPs: 13179.3601
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #517: GFLOPs: 13130.7217. Time: 113.5986 us. Best GFLOPs: 13179.3601
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #518: GFLOPs: 13370.3172. Time: 111.5630 us. Best GFLOPs: 13370.3172
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #519: GFLOPs: 13393.3350. Time: 111.3712 us. Best GFLOPs: 13393.3350
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #520: GFLOPs: 12583.1808. Time: 118.5417 us. Best GFLOPs: 13393.3350
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #521: GFLOPs: 13428.9826. Time: 111.0756 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #522: GFLOPs: 12907.9311. Time: 115.5594 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #523: GFLOPs: 12948.9491. Time: 115.1933 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #524: GFLOPs: 12511.3971. Time: 119.2219 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #525: GFLOPs: 13116.3398. Time: 113.7232 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #526: GFLOPs: 12855.6305. Time: 116.0295 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #527: GFLOPs: 12919.2385. Time: 115.4582 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #528: GFLOPs: 12861.4670. Time: 115.9768 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #529: GFLOPs: 12866.0761. Time: 115.9353 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #530: GFLOPs: 12534.6678. Time: 119.0005 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #531: GFLOPs: 13316.4605. Time: 112.0142 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #532: GFLOPs: 13095.2561. Time: 113.9063 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #533: GFLOPs: 12864.6962. Time: 115.9477 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #534: GFLOPs: 12895.6991. Time: 115.6690 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #535: GFLOPs: 12301.9316. Time: 121.2519 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #536: GFLOPs: 12317.6059. Time: 121.0976 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #537: GFLOPs: 13027.2509. Time: 114.5009 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #538: GFLOPs: 13098.9609. Time: 113.8741 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #539: GFLOPs: 12492.6527. Time: 119.4008 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #540: GFLOPs: 12751.6220. Time: 116.9759 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #541: GFLOPs: 12743.6741. Time: 117.0488 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #542: GFLOPs: 13080.3777. Time: 114.0359 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #543: GFLOPs: 12924.8247. Time: 115.4083 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #544: GFLOPs: 13034.8123. Time: 114.4345 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #545: GFLOPs: 12771.3471. Time: 116.7952 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #546: GFLOPs: 12957.3478. Time: 115.1186 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #547: GFLOPs: 12464.6069. Time: 119.6694 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #548: GFLOPs: 10015.4492. Time: 148.9331 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #549: GFLOPs: 12479.4729. Time: 119.5269 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #550: GFLOPs: 12742.6740. Time: 117.0580 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #551: GFLOPs: 12366.7168. Time: 120.6167 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #552: GFLOPs: 10232.8923. Time: 145.7684 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #553: GFLOPs: 12805.6932. Time: 116.4820 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #554: GFLOPs: 13084.9387. Time: 113.9961 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #555: GFLOPs: 12832.1948. Time: 116.2414 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #556: GFLOPs: 12838.6076. Time: 116.1833 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #557: GFLOPs: 13220.7740. Time: 112.8249 us. Best GFLOPs: 13428.9826
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #558: GFLOPs: 13772.9099. Time: 108.3019 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #559: GFLOPs: 12454.4075. Time: 119.7674 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #560: GFLOPs: 12593.5036. Time: 118.4446 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #561: GFLOPs: 12480.3182. Time: 119.5188 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #562: GFLOPs: 12567.9677. Time: 118.6852 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #563: GFLOPs: 12642.4351. Time: 117.9861 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #564: GFLOPs: 13224.2998. Time: 112.7948 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #565: GFLOPs: 12569.6907. Time: 118.6690 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #566: GFLOPs: 12664.2716. Time: 117.7827 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #567: GFLOPs: 12737.9549. Time: 117.1014 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #568: GFLOPs: 12533.0230. Time: 119.0161 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #569: GFLOPs: 12680.7715. Time: 117.6294 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #570: GFLOPs: 12769.2846. Time: 116.8141 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #571: GFLOPs: 12683.6999. Time: 117.6023 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #572: GFLOPs: 12724.6546. Time: 117.2238 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #573: GFLOPs: 607.8795. Time: 2453.8288 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #574: GFLOPs: 746.6666. Time: 1997.7217 us. Best GFLOPs: 13772.9099
2024-04-30 07:35:37 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #575: GFLOPs: 515.2505. Time: 2894.9650 us. Best GFLOPs: 13772.9099
2024-04-30 08:27:30 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 08:27:33 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 08:27:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:27:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 809 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:27:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1208 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:28:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1615 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:28:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2015 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:28:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2421 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:28:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2823 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:28:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3229 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:28:30 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-04-30 08:28:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:29:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 137 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:29:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 132 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:30:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 08:30:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9612  0.9582  0.9545  0.9543  0.9526  0.9526  0.9520  0.9515  0.9513  0.9513  0.9508  0.9494  0.9486  0.9460  0.9422  0.9401
[17 : 32]:	0.9398  0.9396  0.9394  0.9391  0.9387  0.9382  0.9379  0.9377  0.9364  0.9360  0.9360  0.9359  0.9359  0.9357  0.9346  0.9344
[33 : 48]:	0.9334  0.9329  0.9326  0.9318  0.9301  0.9300  0.9300  0.9300  0.9299  0.9297  0.9296  0.9295  0.9287  0.9287  0.9286  0.9286
[49 : 64]:	0.9286  0.9281  0.9278  0.9278  0.9277  0.9277  0.9276  0.9274  0.9268  0.9266  0.9266  0.9266  0.9265  0.9262  0.9260  0.9260
2024-04-30 08:30:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 08:30:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #576: GFLOPs: 13132.7879. Time: 113.5808 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #577: GFLOPs: 13052.7687. Time: 114.2771 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #578: GFLOPs: 13641.1600. Time: 109.3479 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #579: GFLOPs: 13577.4274. Time: 109.8612 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #580: GFLOPs: 13711.2084. Time: 108.7893 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #581: GFLOPs: 13640.3262. Time: 109.3546 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #582: GFLOPs: 10654.1686. Time: 140.0046 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #583: GFLOPs: 13171.2488. Time: 113.2491 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #584: GFLOPs: 13068.7228. Time: 114.1376 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #585: GFLOPs: 13059.6528. Time: 114.2168 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #586: GFLOPs: 12995.3940. Time: 114.7816 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #587: GFLOPs: 10604.8226. Time: 140.6560 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #588: GFLOPs: 10553.3970. Time: 141.3414 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #589: GFLOPs: 10476.7238. Time: 142.3758 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #590: GFLOPs: 12822.5672. Time: 116.3287 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #591: GFLOPs: 13601.3966. Time: 109.6676 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #592: GFLOPs: 12809.1868. Time: 116.4502 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #593: GFLOPs: 13069.5602. Time: 114.1302 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #594: GFLOPs: 13259.4737. Time: 112.4956 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #595: GFLOPs: 12944.7301. Time: 115.2308 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #596: GFLOPs: 13269.7205. Time: 112.4087 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #597: GFLOPs: 13501.8230. Time: 110.4764 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #598: GFLOPs: 13054.7667. Time: 114.2596 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #599: GFLOPs: 13267.2855. Time: 112.4293 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #600: GFLOPs: 12576.6857. Time: 118.6030 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #601: GFLOPs: 12935.7463. Time: 115.3109 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #602: GFLOPs: 12934.8904. Time: 115.3185 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #603: GFLOPs: 12101.1607. Time: 123.2636 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #604: GFLOPs: 12663.2035. Time: 117.7926 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #605: GFLOPs: 12953.0191. Time: 115.1571 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #606: GFLOPs: 13271.0401. Time: 112.3975 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #607: GFLOPs: 13215.7596. Time: 112.8677 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #608: GFLOPs: 12665.9755. Time: 117.7669 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #609: GFLOPs: 12712.7022. Time: 117.3340 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #610: GFLOPs: 13249.9852. Time: 112.5761 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #611: GFLOPs: 12720.0860. Time: 117.2659 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #612: GFLOPs: 12995.3031. Time: 114.7824 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #613: GFLOPs: 13129.5885. Time: 113.6084 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #614: GFLOPs: 13137.3992. Time: 113.5409 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #615: GFLOPs: 12349.9898. Time: 120.7800 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #616: GFLOPs: 12835.0956. Time: 116.2151 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #617: GFLOPs: 12863.3026. Time: 115.9603 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #618: GFLOPs: 12766.0111. Time: 116.8440 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #619: GFLOPs: 12670.0372. Time: 117.7291 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #620: GFLOPs: 12239.4221. Time: 121.8711 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #621: GFLOPs: 13112.6479. Time: 113.7552 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #622: GFLOPs: 13071.8545. Time: 114.1102 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #623: GFLOPs: 13217.2724. Time: 112.8548 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #624: GFLOPs: 13272.7985. Time: 112.3826 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #625: GFLOPs: 12518.9207. Time: 119.1502 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #626: GFLOPs: 12860.1970. Time: 115.9883 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #627: GFLOPs: 13227.1710. Time: 112.7703 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #628: GFLOPs: 12460.8863. Time: 119.7051 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #629: GFLOPs: 12299.5566. Time: 121.2753 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #630: GFLOPs: 12927.8946. Time: 115.3809 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #631: GFLOPs: 12558.3573. Time: 118.7761 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #632: GFLOPs: 12630.1435. Time: 118.1010 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #633: GFLOPs: 12539.8971. Time: 118.9509 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #634: GFLOPs: 12559.6594. Time: 118.7637 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #635: GFLOPs: 12349.5067. Time: 120.7848 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #636: GFLOPs: 12996.6259. Time: 114.7707 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #637: GFLOPs: 2490.8060. Time: 598.8552 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #638: GFLOPs: 3574.4741. Time: 417.3011 us. Best GFLOPs: 13772.9099
2024-04-30 08:31:12 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #639: GFLOPs: 1834.4913. Time: 813.1040 us. Best GFLOPs: 13772.9099
2024-04-30 09:03:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 09:03:37 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 09:03:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:03:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 803 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:03:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1207 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:04:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1609 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:04:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2014 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:04:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2414 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:04:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2823 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:04:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3231 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:04:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3635 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:04:42 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-30 09:05:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 134 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:05:25 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 165 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:05:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 144 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:06:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 169 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:06:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9794  0.9768  0.9757  0.9756  0.9751  0.9728  0.9706  0.9705  0.9705  0.9699  0.9652  0.9651  0.9645  0.9642  0.9641  0.9639
[17 : 32]:	0.9599  0.9599  0.9586  0.9571  0.9565  0.9559  0.9557  0.9557  0.9553  0.9544  0.9541  0.9539  0.9539  0.9532  0.9524  0.9521
[33 : 48]:	0.9521  0.9517  0.9515  0.9514  0.9510  0.9509  0.9508  0.9507  0.9504  0.9504  0.9503  0.9500  0.9499  0.9497  0.9497  0.9497
[49 : 64]:	0.9496  0.9494  0.9492  0.9489  0.9488  0.9483  0.9472  0.9461  0.9460  0.9442  0.9442  0.9442  0.9439  0.9438  0.9438  0.9438
2024-04-30 09:06:18 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 09:06:18 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #640: GFLOPs: 13758.5343. Time: 108.4150 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #641: GFLOPs: 13459.0039. Time: 110.8278 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #642: GFLOPs: 13730.6185. Time: 108.6355 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #643: GFLOPs: 13389.4632. Time: 111.4034 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #644: GFLOPs: 13546.8149. Time: 110.1094 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #645: GFLOPs: 13550.8300. Time: 110.0768 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #646: GFLOPs: 12140.4849. Time: 122.8643 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #647: GFLOPs: 13514.7039. Time: 110.3711 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #648: GFLOPs: 13472.9055. Time: 110.7135 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #649: GFLOPs: 12142.3469. Time: 122.8455 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #650: GFLOPs: 13487.5745. Time: 110.5931 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #651: GFLOPs: 13322.0926. Time: 111.9668 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #652: GFLOPs: 13444.1153. Time: 110.9506 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #653: GFLOPs: 13314.7121. Time: 112.0289 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #654: GFLOPs: 13330.7114. Time: 111.8944 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #655: GFLOPs: 13305.0530. Time: 112.1102 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #656: GFLOPs: 13411.3159. Time: 111.2219 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #657: GFLOPs: 13452.8365. Time: 110.8786 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #658: GFLOPs: 13096.3446. Time: 113.8968 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #659: GFLOPs: 13568.7176. Time: 109.9317 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #660: GFLOPs: 13026.8931. Time: 114.5041 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #661: GFLOPs: 13278.0434. Time: 112.3382 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #662: GFLOPs: 13504.1631. Time: 110.4572 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #663: GFLOPs: 13563.0284. Time: 109.9778 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #664: GFLOPs: 13065.0155. Time: 114.1699 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #665: GFLOPs: 13424.1878. Time: 111.1153 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #666: GFLOPs: 13037.3558. Time: 114.4122 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #667: GFLOPs: 13597.9204. Time: 109.6956 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #668: GFLOPs: 12961.1914. Time: 115.0845 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #669: GFLOPs: 12926.3868. Time: 115.3944 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #670: GFLOPs: 13042.6495. Time: 114.3657 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #671: GFLOPs: 13013.8135. Time: 114.6191 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #672: GFLOPs: 13067.2660. Time: 114.1503 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #673: GFLOPs: 13344.9242. Time: 111.7752 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #674: GFLOPs: 13033.9797. Time: 114.4418 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #675: GFLOPs: 13151.2620. Time: 113.4212 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #676: GFLOPs: 13247.7362. Time: 112.5952 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #677: GFLOPs: 13284.3457. Time: 112.2850 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #678: GFLOPs: 13144.7251. Time: 113.4776 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #679: GFLOPs: 13061.0414. Time: 114.2047 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #680: GFLOPs: 13310.2545. Time: 112.0664 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #681: GFLOPs: 13594.1909. Time: 109.7257 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #682: GFLOPs: 13183.5066. Time: 113.1438 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #683: GFLOPs: 13036.7309. Time: 114.4177 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #684: GFLOPs: 13061.7597. Time: 114.1984 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #685: GFLOPs: 12920.9601. Time: 115.4428 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #686: GFLOPs: 13194.8502. Time: 113.0465 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #687: GFLOPs: 12918.5533. Time: 115.4643 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #688: GFLOPs: 13153.5234. Time: 113.4017 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #689: GFLOPs: 13189.8305. Time: 113.0896 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #690: GFLOPs: 12796.6971. Time: 116.5638 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #691: GFLOPs: 13155.9758. Time: 113.3806 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #692: GFLOPs: 13194.3916. Time: 113.0505 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #693: GFLOPs: 13340.3831. Time: 111.8133 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #694: GFLOPs: 13203.9035. Time: 112.9690 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #695: GFLOPs: 13207.9662. Time: 112.9343 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #696: GFLOPs: 13410.3047. Time: 111.2303 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #697: GFLOPs: 13066.2741. Time: 114.1589 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #698: GFLOPs: 13294.9327. Time: 112.1955 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #699: GFLOPs: 13091.3497. Time: 113.9403 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #700: GFLOPs: 13001.6222. Time: 114.7266 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #701: GFLOPs: 125.0756. Time: 11925.8457 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #702: GFLOPs: 3291.1070. Time: 453.2311 us. Best GFLOPs: 13772.9099
2024-04-30 09:07:39 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #703: GFLOPs: 707.5354. Time: 2108.2085 us. Best GFLOPs: 13772.9099
2024-04-30 09:51:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 09:51:20 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 09:51:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 405 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:51:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 811 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:51:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1214 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:51:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 1619 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:51:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2024 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:52:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2426 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:52:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 2833 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:52:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3240 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:52:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 3642 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:52:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 4045 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:52:31 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-30 09:52:53 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 185 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:53:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 158 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:53:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:54:04 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7045b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x85a33d8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x86168d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xa7ab4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x53c4b38)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8611f78)]: 161 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x530e518)]: 0 failure(s)
2024-04-30 09:54:10 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9759  0.9759  0.9759  0.9755  0.9755  0.9734  0.9734  0.9734  0.9733  0.9733  0.9732  0.9729  0.9729  0.9727  0.9723  0.9722
[17 : 32]:	0.9722  0.9720  0.9718  0.9718  0.9715  0.9706  0.9704  0.9704  0.9700  0.9700  0.9700  0.9697  0.9697  0.9693  0.9692  0.9692
[33 : 48]:	0.9692  0.9690  0.9688  0.9684  0.9679  0.9675  0.9670  0.9670  0.9668  0.9665  0.9665  0.9662  0.9661  0.9660  0.9656  0.9656
[49 : 64]:	0.9652  0.9650  0.9650  0.9650  0.9650  0.9650  0.9648  0.9648  0.9647  0.9647  0.9647  0.9645  0.9645  0.9644  0.9642  0.9641
2024-04-30 09:54:10 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 09:54:10 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #704: GFLOPs: 13515.5713. Time: 110.3640 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #705: GFLOPs: 13553.1100. Time: 110.0583 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #706: GFLOPs: 13733.9773. Time: 108.6089 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #707: GFLOPs: 13337.4021. Time: 111.8383 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #708: GFLOPs: 13402.7323. Time: 111.2931 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #709: GFLOPs: 13513.4763. Time: 110.3811 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #710: GFLOPs: 13135.0049. Time: 113.5616 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #711: GFLOPs: 13136.0972. Time: 113.5522 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #712: GFLOPs: 13551.2807. Time: 110.0731 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #713: GFLOPs: 13744.3120. Time: 108.5272 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #714: GFLOPs: 13511.0238. Time: 110.4011 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #715: GFLOPs: 13298.0446. Time: 112.1693 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #716: GFLOPs: 13399.9097. Time: 111.3166 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #717: GFLOPs: 13427.8741. Time: 111.0848 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #718: GFLOPs: 13524.3459. Time: 110.2924 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #719: GFLOPs: 13408.5319. Time: 111.2450 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #720: GFLOPs: 13429.0542. Time: 111.0750 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #721: GFLOPs: 13050.3949. Time: 114.2979 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #722: GFLOPs: 13453.1731. Time: 110.8759 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #723: GFLOPs: 13478.9526. Time: 110.6638 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #724: GFLOPs: 13504.9864. Time: 110.4505 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #725: GFLOPs: 13550.9553. Time: 110.0758 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #726: GFLOPs: 13388.1959. Time: 111.4140 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #727: GFLOPs: 13106.4991. Time: 113.8086 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #728: GFLOPs: 13435.2169. Time: 111.0240 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #729: GFLOPs: 13432.1578. Time: 111.0493 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #730: GFLOPs: 13426.1224. Time: 111.0993 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #731: GFLOPs: 13353.7968. Time: 111.7010 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #732: GFLOPs: 13252.5655. Time: 112.5542 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #733: GFLOPs: 13431.3487. Time: 111.0560 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #734: GFLOPs: 13049.3150. Time: 114.3073 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #735: GFLOPs: 13429.2190. Time: 111.0736 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #736: GFLOPs: 13533.7635. Time: 110.2156 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #737: GFLOPs: 13465.1886. Time: 110.7769 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #738: GFLOPs: 13526.9492. Time: 110.2711 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #739: GFLOPs: 13468.3083. Time: 110.7513 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #740: GFLOPs: 13142.5691. Time: 113.4962 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #741: GFLOPs: 13351.2170. Time: 111.7226 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #742: GFLOPs: 13622.5415. Time: 109.4973 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #743: GFLOPs: 13205.3801. Time: 112.9564 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #744: GFLOPs: 13465.5269. Time: 110.7741 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #745: GFLOPs: 13256.3971. Time: 112.5217 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #746: GFLOPs: 13170.3547. Time: 113.2568 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #747: GFLOPs: 13431.8354. Time: 111.0520 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #748: GFLOPs: 13278.7636. Time: 112.3322 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #749: GFLOPs: 13433.3029. Time: 111.0399 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #750: GFLOPs: 13436.9966. Time: 111.0093 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #751: GFLOPs: 13408.6493. Time: 111.2440 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #752: GFLOPs: 13708.9927. Time: 108.8068 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #753: GFLOPs: 13534.1411. Time: 110.2125 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #754: GFLOPs: 13469.2473. Time: 110.7435 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #755: GFLOPs: 13620.8151. Time: 109.5112 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #756: GFLOPs: 13598.7742. Time: 109.6887 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #757: GFLOPs: 13692.8902. Time: 108.9348 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #758: GFLOPs: 13728.5345. Time: 108.6520 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #759: GFLOPs: 13690.7121. Time: 108.9521 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #760: GFLOPs: 13270.9125. Time: 112.3986 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #761: GFLOPs: 13408.6962. Time: 111.2436 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #762: GFLOPs: 13219.7153. Time: 112.8339 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #763: GFLOPs: 13295.3284. Time: 112.1922 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #764: GFLOPs: 13296.2230. Time: 112.1847 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #765: GFLOPs: 1083.4720. Time: 1376.7150 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #766: GFLOPs: 3013.2617. Time: 495.0224 us. Best GFLOPs: 13772.9099
2024-04-30 09:55:16 [INFO] [task_scheduler.cc:131] [Task #4: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_3] Trial #767: GFLOPs: 35.7629. Time: 41708.8850 us. Best GFLOPs: 13772.9099
