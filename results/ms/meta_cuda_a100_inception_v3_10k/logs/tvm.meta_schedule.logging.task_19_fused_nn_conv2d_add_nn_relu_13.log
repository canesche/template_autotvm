2024-04-29 01:54:18 [INFO] [task_scheduler.cc:160] Initializing Task #19: "fused_nn_conv2d_add_nn_relu_13"
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(768), T.int64(12), T.int64(12)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12), T.int64(768), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(12), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(12), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(48), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(384)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(24))
                                    v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(24) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1280)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(20), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(3) * T.int64(20) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(3) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(768), rc_0 * T.int64(16) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(20), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(3) * T.int64(20) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(3) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 4, 1, 20, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[6, 1, 2, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 3, 2, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[48, 2, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(12), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(12), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(48), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(384)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(24))
                                    v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(24) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1280)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(20), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(3) * T.int64(20) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(3) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(16) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(20), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(3) * T.int64(20) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(3) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 4, 1, 20, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[6, 1, 2, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 3, 2, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[48, 2, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(12), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(12), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(48), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(384)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(24))
                                    v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(24) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1280)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(20), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(3) * T.int64(20) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(3) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(16) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(20), T.int64(1), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(3) * T.int64(20) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(3) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 4, 1, 20, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[6, 1, 2, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 3, 2, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[48, 2, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 02:29:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:29:06 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:29:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 477 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 02:29:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 956 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 02:29:10 [INFO] [evolutionary_search.cc:723] Sampled 68 candidate(s)
2024-04-29 02:29:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 02:29:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 69 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 02:29:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 02:29:20 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 64 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 02:29:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9982  0.9976  0.9962  0.9961  0.9960  0.9959  0.9954  0.9950  0.9944  0.9944  0.9939  0.9932  0.9929  0.9920  0.9902  0.9896
[17 : 32]:	0.9890  0.9869  0.9865  0.9859  0.9854  0.9845  0.9844  0.9839  0.9838  0.9820  0.9811  0.9802  0.9798  0.9793  0.9791  0.9776
[33 : 48]:	0.9774  0.9769  0.9750  0.9747  0.9747  0.9745  0.9736  0.9732  0.9726  0.9705  0.9705  0.9703  0.9702  0.9699  0.9698  0.9693
[49 : 64]:	0.9686  0.9671  0.9670  0.9663  0.9638  0.9634  0.9632  0.9632  0.9632  0.9627  0.9619  0.9618  0.9613  0.9610  0.9606  0.9606
2024-04-29 02:29:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:29:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #1: GFLOPs: 269.2252. Time: 131.6204 us. Best GFLOPs: 269.2252
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #2: GFLOPs: 290.3916. Time: 122.0267 us. Best GFLOPs: 290.3916
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #3: GFLOPs: 197.8363. Time: 179.1153 us. Best GFLOPs: 290.3916
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #4: GFLOPs: 17.4208. Time: 2034.0941 us. Best GFLOPs: 290.3916
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #5: GFLOPs: 174.9122. Time: 202.5903 us. Best GFLOPs: 290.3916
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #6: GFLOPs: 324.3591. Time: 109.2478 us. Best GFLOPs: 324.3591
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #7: GFLOPs: 121.4179. Time: 291.8475 us. Best GFLOPs: 324.3591
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #8: GFLOPs: 399.9962. Time: 88.5896 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #9: GFLOPs: 82.4655. Time: 429.7012 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #10: GFLOPs: 387.7241. Time: 91.3936 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #11: GFLOPs: 286.7955. Time: 123.5567 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #12: GFLOPs: 261.8229. Time: 135.3416 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #13: GFLOPs: 214.5012. Time: 165.1997 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #14: GFLOPs: 2.0268. Time: 17483.0932 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #15: GFLOPs: 161.0553. Time: 220.0208 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #16: GFLOPs: 398.0009. Time: 89.0338 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #17: GFLOPs: 19.2367. Time: 1842.0829 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #18: GFLOPs: 243.7921. Time: 145.3514 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #19: GFLOPs: 215.0356. Time: 164.7891 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #20: GFLOPs: 98.1586. Time: 361.0028 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #21: GFLOPs: 123.6707. Time: 286.5313 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #22: GFLOPs: 337.5942. Time: 104.9648 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #23: GFLOPs: 154.2408. Time: 229.7416 us. Best GFLOPs: 399.9962
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #24: GFLOPs: 804.3446. Time: 44.0551 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #25: GFLOPs: 480.7727. Time: 73.7053 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #26: GFLOPs: 200.7754. Time: 176.4933 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #27: GFLOPs: 173.4670. Time: 204.2781 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #28: GFLOPs: 330.1411. Time: 107.3345 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #29: GFLOPs: 373.9393. Time: 94.7628 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #30: GFLOPs: 202.7540. Time: 174.7710 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #31: GFLOPs: 262.4704. Time: 135.0077 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #32: GFLOPs: 73.4030. Time: 482.7529 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #33: GFLOPs: 70.1842. Time: 504.8932 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #34: GFLOPs: 2.8092. Time: 12613.8877 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #35: GFLOPs: 147.1524. Time: 240.8083 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #36: GFLOPs: 130.9854. Time: 270.5304 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #37: GFLOPs: 322.0923. Time: 110.0167 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #38: GFLOPs: 48.7366. Time: 727.0817 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #39: GFLOPs: 340.1016. Time: 104.1910 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #40: GFLOPs: 90.7337. Time: 390.5442 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #41: GFLOPs: 461.2463. Time: 76.8256 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #42: GFLOPs: 18.4958. Time: 1915.8653 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #43: GFLOPs: 39.5268. Time: 896.4937 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #44: GFLOPs: 737.0714. Time: 48.0761 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #45: GFLOPs: 40.7850. Time: 868.8364 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #46: GFLOPs: 239.2681. Time: 148.0996 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #47: GFLOPs: 190.8978. Time: 185.6256 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #48: GFLOPs: 37.8785. Time: 935.5054 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #49: GFLOPs: 351.8782. Time: 100.7039 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #50: GFLOPs: 34.8273. Time: 1017.4629 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #51: GFLOPs: 201.4990. Time: 175.8595 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #52: GFLOPs: 47.0874. Time: 752.5476 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #53: GFLOPs: 230.8720. Time: 153.4856 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #54: GFLOPs: 464.7352. Time: 76.2488 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #55: GFLOPs: 123.2231. Time: 287.5721 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #56: GFLOPs: 182.9858. Time: 193.6517 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #57: GFLOPs: 238.6753. Time: 148.4675 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #58: GFLOPs: 261.3551. Time: 135.5838 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #59: GFLOPs: 9.4017. Time: 3769.0407 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #60: GFLOPs: 401.1598. Time: 88.3327 us. Best GFLOPs: 804.3446
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #61: GFLOPs: 990.8088. Time: 35.7642 us. Best GFLOPs: 990.8088
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #62: GFLOPs: 14.6858. Time: 2412.9097 us. Best GFLOPs: 990.8088
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #63: GFLOPs: 192.4963. Time: 184.0842 us. Best GFLOPs: 990.8088
2024-04-29 04:01:15 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #64: GFLOPs: 295.8911. Time: 119.7586 us. Best GFLOPs: 990.8088
2024-04-29 04:21:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:21:46 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 04:21:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 425 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 04:21:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 851 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 04:21:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 1278 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 04:21:52 [INFO] [evolutionary_search.cc:723] Sampled 66 candidate(s)
2024-04-29 04:21:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 04:21:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 04:22:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 75 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 04:22:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 04:22:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2688  1.1530  1.0758  1.0731  1.0718  1.0517  1.0469  1.0056  0.9946  0.9825  0.9789  0.9769  0.9758  0.9748  0.9721  0.9708
[17 : 32]:	0.9650  0.9560  0.9542  0.9520  0.9447  0.9446  0.9433  0.9425  0.9425  0.9425  0.9425  0.9425  0.9425  0.9415  0.9385  0.9385
[33 : 48]:	0.9385  0.9383  0.9375  0.9375  0.9356  0.9356  0.9335  0.9322  0.9298  0.9298  0.9290  0.9281  0.9279  0.9275  0.9271  0.9265
[49 : 64]:	0.9258  0.9248  0.9248  0.9231  0.9231  0.9221  0.9221  0.9202  0.9189  0.9171  0.9171  0.9163  0.9151  0.9133  0.9113  0.9113
2024-04-29 04:22:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:22:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #65: GFLOPs: 160.6630. Time: 220.5580 us. Best GFLOPs: 990.8088
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #66: GFLOPs: 158.5128. Time: 223.5499 us. Best GFLOPs: 990.8088
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #67: GFLOPs: 300.4370. Time: 117.9466 us. Best GFLOPs: 990.8088
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #68: GFLOPs: 788.7166. Time: 44.9281 us. Best GFLOPs: 990.8088
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #69: GFLOPs: 119.7879. Time: 295.8188 us. Best GFLOPs: 990.8088
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #70: GFLOPs: 1180.3993. Time: 30.0199 us. Best GFLOPs: 1180.3993
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #71: GFLOPs: 1140.7948. Time: 31.0621 us. Best GFLOPs: 1180.3993
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #72: GFLOPs: 896.4487. Time: 39.5288 us. Best GFLOPs: 1180.3993
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #73: GFLOPs: 1030.1879. Time: 34.3971 us. Best GFLOPs: 1180.3993
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #74: GFLOPs: 759.8423. Time: 46.6354 us. Best GFLOPs: 1180.3993
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #75: GFLOPs: 1404.8035. Time: 25.2245 us. Best GFLOPs: 1404.8035
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #76: GFLOPs: 530.0461. Time: 66.8537 us. Best GFLOPs: 1404.8035
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #77: GFLOPs: 1290.0840. Time: 27.4676 us. Best GFLOPs: 1404.8035
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #78: GFLOPs: 724.6443. Time: 48.9006 us. Best GFLOPs: 1404.8035
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #79: GFLOPs: 1565.5201. Time: 22.6350 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #80: GFLOPs: 792.0052. Time: 44.7415 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #81: GFLOPs: 989.5790. Time: 35.8087 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #82: GFLOPs: 1385.3784. Time: 25.5782 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #83: GFLOPs: 974.8878. Time: 36.3483 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #84: GFLOPs: 1564.6114. Time: 22.6481 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #85: GFLOPs: 1293.6082. Time: 27.3928 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #86: GFLOPs: 1217.5673. Time: 29.1035 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #87: GFLOPs: 1295.5223. Time: 27.3523 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #88: GFLOPs: 1107.3658. Time: 31.9998 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #89: GFLOPs: 1089.5128. Time: 32.5242 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #90: GFLOPs: 1081.9005. Time: 32.7530 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #91: GFLOPs: 1198.5195. Time: 29.5661 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #92: GFLOPs: 1125.6144. Time: 31.4810 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #93: GFLOPs: 1019.6082. Time: 34.7541 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #94: GFLOPs: 1238.7174. Time: 28.6066 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #95: GFLOPs: 1061.1042. Time: 33.3949 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #96: GFLOPs: 1238.0786. Time: 28.6214 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #97: GFLOPs: 1128.3369. Time: 31.4051 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #98: GFLOPs: 1166.3883. Time: 30.3806 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #99: GFLOPs: 617.6382. Time: 57.3726 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #100: GFLOPs: 809.5357. Time: 43.7726 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #101: GFLOPs: 454.1911. Time: 78.0190 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #102: GFLOPs: 1145.7108. Time: 30.9289 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #103: GFLOPs: 838.7470. Time: 42.2482 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #104: GFLOPs: 1069.5485. Time: 33.1313 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #105: GFLOPs: 1062.6699. Time: 33.3457 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #106: GFLOPs: 1080.7522. Time: 32.7878 us. Best GFLOPs: 1565.5201
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #107: GFLOPs: 1684.2623. Time: 21.0392 us. Best GFLOPs: 1684.2623
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #108: GFLOPs: 1245.8074. Time: 28.4438 us. Best GFLOPs: 1684.2623
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #109: GFLOPs: 1696.1343. Time: 20.8919 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #110: GFLOPs: 806.1087. Time: 43.9587 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #111: GFLOPs: 1008.2771. Time: 35.1446 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #112: GFLOPs: 778.2192. Time: 45.5341 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #113: GFLOPs: 778.2336. Time: 45.5333 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #114: GFLOPs: 813.5168. Time: 43.5584 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #115: GFLOPs: 848.8580. Time: 41.7449 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #116: GFLOPs: 918.4036. Time: 38.5838 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #117: GFLOPs: 996.0395. Time: 35.5764 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #118: GFLOPs: 908.3920. Time: 39.0091 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #119: GFLOPs: 641.3622. Time: 55.2504 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #120: GFLOPs: 893.4462. Time: 39.6616 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #121: GFLOPs: 483.1398. Time: 73.3442 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #122: GFLOPs: 491.7500. Time: 72.0600 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #123: GFLOPs: 860.6194. Time: 41.1744 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #124: GFLOPs: 1125.1611. Time: 31.4937 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #125: GFLOPs: 1512.9906. Time: 23.4208 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #126: GFLOPs: 54.0703. Time: 655.3600 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #127: GFLOPs: 46.7597. Time: 757.8220 us. Best GFLOPs: 1696.1343
2024-04-29 04:23:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #128: GFLOPs: 3.1804. Time: 11141.8024 us. Best GFLOPs: 1696.1343
2024-04-29 05:30:56 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:30:56 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:30:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 382 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 05:30:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 774 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 05:31:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 1174 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 05:31:00 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-29 05:31:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 05:31:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 05:31:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 05:31:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 65 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 05:31:14 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1193  1.1177  1.0708  1.0636  1.0431  1.0347  1.0345  1.0324  1.0262  1.0259  1.0245  1.0188  1.0174  1.0172  1.0163  1.0108
[17 : 32]:	1.0088  1.0087  1.0074  1.0073  1.0071  0.9990  0.9990  0.9946  0.9887  0.9879  0.9876  0.9870  0.9859  0.9859  0.9855  0.9836
[33 : 48]:	0.9798  0.9778  0.9772  0.9771  0.9769  0.9757  0.9751  0.9713  0.9711  0.9708  0.9705  0.9703  0.9689  0.9686  0.9685  0.9675
[49 : 64]:	0.9652  0.9652  0.9643  0.9630  0.9624  0.9619  0.9604  0.9604  0.9599  0.9590  0.9578  0.9556  0.9539  0.9534  0.9526  0.9467
2024-04-29 05:31:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:31:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #129: GFLOPs: 1393.7835. Time: 25.4240 us. Best GFLOPs: 1696.1343
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #130: GFLOPs: 1394.3308. Time: 25.4140 us. Best GFLOPs: 1696.1343
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #131: GFLOPs: 989.5438. Time: 35.8100 us. Best GFLOPs: 1696.1343
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #132: GFLOPs: 1649.7867. Time: 21.4788 us. Best GFLOPs: 1696.1343
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #133: GFLOPs: 1540.5633. Time: 23.0017 us. Best GFLOPs: 1696.1343
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #134: GFLOPs: 1895.6795. Time: 18.6928 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #135: GFLOPs: 1549.7191. Time: 22.8658 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #136: GFLOPs: 1649.5033. Time: 21.4825 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #137: GFLOPs: 1378.9364. Time: 25.6977 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #138: GFLOPs: 1647.5474. Time: 21.5080 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #139: GFLOPs: 1326.8594. Time: 26.7063 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #140: GFLOPs: 1381.3995. Time: 25.6519 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #141: GFLOPs: 1243.8047. Time: 28.4896 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #142: GFLOPs: 1549.1045. Time: 22.8748 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #143: GFLOPs: 1379.2139. Time: 25.6925 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #144: GFLOPs: 1506.8395. Time: 23.5165 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #145: GFLOPs: 1577.1771. Time: 22.4677 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #146: GFLOPs: 1535.3676. Time: 23.0795 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #147: GFLOPs: 1314.9637. Time: 26.9479 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #148: GFLOPs: 1332.3703. Time: 26.5959 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #149: GFLOPs: 1209.3635. Time: 29.3010 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #150: GFLOPs: 1203.5087. Time: 29.4435 us. Best GFLOPs: 1895.6795
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #151: GFLOPs: 2102.9838. Time: 16.8501 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #152: GFLOPs: 2101.4421. Time: 16.8625 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #153: GFLOPs: 1384.5415. Time: 25.5937 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #154: GFLOPs: 1315.1093. Time: 26.9449 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #155: GFLOPs: 1755.8146. Time: 20.1818 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #156: GFLOPs: 1548.7018. Time: 22.8808 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #157: GFLOPs: 1504.3305. Time: 23.5557 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #158: GFLOPs: 1505.7141. Time: 23.5340 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #159: GFLOPs: 1546.6771. Time: 22.9107 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #160: GFLOPs: 1558.1704. Time: 22.7417 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #161: GFLOPs: 1177.5394. Time: 30.0929 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #162: GFLOPs: 1956.0231. Time: 18.1161 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #163: GFLOPs: 2100.3185. Time: 16.8715 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #164: GFLOPs: 1350.5157. Time: 26.2385 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:02 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #165: GFLOPs: 1578.8338. Time: 22.4441 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #166: GFLOPs: 1793.9793. Time: 19.7525 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #167: GFLOPs: 1179.6096. Time: 30.0400 us. Best GFLOPs: 2102.9838
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #168: GFLOPs: 2109.6702. Time: 16.7967 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #169: GFLOPs: 1282.7218. Time: 27.6253 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #170: GFLOPs: 1323.2784. Time: 26.7786 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #171: GFLOPs: 1695.3714. Time: 20.9013 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #172: GFLOPs: 1533.8702. Time: 23.1020 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #173: GFLOPs: 1631.2060. Time: 21.7235 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #174: GFLOPs: 988.0226. Time: 35.8651 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #175: GFLOPs: 1597.6180. Time: 22.1802 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #176: GFLOPs: 1349.5791. Time: 26.2567 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #177: GFLOPs: 1645.3508. Time: 21.5368 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #178: GFLOPs: 1421.8333. Time: 24.9224 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #179: GFLOPs: 1343.9538. Time: 26.3666 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #180: GFLOPs: 1281.6210. Time: 27.6490 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #181: GFLOPs: 1753.3187. Time: 20.2105 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #182: GFLOPs: 1332.2650. Time: 26.5980 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #183: GFLOPs: 1794.1115. Time: 19.7510 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #184: GFLOPs: 1388.6845. Time: 25.5173 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #185: GFLOPs: 1698.8061. Time: 20.8591 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #186: GFLOPs: 1196.5670. Time: 29.6143 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #187: GFLOPs: 1620.2226. Time: 21.8708 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #188: GFLOPs: 1088.7357. Time: 32.5474 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #189: GFLOPs: 1295.3345. Time: 27.3563 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #190: GFLOPs: 49.2081. Time: 720.1151 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #191: GFLOPs: 764.0507. Time: 46.3785 us. Best GFLOPs: 2109.6702
2024-04-29 05:33:03 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #192: GFLOPs: 230.9229. Time: 153.4517 us. Best GFLOPs: 2109.6702
2024-04-29 06:39:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:39:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:39:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 387 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:39:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 778 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:39:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 1163 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:39:06 [INFO] [evolutionary_search.cc:723] Sampled 67 candidate(s)
2024-04-29 06:39:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 81 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:39:13 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:39:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:39:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:39:19 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1018  1.0027  0.9937  0.9937  0.9932  0.9913  0.9908  0.9908  0.9860  0.9771  0.9684  0.9543  0.9417  0.9344  0.9314  0.9297
[17 : 32]:	0.9288  0.9268  0.9268  0.9226  0.9173  0.9143  0.9139  0.9139  0.9126  0.9106  0.9093  0.9085  0.9069  0.9053  0.9033  0.9028
[33 : 48]:	0.8978  0.8915  0.8900  0.8872  0.8872  0.8872  0.8823  0.8818  0.8770  0.8770  0.8730  0.8730  0.8697  0.8680  0.8661  0.8658
[49 : 64]:	0.8650  0.8642  0.8628  0.8602  0.8595  0.8593  0.8566  0.8564  0.8526  0.8518  0.8501  0.8495  0.8484  0.8434  0.8410  0.8400
2024-04-29 06:39:19 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:39:19 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #193: GFLOPs: 1213.6174. Time: 29.1983 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #194: GFLOPs: 2094.2104. Time: 16.9207 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #195: GFLOPs: 2094.7015. Time: 16.9167 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #196: GFLOPs: 1694.3182. Time: 20.9143 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #197: GFLOPs: 1900.8559. Time: 18.6419 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #198: GFLOPs: 1696.4081. Time: 20.8886 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #199: GFLOPs: 1693.6719. Time: 20.9223 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #200: GFLOPs: 2094.8791. Time: 16.9153 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #201: GFLOPs: 1695.2134. Time: 20.9033 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #202: GFLOPs: 2094.2350. Time: 16.9205 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #203: GFLOPs: 1943.6079. Time: 18.2318 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #204: GFLOPs: 1943.5985. Time: 18.2319 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #205: GFLOPs: 1698.4595. Time: 20.8633 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #206: GFLOPs: 1900.7093. Time: 18.6433 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #207: GFLOPs: 2054.3009. Time: 17.2494 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #208: GFLOPs: 1571.3446. Time: 22.5511 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #209: GFLOPs: 1929.3202. Time: 18.3668 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #210: GFLOPs: 2092.9262. Time: 16.9311 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:05 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #211: GFLOPs: 1694.1061. Time: 20.9169 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #212: GFLOPs: 2042.1240. Time: 17.3523 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #213: GFLOPs: 2037.9757. Time: 17.3876 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #214: GFLOPs: 1896.1427. Time: 18.6882 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #215: GFLOPs: 1917.7668. Time: 18.4775 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #216: GFLOPs: 1896.1572. Time: 18.6881 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #217: GFLOPs: 2088.7298. Time: 16.9651 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #218: GFLOPs: 1901.7601. Time: 18.6330 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #219: GFLOPs: 1927.7196. Time: 18.3821 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #220: GFLOPs: 1555.9365. Time: 22.7744 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #221: GFLOPs: 2045.8554. Time: 17.3206 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #222: GFLOPs: 1661.2038. Time: 21.3312 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #223: GFLOPs: 1927.9732. Time: 18.3797 us. Best GFLOPs: 2109.6702
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #224: GFLOPs: 2173.0739. Time: 16.3066 us. Best GFLOPs: 2173.0739
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #225: GFLOPs: 2261.4241. Time: 15.6696 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #226: GFLOPs: 1940.0457. Time: 18.2653 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #227: GFLOPs: 1894.5528. Time: 18.7039 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #228: GFLOPs: 1903.9576. Time: 18.6115 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #229: GFLOPs: 2042.8718. Time: 17.3459 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #230: GFLOPs: 2046.0876. Time: 17.3187 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #231: GFLOPs: 2097.9518. Time: 16.8905 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #232: GFLOPs: 2162.0770. Time: 16.3896 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #233: GFLOPs: 2111.3809. Time: 16.7831 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #234: GFLOPs: 1662.9108. Time: 21.3093 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #235: GFLOPs: 2042.4838. Time: 17.3492 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #236: GFLOPs: 2038.6624. Time: 17.3818 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #237: GFLOPs: 1919.9672. Time: 18.4563 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #238: GFLOPs: 2109.4717. Time: 16.7983 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #239: GFLOPs: 1626.7063. Time: 21.7836 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #240: GFLOPs: 1886.6001. Time: 18.7827 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #241: GFLOPs: 1927.5279. Time: 18.3839 us. Best GFLOPs: 2261.4241
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #242: GFLOPs: 2304.3504. Time: 15.3777 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #243: GFLOPs: 2073.4760. Time: 17.0899 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #244: GFLOPs: 2095.9404. Time: 16.9067 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #245: GFLOPs: 1935.7479. Time: 18.3059 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #246: GFLOPs: 2030.4774. Time: 17.4518 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #247: GFLOPs: 2119.5781. Time: 16.7182 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #248: GFLOPs: 2060.2918. Time: 17.1993 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #249: GFLOPs: 618.4202. Time: 57.3001 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #250: GFLOPs: 1011.0206. Time: 35.0493 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #251: GFLOPs: 1694.0551. Time: 20.9176 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #252: GFLOPs: 1652.9925. Time: 21.4372 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #253: GFLOPs: 1825.4643. Time: 19.4118 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #254: GFLOPs: 194.8105. Time: 181.8974 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #255: GFLOPs: 561.5809. Time: 63.0996 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #256: GFLOPs: 85.4368. Time: 414.7571 us. Best GFLOPs: 2304.3504
2024-04-29 06:41:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:41:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:41:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 395 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:41:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 792 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:41:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 1184 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:41:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 1579 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:41:13 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-04-29 06:41:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 68 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:41:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:41:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 107 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:41:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 99 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 06:41:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.1520  0.9560  0.9335  0.9213  0.9199  0.9191  0.9188  0.9180  0.9143  0.9128  0.9128  0.9107  0.9091  0.9078  0.9069  0.9046
[17 : 32]:	0.9044  0.9037  0.9035  0.9022  0.9022  0.9012  0.8998  0.8991  0.8989  0.8988  0.8982  0.8980  0.8975  0.8967  0.8966  0.8942
[33 : 48]:	0.8932  0.8841  0.8816  0.8815  0.8808  0.8798  0.8797  0.8791  0.8790  0.8780  0.8777  0.8760  0.8756  0.8753  0.8743  0.8743
[49 : 64]:	0.8735  0.8731  0.8721  0.8710  0.8706  0.8694  0.8684  0.8678  0.8678  0.8675  0.8668  0.8663  0.8657  0.8653  0.8650  0.8646
2024-04-29 06:41:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:41:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #257: GFLOPs: 1117.8861. Time: 31.6987 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #258: GFLOPs: 2211.9710. Time: 16.0199 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #259: GFLOPs: 2243.2395. Time: 15.7966 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #260: GFLOPs: 2050.3210. Time: 17.2829 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #261: GFLOPs: 2156.4659. Time: 16.4322 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #262: GFLOPs: 2049.8818. Time: 17.2866 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #263: GFLOPs: 2275.8021. Time: 15.5706 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #264: GFLOPs: 2093.9555. Time: 16.9228 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #265: GFLOPs: 2087.0589. Time: 16.9787 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #266: GFLOPs: 2254.3416. Time: 15.7188 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #267: GFLOPs: 2180.1975. Time: 16.2534 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #268: GFLOPs: 2157.0401. Time: 16.4278 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #269: GFLOPs: 2254.8615. Time: 15.7152 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #270: GFLOPs: 2095.1967. Time: 16.9127 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #271: GFLOPs: 2162.0941. Time: 16.3894 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #272: GFLOPs: 1912.2492. Time: 18.5308 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #273: GFLOPs: 1818.2132. Time: 19.4892 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #274: GFLOPs: 2043.2328. Time: 17.3429 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #275: GFLOPs: 2172.6426. Time: 16.3099 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #276: GFLOPs: 2043.3080. Time: 17.3422 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #277: GFLOPs: 2156.8250. Time: 16.4295 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #278: GFLOPs: 1895.7264. Time: 18.6923 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #279: GFLOPs: 2186.8216. Time: 16.2041 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #280: GFLOPs: 2038.7427. Time: 17.3811 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #281: GFLOPs: 2172.8555. Time: 16.3083 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #282: GFLOPs: 2089.9278. Time: 16.9554 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #283: GFLOPs: 2099.3430. Time: 16.8793 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #284: GFLOPs: 1912.1078. Time: 18.5322 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #285: GFLOPs: 1894.7882. Time: 18.7016 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #286: GFLOPs: 2086.9211. Time: 16.9798 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #287: GFLOPs: 2088.2306. Time: 16.9692 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #288: GFLOPs: 2094.1519. Time: 16.9212 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #289: GFLOPs: 2172.4043. Time: 16.3117 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #290: GFLOPs: 2096.8528. Time: 16.8994 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #291: GFLOPs: 2053.9871. Time: 17.2521 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #292: GFLOPs: 2037.9027. Time: 17.3882 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #293: GFLOPs: 2037.9022. Time: 17.3882 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #294: GFLOPs: 2090.4728. Time: 16.9510 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #295: GFLOPs: 2090.1053. Time: 16.9539 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #296: GFLOPs: 2092.2167. Time: 16.9368 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #297: GFLOPs: 2097.2364. Time: 16.8963 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #298: GFLOPs: 2093.3382. Time: 16.9278 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #299: GFLOPs: 2088.4330. Time: 16.9675 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #300: GFLOPs: 2089.6537. Time: 16.9576 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #301: GFLOPs: 1934.6837. Time: 18.3159 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #302: GFLOPs: 2090.4602. Time: 16.9511 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #303: GFLOPs: 2090.2811. Time: 16.9525 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #304: GFLOPs: 2249.7336. Time: 15.7510 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #305: GFLOPs: 2089.0693. Time: 16.9623 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #306: GFLOPs: 2101.7230. Time: 16.8602 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #307: GFLOPs: 1938.5753. Time: 18.2792 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #308: GFLOPs: 1933.8389. Time: 18.3239 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #309: GFLOPs: 2240.6958. Time: 15.8145 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #310: GFLOPs: 1458.7634. Time: 24.2915 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #311: GFLOPs: 1945.5758. Time: 18.2134 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #312: GFLOPs: 1923.1844. Time: 18.4254 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #313: GFLOPs: 1716.2282. Time: 20.6473 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #314: GFLOPs: 1939.5399. Time: 18.2701 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #315: GFLOPs: 1911.9843. Time: 18.5334 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #316: GFLOPs: 1933.9443. Time: 18.3229 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #317: GFLOPs: 2063.8179. Time: 17.1699 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #318: GFLOPs: 148.2564. Time: 239.0151 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #319: GFLOPs: 128.0582. Time: 276.7143 us. Best GFLOPs: 2304.3504
2024-04-29 06:42:58 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #320: GFLOPs: 350.5976. Time: 101.0718 us. Best GFLOPs: 2304.3504
2024-04-29 07:46:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:46:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:47:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 390 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 07:47:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 776 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 07:47:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 1164 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 07:47:03 [INFO] [evolutionary_search.cc:723] Sampled 66 candidate(s)
2024-04-29 07:47:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 07:47:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 07:47:13 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 07:47:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x470f008)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xab0d8f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaafb188)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ef9e78)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x392bfa8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb250208)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xaad8818)]: 0 failure(s)
2024-04-29 07:47:17 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4918  1.3789  1.2539  1.1602  1.0256  1.0209  1.0155  0.9808  0.9798  0.9795  0.9788  0.9787  0.9760  0.9740  0.9732  0.9728
[17 : 32]:	0.9724  0.9721  0.9711  0.9709  0.9692  0.9689  0.9684  0.9681  0.9663  0.9643  0.9634  0.9631  0.9629  0.9623  0.9590  0.9574
[33 : 48]:	0.9484  0.9418  0.9414  0.9404  0.9398  0.9398  0.9393  0.9384  0.9359  0.9339  0.9335  0.9324  0.9313  0.9306  0.9297  0.9293
[49 : 64]:	0.9290  0.9288  0.9285  0.9277  0.9274  0.9271  0.9257  0.9256  0.9247  0.9221  0.9210  0.9207  0.9205  0.9202  0.9192  0.9173
2024-04-29 07:47:17 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:47:17 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:49:00 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #321: GFLOPs: 1048.4449. Time: 33.7982 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #322: GFLOPs: 1707.3542. Time: 20.7546 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #323: GFLOPs: 1740.2606. Time: 20.3622 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #324: GFLOPs: 1040.1207. Time: 34.0687 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #325: GFLOPs: 1336.4355. Time: 26.5150 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #326: GFLOPs: 1714.7784. Time: 20.6648 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #327: GFLOPs: 2226.5529. Time: 15.9150 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #328: GFLOPs: 2083.1096. Time: 17.0109 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #329: GFLOPs: 2191.0851. Time: 16.1726 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #330: GFLOPs: 2235.9196. Time: 15.8483 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #331: GFLOPs: 2105.9468. Time: 16.8264 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #332: GFLOPs: 2259.7010. Time: 15.6815 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #333: GFLOPs: 2241.8147. Time: 15.8066 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #334: GFLOPs: 2265.3934. Time: 15.6421 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #335: GFLOPs: 2190.8205. Time: 16.1745 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #336: GFLOPs: 2256.0154. Time: 15.7071 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #337: GFLOPs: 2199.0064. Time: 16.1143 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #338: GFLOPs: 1667.0733. Time: 21.2561 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #339: GFLOPs: 2263.3773. Time: 15.6560 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #340: GFLOPs: 2271.8392. Time: 15.5977 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #341: GFLOPs: 2199.0852. Time: 16.1138 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #342: GFLOPs: 2189.7152. Time: 16.1827 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #343: GFLOPs: 2100.8555. Time: 16.8672 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #344: GFLOPs: 2088.9400. Time: 16.9634 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #345: GFLOPs: 2265.6899. Time: 15.6401 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #346: GFLOPs: 2096.4187. Time: 16.9029 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #347: GFLOPs: 2277.0517. Time: 15.5620 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #348: GFLOPs: 2264.6446. Time: 15.6473 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #349: GFLOPs: 2235.6862. Time: 15.8500 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #350: GFLOPs: 2235.9698. Time: 15.8479 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #351: GFLOPs: 2042.1869. Time: 17.3518 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #352: GFLOPs: 2257.4285. Time: 15.6973 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #353: GFLOPs: 2089.4183. Time: 16.9595 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #354: GFLOPs: 1215.3225. Time: 29.1573 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #355: GFLOPs: 2029.2440. Time: 17.4624 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #356: GFLOPs: 2073.6565. Time: 17.0884 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #357: GFLOPs: 2094.1605. Time: 16.9211 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #358: GFLOPs: 2119.3190. Time: 16.7202 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #359: GFLOPs: 2043.4882. Time: 17.3407 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #360: GFLOPs: 2093.6403. Time: 16.9253 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #361: GFLOPs: 2041.3577. Time: 17.3588 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #362: GFLOPs: 2184.3607. Time: 16.2224 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #363: GFLOPs: 2198.7909. Time: 16.1159 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #364: GFLOPs: 2085.1451. Time: 16.9943 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #365: GFLOPs: 2093.5613. Time: 16.9260 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #366: GFLOPs: 1328.8567. Time: 26.6662 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #367: GFLOPs: 2153.8608. Time: 16.4521 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #368: GFLOPs: 2080.3863. Time: 17.0331 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #369: GFLOPs: 2193.5192. Time: 16.1546 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #370: GFLOPs: 2154.0703. Time: 16.4505 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #371: GFLOPs: 2047.5669. Time: 17.3062 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #372: GFLOPs: 2038.4569. Time: 17.3835 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #373: GFLOPs: 2153.9574. Time: 16.4514 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #374: GFLOPs: 2193.6760. Time: 16.1535 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #375: GFLOPs: 2226.8187. Time: 15.9131 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #376: GFLOPs: 1947.3462. Time: 18.1968 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #377: GFLOPs: 2080.7955. Time: 17.0298 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #378: GFLOPs: 1744.7164. Time: 20.3102 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #379: GFLOPs: 2277.4434. Time: 15.5593 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #380: GFLOPs: 1974.6484. Time: 17.9452 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #381: GFLOPs: 2267.3302. Time: 15.6287 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #382: GFLOPs: 114.4454. Time: 309.6283 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #383: GFLOPs: 332.8376. Time: 106.4649 us. Best GFLOPs: 2304.3504
2024-04-29 07:49:01 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #384: GFLOPs: 185.1747. Time: 191.3626 us. Best GFLOPs: 2304.3504
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:160] Initializing Task #19: "fused_nn_conv2d_add_nn_relu_13"
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(768), T.int64(12), T.int64(12)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12), T.int64(768), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(18), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(8), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(13824)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7680)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(96))
                                    v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused % T.int64(96))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(40), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(6) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(768), rc_0 * T.int64(96) + rc_1 * T.int64(24) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(80), T.int64(2), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(6) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 1, 40, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 6, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 4, 24])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(18), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(8), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(13824)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7680)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(96))
                                    v1 = T.axis.spatial(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(96) + ax0_ax1_ax2_ax3_fused % T.int64(96))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(40), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(6) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(96) + rc_1 * T.int64(24) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(80), T.int64(2), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(6) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 1, 40, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 6, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 4, 24])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(18), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(8), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(13824)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(7680)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(96))
                                    v1 = T.axis.spatial(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(96) + ax0_ax1_ax2_ax3_fused % T.int64(96))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(40), T.int64(1), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ff_3 * T.int64(2) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(6) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(768), rc_0_ry_0_rx_0_fused * T.int64(96) + rc_1 * T.int64(24) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(80), T.int64(2), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(6) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 1, 1, 40, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 6, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 4, 24])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-05-01 15:36:51 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 15:36:52 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 15:36:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 389 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 15:36:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 778 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 15:36:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 1168 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 15:36:55 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-05-01 15:36:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 15:36:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 15:37:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 15:37:04 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 15:37:04 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9996  0.9980  0.9978  0.9965  0.9960  0.9960  0.9955  0.9953  0.9937  0.9934  0.9910  0.9908  0.9901  0.9882  0.9872
[17 : 32]:	0.9869  0.9863  0.9854  0.9851  0.9847  0.9846  0.9842  0.9820  0.9810  0.9806  0.9804  0.9798  0.9787  0.9785  0.9778  0.9775
[33 : 48]:	0.9770  0.9770  0.9760  0.9760  0.9746  0.9741  0.9739  0.9737  0.9734  0.9733  0.9732  0.9728  0.9723  0.9722  0.9714  0.9707
[49 : 64]:	0.9705  0.9698  0.9686  0.9686  0.9681  0.9658  0.9647  0.9639  0.9629  0.9625  0.9623  0.9620  0.9619  0.9616  0.9599  0.9585
2024-05-01 15:37:04 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 15:37:04 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #1: GFLOPs: 1510.8603. Time: 23.4539 us. Best GFLOPs: 1510.8603
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #2: GFLOPs: 411.1654. Time: 86.1831 us. Best GFLOPs: 1510.8603
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #3: GFLOPs: 1102.9792. Time: 32.1271 us. Best GFLOPs: 1510.8603
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #4: GFLOPs: 1612.6140. Time: 21.9740 us. Best GFLOPs: 1612.6140
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #5: GFLOPs: 56.0333. Time: 632.4006 us. Best GFLOPs: 1612.6140
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #6: GFLOPs: 1426.2010. Time: 24.8461 us. Best GFLOPs: 1612.6140
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #7: GFLOPs: 156.2382. Time: 226.8044 us. Best GFLOPs: 1612.6140
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #8: GFLOPs: 1879.9809. Time: 18.8489 us. Best GFLOPs: 1879.9809
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #9: GFLOPs: 2107.3181. Time: 16.8155 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #10: GFLOPs: 1402.1292. Time: 25.2726 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #11: GFLOPs: 208.7516. Time: 169.7497 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #12: GFLOPs: 1611.7663. Time: 21.9855 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #13: GFLOPs: 1050.1094. Time: 33.7446 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #14: GFLOPs: 2075.8981. Time: 17.0700 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #15: GFLOPs: 324.9817. Time: 109.0385 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #16: GFLOPs: 624.6374. Time: 56.7297 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #17: GFLOPs: 598.2881. Time: 59.2282 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #18: GFLOPs: 229.9571. Time: 154.0962 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #19: GFLOPs: 1616.8654. Time: 21.9162 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #20: GFLOPs: 47.1635. Time: 751.3333 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #21: GFLOPs: 1262.4195. Time: 28.0695 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #22: GFLOPs: 1514.9429. Time: 23.3907 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #23: GFLOPs: 90.6985. Time: 390.6956 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #24: GFLOPs: 118.1550. Time: 299.9071 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #25: GFLOPs: 384.5247. Time: 92.1541 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #26: GFLOPs: 1920.4813. Time: 18.4514 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #27: GFLOPs: 1014.0618. Time: 34.9441 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #28: GFLOPs: 1897.6329. Time: 18.6735 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #29: GFLOPs: 1401.0178. Time: 25.2927 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #30: GFLOPs: 353.8768. Time: 100.1352 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #31: GFLOPs: 2079.5878. Time: 17.0397 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #32: GFLOPs: 1424.9698. Time: 24.8676 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #33: GFLOPs: 811.8784. Time: 43.6463 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #34: GFLOPs: 1431.0846. Time: 24.7613 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #35: GFLOPs: 161.7672. Time: 219.0526 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #36: GFLOPs: 343.4068. Time: 103.1882 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #37: GFLOPs: 2027.5348. Time: 17.4771 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #38: GFLOPs: 1774.2941. Time: 19.9716 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #39: GFLOPs: 1387.8761. Time: 25.5322 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #40: GFLOPs: 106.9783. Time: 331.2403 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #41: GFLOPs: 1510.6278. Time: 23.4575 us. Best GFLOPs: 2107.3181
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #42: GFLOPs: 2225.1084. Time: 15.9253 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #43: GFLOPs: 224.0120. Time: 158.1858 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #44: GFLOPs: 1275.2220. Time: 27.7877 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #45: GFLOPs: 1359.1772. Time: 26.0713 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #46: GFLOPs: 636.6886. Time: 55.6560 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #47: GFLOPs: 177.3143. Time: 199.8458 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #48: GFLOPs: 54.9171. Time: 645.2552 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #49: GFLOPs: 1886.4823. Time: 18.7839 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #50: GFLOPs: 599.6442. Time: 59.0942 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #51: GFLOPs: 1227.2602. Time: 28.8737 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #52: GFLOPs: 613.7306. Time: 57.7379 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #53: GFLOPs: 2139.5107. Time: 16.5624 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #54: GFLOPs: 133.8506. Time: 264.7394 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #55: GFLOPs: 141.6438. Time: 250.1734 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #56: GFLOPs: 2030.6544. Time: 17.4503 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #57: GFLOPs: 1594.3796. Time: 22.2253 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #58: GFLOPs: 62.8014. Time: 564.2470 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #59: GFLOPs: 1898.5359. Time: 18.6647 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #60: GFLOPs: 119.8605. Time: 295.6397 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #61: GFLOPs: 1311.6341. Time: 27.0163 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #62: GFLOPs: 40.6515. Time: 871.6911 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #63: GFLOPs: 310.5623. Time: 114.1012 us. Best GFLOPs: 2225.1084
2024-05-01 16:37:16 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #64: GFLOPs: 56.6720. Time: 625.2736 us. Best GFLOPs: 2225.1084
2024-05-01 17:01:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 17:01:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 17:01:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 391 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:01:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 782 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:01:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 1171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:01:12 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-05-01 17:01:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:01:18 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:01:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 95 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:01:24 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 97 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:01:25 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4675  1.4626  1.4601  1.4534  1.4530  1.4530  1.4350  1.4350  1.4350  1.4322  1.4189  1.4165  1.4144  1.4112  1.3850  1.3784
[17 : 32]:	1.3423  1.3017  1.2997  1.2954  1.2954  1.2909  1.2906  1.2874  1.2812  1.2518  1.2445  1.2430  1.2396  1.2296  1.2284  1.2140
[33 : 48]:	1.2068  1.1771  1.1621  1.1363  1.1050  1.0490  1.0426  1.0104  0.9789  0.9764  0.9742  0.9725  0.9723  0.9718  0.9715  0.9695
[49 : 64]:	0.9688  0.9678  0.9672  0.9668  0.9648  0.9646  0.9641  0.9641  0.9641  0.9548  0.9541  0.9541  0.9534  0.9534  0.9514  0.9501
2024-05-01 17:01:25 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 17:01:25 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #65: GFLOPs: 1564.8319. Time: 22.6449 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #66: GFLOPs: 1018.7053. Time: 34.7849 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #67: GFLOPs: 1872.0777. Time: 18.9284 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #68: GFLOPs: 1897.8405. Time: 18.6715 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #69: GFLOPs: 1712.9630. Time: 20.6867 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #70: GFLOPs: 1898.0075. Time: 18.6699 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #71: GFLOPs: 2149.4769. Time: 16.4856 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #72: GFLOPs: 2149.3746. Time: 16.4864 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #73: GFLOPs: 1720.0729. Time: 20.6012 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #74: GFLOPs: 2149.5585. Time: 16.4850 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #75: GFLOPs: 1879.1887. Time: 18.8568 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #76: GFLOPs: 2023.2023. Time: 17.5146 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #77: GFLOPs: 1881.7707. Time: 18.8309 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #78: GFLOPs: 1881.6904. Time: 18.8317 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #79: GFLOPs: 1888.3275. Time: 18.7656 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #80: GFLOPs: 1894.2152. Time: 18.7072 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #81: GFLOPs: 1728.7274. Time: 20.4980 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #82: GFLOPs: 1946.8920. Time: 18.2011 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #83: GFLOPs: 1891.7453. Time: 18.7317 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #84: GFLOPs: 2105.1611. Time: 16.8327 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #85: GFLOPs: 1952.3948. Time: 18.1498 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #86: GFLOPs: 1535.3006. Time: 23.0805 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #87: GFLOPs: 2025.7444. Time: 17.4926 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #88: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  337: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  336: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  335: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  334: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  333: tvm::transform::Pass::operator()(tvm::IRModule) const
  332: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  331: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  330: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  329: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  328: _ZN3tvm7runtime13PackedFun
  327: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  326: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  325: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  324: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  323: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  322: _ZZN3tvm3tir11StmtFunctorI
  321: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  320: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  319: _ZZN3tvm3tir11StmtFunctorI
  318: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  317: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  316: _ZZN3tvm3tir11StmtFunctorI
  315: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  314: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  313: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  312: _ZZN3tvm3tir11StmtFunctorI
  311: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  310: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  309: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  308: _ZZN3tvm3tir11StmtFunctorI
  307: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  306: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  305: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  304: _ZZN3tvm3tir11StmtFunctorI
  303: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  302: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  301: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  300: _ZZN3tvm3tir11StmtFunctorI
  299: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  298: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  297: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  296: _ZZN3tvm3tir11StmtFunctorI
  295: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  294: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  293: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  292: _ZZN3tvm3tir11StmtFunctorI
  291: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  290: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  289: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  288: _ZZN3tvm3tir11StmtFunctorI
  287: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  286: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  285: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  284: _ZZN3tvm3tir11StmtFunctorI
  283: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  282: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  281: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  280: _ZZN3tvm3tir11StmtFunctorI
  279: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  278: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  277: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  276: _ZZN3tvm3tir11StmtFunctorI
  275: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  274: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  273: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  272: _ZZN3tvm3tir11StmtFunctorI
  271: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  270: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  269: _ZZN3tvm3tir11StmtFunctorI
  268: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  267: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  266: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  265: _ZZN3tvm3tir11StmtFunctorI
  264: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  263: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  262: _ZZN3tvm3tir11StmtFunctorI
  261: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  260: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  259: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  258: _ZZN3tvm3tir11StmtFunctorI
  257: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  256: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  255: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  254: _ZZN3tvm3tir11StmtFunctorI
  253: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  252: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  251: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  250: _ZZN3tvm3tir11StmtFunctorI
  249: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  248: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  247: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  246: _ZZN3tvm3tir11StmtFunctorI
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorI
  242: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  241: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  240: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  239: _ZZN3tvm3tir11StmtFunctorI
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorI
  235: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  234: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  233: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  232: _ZZN3tvm3tir11StmtFunctorI
  231: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  230: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  229: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  228: _ZZN3tvm3tir11StmtFunctorI
  227: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorI
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorI
  220: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  219: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  218: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  217: _ZZN3tvm3tir11StmtFunctorI
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorI
  213: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  212: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  211: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  210: _ZZN3tvm3tir11StmtFunctorI
  209: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  208: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  207: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  206: _ZZN3tvm3tir11StmtFunctorI
  205: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  204: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  203: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  202: _ZZN3tvm3tir11StmtFunctorI
  201: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  200: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  199: _ZZN3tvm3tir11StmtFunctorI
  198: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  197: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  196: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  195: _ZZN3tvm3tir11StmtFunctorI
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorI
  188: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  187: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  186: _ZZN3tvm3tir11StmtFunctorI
  185: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  184: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  183: _ZZN3tvm3tir11StmtFunctorI
  182: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  181: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  180: _ZZN3tvm3tir11StmtFunctorI
  179: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  178: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  177: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  176: _ZZN3tvm3tir11StmtFunctorI
  175: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  174: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  173: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  172: _ZZN3tvm3tir11StmtFunctorI
  171: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  170: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  169: _ZZN3tvm3tir11StmtFunctorI
  168: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  167: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  166: _ZZN3tvm3tir11StmtFunctorI
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorI
  156: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  155: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  154: _ZZN3tvm3tir11StmtFunctorI
  153: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  152: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  151: _ZZN3tvm3tir11StmtFunctorIFNS
  150: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  149: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorI
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorI
  121: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  120: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  119: _ZZN3tvm3tir11StmtFunctorIFNS
  118: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  117: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorI
  89: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  88: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  87: _ZZN3tvm3tir11StmtFunctorI
  86: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  85: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  84: _ZZN3tvm3tir11StmtFunctorIFNS
  83: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  82: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorI
  54: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  53: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  52: _ZZN3tvm3tir11StmtFunctorI
  51: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  50: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  49: _ZZN3tvm3tir11StmtFunctorIFNS
  48: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  47: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorI
  31: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  29: _ZZN3tvm3tir11StmtFunctorI
  28: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  27: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  26: _ZZN3tvm3tir11StmtFunctorI
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorIFNS
  22: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  21: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorI
  17: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  15: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: _ZZN3tvm3tir11StmtFunctorI
  13: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  12: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  10: _ZZN3tvm3tir11StmtFunctorI
  9: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(90), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(8))
                                        v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(8) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1536))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(12)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(192))
                                        v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(192))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(768), rc_0 * T.int64(192) + rc_1 * T.int64(48) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[5, 1, 32, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 4, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[6, 1, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 4, 48])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 256, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 256, 2], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #89: GFLOPs: 1203.6826. Time: 29.4393 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #90: GFLOPs: 1942.8618. Time: 18.2388 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #91: GFLOPs: 1928.1806. Time: 18.3777 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #92: GFLOPs: 1928.0431. Time: 18.3790 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #93: GFLOPs: 1997.7856. Time: 17.7374 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #94: GFLOPs: 1659.1439. Time: 21.3577 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #95: GFLOPs: 1239.2555. Time: 28.5942 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #96: GFLOPs: 1658.8670. Time: 21.3613 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #97: GFLOPs: 1910.0181. Time: 18.5525 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #98: GFLOPs: 1699.0437. Time: 20.8562 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #99: GFLOPs: 1678.8910. Time: 21.1065 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #100: GFLOPs: 1631.1766. Time: 21.7239 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #101: GFLOPs: 1402.1482. Time: 25.2723 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #102: GFLOPs: 1929.9005. Time: 18.3613 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #103: GFLOPs: 515.6483. Time: 68.7203 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #104: GFLOPs: 1196.2545. Time: 29.6221 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #105: GFLOPs: 2080.6083. Time: 17.0313 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #106: GFLOPs: 1048.6778. Time: 33.7907 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #107: GFLOPs: 2080.3237. Time: 17.0337 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #108: GFLOPs: 2024.0674. Time: 17.5071 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #109: GFLOPs: 1042.9581. Time: 33.9760 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #110: GFLOPs: 2023.9255. Time: 17.5083 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #111: GFLOPs: 2064.2609. Time: 17.1662 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #112: GFLOPs: 2074.5527. Time: 17.0810 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #113: GFLOPs: 1670.7883. Time: 21.2089 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #114: GFLOPs: 2023.8752. Time: 17.5087 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #115: GFLOPs: 1633.4878. Time: 21.6932 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #116: GFLOPs: 2069.5767. Time: 17.1221 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #117: GFLOPs: 2072.7961. Time: 17.0955 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #118: GFLOPs: 969.0149. Time: 36.5686 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #119: GFLOPs: 1912.7851. Time: 18.5256 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #120: GFLOPs: 1673.5419. Time: 21.1740 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #121: GFLOPs: 1670.1831. Time: 21.2165 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #122: GFLOPs: 2054.0028. Time: 17.2519 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #123: GFLOPs: 1670.8326. Time: 21.2083 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #124: GFLOPs: 1890.6323. Time: 18.7427 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #125: GFLOPs: 2099.0479. Time: 16.8817 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #126: GFLOPs: 464.8643. Time: 76.2277 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #127: GFLOPs: 638.0275. Time: 55.5392 us. Best GFLOPs: 2225.1084
2024-05-01 17:02:34 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #128: GFLOPs: 49.4129. Time: 717.1307 us. Best GFLOPs: 2225.1084
2024-05-01 17:41:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 17:41:17 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 17:41:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 387 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:41:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 775 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:41:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 1168 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:41:21 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-05-01 17:41:23 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:41:26 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:41:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 109 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:41:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 17:41:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0498  1.0353  1.0276  1.0167  0.9888  0.9593  0.9541  0.9420  0.9411  0.9402  0.9380  0.9368  0.9366  0.9343  0.9293  0.9285
[17 : 32]:	0.9281  0.9259  0.9246  0.9243  0.9242  0.9235  0.9234  0.9232  0.9230  0.9227  0.9224  0.9219  0.9214  0.9212  0.9209  0.9209
[33 : 48]:	0.9201  0.9189  0.9186  0.9179  0.9179  0.9176  0.9168  0.9161  0.9160  0.9159  0.9158  0.9156  0.9156  0.9152  0.9151  0.9149
[49 : 64]:	0.9149  0.9148  0.9147  0.9140  0.9140  0.9130  0.9126  0.9125  0.9119  0.9118  0.9113  0.9112  0.9106  0.9102  0.9097  0.9096
2024-05-01 17:41:32 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 17:41:32 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #129: GFLOPs: 1813.7853. Time: 19.5368 us. Best GFLOPs: 2225.1084
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #130: GFLOPs: 1121.3272. Time: 31.6014 us. Best GFLOPs: 2225.1084
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #131: GFLOPs: 1802.4760. Time: 19.6594 us. Best GFLOPs: 2225.1084
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #132: GFLOPs: 2549.6688. Time: 13.8981 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #133: GFLOPs: 1732.9505. Time: 20.4481 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #134: GFLOPs: 2225.8818. Time: 15.9198 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #135: GFLOPs: 1821.8659. Time: 19.4501 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #136: GFLOPs: 2237.4724. Time: 15.8373 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #137: GFLOPs: 2147.2255. Time: 16.5029 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #138: GFLOPs: 2060.8610. Time: 17.1945 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #139: GFLOPs: 2001.9059. Time: 17.7009 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #140: GFLOPs: 2176.0861. Time: 16.2841 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #141: GFLOPs: 2153.4427. Time: 16.4553 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #142: GFLOPs: 2182.8161. Time: 16.2339 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #143: GFLOPs: 2063.2073. Time: 17.1750 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #144: GFLOPs: 1884.5432. Time: 18.8032 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #145: GFLOPs: 2026.2871. Time: 17.4879 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #146: GFLOPs: 2065.8244. Time: 17.1532 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #147: GFLOPs: 2080.1415. Time: 17.0351 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #148: GFLOPs: 2159.5981. Time: 16.4084 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #149: GFLOPs: 2080.1086. Time: 17.0354 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #150: GFLOPs: 1919.3336. Time: 18.4624 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #151: GFLOPs: 2220.6075. Time: 15.9576 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #152: GFLOPs: 2255.3664. Time: 15.7116 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #153: GFLOPs: 2069.2420. Time: 17.1249 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #154: GFLOPs: 2076.2475. Time: 17.0671 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #155: GFLOPs: 2254.0544. Time: 15.7208 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #156: GFLOPs: 2182.2338. Time: 16.2382 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #157: GFLOPs: 2159.4431. Time: 16.4096 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #158: GFLOPs: 2077.6031. Time: 17.0560 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #159: GFLOPs: 2086.7674. Time: 16.9811 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #160: GFLOPs: 2080.4228. Time: 17.0328 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #161: GFLOPs: 2141.1968. Time: 16.5494 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #162: GFLOPs: 2058.9061. Time: 17.2108 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #163: GFLOPs: 2086.5695. Time: 16.9827 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #164: GFLOPs: 2117.5301. Time: 16.7344 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #165: GFLOPs: 2087.0970. Time: 16.9784 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #166: GFLOPs: 2086.6570. Time: 16.9820 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #167: GFLOPs: 1844.2235. Time: 19.2143 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #168: GFLOPs: 2026.4771. Time: 17.4863 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #169: GFLOPs: 2078.6945. Time: 17.0470 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #170: GFLOPs: 2078.8385. Time: 17.0458 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #171: GFLOPs: 2088.2730. Time: 16.9688 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #172: GFLOPs: 2339.0207. Time: 15.1497 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #173: GFLOPs: 2218.6232. Time: 15.9719 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #174: GFLOPs: 2075.6002. Time: 17.0724 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #175: GFLOPs: 1893.1503. Time: 18.7178 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #176: GFLOPs: 2012.5407. Time: 17.6074 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #177: GFLOPs: 2257.6449. Time: 15.6958 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #178: GFLOPs: 2092.0300. Time: 16.9383 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #179: GFLOPs: 2086.9142. Time: 16.9799 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #180: GFLOPs: 2209.1966. Time: 16.0400 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #181: GFLOPs: 1305.9982. Time: 27.1329 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #182: GFLOPs: 2058.2322. Time: 17.2165 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #183: GFLOPs: 2091.4325. Time: 16.9432 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #184: GFLOPs: 2084.9671. Time: 16.9957 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #185: GFLOPs: 2081.5876. Time: 17.0233 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #186: GFLOPs: 1188.7980. Time: 29.8079 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #187: GFLOPs: 2084.6300. Time: 16.9985 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #188: GFLOPs: 2239.0682. Time: 15.8260 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #189: GFLOPs: 2058.1776. Time: 17.2169 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #190: GFLOPs: 122.3655. Time: 289.5876 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #191: GFLOPs: 60.7297. Time: 583.4954 us. Best GFLOPs: 2549.6688
2024-05-01 17:42:49 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #192: GFLOPs: 111.9875. Time: 316.4240 us. Best GFLOPs: 2549.6688
2024-05-01 18:47:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 18:47:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 18:47:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 390 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 18:47:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 792 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 18:47:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 1178 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 18:47:04 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-05-01 18:47:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 18:47:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 18:47:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 18:47:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 103 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 18:47:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9820  0.9815  0.9700  0.9420  0.9115  0.9029  0.9017  0.9000  0.8987  0.8977  0.8965  0.8946  0.8942  0.8939  0.8935  0.8926
[17 : 32]:	0.8905  0.8905  0.8892  0.8852  0.8844  0.8839  0.8834  0.8834  0.8827  0.8825  0.8825  0.8817  0.8782  0.8777  0.8773  0.8761
[33 : 48]:	0.8757  0.8750  0.8732  0.8731  0.8730  0.8727  0.8722  0.8720  0.8717  0.8709  0.8690  0.8688  0.8679  0.8677  0.8674  0.8672
[49 : 64]:	0.8666  0.8662  0.8661  0.8656  0.8653  0.8649  0.8647  0.8636  0.8632  0.8630  0.8625  0.8620  0.8615  0.8615  0.8609  0.8609
2024-05-01 18:47:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 18:47:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #193: GFLOPs: 2658.0929. Time: 13.3312 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #194: GFLOPs: 2498.1947. Time: 14.1845 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #195: GFLOPs: 1680.9711. Time: 21.0804 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #196: GFLOPs: 2350.1828. Time: 15.0778 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #197: GFLOPs: 2583.7084. Time: 13.7150 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #198: GFLOPs: 2193.1883. Time: 16.1571 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #199: GFLOPs: 2256.5581. Time: 15.7033 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #200: GFLOPs: 2260.3826. Time: 15.6768 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #201: GFLOPs: 2184.6936. Time: 16.2199 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #202: GFLOPs: 2489.0809. Time: 14.2364 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #203: GFLOPs: 2264.6981. Time: 15.6469 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #204: GFLOPs: 2234.8238. Time: 15.8561 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #205: GFLOPs: 2259.9467. Time: 15.6798 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #206: GFLOPs: 2233.6979. Time: 15.8641 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #207: GFLOPs: 2267.9161. Time: 15.6247 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #208: GFLOPs: 2044.9880. Time: 17.3280 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #209: GFLOPs: 2254.6506. Time: 15.7166 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #210: GFLOPs: 2264.1107. Time: 15.6510 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #211: GFLOPs: 2268.1004. Time: 15.6234 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #212: GFLOPs: 2099.2028. Time: 16.8805 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #213: GFLOPs: 2255.7306. Time: 15.7091 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #214: GFLOPs: 2097.1022. Time: 16.8974 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #215: GFLOPs: 2184.4515. Time: 16.2217 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #216: GFLOPs: 2219.8967. Time: 15.9627 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #217: GFLOPs: 2142.2285. Time: 16.5414 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #218: GFLOPs: 2232.6641. Time: 15.8714 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #219: GFLOPs: 1680.8337. Time: 21.0821 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #220: GFLOPs: 2343.7527. Time: 15.1191 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #221: GFLOPs: 2301.0383. Time: 15.3998 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #222: GFLOPs: 2489.1493. Time: 14.2360 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #223: GFLOPs: 2265.3612. Time: 15.6423 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #224: GFLOPs: 2259.9453. Time: 15.6798 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #225: GFLOPs: 2037.2870. Time: 17.3935 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #226: GFLOPs: 2234.6784. Time: 15.8571 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #227: GFLOPs: 2146.3768. Time: 16.5095 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #228: GFLOPs: 2042.3626. Time: 17.3503 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #229: GFLOPs: 2219.4772. Time: 15.9657 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #230: GFLOPs: 2233.1809. Time: 15.8677 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #231: GFLOPs: 2170.7325. Time: 16.3242 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #232: GFLOPs: 2034.5523. Time: 17.4169 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #233: GFLOPs: 2100.4311. Time: 16.8706 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #234: GFLOPs: 2264.6267. Time: 15.6474 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #235: GFLOPs: 2146.3914. Time: 16.5093 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #236: GFLOPs: 2177.5693. Time: 16.2730 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #237: GFLOPs: 2098.7868. Time: 16.8838 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #238: GFLOPs: 2349.4080. Time: 15.0827 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #239: GFLOPs: 2146.4499. Time: 16.5089 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #240: GFLOPs: 2191.4041. Time: 16.1702 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #241: GFLOPs: 1894.8655. Time: 18.7008 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #242: GFLOPs: 2255.5395. Time: 15.7104 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #243: GFLOPs: 2034.7021. Time: 17.4156 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #244: GFLOPs: 2101.5531. Time: 16.8616 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #245: GFLOPs: 2175.6550. Time: 16.2873 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #246: GFLOPs: 2174.1699. Time: 16.2984 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #247: GFLOPs: 2080.6485. Time: 17.0310 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #248: GFLOPs: 2238.4536. Time: 15.8304 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #249: GFLOPs: 2263.9399. Time: 15.6521 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #250: GFLOPs: 2164.8746. Time: 16.3684 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #251: GFLOPs: 2289.9820. Time: 15.4741 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #252: GFLOPs: 2141.3650. Time: 16.5481 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #253: GFLOPs: 2240.0458. Time: 15.8191 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #254: GFLOPs: 86.7675. Time: 408.3963 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #255: GFLOPs: 781.5112. Time: 45.3423 us. Best GFLOPs: 2658.0929
2024-05-01 18:48:28 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #256: GFLOPs: 401.8070. Time: 88.1904 us. Best GFLOPs: 2658.0929
2024-05-01 19:37:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:37:03 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:37:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 19:37:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 788 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 19:37:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 1179 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 19:37:06 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-05-01 19:37:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 19:37:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 19:37:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 19:37:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38285d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c360f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23ef68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb518df8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb26aa28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb485b38)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c34a08)]: 0 failure(s)
2024-05-01 19:37:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2702  1.2586  1.2547  1.2532  1.2510  1.2507  1.2486  1.2486  1.2432  1.2424  1.2415  1.2356  1.2329  1.2264  1.2240  1.2239
[17 : 32]:	1.2225  1.2188  1.2186  1.2166  1.2097  1.2090  1.1946  1.1617  1.1593  1.1413  1.1176  1.1077  1.0968  0.9937  0.9855  0.9641
[33 : 48]:	0.9526  0.9517  0.9435  0.9415  0.9350  0.9339  0.9322  0.9275  0.9248  0.9206  0.9206  0.9177  0.9177  0.9177  0.9131  0.9126
[49 : 64]:	0.9114  0.8920  0.8842  0.8818  0.8802  0.8785  0.8779  0.8773  0.8761  0.8746  0.8724  0.8686  0.8667  0.8618  0.8595  0.8573
2024-05-01 19:37:19 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:37:19 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #257: GFLOPs: 1686.7363. Time: 21.0083 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #258: GFLOPs: 1742.9094. Time: 20.3312 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #259: GFLOPs: 1695.0954. Time: 20.9047 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #260: GFLOPs: 1646.4276. Time: 21.5227 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #261: GFLOPs: 1742.4711. Time: 20.3364 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #262: GFLOPs: 1679.3799. Time: 21.1004 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #263: GFLOPs: 1727.4631. Time: 20.5130 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #264: GFLOPs: 1815.8063. Time: 19.5150 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #265: GFLOPs: 1727.9442. Time: 20.5073 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #266: GFLOPs: 1665.7158. Time: 21.2734 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #267: GFLOPs: 1323.7139. Time: 26.7698 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #268: GFLOPs: 1727.7241. Time: 20.5099 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #269: GFLOPs: 1603.0679. Time: 22.1048 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #270: GFLOPs: 1259.2193. Time: 28.1409 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #271: GFLOPs: 1602.9259. Time: 22.1068 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #272: GFLOPs: 1773.3071. Time: 19.9827 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #273: GFLOPs: 1369.5112. Time: 25.8746 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #274: GFLOPs: 1259.0863. Time: 28.1438 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #275: GFLOPs: 1369.7164. Time: 25.8707 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #276: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  337: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  336: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  335: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  334: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  333: tvm::transform::Pass::operator()(tvm::IRModule) const
  332: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  331: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  330: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  329: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  328: _ZN3tvm7runtime13PackedFun
  327: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  326: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  325: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  324: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  323: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  322: _ZZN3tvm3tir11StmtFunctorI
  321: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  320: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  319: _ZZN3tvm3tir11StmtFunctorI
  318: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  317: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  316: _ZZN3tvm3tir11StmtFunctorI
  315: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  314: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  313: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  312: _ZZN3tvm3tir11StmtFunctorI
  311: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  310: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  309: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  308: _ZZN3tvm3tir11StmtFunctorI
  307: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  306: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  305: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  304: _ZZN3tvm3tir11StmtFunctorI
  303: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  302: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  301: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  300: _ZZN3tvm3tir11StmtFunctorI
  299: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  298: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  297: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  296: _ZZN3tvm3tir11StmtFunctorI
  295: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  294: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  293: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  292: _ZZN3tvm3tir11StmtFunctorI
  291: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  290: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  289: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  288: _ZZN3tvm3tir11StmtFunctorI
  287: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  286: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  285: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  284: _ZZN3tvm3tir11StmtFunctorI
  283: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  282: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  281: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  280: _ZZN3tvm3tir11StmtFunctorI
  279: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  278: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  277: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  276: _ZZN3tvm3tir11StmtFunctorI
  275: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  274: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  273: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  272: _ZZN3tvm3tir11StmtFunctorI
  271: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  270: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  269: _ZZN3tvm3tir11StmtFunctorI
  268: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  267: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  266: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  265: _ZZN3tvm3tir11StmtFunctorI
  264: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  263: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  262: _ZZN3tvm3tir11StmtFunctorI
  261: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  260: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  259: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  258: _ZZN3tvm3tir11StmtFunctorI
  257: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  256: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  255: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  254: _ZZN3tvm3tir11StmtFunctorI
  253: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  252: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  251: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  250: _ZZN3tvm3tir11StmtFunctorI
  249: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  248: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  247: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  246: _ZZN3tvm3tir11StmtFunctorI
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorI
  242: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  241: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  240: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  239: _ZZN3tvm3tir11StmtFunctorI
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorI
  235: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  234: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  233: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  232: _ZZN3tvm3tir11StmtFunctorI
  231: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  230: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  229: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  228: _ZZN3tvm3tir11StmtFunctorI
  227: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorI
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorI
  220: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  219: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  218: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  217: _ZZN3tvm3tir11StmtFunctorI
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorI
  213: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  212: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  211: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  210: _ZZN3tvm3tir11StmtFunctorI
  209: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  208: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  207: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  206: _ZZN3tvm3tir11StmtFunctorI
  205: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  204: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  203: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  202: _ZZN3tvm3tir11StmtFunctorI
  201: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  200: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  199: _ZZN3tvm3tir11StmtFunctorI
  198: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  197: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  196: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  195: _ZZN3tvm3tir11StmtFunctorI
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorI
  188: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  187: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  186: _ZZN3tvm3tir11StmtFunctorI
  185: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  184: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  183: _ZZN3tvm3tir11StmtFunctorI
  182: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  181: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  180: _ZZN3tvm3tir11StmtFunctorI
  179: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  178: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  177: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  176: _ZZN3tvm3tir11StmtFunctorI
  175: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  174: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  173: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  172: _ZZN3tvm3tir11StmtFunctorI
  171: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  170: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  169: _ZZN3tvm3tir11StmtFunctorI
  168: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  167: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  166: _ZZN3tvm3tir11StmtFunctorI
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorI
  156: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  155: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  154: _ZZN3tvm3tir11StmtFunctorI
  153: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  152: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  151: _ZZN3tvm3tir11StmtFunctorIFNS
  150: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  149: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorI
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorI
  121: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  120: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  119: _ZZN3tvm3tir11StmtFunctorIFNS
  118: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  117: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorI
  89: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  88: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  87: _ZZN3tvm3tir11StmtFunctorI
  86: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  85: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  84: _ZZN3tvm3tir11StmtFunctorIFNS
  83: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  82: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorI
  54: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  53: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  52: _ZZN3tvm3tir11StmtFunctorI
  51: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  50: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  49: _ZZN3tvm3tir11StmtFunctorIFNS
  48: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  47: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorI
  31: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  29: _ZZN3tvm3tir11StmtFunctorI
  28: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  27: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  26: _ZZN3tvm3tir11StmtFunctorI
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorIFNS
  22: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  21: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorI
  17: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  15: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: _ZZN3tvm3tir11StmtFunctorI
  13: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  12: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  10: _ZZN3tvm3tir11StmtFunctorI
  9: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(360), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(6)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(8))
                                        v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(8) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(24)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(8) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) // T.int64(192))
                                    v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) % T.int64(192))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(768), rc_0 * T.int64(192) + rc_1 * T.int64(48) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[20, 1, 8, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 4, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[6, 1, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 4, 48])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 64, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119 = sch.split(loop=l117, factors=[None, 64], preserve_unit_iters=True)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b120 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b120, ann_key="meta_schedule.unroll_explicit")
b121, b122, b123, b124 = sch.get_child_blocks(b120)
l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b121)
l134, l135, l136, l137, l138, l139, l140, l141 = sch.get_loops(block=b122)
l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b123)
sch.annotate(block_or_loop=l142, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l142, ann_key="pragma_unroll_explicit", ann_val=1)
l162, l163, l164, l165, l166, l167, l168 = sch.get_loops(block=b124)
b169 = sch.get_block(name="conv2d_nchw", func_name="main")
l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189 = sch.get_loops(block=b169)
b190 = sch.decompose_reduction(block=b169, loop=l173)
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #277: GFLOPs: 1369.8781. Time: 25.8676 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #278: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  337: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  336: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  335: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  334: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  333: tvm::transform::Pass::operator()(tvm::IRModule) const
  332: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  331: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  330: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  329: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  328: _ZN3tvm7runtime13PackedFun
  327: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  326: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  325: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  324: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  323: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  322: _ZZN3tvm3tir11StmtFunctorI
  321: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  320: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  319: _ZZN3tvm3tir11StmtFunctorI
  318: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  317: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  316: _ZZN3tvm3tir11StmtFunctorI
  315: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  314: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  313: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  312: _ZZN3tvm3tir11StmtFunctorI
  311: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  310: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  309: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  308: _ZZN3tvm3tir11StmtFunctorI
  307: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  306: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  305: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  304: _ZZN3tvm3tir11StmtFunctorI
  303: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  302: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  301: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  300: _ZZN3tvm3tir11StmtFunctorI
  299: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  298: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  297: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  296: _ZZN3tvm3tir11StmtFunctorI
  295: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  294: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  293: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  292: _ZZN3tvm3tir11StmtFunctorI
  291: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  290: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  289: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  288: _ZZN3tvm3tir11StmtFunctorI
  287: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  286: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  285: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  284: _ZZN3tvm3tir11StmtFunctorI
  283: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  282: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  281: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  280: _ZZN3tvm3tir11StmtFunctorI
  279: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  278: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  277: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  276: _ZZN3tvm3tir11StmtFunctorI
  275: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  274: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  273: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  272: _ZZN3tvm3tir11StmtFunctorI
  271: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  270: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  269: _ZZN3tvm3tir11StmtFunctorI
  268: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  267: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  266: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  265: _ZZN3tvm3tir11StmtFunctorI
  264: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  263: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  262: _ZZN3tvm3tir11StmtFunctorI
  261: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  260: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  259: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  258: _ZZN3tvm3tir11StmtFunctorI
  257: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  256: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  255: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  254: _ZZN3tvm3tir11StmtFunctorI
  253: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  252: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  251: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  250: _ZZN3tvm3tir11StmtFunctorI
  249: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  248: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  247: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  246: _ZZN3tvm3tir11StmtFunctorI
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorI
  242: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  241: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  240: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  239: _ZZN3tvm3tir11StmtFunctorI
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorI
  235: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  234: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  233: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  232: _ZZN3tvm3tir11StmtFunctorI
  231: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  230: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  229: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  228: _ZZN3tvm3tir11StmtFunctorI
  227: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorI
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorI
  220: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  219: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  218: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  217: _ZZN3tvm3tir11StmtFunctorI
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorI
  213: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  212: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  211: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  210: _ZZN3tvm3tir11StmtFunctorI
  209: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  208: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  207: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  206: _ZZN3tvm3tir11StmtFunctorI
  205: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  204: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  203: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  202: _ZZN3tvm3tir11StmtFunctorI
  201: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  200: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  199: _ZZN3tvm3tir11StmtFunctorI
  198: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  197: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  196: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  195: _ZZN3tvm3tir11StmtFunctorI
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorI
  188: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  187: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  186: _ZZN3tvm3tir11StmtFunctorI
  185: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  184: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  183: _ZZN3tvm3tir11StmtFunctorI
  182: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  181: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  180: _ZZN3tvm3tir11StmtFunctorI
  179: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  178: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  177: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  176: _ZZN3tvm3tir11StmtFunctorI
  175: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  174: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  173: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  172: _ZZN3tvm3tir11StmtFunctorI
  171: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  170: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  169: _ZZN3tvm3tir11StmtFunctorI
  168: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  167: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  166: _ZZN3tvm3tir11StmtFunctorI
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorI
  156: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  155: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  154: _ZZN3tvm3tir11StmtFunctorI
  153: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  152: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  151: _ZZN3tvm3tir11StmtFunctorIFNS
  150: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  149: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorI
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorI
  121: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  120: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  119: _ZZN3tvm3tir11StmtFunctorIFNS
  118: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  117: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorI
  89: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  88: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  87: _ZZN3tvm3tir11StmtFunctorI
  86: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  85: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  84: _ZZN3tvm3tir11StmtFunctorIFNS
  83: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  82: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorI
  54: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  53: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  52: _ZZN3tvm3tir11StmtFunctorI
  51: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  50: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  49: _ZZN3tvm3tir11StmtFunctorIFNS
  48: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  47: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorI
  31: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  29: _ZZN3tvm3tir11StmtFunctorI
  28: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  27: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  26: _ZZN3tvm3tir11StmtFunctorI
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorIFNS
  22: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  21: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorI
  17: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  15: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: _ZZN3tvm3tir11StmtFunctorI
  13: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  12: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  10: _ZZN3tvm3tir11StmtFunctorI
  9: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(360), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(6)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(8))
                                        v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(8) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(24)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(8) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) // T.int64(192))
                                    v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) % T.int64(192))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(96), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(768), rc_0 * T.int64(192) + rc_1 * T.int64(2) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(8) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(8) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(8) // T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[20, 1, 8, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 4, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[6, 1, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 96, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 64, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119 = sch.split(loop=l117, factors=[None, 64], preserve_unit_iters=True)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b120 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b120, ann_key="meta_schedule.unroll_explicit")
b121, b122, b123, b124 = sch.get_child_blocks(b120)
l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b121)
l134, l135, l136, l137, l138, l139, l140, l141 = sch.get_loops(block=b122)
l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161 = sch.get_loops(block=b123)
sch.annotate(block_or_loop=l142, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l142, ann_key="pragma_unroll_explicit", ann_val=1)
l162, l163, l164, l165, l166, l167, l168 = sch.get_loops(block=b124)
b169 = sch.get_block(name="conv2d_nchw", func_name="main")
l170, l171, l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189 = sch.get_loops(block=b169)
b190 = sch.decompose_reduction(block=b169, loop=l173)
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #279: GFLOPs: 1402.4563. Time: 25.2668 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #280: GFLOPs: 1693.0826. Time: 20.9296 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #281: GFLOPs: 1673.0490. Time: 21.1802 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #282: GFLOPs: 1611.3458. Time: 21.9913 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #283: GFLOPs: 1635.0038. Time: 21.6731 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #284: GFLOPs: 1740.0321. Time: 20.3649 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #285: GFLOPs: 1283.8578. Time: 27.6008 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #286: GFLOPs: 1300.6453. Time: 27.2446 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #287: GFLOPs: 1249.4219. Time: 28.3615 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #288: GFLOPs: 1307.8091. Time: 27.0953 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #289: GFLOPs: 2507.7321. Time: 14.1305 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #290: GFLOPs: 2643.3266. Time: 13.4057 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #291: GFLOPs: 2525.1344. Time: 14.0331 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #292: GFLOPs: 1964.9930. Time: 18.0334 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #293: GFLOPs: 2554.6218. Time: 13.8711 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #294: GFLOPs: 2492.3362. Time: 14.2178 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #295: GFLOPs: 2538.5209. Time: 13.9591 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #296: GFLOPs: 2383.3831. Time: 14.8677 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #297: GFLOPs: 2538.2206. Time: 13.9608 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #298: GFLOPs: 2506.0951. Time: 14.1397 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #299: GFLOPs: 2420.3655. Time: 14.6406 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #300: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  337: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  336: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  335: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  334: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  333: tvm::transform::Pass::operator()(tvm::IRModule) const
  332: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  331: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  330: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  329: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  328: _ZN3tvm7runtime13PackedFun
  327: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  326: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  325: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  324: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  323: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  322: _ZZN3tvm3tir11StmtFunctorI
  321: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  320: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  319: _ZZN3tvm3tir11StmtFunctorI
  318: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  317: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  316: _ZZN3tvm3tir11StmtFunctorI
  315: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  314: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  313: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  312: _ZZN3tvm3tir11StmtFunctorI
  311: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  310: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  309: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  308: _ZZN3tvm3tir11StmtFunctorI
  307: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  306: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  305: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  304: _ZZN3tvm3tir11StmtFunctorI
  303: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  302: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  301: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  300: _ZZN3tvm3tir11StmtFunctorI
  299: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  298: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  297: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  296: _ZZN3tvm3tir11StmtFunctorI
  295: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  294: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  293: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  292: _ZZN3tvm3tir11StmtFunctorI
  291: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  290: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  289: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  288: _ZZN3tvm3tir11StmtFunctorI
  287: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  286: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  285: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  284: _ZZN3tvm3tir11StmtFunctorI
  283: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  282: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  281: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  280: _ZZN3tvm3tir11StmtFunctorI
  279: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  278: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  277: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  276: _ZZN3tvm3tir11StmtFunctorI
  275: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  274: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  273: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  272: _ZZN3tvm3tir11StmtFunctorI
  271: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  270: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  269: _ZZN3tvm3tir11StmtFunctorI
  268: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  267: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  266: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  265: _ZZN3tvm3tir11StmtFunctorI
  264: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  263: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  262: _ZZN3tvm3tir11StmtFunctorI
  261: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  260: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  259: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  258: _ZZN3tvm3tir11StmtFunctorI
  257: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  256: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  255: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  254: _ZZN3tvm3tir11StmtFunctorI
  253: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  252: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  251: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  250: _ZZN3tvm3tir11StmtFunctorI
  249: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  248: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  247: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  246: _ZZN3tvm3tir11StmtFunctorI
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorI
  242: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  241: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  240: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  239: _ZZN3tvm3tir11StmtFunctorI
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorI
  235: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  234: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  233: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  232: _ZZN3tvm3tir11StmtFunctorI
  231: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  230: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  229: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  228: _ZZN3tvm3tir11StmtFunctorI
  227: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorI
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorI
  220: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  219: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  218: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  217: _ZZN3tvm3tir11StmtFunctorI
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorI
  213: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  212: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  211: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  210: _ZZN3tvm3tir11StmtFunctorI
  209: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  208: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  207: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  206: _ZZN3tvm3tir11StmtFunctorI
  205: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  204: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  203: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  202: _ZZN3tvm3tir11StmtFunctorI
  201: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  200: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  199: _ZZN3tvm3tir11StmtFunctorI
  198: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  197: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  196: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  195: _ZZN3tvm3tir11StmtFunctorI
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorI
  188: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  187: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  186: _ZZN3tvm3tir11StmtFunctorI
  185: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  184: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  183: _ZZN3tvm3tir11StmtFunctorI
  182: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  181: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  180: _ZZN3tvm3tir11StmtFunctorI
  179: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  178: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  177: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  176: _ZZN3tvm3tir11StmtFunctorI
  175: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  174: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  173: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  172: _ZZN3tvm3tir11StmtFunctorI
  171: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  170: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  169: _ZZN3tvm3tir11StmtFunctorI
  168: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  167: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  166: _ZZN3tvm3tir11StmtFunctorI
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorI
  156: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  155: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  154: _ZZN3tvm3tir11StmtFunctorI
  153: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  152: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  151: _ZZN3tvm3tir11StmtFunctorIFNS
  150: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  149: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorI
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorI
  121: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  120: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  119: _ZZN3tvm3tir11StmtFunctorIFNS
  118: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  117: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorI
  89: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  88: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  87: _ZZN3tvm3tir11StmtFunctorI
  86: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  85: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  84: _ZZN3tvm3tir11StmtFunctorIFNS
  83: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  82: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorI
  54: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  53: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  52: _ZZN3tvm3tir11StmtFunctorI
  51: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  50: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  49: _ZZN3tvm3tir11StmtFunctorIFNS
  48: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  47: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorI
  31: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  29: _ZZN3tvm3tir11StmtFunctorI
  28: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  27: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  26: _ZZN3tvm3tir11StmtFunctorI
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorIFNS
  22: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  21: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorI
  17: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  15: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: _ZZN3tvm3tir11StmtFunctorI
  13: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  12: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  10: _ZZN3tvm3tir11StmtFunctorI
  9: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(60), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(384), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(24) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(24) // T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(384), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1536) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(24))
                                        v2 = T.axis.spatial(T.int64(12), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1536) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(24) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1536) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(384), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(16) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1536) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(192))
                                        v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1536) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(192))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(24) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(24) // T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(768), rc_0 * T.int64(192) + rc_1 * T.int64(48) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(24) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(24) // T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[10, 1, 16, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 12, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[6, 1, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 4, 48])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 384, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 384, 4], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:121] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #301: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  337: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  336: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  335: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  334: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  333: tvm::transform::Pass::operator()(tvm::IRModule) const
  332: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  331: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  330: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  329: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  328: _ZN3tvm7runtime13PackedFun
  327: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  326: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  325: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  324: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  323: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  322: _ZZN3tvm3tir11StmtFunctorI
  321: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  320: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  319: _ZZN3tvm3tir11StmtFunctorI
  318: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  317: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  316: _ZZN3tvm3tir11StmtFunctorI
  315: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  314: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  313: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  312: _ZZN3tvm3tir11StmtFunctorI
  311: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  310: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  309: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  308: _ZZN3tvm3tir11StmtFunctorI
  307: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  306: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  305: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  304: _ZZN3tvm3tir11StmtFunctorI
  303: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  302: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  301: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  300: _ZZN3tvm3tir11StmtFunctorI
  299: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  298: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  297: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  296: _ZZN3tvm3tir11StmtFunctorI
  295: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  294: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  293: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  292: _ZZN3tvm3tir11StmtFunctorI
  291: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  290: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  289: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  288: _ZZN3tvm3tir11StmtFunctorI
  287: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  286: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  285: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  284: _ZZN3tvm3tir11StmtFunctorI
  283: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  282: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  281: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  280: _ZZN3tvm3tir11StmtFunctorI
  279: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  278: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  277: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  276: _ZZN3tvm3tir11StmtFunctorI
  275: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  274: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  273: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  272: _ZZN3tvm3tir11StmtFunctorI
  271: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  270: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  269: _ZZN3tvm3tir11StmtFunctorI
  268: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  267: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  266: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  265: _ZZN3tvm3tir11StmtFunctorI
  264: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  263: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  262: _ZZN3tvm3tir11StmtFunctorI
  261: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  260: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  259: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  258: _ZZN3tvm3tir11StmtFunctorI
  257: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  256: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  255: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  254: _ZZN3tvm3tir11StmtFunctorI
  253: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  252: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  251: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  250: _ZZN3tvm3tir11StmtFunctorI
  249: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  248: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  247: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  246: _ZZN3tvm3tir11StmtFunctorI
  245: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  244: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  243: _ZZN3tvm3tir11StmtFunctorI
  242: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  241: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  240: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  239: _ZZN3tvm3tir11StmtFunctorI
  238: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  237: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  236: _ZZN3tvm3tir11StmtFunctorI
  235: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  234: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  233: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  232: _ZZN3tvm3tir11StmtFunctorI
  231: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  230: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  229: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  228: _ZZN3tvm3tir11StmtFunctorI
  227: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  226: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  225: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  224: _ZZN3tvm3tir11StmtFunctorI
  223: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  222: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  221: _ZZN3tvm3tir11StmtFunctorI
  220: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  219: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  218: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  217: _ZZN3tvm3tir11StmtFunctorI
  216: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  215: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  214: _ZZN3tvm3tir11StmtFunctorI
  213: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  212: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  211: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  210: _ZZN3tvm3tir11StmtFunctorI
  209: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  208: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  207: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  206: _ZZN3tvm3tir11StmtFunctorI
  205: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  204: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  203: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  202: _ZZN3tvm3tir11StmtFunctorI
  201: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  200: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  199: _ZZN3tvm3tir11StmtFunctorI
  198: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  197: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  196: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  195: _ZZN3tvm3tir11StmtFunctorI
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorI
  188: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  187: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  186: _ZZN3tvm3tir11StmtFunctorI
  185: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  184: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  183: _ZZN3tvm3tir11StmtFunctorI
  182: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  181: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  180: _ZZN3tvm3tir11StmtFunctorI
  179: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  178: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  177: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  176: _ZZN3tvm3tir11StmtFunctorI
  175: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  174: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  173: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  172: _ZZN3tvm3tir11StmtFunctorI
  171: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  170: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  169: _ZZN3tvm3tir11StmtFunctorI
  168: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  167: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  166: _ZZN3tvm3tir11StmtFunctorI
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorI
  156: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  155: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  154: _ZZN3tvm3tir11StmtFunctorI
  153: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  152: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  151: _ZZN3tvm3tir11StmtFunctorIFNS
  150: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  149: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  148: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  147: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  146: _ZZN3tvm3tir11StmtFunctorI
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorI
  121: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  120: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  119: _ZZN3tvm3tir11StmtFunctorIFNS
  118: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  117: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorI
  89: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  88: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  87: _ZZN3tvm3tir11StmtFunctorI
  86: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  85: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  84: _ZZN3tvm3tir11StmtFunctorIFNS
  83: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  82: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorI
  54: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  53: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  52: _ZZN3tvm3tir11StmtFunctorI
  51: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  50: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  49: _ZZN3tvm3tir11StmtFunctorIFNS
  48: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  47: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorI
  31: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  30: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  29: _ZZN3tvm3tir11StmtFunctorI
  28: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  27: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  26: _ZZN3tvm3tir11StmtFunctorI
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorIFNS
  22: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  21: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  20: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  19: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  18: _ZZN3tvm3tir11StmtFunctorI
  17: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  16: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  15: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  14: _ZZN3tvm3tir11StmtFunctorI
  13: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  12: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  11: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  10: _ZZN3tvm3tir11StmtFunctorI
  9: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(768), T.int64(12), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(768), T.int64(1), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(60), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(384), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(24) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(24) // T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(384), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1536) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(24))
                                        v2 = T.axis.spatial(T.int64(12), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1536) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(24) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1536) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.reads(p0[v0, v1, v2, v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(384), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(3)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(16) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1152) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) // T.int64(192))
                                        v1 = T.axis.spatial(T.int64(768), rc_0 * T.int64(192) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(1152) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(192))
                                        v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(384) + ax0_ax1_ax2_ax3_fused_1) * T.int64(3) + ax0_ax1_ax2_ax3_fused_2 < T.int64(3072))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(24) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(24) // T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(768), rc_0 * T.int64(192) + rc_1 * T.int64(48) + rc_2)
                                v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(6) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(24) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(24) // T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[10, 1, 16, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 12, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[6, 1, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 4, 48])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 384, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 384, 3], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #302: GFLOPs: 2383.4393. Time: 14.8674 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #303: GFLOPs: 2420.8425. Time: 14.6377 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #304: GFLOPs: 2460.2915. Time: 14.4030 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #305: GFLOPs: 989.0228. Time: 35.8288 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #306: GFLOPs: 2379.9269. Time: 14.8893 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #307: GFLOPs: 2356.9641. Time: 15.0344 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #308: GFLOPs: 2375.7814. Time: 14.9153 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #309: GFLOPs: 2381.9235. Time: 14.8769 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #310: GFLOPs: 2372.3746. Time: 14.9367 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #311: GFLOPs: 2372.5081. Time: 14.9359 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #312: GFLOPs: 2307.8411. Time: 15.3544 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #313: GFLOPs: 2372.7891. Time: 14.9341 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #314: GFLOPs: 2317.8671. Time: 15.2880 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #315: GFLOPs: 2372.9896. Time: 14.9329 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #316: GFLOPs: 2369.3651. Time: 14.9557 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #317: GFLOPs: 2369.8699. Time: 14.9525 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #318: GFLOPs: 92.3988. Time: 383.5064 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #319: GFLOPs: 34.3360. Time: 1032.0231 us. Best GFLOPs: 2658.0929
2024-05-01 19:38:32 [INFO] [task_scheduler.cc:131] [Task #19: fused_nn_conv2d_add_nn_relu_13] Trial #320: GFLOPs: 1093.3637. Time: 32.4096 us. Best GFLOPs: 2658.0929
