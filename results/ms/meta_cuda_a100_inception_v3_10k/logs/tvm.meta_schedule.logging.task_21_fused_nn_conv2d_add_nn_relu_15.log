2024-04-29 01:54:19 [INFO] [task_scheduler.cc:160] Initializing Task #21: "fused_nn_conv2d_add_nn_relu_15"
2024-04-29 01:54:19 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(160), T.int64(18), T.int64(12)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3], T.float32(0))
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(192), T.int64(12), T.int64(12), T.int64(160), T.int64(7), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(12), T.int64(12)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(12), T.int64(12)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 01:54:19 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 01:54:19 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(3), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(16), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2160)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(10) + ax0_ax1_ax2_ax3_fused // T.int64(216))
                                    v2 = T.axis.spatial(T.int64(18), ax0_ax1_ax2_ax3_fused % T.int64(216) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(840)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ax0_ax1_ax2_ax3_fused // T.int64(70))
                                    v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(10) + ax0_ax1_ax2_ax3_fused % T.int64(70) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(1), T.int64(3), T.int64(5), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), xx_3 * T.int64(4) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(10) + rc_1 * T.int64(5) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 * T.int64(7) + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(12), T.int64(2), T.int64(12)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[16, 1, 1, 12, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 1, 3, 4])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[16, 2, 5])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 01:54:19 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(3), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(16), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2160)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(10) + ax0_ax1_ax2_ax3_fused // T.int64(216))
                                    v2 = T.axis.spatial(T.int64(18), ax0_ax1_ax2_ax3_fused % T.int64(216) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(840)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ax0_ax1_ax2_ax3_fused // T.int64(70))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(10) + ax0_ax1_ax2_ax3_fused % T.int64(70) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(1), T.int64(3), T.int64(5), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), xx_3 * T.int64(4) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(10) + rc_1 * T.int64(5) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_1 * T.int64(7) + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(12), T.int64(2), T.int64(12)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[16, 1, 1, 12, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 1, 3, 4])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[16, 2, 5])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 01:54:19 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(3), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(16), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2160)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(10) + ax0_ax1_ax2_ax3_fused // T.int64(216))
                                    v2 = T.axis.spatial(T.int64(18), ax0_ax1_ax2_ax3_fused % T.int64(216) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(840)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ax0_ax1_ax2_ax3_fused // T.int64(70))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(10) + ax0_ax1_ax2_ax3_fused % T.int64(70) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(1), T.int64(3), T.int64(5), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), xx_3 * T.int64(4) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(10) + rc_1 * T.int64(5) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_1 * T.int64(7) + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(12), T.int64(2), T.int64(12)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused * T.int64(12) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[16, 1, 1, 12, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 1, 3, 4])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[16, 2, 5])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 02:32:44 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:32:44 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:32:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 491 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 02:32:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 981 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 02:32:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 1470 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 02:32:52 [INFO] [evolutionary_search.cc:723] Sampled 66 candidate(s)
2024-04-29 02:32:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 02:32:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 02:33:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 02:33:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 02:33:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9997  0.9985  0.9976  0.9953  0.9951  0.9951  0.9945  0.9942  0.9929  0.9924  0.9924  0.9923  0.9910  0.9905  0.9895
[17 : 32]:	0.9882  0.9878  0.9877  0.9875  0.9872  0.9869  0.9855  0.9850  0.9848  0.9840  0.9838  0.9835  0.9827  0.9827  0.9821  0.9821
[33 : 48]:	0.9819  0.9803  0.9803  0.9800  0.9780  0.9776  0.9770  0.9758  0.9744  0.9743  0.9740  0.9739  0.9732  0.9732  0.9731  0.9726
[49 : 64]:	0.9718  0.9713  0.9711  0.9705  0.9703  0.9699  0.9683  0.9679  0.9672  0.9669  0.9664  0.9660  0.9652  0.9647  0.9637  0.9633
2024-04-29 02:33:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:33:05 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #1: GFLOPs: 468.9983. Time: 132.1685 us. Best GFLOPs: 468.9983
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #2: GFLOPs: 100.7324. Time: 615.3615 us. Best GFLOPs: 468.9983
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #3: GFLOPs: 80.9964. Time: 765.3032 us. Best GFLOPs: 468.9983
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #4: GFLOPs: 173.0050. Time: 358.2949 us. Best GFLOPs: 468.9983
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #5: GFLOPs: 318.4733. Time: 194.6374 us. Best GFLOPs: 468.9983
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #6: GFLOPs: 1686.8764. Time: 36.7465 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #7: GFLOPs: 310.7818. Time: 199.4544 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #8: GFLOPs: 95.4837. Time: 649.1872 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #9: GFLOPs: 1458.3548. Time: 42.5046 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #10: GFLOPs: 713.8631. Time: 86.8329 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #11: GFLOPs: 1369.0370. Time: 45.2777 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #12: GFLOPs: 453.7407. Time: 136.6129 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #13: GFLOPs: 60.9980. Time: 1016.2114 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #14: GFLOPs: 68.7731. Time: 901.3229 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #15: GFLOPs: 113.5060. Time: 546.1103 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #16: GFLOPs: 466.0484. Time: 133.0051 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #17: GFLOPs: 27.6257. Time: 2243.8115 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #18: GFLOPs: 161.8237. Time: 383.0516 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #19: GFLOPs: 19.3193. Time: 3208.5400 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #20: GFLOPs: 117.5260. Time: 527.4305 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #21: GFLOPs: 219.5225. Time: 282.3712 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #22: GFLOPs: 230.8480. Time: 268.5178 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #23: GFLOPs: 407.5164. Time: 152.1088 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #24: GFLOPs: 499.8530. Time: 124.0101 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #25: GFLOPs: 105.3752. Time: 588.2486 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #26: GFLOPs: 1125.1897. Time: 55.0901 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #27: GFLOPs: 200.9270. Time: 308.5042 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #28: GFLOPs: 459.5930. Time: 134.8733 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #29: GFLOPs: 245.2434. Time: 252.7563 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #30: GFLOPs: 336.2849. Time: 184.3283 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #31: GFLOPs: 123.0796. Time: 503.6320 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #32: GFLOPs: 32.3898. Time: 1913.7788 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #33: GFLOPs: 224.1597. Time: 276.5297 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #34: GFLOPs: 420.8739. Time: 147.2812 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #35: GFLOPs: 42.5731. Time: 1456.0092 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #36: GFLOPs: 2.1121. Time: 29348.3522 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #37: GFLOPs: 3.1178. Time: 19881.8130 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #38: GFLOPs: 183.1051. Time: 338.5314 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #39: GFLOPs: 131.7861. Time: 470.3593 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #40: GFLOPs: 167.2146. Time: 370.7022 us. Best GFLOPs: 1686.8764
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #41: GFLOPs: 1884.4463. Time: 32.8939 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #42: GFLOPs: 166.6903. Time: 371.8681 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #43: GFLOPs: 83.6670. Time: 740.8754 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #44: GFLOPs: 104.3192. Time: 594.2034 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #45: GFLOPs: 237.2488. Time: 261.2734 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #46: GFLOPs: 1423.8238. Time: 43.5355 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #47: GFLOPs: 185.2757. Time: 334.5652 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #48: GFLOPs: 258.7072. Time: 239.6022 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #49: GFLOPs: 320.1317. Time: 193.6291 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #50: GFLOPs: 989.0356. Time: 62.6740 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #51: GFLOPs: 613.0564. Time: 101.1111 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #52: GFLOPs: 75.8403. Time: 817.3339 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #53: GFLOPs: 103.8213. Time: 597.0529 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #54: GFLOPs: 128.8581. Time: 481.0470 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #55: GFLOPs: 100.0467. Time: 619.5791 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #56: GFLOPs: 414.0284. Time: 149.7163 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #57: GFLOPs: 209.4602. Time: 295.9360 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #58: GFLOPs: 64.7495. Time: 957.3327 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #59: GFLOPs: 2.1121. Time: 29347.8393 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #60: GFLOPs: 856.3364. Time: 72.3861 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #61: GFLOPs: 462.2648. Time: 134.0937 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #62: GFLOPs: 322.2245. Time: 192.3715 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #63: GFLOPs: 407.5428. Time: 152.0989 us. Best GFLOPs: 1884.4463
2024-04-29 04:01:21 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #64: GFLOPs: 210.9239. Time: 293.8824 us. Best GFLOPs: 1884.4463
2024-04-29 04:51:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:51:08 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 04:51:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 429 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 04:51:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 856 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 04:51:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 1281 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 04:51:14 [INFO] [evolutionary_search.cc:723] Sampled 63 candidate(s)
2024-04-29 04:51:18 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 98 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 04:51:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 109 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 04:51:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 04:51:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 04:51:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3865  1.2069  1.1735  1.1644  1.1569  1.0502  1.0050  1.0050  0.9956  0.9878  0.9850  0.9819  0.9743  0.9702  0.9686  0.9666
[17 : 32]:	0.9607  0.9598  0.9574  0.9552  0.9550  0.9506  0.9501  0.9481  0.9470  0.9464  0.9462  0.9451  0.9432  0.9393  0.9384  0.9379
[33 : 48]:	0.9347  0.9343  0.9313  0.9313  0.9313  0.9305  0.9283  0.9251  0.9249  0.9249  0.9227  0.9191  0.9191  0.9158  0.9135  0.9131
[49 : 64]:	0.9129  0.9109  0.9090  0.9086  0.9086  0.9058  0.9029  0.9026  0.9009  0.8951  0.8912  0.8897  0.8888  0.8880  0.8873  0.8867
2024-04-29 04:51:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:51:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #65: GFLOPs: 154.4245. Time: 401.4054 us. Best GFLOPs: 1884.4463
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #66: GFLOPs: 1464.7592. Time: 42.3188 us. Best GFLOPs: 1884.4463
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #67: GFLOPs: 438.5458. Time: 141.3463 us. Best GFLOPs: 1884.4463
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #68: GFLOPs: 1307.8699. Time: 47.3952 us. Best GFLOPs: 1884.4463
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #69: GFLOPs: 1307.7905. Time: 47.3981 us. Best GFLOPs: 1884.4463
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #70: GFLOPs: 2293.1112. Time: 27.0318 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #71: GFLOPs: 1102.9191. Time: 56.2025 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #72: GFLOPs: 1163.7337. Time: 53.2655 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #73: GFLOPs: 1320.7835. Time: 46.9319 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #74: GFLOPs: 1788.7346. Time: 34.6540 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #75: GFLOPs: 1952.6268. Time: 31.7453 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #76: GFLOPs: 1244.7021. Time: 49.8005 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #77: GFLOPs: 1169.5974. Time: 52.9984 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #78: GFLOPs: 1929.5948. Time: 32.1243 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #79: GFLOPs: 1181.3940. Time: 52.4692 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #80: GFLOPs: 860.7386. Time: 72.0158 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #81: GFLOPs: 1365.8077. Time: 45.3847 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #82: GFLOPs: 1330.3591. Time: 46.5940 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #83: GFLOPs: 641.9864. Time: 96.5547 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #84: GFLOPs: 535.0004. Time: 115.8631 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #85: GFLOPs: 531.6682. Time: 116.5893 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #86: GFLOPs: 980.8957. Time: 63.1941 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #87: GFLOPs: 643.0926. Time: 96.3886 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #88: GFLOPs: 1163.3289. Time: 53.2840 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #89: GFLOPs: 860.8396. Time: 72.0074 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #90: GFLOPs: 1886.2864. Time: 32.8618 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #91: GFLOPs: 597.7966. Time: 103.6922 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #92: GFLOPs: 1319.9611. Time: 46.9611 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #93: GFLOPs: 264.1130. Time: 234.6981 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #94: GFLOPs: 666.6164. Time: 92.9872 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #95: GFLOPs: 237.6007. Time: 260.8865 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #96: GFLOPs: 1413.8842. Time: 43.8415 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #97: GFLOPs: 896.0401. Time: 69.1786 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #98: GFLOPs: 1421.4846. Time: 43.6071 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #99: GFLOPs: 832.4808. Time: 74.4604 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #100: GFLOPs: 1106.3059. Time: 56.0305 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #101: GFLOPs: 1163.0925. Time: 53.2948 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #102: GFLOPs: 642.9323. Time: 96.4127 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #103: GFLOPs: 1322.1168. Time: 46.8845 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #104: GFLOPs: 379.0311. Time: 163.5402 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #105: GFLOPs: 656.8114. Time: 94.3754 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #106: GFLOPs: 656.8107. Time: 94.3755 us. Best GFLOPs: 2293.1112
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #107: GFLOPs: 2680.5690. Time: 23.1245 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #108: GFLOPs: 1416.6018. Time: 43.7574 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #109: GFLOPs: 538.1286. Time: 115.1896 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #110: GFLOPs: 600.5231. Time: 103.2214 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #111: GFLOPs: 452.3817. Time: 137.0233 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #112: GFLOPs: 1260.8917. Time: 49.1611 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #113: GFLOPs: 361.7131. Time: 171.3701 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #114: GFLOPs: 534.7311. Time: 115.9215 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #115: GFLOPs: 203.2937. Time: 304.9127 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #116: GFLOPs: 453.7017. Time: 136.6246 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #117: GFLOPs: 435.7865. Time: 142.2412 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #118: GFLOPs: 1261.7119. Time: 49.1291 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #119: GFLOPs: 509.7425. Time: 121.6042 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #120: GFLOPs: 380.9039. Time: 162.7361 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #121: GFLOPs: 543.9292. Time: 113.9612 us. Best GFLOPs: 2680.5690
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #122: GFLOPs: 2843.1081. Time: 21.8025 us. Best GFLOPs: 2843.1081
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #123: GFLOPs: 195.5413. Time: 317.0011 us. Best GFLOPs: 2843.1081
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #124: GFLOPs: 1172.2129. Time: 52.8802 us. Best GFLOPs: 2843.1081
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #125: GFLOPs: 551.2993. Time: 112.4377 us. Best GFLOPs: 2843.1081
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #126: GFLOPs: 196.8737. Time: 314.8558 us. Best GFLOPs: 2843.1081
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #127: GFLOPs: 263.2762. Time: 235.4440 us. Best GFLOPs: 2843.1081
2024-04-29 04:53:08 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #128: GFLOPs: 115.4080. Time: 537.1102 us. Best GFLOPs: 2843.1081
2024-04-29 06:42:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:42:59 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:43:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 394 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 06:43:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 782 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 06:43:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 1165 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 06:43:05 [INFO] [evolutionary_search.cc:723] Sampled 65 candidate(s)
2024-04-29 06:43:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 116 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 06:43:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 114 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 06:43:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 72 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 06:43:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 06:43:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.9415  1.7343  1.6914  1.6388  1.6275  1.5773  1.5629  1.5625  1.5508  1.5449  1.5421  1.4648  1.4477  1.4431  1.4287  1.3992
[17 : 32]:	1.3950  1.3827  1.3806  1.3658  1.3511  1.3048  1.3002  1.2936  1.2935  1.2889  1.2888  1.2888  1.2858  1.2778  1.2746  1.2740
[33 : 48]:	1.2693  1.2647  1.2286  1.2239  1.2209  1.2127  1.2125  1.2095  1.2082  1.2015  1.1995  1.1771  1.1627  1.1570  1.1547  1.1533
[49 : 64]:	1.1506  1.1489  1.1427  1.1282  1.1168  1.1115  1.1089  1.1036  1.0931  1.0911  1.0801  1.0799  1.0790  1.0756  1.0724  1.0528
2024-04-29 06:43:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:43:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #129: GFLOPs: 1308.5769. Time: 47.3696 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #130: GFLOPs: 558.7414. Time: 110.9401 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #131: GFLOPs: 527.5680. Time: 117.4954 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #132: GFLOPs: 1750.7156. Time: 35.4066 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #133: GFLOPs: 1786.8637. Time: 34.6903 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #134: GFLOPs: 1157.9736. Time: 53.5304 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #135: GFLOPs: 1183.0339. Time: 52.3965 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #136: GFLOPs: 557.7837. Time: 111.1306 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #137: GFLOPs: 837.3043. Time: 74.0314 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #138: GFLOPs: 1209.2417. Time: 51.2609 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #139: GFLOPs: 1139.6084. Time: 54.3931 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #140: GFLOPs: 1198.8285. Time: 51.7062 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #141: GFLOPs: 2065.7342. Time: 30.0072 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #142: GFLOPs: 1759.8882. Time: 35.2220 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #143: GFLOPs: 1589.3052. Time: 39.0025 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #144: GFLOPs: 1783.7341. Time: 34.7512 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #145: GFLOPs: 554.8811. Time: 111.7119 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #146: GFLOPs: 560.5256. Time: 110.5870 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #147: GFLOPs: 543.1109. Time: 114.1329 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #148: GFLOPs: 1011.2359. Time: 61.2981 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #149: GFLOPs: 565.1946. Time: 109.6734 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #150: GFLOPs: 2065.9937. Time: 30.0034 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #151: GFLOPs: 1759.9702. Time: 35.2204 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #152: GFLOPs: 2076.0426. Time: 29.8582 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #153: GFLOPs: 2145.3725. Time: 28.8933 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #154: GFLOPs: 1761.6551. Time: 35.1867 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #155: GFLOPs: 1783.5254. Time: 34.7552 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #156: GFLOPs: 1595.6422. Time: 38.8476 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #157: GFLOPs: 1589.3162. Time: 39.0022 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #158: GFLOPs: 1629.5825. Time: 38.0385 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #159: GFLOPs: 1595.4026. Time: 38.8534 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #160: GFLOPs: 1390.2895. Time: 44.5855 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #161: GFLOPs: 1647.3872. Time: 37.6274 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #162: GFLOPs: 1432.7624. Time: 43.2638 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #163: GFLOPs: 1033.4244. Time: 59.9820 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #164: GFLOPs: 554.4783. Time: 111.7930 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #165: GFLOPs: 2129.7893. Time: 29.1047 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #166: GFLOPs: 560.3203. Time: 110.6275 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #167: GFLOPs: 564.6887. Time: 109.7717 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #168: GFLOPs: 542.7936. Time: 114.1996 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #169: GFLOPs: 555.3905. Time: 111.6094 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #170: GFLOPs: 544.3918. Time: 113.8643 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #171: GFLOPs: 1204.2985. Time: 51.4713 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #172: GFLOPs: 2434.2618. Time: 25.4643 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #173: GFLOPs: 1573.1437. Time: 39.4031 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #174: GFLOPs: 1732.9511. Time: 35.7695 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #175: GFLOPs: 1132.7784. Time: 54.7210 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #176: GFLOPs: 896.6687. Time: 69.1301 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #177: GFLOPs: 2442.0591. Time: 25.3830 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #178: GFLOPs: 973.5237. Time: 63.6726 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #179: GFLOPs: 1196.4906. Time: 51.8072 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #180: GFLOPs: 2266.2508. Time: 27.3521 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #181: GFLOPs: 1567.5239. Time: 39.5444 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #182: GFLOPs: 536.6130. Time: 115.5149 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #183: GFLOPs: 1135.4835. Time: 54.5907 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #184: GFLOPs: 473.9869. Time: 130.7775 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #185: GFLOPs: 1530.9225. Time: 40.4898 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #186: GFLOPs: 2450.5604. Time: 25.2950 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #187: GFLOPs: 799.0211. Time: 77.5784 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #188: GFLOPs: 1750.7184. Time: 35.4065 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #189: GFLOPs: 904.2108. Time: 68.5535 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #190: GFLOPs: 549.7273. Time: 112.7592 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #191: GFLOPs: 46.9922. Time: 1319.0872 us. Best GFLOPs: 2843.1081
2024-04-29 06:45:11 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #192: GFLOPs: 89.7407. Time: 690.7322 us. Best GFLOPs: 2843.1081
2024-04-29 07:34:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:34:26 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:34:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 390 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 07:34:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 790 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 07:34:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 1181 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 07:34:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 1571 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 07:34:33 [INFO] [evolutionary_search.cc:723] Sampled 69 candidate(s)
2024-04-29 07:34:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 07:34:42 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 07:34:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 07:34:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3644a38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaada428)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c02898)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x36bd1f8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x37652e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xaafaee8)]: 109 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x7c02d48)]: 0 failure(s)
2024-04-29 07:34:52 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2105  1.2094  1.2048  1.2025  1.1963  1.1809  1.1800  1.1698  1.1630  1.1542  1.1478  1.1469  1.1259  1.1189  1.1178  1.0908
[17 : 32]:	1.0899  1.0864  1.0786  1.0746  1.0574  1.0338  1.0327  1.0048  1.0038  0.9728  0.9702  0.9698  0.9648  0.9603  0.9577  0.9561
[33 : 48]:	0.9549  0.9539  0.9494  0.9422  0.9390  0.9249  0.9146  0.9103  0.9085  0.9058  0.9016  0.8956  0.8900  0.8900  0.8891  0.8850
[49 : 64]:	0.8838  0.8828  0.8815  0.8767  0.8765  0.8730  0.8723  0.8689  0.8668  0.8646  0.8584  0.8559  0.8555  0.8540  0.8534  0.8510
2024-04-29 07:34:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:34:52 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:121] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #193: Error in running:
LocalRunner: An exception occurred
Subprocess terminated
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(54), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 16, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(9) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(9) // T.int64(3) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) // T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(3) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(40) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(40))
                                        v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused % T.int64(9) // T.int64(3) * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(40) // T.int64(4))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(3) * T.int64(4) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(4))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(1600))
                                        T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(18)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(9) * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(280))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(40) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(280) // T.int64(7))
                                        v2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(7))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(8960))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(9) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(9) // T.int64(3) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) // T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(3) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(40) + rc_1 * T.int64(10) + rc_2)
                                v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(9) * T.int64(32) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(9) // T.int64(3) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) // T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(3) * T.int64(4) + nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(2) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[6, 1, 32, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 2, 2, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[3, 2, 2, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 4, 10])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 7, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 128, 4], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 128, 4], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=16)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #194: GFLOPs: 2875.4317. Time: 21.5574 us. Best GFLOPs: 2875.4317
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #195: GFLOPs: 2968.4015. Time: 20.8822 us. Best GFLOPs: 2968.4015
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #196: GFLOPs: 2751.2161. Time: 22.5307 us. Best GFLOPs: 2968.4015
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #197: GFLOPs: 2906.7867. Time: 21.3249 us. Best GFLOPs: 2968.4015
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #198: GFLOPs: 3138.9409. Time: 19.7477 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #199: GFLOPs: 2904.6263. Time: 21.3407 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #200: GFLOPs: 2590.3809. Time: 23.9296 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #201: GFLOPs: 2595.4844. Time: 23.8826 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #202: GFLOPs: 2475.5677. Time: 25.0394 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #203: GFLOPs: 2546.6994. Time: 24.3401 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #204: GFLOPs: 2464.3852. Time: 25.1531 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #205: GFLOPs: 2501.7384. Time: 24.7775 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #206: GFLOPs: 2428.5088. Time: 25.5246 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #207: GFLOPs: 1869.6320. Time: 33.1546 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #208: GFLOPs: 2556.0933. Time: 24.2506 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #209: GFLOPs: 1668.9450. Time: 37.1413 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #210: GFLOPs: 2550.4971. Time: 24.3038 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #211: GFLOPs: 1575.6454. Time: 39.3406 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #212: GFLOPs: 2615.2962. Time: 23.7016 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #213: GFLOPs: 1622.4125. Time: 38.2066 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #214: GFLOPs: 1575.9613. Time: 39.3327 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #215: GFLOPs: 1572.3007. Time: 39.4243 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #216: GFLOPs: 1519.4052. Time: 40.7968 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #217: GFLOPs: 831.9293. Time: 74.5097 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #218: GFLOPs: 2918.0482. Time: 21.2426 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #219: GFLOPs: 1309.2123. Time: 47.3467 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #220: GFLOPs: 1717.8928. Time: 36.0831 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #221: GFLOPs: 1604.6913. Time: 38.6285 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #222: GFLOPs: 1876.2641. Time: 33.0374 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #223: GFLOPs: 2924.5828. Time: 21.1951 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #224: GFLOPs: 1424.1034. Time: 43.5269 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #225: GFLOPs: 824.0226. Time: 75.2247 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #226: GFLOPs: 2842.3375. Time: 21.8084 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #227: GFLOPs: 963.3411. Time: 64.3457 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #228: GFLOPs: 2921.8782. Time: 21.2147 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #229: GFLOPs: 1381.3475. Time: 44.8742 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #230: GFLOPs: 2788.6148. Time: 22.2285 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #231: GFLOPs: 736.0609. Time: 84.2143 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #232: GFLOPs: 3020.3897. Time: 20.5228 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #233: GFLOPs: 1276.4728. Time: 48.5610 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #234: GFLOPs: 1491.6594. Time: 41.5556 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #235: GFLOPs: 2648.9001. Time: 23.4010 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #236: GFLOPs: 2794.7778. Time: 22.1795 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #237: GFLOPs: 1352.3479. Time: 45.8364 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #238: GFLOPs: 1190.9796. Time: 52.0469 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #239: GFLOPs: 1980.7257. Time: 31.2950 us. Best GFLOPs: 3138.9409
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #240: GFLOPs: 3306.8751. Time: 18.7448 us. Best GFLOPs: 3306.8751
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #241: GFLOPs: 1339.6539. Time: 46.2708 us. Best GFLOPs: 3306.8751
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #242: GFLOPs: 2890.7240. Time: 21.4434 us. Best GFLOPs: 3306.8751
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #243: GFLOPs: 2716.4842. Time: 22.8188 us. Best GFLOPs: 3306.8751
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #244: GFLOPs: 3451.5246. Time: 17.9593 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #245: GFLOPs: 1136.1828. Time: 54.5571 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #246: GFLOPs: 3307.8230. Time: 18.7395 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #247: GFLOPs: 2699.7951. Time: 22.9598 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #248: GFLOPs: 827.8740. Time: 74.8747 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #249: GFLOPs: 1515.1855. Time: 40.9104 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #250: GFLOPs: 3064.9670. Time: 20.2243 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #251: GFLOPs: 2609.5301. Time: 23.7540 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #252: GFLOPs: 2639.1549. Time: 23.4874 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #253: GFLOPs: 2895.7219. Time: 21.4063 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #254: GFLOPs: 47.0297. Time: 1318.0362 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #255: GFLOPs: 570.1125. Time: 108.7273 us. Best GFLOPs: 3451.5246
2024-04-29 07:37:29 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #256: GFLOPs: 887.6440. Time: 69.8330 us. Best GFLOPs: 3451.5246
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:160] Initializing Task #21: "fused_nn_conv2d_add_nn_relu_15"
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(160), T.int64(18), T.int64(12)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3], T.float32(0))
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(192), T.int64(12), T.int64(12), T.int64(160), T.int64(7), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(12), T.int64(12)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(192), T.int64(12), T.int64(12)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(36), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(10), T.int64(7), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(8))
                                    v2 = T.axis.spatial(T.int64(18), ry_0 + nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(8) // T.int64(2))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(2))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1536)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(7), ry_0)
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(4), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(48) + ff_3 * T.int64(12) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(16) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(4), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 2, 1, 4, 12])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 1, 1, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[6, 1, 1, 2, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[10, 1, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[7, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(36), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(70), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(8))
                                    v2 = T.axis.spatial(T.int64(18), rc_0_ry_0_rx_0_fused % T.int64(7) + nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(8) // T.int64(2))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(2))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1536)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(7), rc_0_ry_0_rx_0_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(4), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(48) + ff_3 * T.int64(12) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(16) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), rc_0_ry_0_rx_0_fused % T.int64(7) + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(4), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 2, 1, 4, 12])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 1, 1, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[6, 1, 1, 2, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[10, 1, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[7, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(192), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(192), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(36), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(70), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(128)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(16) + ax0_ax1_ax2_ax3_fused // T.int64(8))
                                    v2 = T.axis.spatial(T.int64(18), rc_0_ry_0_rx_0_fused % T.int64(7) + nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(8) // T.int64(2))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax0_ax1_ax2_ax3_fused % T.int64(2))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1536)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + ax0_ax1_ax2_ax3_fused // T.int64(16))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    v2 = T.axis.spatial(T.int64(7), rc_0_ry_0_rx_0_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(4), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(48) + ff_3 * T.int64(12) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(16) + rc_1 * T.int64(16) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), rc_0_ry_0_rx_0_fused % T.int64(7) + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(48), T.int64(4), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(192), nn_0_ff_0_yy_0_xx_0_fused // T.int64(18) * T.int64(96) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(48) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(18) // T.int64(6) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(6) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 2, 1, 4, 12])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 1, 1, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[6, 1, 1, 2, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[10, 1, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[7, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-05-01 15:40:37 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 15:40:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 15:40:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 389 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 15:40:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 788 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 15:40:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 1181 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 15:40:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 1578 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 15:40:43 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-05-01 15:40:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 119 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 15:40:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 15:40:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 15:40:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 15:40:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9980  0.9976  0.9972  0.9965  0.9961  0.9952  0.9949  0.9938  0.9938  0.9936  0.9931  0.9928  0.9908  0.9906  0.9895  0.9888
[17 : 32]:	0.9887  0.9880  0.9876  0.9873  0.9871  0.9863  0.9855  0.9844  0.9844  0.9833  0.9832  0.9826  0.9810  0.9808  0.9801  0.9795
[33 : 48]:	0.9795  0.9790  0.9789  0.9787  0.9766  0.9755  0.9753  0.9753  0.9742  0.9732  0.9726  0.9700  0.9695  0.9695  0.9685  0.9675
[49 : 64]:	0.9670  0.9665  0.9656  0.9655  0.9646  0.9643  0.9643  0.9639  0.9638  0.9628  0.9608  0.9600  0.9588  0.9575  0.9574  0.9565
2024-05-01 15:40:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 15:40:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #1: GFLOPs: 1142.7953. Time: 54.2414 us. Best GFLOPs: 1142.7953
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #2: GFLOPs: 348.8958. Time: 177.6657 us. Best GFLOPs: 1142.7953
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #3: GFLOPs: 139.9550. Time: 442.9054 us. Best GFLOPs: 1142.7953
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #4: GFLOPs: 746.2041. Time: 83.0695 us. Best GFLOPs: 1142.7953
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #5: GFLOPs: 168.1210. Time: 368.7036 us. Best GFLOPs: 1142.7953
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #6: GFLOPs: 233.6229. Time: 265.3285 us. Best GFLOPs: 1142.7953
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #7: GFLOPs: 37.3149. Time: 1661.1798 us. Best GFLOPs: 1142.7953
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #8: GFLOPs: 539.6216. Time: 114.8709 us. Best GFLOPs: 1142.7953
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #9: GFLOPs: 1277.9084. Time: 48.5065 us. Best GFLOPs: 1277.9084
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #10: GFLOPs: 1545.8919. Time: 40.0978 us. Best GFLOPs: 1545.8919
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #11: GFLOPs: 2354.8811. Time: 26.3227 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #12: GFLOPs: 669.2406. Time: 92.6226 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #13: GFLOPs: 593.7578. Time: 104.3975 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #14: GFLOPs: 350.9818. Time: 176.6097 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #15: GFLOPs: 1620.5341. Time: 38.2509 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #16: GFLOPs: 1984.6998. Time: 31.2323 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #17: GFLOPs: 1404.2701. Time: 44.1417 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #18: GFLOPs: 643.1065. Time: 96.3865 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #19: GFLOPs: 414.8637. Time: 149.4149 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #20: GFLOPs: 209.3744. Time: 296.0574 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #21: GFLOPs: 1571.6007. Time: 39.4418 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #22: GFLOPs: 1571.9337. Time: 39.4335 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #23: GFLOPs: 341.6607. Time: 181.4280 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #24: GFLOPs: 735.1928. Time: 84.3137 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #25: GFLOPs: 175.6238. Time: 352.9522 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #26: GFLOPs: 1878.0189. Time: 33.0065 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #27: GFLOPs: 698.6543. Time: 88.7232 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #28: GFLOPs: 540.9799. Time: 114.5825 us. Best GFLOPs: 2354.8811
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #29: GFLOPs: 2957.6600. Time: 20.9581 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #30: GFLOPs: 404.2285. Time: 153.3460 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #31: GFLOPs: 194.8511. Time: 318.1240 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #32: GFLOPs: 521.9358. Time: 118.7633 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #33: GFLOPs: 526.1658. Time: 117.8085 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #34: GFLOPs: 407.5422. Time: 152.0991 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #35: GFLOPs: 2782.8380. Time: 22.2747 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #36: GFLOPs: 2445.4373. Time: 25.3479 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #37: GFLOPs: 40.5177. Time: 1529.8715 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #38: GFLOPs: 1879.9872. Time: 32.9719 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #39: GFLOPs: 2190.0921. Time: 28.3033 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #40: GFLOPs: 347.0512. Time: 178.6100 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #41: GFLOPs: 313.0722. Time: 197.9953 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #42: GFLOPs: 2046.0004. Time: 30.2966 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #43: GFLOPs: 223.7519. Time: 277.0337 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #44: GFLOPs: 1967.1749. Time: 31.5106 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #45: GFLOPs: 2229.1983. Time: 27.8068 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #46: GFLOPs: 837.9341. Time: 73.9758 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #47: GFLOPs: 806.1132. Time: 76.8959 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #48: GFLOPs: 217.3011. Time: 285.2577 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #49: GFLOPs: 424.4532. Time: 146.0392 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #50: GFLOPs: 1768.0283. Time: 35.0599 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #51: GFLOPs: 2354.2095. Time: 26.3302 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #52: GFLOPs: 310.5847. Time: 199.5810 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #53: GFLOPs: 462.0827. Time: 134.1466 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #54: GFLOPs: 532.2257. Time: 116.4672 us. Best GFLOPs: 2957.6600
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #55: GFLOPs: 3003.8915. Time: 20.6355 us. Best GFLOPs: 3003.8915
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #56: GFLOPs: 83.9130. Time: 738.7032 us. Best GFLOPs: 3003.8915
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #57: GFLOPs: 3052.7519. Time: 20.3052 us. Best GFLOPs: 3052.7519
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #58: GFLOPs: 59.2255. Time: 1046.6240 us. Best GFLOPs: 3052.7519
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #59: GFLOPs: 215.3284. Time: 287.8711 us. Best GFLOPs: 3052.7519
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #60: GFLOPs: 878.3751. Time: 70.5699 us. Best GFLOPs: 3052.7519
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #61: GFLOPs: 970.1498. Time: 63.8941 us. Best GFLOPs: 3052.7519
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #62: GFLOPs: 818.6252. Time: 75.7206 us. Best GFLOPs: 3052.7519
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #63: GFLOPs: 131.1725. Time: 472.5596 us. Best GFLOPs: 3052.7519
2024-05-01 16:37:19 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #64: GFLOPs: 33.7165. Time: 1838.4710 us. Best GFLOPs: 3052.7519
2024-05-01 17:27:06 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 17:27:07 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 17:27:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 385 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 17:27:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 770 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 17:27:09 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-05-01 17:27:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 107 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 17:27:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 17:27:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 17:27:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 109 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 17:27:28 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2146  1.1587  1.1348  1.1172  1.1126  1.0704  1.0704  1.0695  1.0509  1.0493  1.0472  1.0440  1.0325  1.0293  1.0269  1.0254
[17 : 32]:	1.0220  1.0213  1.0211  1.0084  1.0081  1.0078  1.0070  1.0029  0.9993  0.9993  0.9992  0.9991  0.9902  0.9887  0.9880  0.9861
[33 : 48]:	0.9854  0.9832  0.9776  0.9758  0.9707  0.9682  0.9663  0.9652  0.9604  0.9596  0.9587  0.9556  0.9525  0.9499  0.9479  0.9468
[49 : 64]:	0.9462  0.9451  0.9443  0.9421  0.9385  0.9378  0.9362  0.9354  0.9298  0.9274  0.9268  0.9231  0.9215  0.9183  0.9173  0.9158
2024-05-01 17:27:28 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 17:27:28 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #65: GFLOPs: 1051.8569. Time: 58.9308 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #66: GFLOPs: 1413.8196. Time: 43.8435 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #67: GFLOPs: 1296.8673. Time: 47.7973 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #68: GFLOPs: 1662.6626. Time: 37.2817 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #69: GFLOPs: 655.2839. Time: 94.5954 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #70: GFLOPs: 415.8571. Time: 149.0580 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #71: GFLOPs: 415.8921. Time: 149.0454 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #72: GFLOPs: 748.2595. Time: 82.8413 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #73: GFLOPs: 1869.5937. Time: 33.1552 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #74: GFLOPs: 634.9330. Time: 97.6273 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #75: GFLOPs: 1507.5655. Time: 41.1172 us. Best GFLOPs: 3052.7519
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #76: GFLOPs: 3266.2626. Time: 18.9779 us. Best GFLOPs: 3266.2626
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #77: GFLOPs: 1046.4361. Time: 59.2361 us. Best GFLOPs: 3266.2626
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #78: GFLOPs: 1856.6481. Time: 33.3864 us. Best GFLOPs: 3266.2626
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #79: GFLOPs: 1696.2176. Time: 36.5441 us. Best GFLOPs: 3266.2626
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #80: GFLOPs: 529.0340. Time: 117.1698 us. Best GFLOPs: 3266.2626
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #81: GFLOPs: 3405.5662. Time: 18.2016 us. Best GFLOPs: 3405.5662
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #82: GFLOPs: 653.8873. Time: 94.7974 us. Best GFLOPs: 3405.5662
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #83: GFLOPs: 3265.0930. Time: 18.9847 us. Best GFLOPs: 3405.5662
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #84: GFLOPs: 654.0998. Time: 94.7666 us. Best GFLOPs: 3405.5662
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #85: GFLOPs: 3253.6525. Time: 19.0515 us. Best GFLOPs: 3405.5662
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #86: GFLOPs: 405.9921. Time: 152.6799 us. Best GFLOPs: 3405.5662
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #87: GFLOPs: 757.2169. Time: 81.8614 us. Best GFLOPs: 3405.5662
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #88: GFLOPs: 1015.7041. Time: 61.0284 us. Best GFLOPs: 3405.5662
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #89: GFLOPs: 3474.5307. Time: 17.8403 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #90: GFLOPs: 3474.1972. Time: 17.8421 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #91: GFLOPs: 1032.4576. Time: 60.0381 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #92: GFLOPs: 3409.6730. Time: 18.1797 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #93: GFLOPs: 3271.7724. Time: 18.9459 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #94: GFLOPs: 3259.6945. Time: 19.0161 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #95: GFLOPs: 2391.3618. Time: 25.9211 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #96: GFLOPs: 2803.0396. Time: 22.1141 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #97: GFLOPs: 3409.5347. Time: 18.1804 us. Best GFLOPs: 3474.5307
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #98: GFLOPs: 3738.8579. Time: 16.5791 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #99: GFLOPs: 2948.8633. Time: 21.0206 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #100: GFLOPs: 3265.5392. Time: 18.9821 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #101: GFLOPs: 3396.6974. Time: 18.2491 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #102: GFLOPs: 3409.6731. Time: 18.1797 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #103: GFLOPs: 3232.0738. Time: 19.1787 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #104: GFLOPs: 631.7458. Time: 98.1199 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #105: GFLOPs: 3265.1369. Time: 18.9844 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #106: GFLOPs: 2911.3720. Time: 21.2913 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #107: GFLOPs: 3270.5864. Time: 18.9528 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #108: GFLOPs: 2724.8789. Time: 22.7485 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #109: GFLOPs: 3383.6328. Time: 18.3196 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #110: GFLOPs: 3235.5559. Time: 19.1580 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #111: GFLOPs: 2625.1456. Time: 23.6127 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #112: GFLOPs: 3013.3765. Time: 20.5706 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #113: GFLOPs: 2389.9352. Time: 25.9366 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #114: GFLOPs: 2642.8659. Time: 23.4544 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #115: GFLOPs: 2761.2952. Time: 22.4485 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #116: GFLOPs: 3306.9925. Time: 18.7442 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #117: GFLOPs: 3071.2643. Time: 20.1828 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #118: GFLOPs: 3454.4088. Time: 17.9443 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #119: GFLOPs: 3017.6177. Time: 20.5416 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #120: GFLOPs: 3342.0444. Time: 18.5476 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #121: GFLOPs: 2625.5169. Time: 23.6094 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #122: GFLOPs: 2643.1440. Time: 23.4519 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #123: GFLOPs: 3235.0700. Time: 19.1609 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #124: GFLOPs: 2392.5381. Time: 25.9084 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #125: GFLOPs: 939.4530. Time: 65.9818 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #126: GFLOPs: 72.2083. Time: 858.4446 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #127: GFLOPs: 352.2221. Time: 175.9878 us. Best GFLOPs: 3738.8579
2024-05-01 17:28:46 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #128: GFLOPs: 637.0273. Time: 97.3064 us. Best GFLOPs: 3738.8579
2024-05-01 19:10:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:10:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:10:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 19:10:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 791 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 19:10:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 1187 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 19:10:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 1585 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 19:10:16 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-05-01 19:10:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 19:10:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 19:10:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 19:10:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5f625d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8716438)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb23f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x35e5bd8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x6d53118)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x8731828)]: 96 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb23f928)]: 0 failure(s)
2024-05-01 19:10:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4219  1.3860  1.2883  1.2549  1.2201  1.1953  1.1878  1.1553  1.1434  1.1053  1.0488  1.0472  0.9831  0.9795  0.9543  0.9482
[17 : 32]:	0.9462  0.9434  0.9412  0.9406  0.9386  0.9365  0.9296  0.9257  0.9257  0.9220  0.9202  0.9176  0.9171  0.9171  0.9171  0.9167
[33 : 48]:	0.9148  0.9093  0.9063  0.9043  0.9001  0.9001  0.8980  0.8976  0.8974  0.8957  0.8929  0.8919  0.8906  0.8895  0.8893  0.8885
[49 : 64]:	0.8866  0.8855  0.8842  0.8829  0.8813  0.8810  0.8797  0.8782  0.8767  0.8765  0.8759  0.8756  0.8746  0.8737  0.8730  0.8723
2024-05-01 19:10:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:10:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #129: GFLOPs: 1876.3114. Time: 33.0365 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #130: GFLOPs: 1963.8786. Time: 31.5635 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #131: GFLOPs: 738.7823. Time: 83.9040 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #132: GFLOPs: 831.8026. Time: 74.5211 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #133: GFLOPs: 1194.2900. Time: 51.9027 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #134: GFLOPs: 762.2556. Time: 81.3203 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #135: GFLOPs: 1134.7303. Time: 54.6269 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #136: GFLOPs: 740.3101. Time: 83.7309 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #137: GFLOPs: 1469.1947. Time: 42.1910 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #138: GFLOPs: 425.7960. Time: 145.5787 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #139: GFLOPs: 635.9164. Time: 97.4764 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #140: GFLOPs: 1681.8173. Time: 36.8570 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #141: GFLOPs: 636.0487. Time: 97.4561 us. Best GFLOPs: 3738.8579
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #142: GFLOPs: 3745.5406. Time: 16.5495 us. Best GFLOPs: 3745.5406
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #143: GFLOPs: 3915.7446. Time: 15.8301 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #144: GFLOPs: 3546.4243. Time: 17.4787 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #145: GFLOPs: 3608.9204. Time: 17.1760 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #146: GFLOPs: 2757.4926. Time: 22.4794 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #147: GFLOPs: 2483.9927. Time: 24.9545 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #148: GFLOPs: 3450.9872. Time: 17.9621 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #149: GFLOPs: 2875.2699. Time: 21.5586 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #150: GFLOPs: 3735.2857. Time: 16.5949 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #151: GFLOPs: 3445.2129. Time: 17.9922 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #152: GFLOPs: 3471.9881. Time: 17.8534 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #153: GFLOPs: 3471.3489. Time: 17.8567 us. Best GFLOPs: 3915.7446
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #154: GFLOPs: 4003.9548. Time: 15.4814 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #155: GFLOPs: 3552.9671. Time: 17.4465 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #156: GFLOPs: 3444.5645. Time: 17.9955 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #157: GFLOPs: 2268.3319. Time: 27.3270 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #158: GFLOPs: 3552.7773. Time: 17.4474 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #159: GFLOPs: 3552.7878. Time: 17.4474 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #160: GFLOPs: 3243.7412. Time: 19.1097 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #161: GFLOPs: 2972.6117. Time: 20.8526 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #162: GFLOPs: 3192.2312. Time: 19.4180 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #163: GFLOPs: 3504.2856. Time: 17.6889 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #164: GFLOPs: 3684.2039. Time: 16.8250 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #165: GFLOPs: 2840.7532. Time: 21.8206 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #166: GFLOPs: 3036.5594. Time: 20.4135 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #167: GFLOPs: 3281.6569. Time: 18.8889 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #168: GFLOPs: 1674.8740. Time: 37.0098 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #169: GFLOPs: 1376.2446. Time: 45.0406 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #170: GFLOPs: 3393.7206. Time: 18.2652 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #171: GFLOPs: 2917.0080. Time: 21.2501 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #172: GFLOPs: 1290.5537. Time: 48.0312 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #173: GFLOPs: 3300.0165. Time: 18.7838 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #174: GFLOPs: 3473.7063. Time: 17.8446 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #175: GFLOPs: 3272.9142. Time: 18.9393 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #176: GFLOPs: 3369.0221. Time: 18.3991 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #177: GFLOPs: 4002.8163. Time: 15.4858 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #178: GFLOPs: 3482.2686. Time: 17.8007 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #179: GFLOPs: 3402.0229. Time: 18.2206 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #180: GFLOPs: 3089.3874. Time: 20.0644 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #181: GFLOPs: 3271.6238. Time: 18.9468 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #182: GFLOPs: 2981.8701. Time: 20.7879 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #183: GFLOPs: 3233.2820. Time: 19.1715 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #184: GFLOPs: 2485.9932. Time: 24.9344 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #185: GFLOPs: 2912.7764. Time: 21.2810 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #186: GFLOPs: 3262.5204. Time: 18.9997 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #187: GFLOPs: 3268.1235. Time: 18.9671 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #188: GFLOPs: 3258.2826. Time: 19.0244 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #189: GFLOPs: 3296.8558. Time: 18.8018 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #190: GFLOPs: 886.0149. Time: 69.9614 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #191: GFLOPs: 510.9319. Time: 121.3211 us. Best GFLOPs: 4003.9548
2024-05-01 19:11:48 [INFO] [task_scheduler.cc:131] [Task #21: fused_nn_conv2d_add_nn_relu_15] Trial #192: GFLOPs: 46.6889. Time: 1327.6564 us. Best GFLOPs: 4003.9548
