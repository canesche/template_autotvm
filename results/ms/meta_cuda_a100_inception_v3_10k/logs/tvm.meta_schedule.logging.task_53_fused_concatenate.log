2024-04-29 01:54:30 [INFO] [task_scheduler.cc:160] Initializing Task #53: "fused_concatenate"
2024-04-29 01:54:30 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(25), T.int64(25)), "float32"), p1: T.Buffer((T.int64(1), T.int64(64), T.int64(25), T.int64(25)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(25), T.int64(25)), "float32"), p3: T.Buffer((T.int64(1), T.int64(32), T.int64(25), T.int64(25)), "float32"), T_concat: T.Buffer((T.int64(1), T.int64(256), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(25), T.int64(25)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p3[v_ax0, v_ax1 - T.int64(224), v_ax2, v_ax3], p2[v_ax0, v_ax1 - T.int64(128), v_ax2, v_ax3], p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(224) <= v_ax1, p3[v_ax0, v_ax1 - T.int64(224), v_ax2, v_ax3], T.if_then_else(T.int64(128) <= v_ax1, p2[v_ax0, v_ax1 - T.int64(128), v_ax2, v_ax3], T.if_then_else(T.int64(64) <= v_ax1, p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])))
2024-04-29 01:54:30 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-29 01:54:30 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(25), T.int64(25)), "float32"), p1: T.Buffer((T.int64(1), T.int64(64), T.int64(25), T.int64(25)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(25), T.int64(25)), "float32"), p3: T.Buffer((T.int64(1), T.int64(32), T.int64(25), T.int64(25)), "float32"), T_concat: T.Buffer((T.int64(1), T.int64(256), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(313), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                with T.block("T_concat"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(256), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) // T.int64(625))
                    v_ax2 = T.axis.spatial(T.int64(25), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) % T.int64(625) // T.int64(25))
                    v_ax3 = T.axis.spatial(T.int64(25), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) % T.int64(25))
                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 < T.int64(160000))
                    T.reads(p3[v_ax0, v_ax1 - T.int64(224), v_ax2, v_ax3], p2[v_ax0, v_ax1 - T.int64(128), v_ax2, v_ax3], p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])
                    T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(224) <= v_ax1, p3[v_ax0, v_ax1 - T.int64(224), v_ax2, v_ax3], T.if_then_else(T.int64(128) <= v_ax1, p2[v_ax0, v_ax1 - T.int64(128), v_ax2, v_ax3], T.if_then_else(T.int64(64) <= v_ax1, p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])))
b0 = sch.get_block(name="T_concat", func_name="main")
l1, l2, l3, l4 = sch.get_loops(block=b0)
l5 = sch.fuse(l1, l2, l3, l4, preserve_unit_iters=True)
v6 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l7, l8 = sch.split(loop=l5, factors=[None, v6], preserve_unit_iters=True)
sch.bind(loop=l7, thread_axis="blockIdx.x")
sch.bind(loop=l8, thread_axis="threadIdx.x")
2024-04-29 03:36:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:36:34 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 03:36:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x475a158)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c42728)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c41fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x7c32388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xa5bcba8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac6cb58)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac70458)]: 0 failure(s)
2024-04-29 03:36:36 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 03:36:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x475a158)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c42728)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c41fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x7c32388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xa5bcba8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac6cb58)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac70458)]: 0 failure(s)
2024-04-29 03:36:36 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x475a158)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c42728)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c41fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x7c32388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xa5bcba8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac6cb58)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac70458)]: 0 failure(s)
2024-04-29 03:36:36 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x475a158)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c42728)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c41fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x7c32388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xa5bcba8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac6cb58)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac70458)]: 0 failure(s)
2024-04-29 03:36:37 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x475a158)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c42728)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c41fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x7c32388)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xa5bcba8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac6cb58)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac70458)]: 0 failure(s)
2024-04-29 03:36:37 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.6634  0.6535  0.6042  0.4524  0.3742  0.2247
2024-04-29 03:36:37 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-04-29 03:36:37 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-04-29 04:03:18 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #1: GFLOPs: 0.0003. Time: 3.6350 us. Best GFLOPs: 0.0003
2024-04-29 04:03:18 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #2: GFLOPs: 0.0003. Time: 3.2213 us. Best GFLOPs: 0.0003
2024-04-29 04:03:18 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #3: GFLOPs: 0.0002. Time: 4.4816 us. Best GFLOPs: 0.0003
2024-04-29 04:03:18 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #4: GFLOPs: 0.0003. Time: 3.4768 us. Best GFLOPs: 0.0003
2024-04-29 04:03:18 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #5: GFLOPs: 0.0003. Time: 3.2227 us. Best GFLOPs: 0.0003
2024-04-29 04:03:18 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #6: GFLOPs: 0.0002. Time: 6.5177 us. Best GFLOPs: 0.0003
2024-05-01 15:10:08 [INFO] [task_scheduler.cc:160] Initializing Task #53: "fused_concatenate"
2024-05-01 15:10:08 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(25), T.int64(25)), "float32"), p1: T.Buffer((T.int64(1), T.int64(64), T.int64(25), T.int64(25)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(25), T.int64(25)), "float32"), p3: T.Buffer((T.int64(1), T.int64(32), T.int64(25), T.int64(25)), "float32"), T_concat: T.Buffer((T.int64(1), T.int64(256), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(25), T.int64(25)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p3[v_ax0, v_ax1 - T.int64(224), v_ax2, v_ax3], p2[v_ax0, v_ax1 - T.int64(128), v_ax2, v_ax3], p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(224) <= v_ax1, p3[v_ax0, v_ax1 - T.int64(224), v_ax2, v_ax3], T.if_then_else(T.int64(128) <= v_ax1, p2[v_ax0, v_ax1 - T.int64(128), v_ax2, v_ax3], T.if_then_else(T.int64(64) <= v_ax1, p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])))
2024-05-01 15:10:08 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-05-01 15:10:08 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(25), T.int64(25)), "float32"), p1: T.Buffer((T.int64(1), T.int64(64), T.int64(25), T.int64(25)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(25), T.int64(25)), "float32"), p3: T.Buffer((T.int64(1), T.int64(32), T.int64(25), T.int64(25)), "float32"), T_concat: T.Buffer((T.int64(1), T.int64(256), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(1250), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                with T.block("T_concat"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(256), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) // T.int64(625))
                    v_ax2 = T.axis.spatial(T.int64(25), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(625) // T.int64(25))
                    v_ax3 = T.axis.spatial(T.int64(25), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(25))
                    T.reads(p3[v_ax0, v_ax1 - T.int64(224), v_ax2, v_ax3], p2[v_ax0, v_ax1 - T.int64(128), v_ax2, v_ax3], p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])
                    T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(224) <= v_ax1, p3[v_ax0, v_ax1 - T.int64(224), v_ax2, v_ax3], T.if_then_else(T.int64(128) <= v_ax1, p2[v_ax0, v_ax1 - T.int64(128), v_ax2, v_ax3], T.if_then_else(T.int64(64) <= v_ax1, p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])))
b0 = sch.get_block(name="T_concat", func_name="main")
l1, l2, l3, l4 = sch.get_loops(block=b0)
l5 = sch.fuse(l1, l2, l3, l4, preserve_unit_iters=True)
v6 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l7, l8 = sch.split(loop=l5, factors=[None, v6], preserve_unit_iters=True)
sch.bind(loop=l7, thread_axis="blockIdx.x")
sch.bind(loop=l8, thread_axis="threadIdx.x")
2024-05-01 16:23:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 16:23:04 [INFO] [evolutionary_search.cc:715] Picked top 6 candidate(s) from database
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x838d818)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x35879e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3df79c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3547718)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb140bf8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac55778)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x871eb18)]: 0 failure(s)
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:723] Sampled 506 candidate(s)
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x838d818)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x35879e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3df79c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3547718)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb140bf8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac55778)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x871eb18)]: 0 failure(s)
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x838d818)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x35879e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3df79c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3547718)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb140bf8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac55778)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x871eb18)]: 0 failure(s)
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x838d818)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x35879e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3df79c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3547718)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb140bf8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac55778)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x871eb18)]: 0 failure(s)
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x838d818)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x35879e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3df79c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3547718)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0xb140bf8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac55778)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x871eb18)]: 0 failure(s)
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.4165  0.3449  0.2228  0.0699  0.0451  0.0350
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-05-01 16:23:05 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-05-01 16:38:28 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #1: GFLOPs: 0.0003. Time: 3.0951 us. Best GFLOPs: 0.0003
2024-05-01 16:38:28 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #2: GFLOPs: 0.0002. Time: 6.3363 us. Best GFLOPs: 0.0003
2024-05-01 16:38:28 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #3: GFLOPs: 0.0002. Time: 4.4425 us. Best GFLOPs: 0.0003
2024-05-01 16:38:28 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #4: GFLOPs: 0.0003. Time: 2.9153 us. Best GFLOPs: 0.0003
2024-05-01 16:38:28 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #5: GFLOPs: 0.0003. Time: 3.5187 us. Best GFLOPs: 0.0003
2024-05-01 16:38:28 [INFO] [task_scheduler.cc:131] [Task #53: fused_concatenate] Trial #6: GFLOPs: 0.0003. Time: 3.1730 us. Best GFLOPs: 0.0003
