2024-04-29 01:54:18 [INFO] [task_scheduler.cc:160] Initializing Task #17: "fused_nn_conv2d_add_nn_relu_11"
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(160), T.int64(18), T.int64(12)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3], T.float32(0))
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12), T.int64(160), T.int64(7), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(10), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(6), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(8), T.int64(7), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2880)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(20) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(18), ry_0 + ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1600)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(20))
                                    v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(20) + ax0_ax1_ax2_ax3_fused % T.int64(20))
                                    v2 = T.axis.spatial(T.int64(7), ry_0)
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) * T.int64(8) + ff_3 * T.int64(8) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(20) + rc_1 * T.int64(20) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(12)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 5, 2, 1, 8])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 1, 12, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 1, 20])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[7, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(10), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(6), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(56), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2880)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(20) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(18), rc_0_ry_0_rx_0_fused % T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1600)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(20))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(20) + ax0_ax1_ax2_ax3_fused % T.int64(20))
                                    v2 = T.axis.spatial(T.int64(7), rc_0_ry_0_rx_0_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) * T.int64(8) + ff_3 * T.int64(8) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(20) + rc_1 * T.int64(20) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), rc_0_ry_0_rx_0_fused % T.int64(7) + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(12)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 5, 2, 1, 8])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 1, 12, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 1, 20])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[7, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 01:54:18 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(10), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(6), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(56), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(2880)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(20) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(18), rc_0_ry_0_rx_0_fused % T.int64(7) + ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(1600)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(20))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(20) + ax0_ax1_ax2_ax3_fused % T.int64(20))
                                    v2 = T.axis.spatial(T.int64(7), rc_0_ry_0_rx_0_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) * T.int64(8) + ff_3 * T.int64(8) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) * T.int64(2) + yy_3 * T.int64(2) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0_ry_0_rx_0_fused // T.int64(7) * T.int64(20) + rc_1 * T.int64(20) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), rc_0_ry_0_rx_0_fused % T.int64(7) + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(12)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused * T.int64(80) + nn_1_ff_1_yy_1_xx_1_fused // T.int64(2) * T.int64(16) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) * T.int64(2) + ax2)
                                v3 = T.axis.spatial(T.int64(12), ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[2, 5, 2, 1, 8])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 2, 3, 1, 2])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 1, 12, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[8, 1, 20])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[7, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 02:24:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:24:45 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:24:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 492 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 02:24:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 980 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 02:24:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 1473 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 02:24:53 [INFO] [evolutionary_search.cc:723] Sampled 63 candidate(s)
2024-04-29 02:24:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 02:24:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 89 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 02:25:03 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 106 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 02:25:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 02:25:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9986  0.9984  0.9980  0.9962  0.9961  0.9942  0.9932  0.9930  0.9927  0.9927  0.9926  0.9917  0.9907  0.9894  0.9888
[17 : 32]:	0.9872  0.9867  0.9867  0.9857  0.9855  0.9852  0.9850  0.9841  0.9828  0.9794  0.9794  0.9786  0.9784  0.9771  0.9771  0.9762
[33 : 48]:	0.9758  0.9755  0.9755  0.9749  0.9749  0.9749  0.9735  0.9731  0.9724  0.9722  0.9710  0.9706  0.9694  0.9693  0.9692  0.9686
[49 : 64]:	0.9682  0.9682  0.9678  0.9676  0.9666  0.9663  0.9658  0.9642  0.9641  0.9639  0.9638  0.9630  0.9617  0.9609  0.9582  0.9570
2024-04-29 02:25:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:25:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #1: GFLOPs: 162.8799. Time: 317.1397 us. Best GFLOPs: 162.8799
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #2: GFLOPs: 258.5742. Time: 199.7712 us. Best GFLOPs: 258.5742
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #3: GFLOPs: 148.0672. Time: 348.8664 us. Best GFLOPs: 258.5742
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #4: GFLOPs: 551.2824. Time: 93.7009 us. Best GFLOPs: 551.2824
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #5: GFLOPs: 270.3055. Time: 191.1011 us. Best GFLOPs: 551.2824
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #6: GFLOPs: 128.3670. Time: 402.4064 us. Best GFLOPs: 551.2824
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #7: GFLOPs: 15.0578. Time: 3430.5023 us. Best GFLOPs: 551.2824
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #8: GFLOPs: 154.0896. Time: 335.2315 us. Best GFLOPs: 551.2824
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #9: GFLOPs: 130.7474. Time: 395.0799 us. Best GFLOPs: 551.2824
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #10: GFLOPs: 833.7961. Time: 61.9524 us. Best GFLOPs: 833.7961
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #11: GFLOPs: 36.0852. Time: 1431.4935 us. Best GFLOPs: 833.7961
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #12: GFLOPs: 621.0048. Time: 83.1808 us. Best GFLOPs: 833.7961
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #13: GFLOPs: 719.3732. Time: 71.8065 us. Best GFLOPs: 833.7961
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #14: GFLOPs: 1287.1380. Time: 40.1322 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #15: GFLOPs: 124.7095. Time: 414.2080 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #16: GFLOPs: 306.6995. Time: 168.4244 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #17: GFLOPs: 469.7118. Time: 109.9731 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #18: GFLOPs: 116.6692. Time: 442.7534 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #19: GFLOPs: 384.3203. Time: 134.4079 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #20: GFLOPs: 590.2290. Time: 87.5180 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #21: GFLOPs: 149.4896. Time: 345.5470 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #22: GFLOPs: 104.7330. Time: 493.2131 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #23: GFLOPs: 1079.6599. Time: 47.8444 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #24: GFLOPs: 241.6978. Time: 213.7201 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #25: GFLOPs: 257.4074. Time: 200.6767 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #26: GFLOPs: 266.5621. Time: 193.7848 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #27: GFLOPs: 391.6934. Time: 131.8779 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #28: GFLOPs: 857.1845. Time: 60.2620 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #29: GFLOPs: 195.5559. Time: 264.1479 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #30: GFLOPs: 190.7956. Time: 270.7383 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #31: GFLOPs: 89.6597. Time: 576.1303 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #32: GFLOPs: 702.7419. Time: 73.5059 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #33: GFLOPs: 77.5466. Time: 666.1247 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #34: GFLOPs: 394.0887. Time: 131.0763 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #35: GFLOPs: 19.2577. Time: 2682.3411 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #36: GFLOPs: 53.6913. Time: 962.0874 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #37: GFLOPs: 264.1474. Time: 195.5563 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #38: GFLOPs: 396.4198. Time: 130.3055 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #39: GFLOPs: 246.4284. Time: 209.6174 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #40: GFLOPs: 57.6467. Time: 896.0731 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #41: GFLOPs: 17.9790. Time: 2873.1099 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #42: GFLOPs: 637.7694. Time: 80.9943 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #43: GFLOPs: 145.4295. Time: 355.1940 us. Best GFLOPs: 1287.1380
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #44: GFLOPs: 1564.0301. Time: 33.0273 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #45: GFLOPs: 184.3108. Time: 280.2639 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #46: GFLOPs: 113.0779. Time: 456.8148 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #47: GFLOPs: 97.2162. Time: 531.3482 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #48: GFLOPs: 1168.6237. Time: 44.2021 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #49: GFLOPs: 128.7768. Time: 401.1257 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #50: GFLOPs: 397.8840. Time: 129.8260 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #51: GFLOPs: 1484.9203. Time: 34.7868 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #52: GFLOPs: 697.3094. Time: 74.0786 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #53: GFLOPs: 219.4390. Time: 235.3988 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #54: GFLOPs: 36.1465. Time: 1429.0652 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #55: GFLOPs: 155.9885. Time: 331.1506 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #56: GFLOPs: 357.1135. Time: 144.6478 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #57: GFLOPs: 51.8392. Time: 996.4601 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #58: GFLOPs: 631.7346. Time: 81.7680 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #59: GFLOPs: 73.7778. Time: 700.1522 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #60: GFLOPs: 55.1210. Time: 937.1323 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #61: GFLOPs: 59.2241. Time: 872.2076 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #62: GFLOPs: 1070.4537. Time: 48.2559 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #63: GFLOPs: 259.6676. Time: 198.9300 us. Best GFLOPs: 1564.0301
2024-04-29 04:01:09 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #64: GFLOPs: 203.2366. Time: 254.1653 us. Best GFLOPs: 1564.0301
2024-04-29 04:23:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:23:50 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 04:23:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 424 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 04:23:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 847 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 04:23:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 1276 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 04:23:56 [INFO] [evolutionary_search.cc:723] Sampled 68 candidate(s)
2024-04-29 04:24:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 04:24:05 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 04:24:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 56 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 04:24:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 64 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 04:24:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0833  1.0380  1.0376  1.0351  1.0100  1.0068  1.0068  1.0065  1.0016  0.9984  0.9984  0.9944  0.9912  0.9909  0.9856  0.9772
[17 : 32]:	0.9700  0.9665  0.9634  0.9634  0.9634  0.9630  0.9581  0.9569  0.9546  0.9533  0.9510  0.9478  0.9475  0.9442  0.9358  0.9198
[33 : 48]:	0.9082  0.9070  0.9065  0.9039  0.8948  0.8874  0.8854  0.8848  0.8846  0.8831  0.8829  0.8829  0.8819  0.8807  0.8796  0.8793
[49 : 64]:	0.8784  0.8782  0.8743  0.8729  0.8664  0.8661  0.8640  0.8638  0.8573  0.8560  0.8480  0.8466  0.8463  0.8461  0.8437  0.8423
2024-04-29 04:24:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:24:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #65: GFLOPs: 1548.1270. Time: 33.3666 us. Best GFLOPs: 1564.0301
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #66: GFLOPs: 1101.0777. Time: 46.9137 us. Best GFLOPs: 1564.0301
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #67: GFLOPs: 1547.2115. Time: 33.3863 us. Best GFLOPs: 1564.0301
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #68: GFLOPs: 1596.0275. Time: 32.3652 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #69: GFLOPs: 1537.2571. Time: 33.6025 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #70: GFLOPs: 1401.2404. Time: 36.8643 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #71: GFLOPs: 1469.7495. Time: 35.1459 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #72: GFLOPs: 1520.4378. Time: 33.9742 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #73: GFLOPs: 1565.8689. Time: 32.9885 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #74: GFLOPs: 1477.9565. Time: 34.9507 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #75: GFLOPs: 1427.0764. Time: 36.1969 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #76: GFLOPs: 1557.1680. Time: 33.1728 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #77: GFLOPs: 1427.7475. Time: 36.1798 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #78: GFLOPs: 1569.9842. Time: 32.9020 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #79: GFLOPs: 1489.2559. Time: 34.6856 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #80: GFLOPs: 1496.8500. Time: 34.5096 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #81: GFLOPs: 1524.1918. Time: 33.8905 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #82: GFLOPs: 1528.1594. Time: 33.8025 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #83: GFLOPs: 1201.4461. Time: 42.9946 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #84: GFLOPs: 1260.7792. Time: 40.9712 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #85: GFLOPs: 1201.3140. Time: 42.9993 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #86: GFLOPs: 1490.6685. Time: 34.6527 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #87: GFLOPs: 1559.6980. Time: 33.1190 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #88: GFLOPs: 1491.3150. Time: 34.6377 us. Best GFLOPs: 1596.0275
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #89: GFLOPs: 1607.5338. Time: 32.1335 us. Best GFLOPs: 1607.5338
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #90: GFLOPs: 1514.7531. Time: 34.1017 us. Best GFLOPs: 1607.5338
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #91: GFLOPs: 1208.3077. Time: 42.7504 us. Best GFLOPs: 1607.5338
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #92: GFLOPs: 1492.3219. Time: 34.6143 us. Best GFLOPs: 1607.5338
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #93: GFLOPs: 1587.9386. Time: 32.5300 us. Best GFLOPs: 1607.5338
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #94: GFLOPs: 1490.6578. Time: 34.6529 us. Best GFLOPs: 1607.5338
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #95: GFLOPs: 1607.5567. Time: 32.1330 us. Best GFLOPs: 1607.5567
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #96: GFLOPs: 2533.1919. Time: 20.3915 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #97: GFLOPs: 1399.5870. Time: 36.9078 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #98: GFLOPs: 1394.8925. Time: 37.0320 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #99: GFLOPs: 1235.2987. Time: 41.8163 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #100: GFLOPs: 1427.5982. Time: 36.1836 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #101: GFLOPs: 1278.1003. Time: 40.4160 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #102: GFLOPs: 1390.3380. Time: 37.1533 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #103: GFLOPs: 405.2364. Time: 127.4705 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #104: GFLOPs: 2039.3289. Time: 25.3297 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #105: GFLOPs: 2064.1690. Time: 25.0249 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #106: GFLOPs: 584.2495. Time: 88.4137 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #107: GFLOPs: 1512.1352. Time: 34.1608 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #108: GFLOPs: 1074.1315. Time: 48.0906 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #109: GFLOPs: 1456.7242. Time: 35.4602 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #110: GFLOPs: 1309.4031. Time: 39.4498 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #111: GFLOPs: 2312.1169. Time: 22.3413 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #112: GFLOPs: 1506.4691. Time: 34.2892 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #113: GFLOPs: 1015.5850. Time: 50.8630 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #114: GFLOPs: 1324.3695. Time: 39.0040 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #115: GFLOPs: 2246.3161. Time: 22.9957 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #116: GFLOPs: 1249.5408. Time: 41.3397 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #117: GFLOPs: 1508.0369. Time: 34.2536 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #118: GFLOPs: 1234.7174. Time: 41.8360 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #119: GFLOPs: 2322.9651. Time: 22.2370 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #120: GFLOPs: 1403.5699. Time: 36.8031 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #121: GFLOPs: 2007.7406. Time: 25.7283 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #122: GFLOPs: 1243.2567. Time: 41.5487 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #123: GFLOPs: 1362.6463. Time: 37.9084 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #124: GFLOPs: 628.1066. Time: 82.2403 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #125: GFLOPs: 1805.3020. Time: 28.6133 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #126: GFLOPs: 381.6307. Time: 135.3551 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #127: GFLOPs: 308.9536. Time: 167.1956 us. Best GFLOPs: 2533.1919
2024-04-29 04:25:47 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #128: GFLOPs: 70.2977. Time: 734.8131 us. Best GFLOPs: 2533.1919
2024-04-29 05:37:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:37:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:37:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 392 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 05:37:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 789 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 05:37:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 1182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 05:37:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 1575 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 05:37:56 [INFO] [evolutionary_search.cc:723] Sampled 65 candidate(s)
2024-04-29 05:38:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 85 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 05:38:04 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 66 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 05:38:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 59 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 05:38:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 64 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 05:38:15 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0654  1.0548  0.9687  0.9659  0.9629  0.9608  0.9608  0.9578  0.9529  0.9489  0.9480  0.9450  0.9392  0.9345  0.9341  0.9336
[17 : 32]:	0.9289  0.9205  0.9178  0.9165  0.9138  0.9109  0.9077  0.9077  0.9056  0.9051  0.9029  0.9020  0.9014  0.8963  0.8959  0.8932
[33 : 48]:	0.8862  0.8856  0.8841  0.8826  0.8810  0.8790  0.8776  0.8756  0.8696  0.8695  0.8682  0.8647  0.8643  0.8585  0.8539  0.8503
[49 : 64]:	0.8470  0.8413  0.8413  0.8383  0.8362  0.8340  0.8332  0.8324  0.8303  0.8292  0.8292  0.8283  0.8257  0.8252  0.8242  0.8242
2024-04-29 05:38:15 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:38:15 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #129: GFLOPs: 2417.6654. Time: 21.3659 us. Best GFLOPs: 2533.1919
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #130: GFLOPs: 2489.9209. Time: 20.7459 us. Best GFLOPs: 2533.1919
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #131: GFLOPs: 3587.5585. Time: 14.3986 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #132: GFLOPs: 2529.4588. Time: 20.4216 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #133: GFLOPs: 2529.6512. Time: 20.4201 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #134: GFLOPs: 2449.7207. Time: 21.0864 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #135: GFLOPs: 2449.5450. Time: 21.0879 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #136: GFLOPs: 2449.6545. Time: 21.0869 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #137: GFLOPs: 3036.9743. Time: 17.0089 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #138: GFLOPs: 3023.6573. Time: 17.0838 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #139: GFLOPs: 2529.2905. Time: 20.4230 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #140: GFLOPs: 2529.5237. Time: 20.4211 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #141: GFLOPs: 2895.3779. Time: 17.8407 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #142: GFLOPs: 2288.8464. Time: 22.5684 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #143: GFLOPs: 2303.3640. Time: 22.4262 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #144: GFLOPs: 2265.6115. Time: 22.7999 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #145: GFLOPs: 2322.9049. Time: 22.2375 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #146: GFLOPs: 3081.3301. Time: 16.7641 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #147: GFLOPs: 3372.2690. Time: 15.3178 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #148: GFLOPs: 3074.5382. Time: 16.8011 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #149: GFLOPs: 2383.8696. Time: 21.6688 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #150: GFLOPs: 2323.0043. Time: 22.2366 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #151: GFLOPs: 2304.0864. Time: 22.4192 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #152: GFLOPs: 2304.0864. Time: 22.4192 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #153: GFLOPs: 2513.5961. Time: 20.5505 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #154: GFLOPs: 2153.0768. Time: 23.9916 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #155: GFLOPs: 2892.2664. Time: 17.8599 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #156: GFLOPs: 2858.0291. Time: 18.0739 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #157: GFLOPs: 2678.2912. Time: 19.2868 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #158: GFLOPs: 2874.5497. Time: 17.9700 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #159: GFLOPs: 2303.6857. Time: 22.4231 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #160: GFLOPs: 2153.2031. Time: 23.9902 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #161: GFLOPs: 2913.7108. Time: 17.7285 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #162: GFLOPs: 2502.7728. Time: 20.6394 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #163: GFLOPs: 2511.9420. Time: 20.5640 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #164: GFLOPs: 2501.9668. Time: 20.6460 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #165: GFLOPs: 2428.4081. Time: 21.2714 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #166: GFLOPs: 2409.4672. Time: 21.4386 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #167: GFLOPs: 2881.0266. Time: 17.9296 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #168: GFLOPs: 2880.8628. Time: 17.9306 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #169: GFLOPs: 2833.4000. Time: 18.2310 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #170: GFLOPs: 2114.3627. Time: 24.4309 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #171: GFLOPs: 2327.6904. Time: 22.1918 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #172: GFLOPs: 2782.4711. Time: 18.5647 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #173: GFLOPs: 2501.4356. Time: 20.6504 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #174: GFLOPs: 1764.4081. Time: 29.2765 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #175: GFLOPs: 1844.0842. Time: 28.0116 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #176: GFLOPs: 1843.8295. Time: 28.0154 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #177: GFLOPs: 2303.6760. Time: 22.4232 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #178: GFLOPs: 2572.1107. Time: 20.0830 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #179: GFLOPs: 2610.7064. Time: 19.7861 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #180: GFLOPs: 2610.9032. Time: 19.7846 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #181: GFLOPs: 2530.1355. Time: 20.4162 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #182: GFLOPs: 2030.5497. Time: 25.4393 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #183: GFLOPs: 2530.1444. Time: 20.4161 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #184: GFLOPs: 2039.2899. Time: 25.3302 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #185: GFLOPs: 2686.4825. Time: 19.2280 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #186: GFLOPs: 2138.5031. Time: 24.1551 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #187: GFLOPs: 2138.7021. Time: 24.1528 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #188: GFLOPs: 2820.6094. Time: 18.3137 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #189: GFLOPs: 1971.7148. Time: 26.1984 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #190: GFLOPs: 1720.6264. Time: 30.0214 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #191: GFLOPs: 689.4647. Time: 74.9214 us. Best GFLOPs: 3587.5585
2024-04-29 05:39:39 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #192: GFLOPs: 384.5286. Time: 134.3351 us. Best GFLOPs: 3587.5585
2024-04-29 07:09:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:09:02 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:09:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 394 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:09:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 784 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:09:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 1169 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:09:07 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-04-29 07:09:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:09:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:09:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:09:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:09:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.2294  2.2141  2.2124  2.2111  1.4617  1.0372  0.9853  0.9777  0.9653  0.9577  0.9502  0.9400  0.9400  0.9230  0.9217  0.9217
[17 : 32]:	0.9114  0.9114  0.9105  0.9064  0.9058  0.9051  0.9039  0.9027  0.8983  0.8968  0.8955  0.8942  0.8942  0.8920  0.8918  0.8839
[33 : 48]:	0.8732  0.8662  0.8587  0.8561  0.8526  0.8526  0.8525  0.8525  0.8525  0.8525  0.8525  0.8525  0.8495  0.8437  0.8436  0.8430
[49 : 64]:	0.8430  0.8429  0.8429  0.8429  0.8429  0.8420  0.8401  0.8400  0.8400  0.8400  0.8385  0.8376  0.8353  0.8342  0.8320  0.8293
2024-04-29 07:09:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:09:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #193: GFLOPs: 1931.0134. Time: 26.7506 us. Best GFLOPs: 3587.5585
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #194: GFLOPs: 2207.7322. Time: 23.3976 us. Best GFLOPs: 3587.5585
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #195: GFLOPs: 2158.0511. Time: 23.9363 us. Best GFLOPs: 3587.5585
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #196: GFLOPs: 2185.8334. Time: 23.6320 us. Best GFLOPs: 3587.5585
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #197: GFLOPs: 1158.7873. Time: 44.5774 us. Best GFLOPs: 3587.5585
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #198: GFLOPs: 2417.9756. Time: 21.3632 us. Best GFLOPs: 3587.5585
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #199: GFLOPs: 3738.5584. Time: 13.8170 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #200: GFLOPs: 3697.0831. Time: 13.9720 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #201: GFLOPs: 1821.1735. Time: 28.3640 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #202: GFLOPs: 2312.8783. Time: 22.3339 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #203: GFLOPs: 3597.6614. Time: 14.3581 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #204: GFLOPs: 2594.0933. Time: 19.9128 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #205: GFLOPs: 3105.2710. Time: 16.6348 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #206: GFLOPs: 2214.0756. Time: 23.3306 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #207: GFLOPs: 3477.2353. Time: 14.8554 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #208: GFLOPs: 3581.6358. Time: 14.4224 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #209: GFLOPs: 3391.8854. Time: 15.2292 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #210: GFLOPs: 3071.4762. Time: 16.8179 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #211: GFLOPs: 3338.2832. Time: 15.4737 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #212: GFLOPs: 2535.2717. Time: 20.3748 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #213: GFLOPs: 3151.8352. Time: 16.3891 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #214: GFLOPs: 1609.4088. Time: 32.0961 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #215: GFLOPs: 3478.0238. Time: 14.8520 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #216: GFLOPs: 1943.5828. Time: 26.5776 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #217: GFLOPs: 3038.0446. Time: 17.0029 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #218: GFLOPs: 2845.7357. Time: 18.1520 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #219: GFLOPs: 3086.8481. Time: 16.7341 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #220: GFLOPs: 3107.6239. Time: 16.6222 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #221: GFLOPs: 3041.5921. Time: 16.9831 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #222: GFLOPs: 3015.7558. Time: 17.1286 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #223: GFLOPs: 3119.7033. Time: 16.5579 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #224: GFLOPs: 2727.7223. Time: 18.9373 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #225: GFLOPs: 3070.9606. Time: 16.8207 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #226: GFLOPs: 2509.2863. Time: 20.5858 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #227: GFLOPs: 2530.1314. Time: 20.4162 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #228: GFLOPs: 3086.5692. Time: 16.7356 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #229: GFLOPs: 2425.1722. Time: 21.2998 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #230: GFLOPs: 2121.0988. Time: 24.3533 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #231: GFLOPs: 2532.5287. Time: 20.3969 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #232: GFLOPs: 2610.9866. Time: 19.7840 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #233: GFLOPs: 2625.5524. Time: 19.6742 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #234: GFLOPs: 3176.3988. Time: 16.2623 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #235: GFLOPs: 2496.3963. Time: 20.6921 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #236: GFLOPs: 2544.5506. Time: 20.3005 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #237: GFLOPs: 3385.7023. Time: 15.2570 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #238: GFLOPs: 3073.8502. Time: 16.8049 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #239: GFLOPs: 3094.4488. Time: 16.6930 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #240: GFLOPs: 2415.4636. Time: 21.3854 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #241: GFLOPs: 2233.5740. Time: 23.1269 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #242: GFLOPs: 2953.3667. Time: 17.4904 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #243: GFLOPs: 3294.7278. Time: 15.6783 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #244: GFLOPs: 2532.0022. Time: 20.4011 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #245: GFLOPs: 3169.8757. Time: 16.2958 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #246: GFLOPs: 3494.5403. Time: 14.7818 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #247: GFLOPs: 1719.8179. Time: 30.0356 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #248: GFLOPs: 2284.8230. Time: 22.6082 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #249: GFLOPs: 2540.0854. Time: 20.3362 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #250: GFLOPs: 2552.6943. Time: 20.2357 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #251: GFLOPs: 2339.2924. Time: 22.0818 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #252: GFLOPs: 2248.2802. Time: 22.9756 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #253: GFLOPs: 3478.8471. Time: 14.8485 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #254: GFLOPs: 1097.0025. Time: 47.0880 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #255: GFLOPs: 50.1889. Time: 1029.2250 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #256: GFLOPs: 451.9219. Time: 114.3022 us. Best GFLOPs: 3738.5584
2024-04-29 07:11:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:11:18 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:11:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 398 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:11:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 792 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:11:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 1182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:11:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 1566 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:11:23 [INFO] [evolutionary_search.cc:723] Sampled 74 candidate(s)
2024-04-29 07:11:28 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:11:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:11:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:11:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 135 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 07:11:43 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2699  0.9633  0.9633  0.9547  0.9547  0.9529  0.9529  0.9511  0.9493  0.9493  0.9446  0.9446  0.9428  0.9426  0.9404  0.9364
[17 : 32]:	0.9351  0.9351  0.9351  0.9351  0.9312  0.9265  0.9264  0.9248  0.9228  0.9228  0.9209  0.9183  0.9177  0.9164  0.9113  0.9113
[33 : 48]:	0.9053  0.9032  0.9029  0.9027  0.9013  0.9004  0.9002  0.8998  0.8998  0.8997  0.8991  0.8980  0.8915  0.8911  0.8905  0.8884
[49 : 64]:	0.8884  0.8884  0.8884  0.8884  0.8875  0.8866  0.8866  0.8866  0.8817  0.8798  0.8789  0.8779  0.8779  0.8761  0.8756  0.8756
2024-04-29 07:11:43 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:11:43 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #257: GFLOPs: 2393.1226. Time: 21.5851 us. Best GFLOPs: 3738.5584
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #258: GFLOPs: 3588.7624. Time: 14.3937 us. Best GFLOPs: 3738.5584
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #259: GFLOPs: 3755.1713. Time: 13.7559 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #260: GFLOPs: 3070.4084. Time: 16.8237 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #261: GFLOPs: 3225.2407. Time: 16.0161 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #262: GFLOPs: 3274.1350. Time: 15.7769 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #263: GFLOPs: 2979.1318. Time: 17.3392 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #264: GFLOPs: 3394.3477. Time: 15.2181 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #265: GFLOPs: 3373.6279. Time: 15.3116 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #266: GFLOPs: 3296.8206. Time: 15.6683 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #267: GFLOPs: 3295.4021. Time: 15.6751 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #268: GFLOPs: 3411.4193. Time: 15.1420 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #269: GFLOPs: 3287.8967. Time: 15.7109 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #270: GFLOPs: 3369.9537. Time: 15.3283 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #271: GFLOPs: 2302.5524. Time: 22.4341 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #272: GFLOPs: 3285.2357. Time: 15.7236 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #273: GFLOPs: 3248.7162. Time: 15.9003 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #274: GFLOPs: 3140.0636. Time: 16.4505 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #275: GFLOPs: 3113.9432. Time: 16.5885 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #276: GFLOPs: 2830.7485. Time: 18.2481 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #277: GFLOPs: 3190.7153. Time: 16.1894 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #278: GFLOPs: 3097.5813. Time: 16.6761 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #279: GFLOPs: 3035.9221. Time: 17.0148 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #280: GFLOPs: 2841.1764. Time: 18.1811 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #281: GFLOPs: 3228.5377. Time: 15.9997 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #282: GFLOPs: 3049.2484. Time: 16.9405 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #283: GFLOPs: 2312.9667. Time: 22.3331 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #284: GFLOPs: 2847.3332. Time: 18.1418 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #285: GFLOPs: 3659.6808. Time: 14.1148 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #286: GFLOPs: 3229.8067. Time: 15.9934 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #287: GFLOPs: 3395.9317. Time: 15.2110 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #288: GFLOPs: 3139.8577. Time: 16.4516 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:03 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #289: GFLOPs: 2451.2895. Time: 21.0729 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #290: GFLOPs: 3401.3381. Time: 15.1869 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #291: GFLOPs: 2975.6882. Time: 17.3592 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #292: GFLOPs: 3003.4389. Time: 17.1988 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #293: GFLOPs: 3228.9347. Time: 15.9977 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #294: GFLOPs: 2449.4766. Time: 21.0885 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #295: GFLOPs: 3267.7944. Time: 15.8075 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #296: GFLOPs: 3478.2141. Time: 14.8512 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #297: GFLOPs: 3373.5682. Time: 15.3119 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #298: GFLOPs: 3426.1947. Time: 15.0767 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #299: GFLOPs: 2907.8777. Time: 17.7640 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #300: GFLOPs: 2534.1676. Time: 20.3837 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #301: GFLOPs: 2884.3536. Time: 17.9089 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #302: GFLOPs: 3139.2125. Time: 16.4550 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #303: GFLOPs: 2600.1687. Time: 19.8663 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #304: GFLOPs: 2119.0264. Time: 24.3771 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #305: GFLOPs: 3115.0809. Time: 16.5825 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #306: GFLOPs: 3234.9288. Time: 15.9681 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #307: GFLOPs: 2888.3729. Time: 17.8840 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #308: GFLOPs: 3702.6587. Time: 13.9510 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #309: GFLOPs: 3241.1880. Time: 15.9373 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #310: GFLOPs: 2905.5971. Time: 17.7780 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #311: GFLOPs: 3685.1183. Time: 14.0174 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #312: GFLOPs: 3133.0966. Time: 16.4871 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #313: GFLOPs: 2872.5438. Time: 17.9826 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #314: GFLOPs: 3148.5016. Time: 16.4064 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #315: GFLOPs: 2901.8860. Time: 17.8007 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #316: GFLOPs: 3503.9324. Time: 14.7422 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #317: GFLOPs: 3509.7605. Time: 14.7177 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #318: GFLOPs: 171.9756. Time: 300.3663 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #319: GFLOPs: 397.1918. Time: 130.0522 us. Best GFLOPs: 3755.1713
2024-04-29 07:13:04 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #320: GFLOPs: 106.7561. Time: 483.8661 us. Best GFLOPs: 3755.1713
2024-04-29 08:03:19 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:03:19 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 08:03:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 391 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 08:03:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 778 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 08:03:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 1166 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 08:03:24 [INFO] [evolutionary_search.cc:723] Sampled 64 candidate(s)
2024-04-29 08:03:28 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 188 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 08:03:33 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 204 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 08:03:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 08:03:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x65b2248)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb2426a8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xaac7fc8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb0e15d8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3288258)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x34ee608)]: 142 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb242a58)]: 0 failure(s)
2024-04-29 08:03:44 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9566  0.9494  0.9461  0.9460  0.9407  0.9384  0.9368  0.9317  0.9210  0.9199  0.9195  0.9188  0.9158  0.9158  0.9157  0.9120
[17 : 32]:	0.9115  0.9111  0.9108  0.9105  0.9048  0.9033  0.9031  0.9015  0.9010  0.8999  0.8993  0.8990  0.8990  0.8986  0.8986  0.8979
[33 : 48]:	0.8975  0.8949  0.8942  0.8934  0.8923  0.8923  0.8913  0.8912  0.8908  0.8906  0.8905  0.8898  0.8893  0.8886  0.8870  0.8870
[49 : 64]:	0.8845  0.8837  0.8822  0.8822  0.8817  0.8813  0.8813  0.8803  0.8798  0.8798  0.8793  0.8773  0.8762  0.8762  0.8762  0.8748
2024-04-29 08:03:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:03:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:121] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #321: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  5: _ZN3tvm7runtime13PackedFun
  4: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  3: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  2: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(64), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(3)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(270) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) // T.int64(108))
                                        v2 = T.axis.spatial(T.int64(18), (ax0_ax1_ax2_ax3_fused_0 * T.int64(270) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(108) // T.int64(6))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(270) + ax0_ax1_ax2_ax3_fused_1 * T.int64(3) + ax0_ax1_ax2_ax3_fused_2) % T.int64(6))
                                        T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(560))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(560) // T.int64(7))
                                        v2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(7))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(90) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(2800))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(80) + rc_1 * T.int64(16) + rc_2)
                                v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 * T.int64(7) + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[32, 1, 5, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 3, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 6, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 5, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 90, 3], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 90, 2], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:121] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #322: Error in running:
LocalRunner: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/local_runner.py", line 152, in _worker_func
    repeated_args: List[T_ARGUMENT_LIST] = f_alloc_argument(
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/local_runner.py", line 360, in default_alloc_argument
    return alloc_argument_common(f_random_fill, device, args_info, alloc_repeat)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/utils.py", line 74, in alloc_argument_common
    arg: Any = dispatcher.get(arg_type, None)(*arg_info)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/runner/utils.py", line 56, in alloc_tensor
    arg = ndarray.empty(shape=shape, dtype=dtype, device=device)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/runtime/ndarray.py", line 391, in empty
    arr = _ffi_api.TVMArrayAllocWithScope(shape, dtype, device, mem_scope)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  5: _ZN3tvm7runtime13PackedFun
  4: tvm::runtime::TypedPackedFunc<tvm::runtime::NDArray (tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>::AssignTypedLambda<tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)>(tvm::runtime::NDArray (*)(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  3: tvm::runtime::NDArray::Empty(tvm::runtime::ShapeTuple, DLDataType, DLDevice, tvm::runtime::Optional<tvm::runtime::String>)
  2: tvm::runtime::DeviceAPI::AllocDataSpace(DLDevice, int, long const*, DLDataType, tvm::runtime::Optional<tvm::runtime::String>)
  1: tvm::runtime::CUDADeviceAPI::AllocDataSpace(DLDevice, unsigned long, unsigned long, DLDataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/runtime/cuda/cuda_device_api.cc", line 126
InternalError: Check failed: (e == cudaSuccess || e == cudaErrorCudartUnloading) is false: CUDA: misaligned address

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(64), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(48)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(108))
                                        v2 = T.axis.spatial(T.int64(18), (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(108) // T.int64(6))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(6))
                                        T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(16)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(560))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(560) // T.int64(7))
                                        v2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(7))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(90) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(2800))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(40), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(80) + rc_1 * T.int64(40) + rc_2)
                                v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 * T.int64(7) + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[32, 1, 5, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 3, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 6, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 2, 40])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 90, 2], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 90, 2], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:121] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #323: Error in running:
LocalRunner: An exception occurred
Subprocess terminated
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(64), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ff_3_init + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(48)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(108))
                                        v2 = T.axis.spatial(T.int64(18), (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(108) // T.int64(6))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(6))
                                        T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(8)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(360) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(560))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(360) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(560) // T.int64(7))
                                        v2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(360) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(7))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(90) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(2800))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ff_3 + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(80) + rc_1 * T.int64(16) + rc_2)
                                v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 * T.int64(7) + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(5) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_1_ff_1_yy_1_xx_1_fused * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[32, 1, 5, 1, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 3, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 6, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 5, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 90, 2], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 90, 4], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #324: GFLOPs: 2302.5254. Time: 22.4344 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #325: GFLOPs: 3037.1979. Time: 17.0077 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #326: GFLOPs: 3703.6923. Time: 13.9471 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #327: GFLOPs: 2976.7303. Time: 17.3532 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #328: GFLOPs: 3646.3806. Time: 14.1663 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #329: GFLOPs: 3315.1882. Time: 15.5815 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #330: GFLOPs: 3312.1260. Time: 15.5959 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #331: GFLOPs: 2967.2635. Time: 17.4085 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #332: GFLOPs: 2951.0967. Time: 17.5039 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #333: GFLOPs: 2156.4589. Time: 23.9539 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #334: GFLOPs: 2896.8278. Time: 17.8318 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #335: GFLOPs: 2137.3020. Time: 24.1686 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #336: GFLOPs: 2174.1136. Time: 23.7594 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #337: GFLOPs: 3271.3172. Time: 15.7905 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #338: GFLOPs: 2972.9978. Time: 17.3749 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #339: GFLOPs: 2125.0485. Time: 24.3080 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #340: GFLOPs: 2970.3252. Time: 17.3906 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #341: GFLOPs: 3273.8445. Time: 15.7783 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #342: GFLOPs: 2582.6987. Time: 20.0007 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #343: GFLOPs: 1944.0788. Time: 26.5708 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #344: GFLOPs: 3350.9382. Time: 15.4153 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #345: GFLOPs: 2030.5462. Time: 25.4393 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #346: GFLOPs: 2565.5698. Time: 20.1342 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #347: GFLOPs: 2250.1575. Time: 22.9565 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #348: GFLOPs: 3695.2338. Time: 13.9790 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #349: GFLOPs: 2148.1848. Time: 24.0462 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #350: GFLOPs: 2917.2743. Time: 17.7068 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #351: GFLOPs: 2359.5324. Time: 21.8923 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #352: GFLOPs: 3698.7750. Time: 13.9656 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #353: GFLOPs: 3375.0141. Time: 15.3053 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #354: GFLOPs: 2164.2957. Time: 23.8672 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #355: GFLOPs: 3394.1145. Time: 15.2192 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #356: GFLOPs: 2125.6887. Time: 24.3007 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #357: GFLOPs: 2147.1886. Time: 24.0574 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #358: GFLOPs: 2144.3780. Time: 24.0889 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #359: GFLOPs: 2094.5738. Time: 24.6617 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #360: GFLOPs: 3703.8954. Time: 13.9463 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #361: GFLOPs: 1930.8678. Time: 26.7526 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #362: GFLOPs: 3610.4039. Time: 14.3075 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #363: GFLOPs: 3327.6366. Time: 15.5232 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #364: GFLOPs: 3270.5897. Time: 15.7940 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #365: GFLOPs: 2074.7235. Time: 24.8976 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #366: GFLOPs: 3657.0407. Time: 14.1250 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #367: GFLOPs: 2692.9974. Time: 19.1815 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #368: GFLOPs: 3467.9185. Time: 14.8953 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #369: GFLOPs: 1901.7186. Time: 27.1626 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #370: GFLOPs: 3469.8206. Time: 14.8871 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #371: GFLOPs: 2869.1249. Time: 18.0040 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #372: GFLOPs: 3549.2111. Time: 14.5541 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #373: GFLOPs: 2204.0135. Time: 23.4371 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #374: GFLOPs: 1956.7106. Time: 26.3992 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #375: GFLOPs: 1956.7820. Time: 26.3983 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #376: GFLOPs: 3222.8637. Time: 16.0279 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #377: GFLOPs: 3204.6428. Time: 16.1190 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #378: GFLOPs: 3404.8481. Time: 15.1712 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #379: GFLOPs: 2951.1811. Time: 17.5034 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #380: GFLOPs: 3276.8650. Time: 15.7637 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #381: GFLOPs: 3184.7356. Time: 16.2198 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #382: GFLOPs: 118.4336. Time: 436.1572 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #383: GFLOPs: 225.3372. Time: 229.2373 us. Best GFLOPs: 3755.1713
2024-04-29 08:05:50 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #384: GFLOPs: 774.8092. Time: 66.6689 us. Best GFLOPs: 3755.1713
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:160] Initializing Task #17: "fused_nn_conv2d_add_nn_relu_11"
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(160), T.int64(18), T.int64(12)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3], T.float32(0))
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12), T.int64(160), T.int64(7), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(160), T.int64(12), T.int64(12)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(6), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(10), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4800)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(60))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(60) // T.int64(6))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(6))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(89600)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), ax0_ax1_ax2_ax3_fused // T.int64(560))
                                    v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + ax0_ax1_ax2_ax3_fused % T.int64(560) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(16), T.int64(4), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + ff_3 * T.int64(16) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(80) + rc_1 * T.int64(4) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 * T.int64(7) + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(4), T.int64(6)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 10, 1, 1, 16])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 1, 1, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 1, 3, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 20, 4])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(6), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(10), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4800)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(60))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(60) // T.int64(6))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(6))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(89600)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), ax0_ax1_ax2_ax3_fused // T.int64(560))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused % T.int64(560) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(16), T.int64(4), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + ff_3 * T.int64(16) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(80) + rc_1 * T.int64(4) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_1 * T.int64(7) + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(4), T.int64(6)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 10, 1, 1, 16])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 1, 1, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 1, 3, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 20, 4])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-05-01 15:09:56 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(6), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(10), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4800)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused // T.int64(60))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + ax0_ax1_ax2_ax3_fused % T.int64(60) // T.int64(6))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(6))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(89600)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(160), ax0_ax1_ax2_ax3_fused // T.int64(560))
                                    v1 = T.axis.spatial(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(80) + ax0_ax1_ax2_ax3_fused % T.int64(560) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(20), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(4), T.int64(7), T.int64(1), T.int64(1), T.int64(16), T.int64(4), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(160), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + ff_3 * T.int64(16) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + yy_3 * T.int64(4) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(160), rc_0_ry_0_rx_0_fused * T.int64(80) + rc_1 * T.int64(4) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_1 * T.int64(7) + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(4), T.int64(6)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(160), nn_1_ff_1_yy_1_xx_1_fused * T.int64(16) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 10, 1, 1, 16])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[3, 1, 1, 1, 4])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 1, 3, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 20, 4])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-05-01 15:33:39 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 15:33:39 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 15:33:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 383 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 15:33:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 778 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 15:33:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 1167 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 15:33:43 [INFO] [evolutionary_search.cc:723] Sampled 63 candidate(s)
2024-05-01 15:33:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 15:33:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 149 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 15:33:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 121 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 15:33:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 15:33:57 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9990  0.9979  0.9977  0.9959  0.9950  0.9949  0.9949  0.9946  0.9921  0.9920  0.9910  0.9894  0.9886  0.9881  0.9872  0.9866
[17 : 32]:	0.9861  0.9859  0.9845  0.9842  0.9834  0.9830  0.9827  0.9819  0.9805  0.9802  0.9788  0.9777  0.9770  0.9760  0.9757  0.9752
[33 : 48]:	0.9746  0.9742  0.9739  0.9728  0.9718  0.9716  0.9714  0.9699  0.9692  0.9682  0.9680  0.9673  0.9670  0.9668  0.9662  0.9639
[49 : 64]:	0.9630  0.9627  0.9626  0.9614  0.9595  0.9589  0.9587  0.9584  0.9573  0.9563  0.9558  0.9556  0.9543  0.9530  0.9529  0.9527
2024-05-01 15:33:57 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 15:33:57 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #1: GFLOPs: 248.6931. Time: 207.7086 us. Best GFLOPs: 248.6931
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #2: GFLOPs: 1382.2308. Time: 37.3712 us. Best GFLOPs: 1382.2308
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #3: GFLOPs: 701.0009. Time: 73.6885 us. Best GFLOPs: 1382.2308
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #4: GFLOPs: 94.2984. Time: 547.7897 us. Best GFLOPs: 1382.2308
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #5: GFLOPs: 206.8702. Time: 249.7009 us. Best GFLOPs: 1382.2308
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #6: GFLOPs: 19.6266. Time: 2631.9163 us. Best GFLOPs: 1382.2308
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #7: GFLOPs: 290.7708. Time: 177.6509 us. Best GFLOPs: 1382.2308
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #8: GFLOPs: 2362.5547. Time: 21.8643 us. Best GFLOPs: 2362.5547
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #9: GFLOPs: 1219.0524. Time: 42.3736 us. Best GFLOPs: 2362.5547
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #10: GFLOPs: 263.3438. Time: 196.1530 us. Best GFLOPs: 2362.5547
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #11: GFLOPs: 340.0698. Time: 151.8973 us. Best GFLOPs: 2362.5547
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #12: GFLOPs: 2390.4837. Time: 21.6089 us. Best GFLOPs: 2390.4837
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #13: GFLOPs: 3567.8990. Time: 14.4779 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #14: GFLOPs: 3263.9222. Time: 15.8263 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #15: GFLOPs: 156.0019. Time: 331.1221 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #16: GFLOPs: 2333.7183. Time: 22.1345 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #17: GFLOPs: 3360.9622. Time: 15.3693 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #18: GFLOPs: 369.3277. Time: 139.8641 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #19: GFLOPs: 20.6926. Time: 2496.3371 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #20: GFLOPs: 53.4653. Time: 966.1539 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #21: GFLOPs: 2960.0803. Time: 17.4508 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #22: GFLOPs: 778.2543. Time: 66.3738 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #23: GFLOPs: 2236.0093. Time: 23.1017 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #24: GFLOPs: 177.3951. Time: 291.1900 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #25: GFLOPs: 2923.9299. Time: 17.6665 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #26: GFLOPs: 569.6836. Time: 90.6743 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #27: GFLOPs: 141.0036. Time: 366.3431 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #28: GFLOPs: 217.8804. Time: 237.0827 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #29: GFLOPs: 1041.5584. Time: 49.5946 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #30: GFLOPs: 497.1488. Time: 103.9039 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #31: GFLOPs: 3101.1366. Time: 16.6570 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #32: GFLOPs: 46.4799. Time: 1111.3550 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #33: GFLOPs: 111.5107. Time: 463.2353 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #34: GFLOPs: 153.3846. Time: 336.7722 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #35: GFLOPs: 324.9507. Time: 158.9647 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #36: GFLOPs: 274.6680. Time: 188.0659 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #37: GFLOPs: 2595.6333. Time: 19.9010 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #38: GFLOPs: 1660.4764. Time: 31.1090 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #39: GFLOPs: 3239.3058. Time: 15.9465 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #40: GFLOPs: 22.6349. Time: 2282.1235 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #41: GFLOPs: 9.7860. Time: 5278.5042 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #42: GFLOPs: 2243.8736. Time: 23.0208 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #43: GFLOPs: 6.0423. Time: 8549.0348 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #44: GFLOPs: 2164.0660. Time: 23.8697 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #45: GFLOPs: 159.9861. Time: 322.8761 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #46: GFLOPs: 362.6301. Time: 142.4473 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #47: GFLOPs: 423.0896. Time: 122.0916 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #48: GFLOPs: 1066.5989. Time: 48.4303 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #49: GFLOPs: 459.7923. Time: 112.3457 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #50: GFLOPs: 231.1026. Time: 223.5184 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #51: GFLOPs: 112.6736. Time: 458.4541 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #52: GFLOPs: 251.0680. Time: 205.7438 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #53: GFLOPs: 3171.7071. Time: 16.2864 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #54: GFLOPs: 425.7463. Time: 121.3297 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #55: GFLOPs: 191.7255. Time: 269.4252 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #56: GFLOPs: 495.6355. Time: 104.2211 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #57: GFLOPs: 3517.8855. Time: 14.6837 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #58: GFLOPs: 202.8315. Time: 254.6728 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #59: GFLOPs: 3184.5034. Time: 16.2210 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #60: GFLOPs: 2529.4137. Time: 20.4220 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #61: GFLOPs: 3059.9892. Time: 16.8810 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #62: GFLOPs: 201.0840. Time: 256.8861 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #63: GFLOPs: 275.1427. Time: 187.7414 us. Best GFLOPs: 3567.8990
2024-05-01 16:37:13 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #64: GFLOPs: 139.6792. Time: 369.8167 us. Best GFLOPs: 3567.8990
2024-05-01 17:06:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 17:06:02 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 17:06:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 394 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:06:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 787 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:06:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 1187 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:06:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 1579 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:06:07 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-05-01 17:06:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 211 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:06:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 178 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:06:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 192 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:06:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 209 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:06:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2460  0.9669  0.9587  0.9552  0.9506  0.9434  0.9341  0.9341  0.9341  0.9341  0.9341  0.9341  0.9321  0.9304  0.9298  0.9260
[17 : 32]:	0.9260  0.9209  0.9209  0.9204  0.9204  0.9201  0.9194  0.9194  0.9194  0.9194  0.9194  0.9194  0.9194  0.9194  0.9194  0.9194
[33 : 48]:	0.9194  0.9180  0.9175  0.9175  0.9175  0.9163  0.9155  0.9155  0.9145  0.9144  0.9144  0.9143  0.9138  0.9134  0.9132  0.9132
[49 : 64]:	0.9119  0.9119  0.9117  0.9107  0.9107  0.9093  0.9093  0.9090  0.9090  0.9082  0.9065  0.9064  0.9063  0.9063  0.9053  0.9053
2024-05-01 17:06:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 17:06:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #65: GFLOPs: 254.5268. Time: 202.9479 us. Best GFLOPs: 3567.8990
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #66: GFLOPs: 519.5159. Time: 99.4304 us. Best GFLOPs: 3567.8990
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #67: GFLOPs: 3635.0920. Time: 14.2103 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #68: GFLOPs: 3295.9070. Time: 15.6727 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #69: GFLOPs: 3190.4093. Time: 16.1909 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #70: GFLOPs: 3244.2176. Time: 15.9224 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #71: GFLOPs: 2868.5082. Time: 18.0079 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #72: GFLOPs: 2860.9662. Time: 18.0553 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #73: GFLOPs: 3180.7897. Time: 16.2399 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #74: GFLOPs: 3099.8648. Time: 16.6638 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #75: GFLOPs: 3189.8870. Time: 16.1936 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #76: GFLOPs: 3113.7165. Time: 16.5897 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #77: GFLOPs: 3300.9965. Time: 15.6485 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #78: GFLOPs: 2865.0460. Time: 18.0296 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #79: GFLOPs: 3530.9943. Time: 14.6292 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #80: GFLOPs: 3288.4231. Time: 15.7083 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #81: GFLOPs: 3331.2472. Time: 15.5064 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #82: GFLOPs: 3585.2372. Time: 14.4079 us. Best GFLOPs: 3635.0920
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #83: GFLOPs: 3653.0729. Time: 14.1403 us. Best GFLOPs: 3653.0729
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #84: GFLOPs: 3185.9649. Time: 16.2135 us. Best GFLOPs: 3653.0729
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #85: GFLOPs: 3192.7761. Time: 16.1789 us. Best GFLOPs: 3653.0729
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #86: GFLOPs: 3132.8850. Time: 16.4882 us. Best GFLOPs: 3653.0729
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #87: GFLOPs: 3524.5829. Time: 14.6558 us. Best GFLOPs: 3653.0729
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #88: GFLOPs: 2860.6421. Time: 18.0574 us. Best GFLOPs: 3653.0729
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #89: GFLOPs: 3660.5122. Time: 14.1116 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #90: GFLOPs: 3236.3007. Time: 15.9613 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #91: GFLOPs: 3130.7800. Time: 16.4993 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #92: GFLOPs: 3189.6336. Time: 16.1949 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #93: GFLOPs: 3562.9877. Time: 14.4979 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #94: GFLOPs: 3229.4874. Time: 15.9950 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #95: GFLOPs: 3657.2824. Time: 14.1241 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #96: GFLOPs: 3252.3209. Time: 15.8827 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #97: GFLOPs: 3492.0846. Time: 14.7922 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #98: GFLOPs: 3287.4690. Time: 15.7129 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #99: GFLOPs: 3044.9028. Time: 16.9646 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #100: GFLOPs: 2752.4438. Time: 18.7672 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #101: GFLOPs: 2830.8642. Time: 18.2473 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #102: GFLOPs: 2944.2466. Time: 17.5446 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #103: GFLOPs: 2505.3788. Time: 20.6179 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #104: GFLOPs: 2637.5781. Time: 19.5845 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #105: GFLOPs: 3291.3073. Time: 15.6946 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #106: GFLOPs: 3642.8719. Time: 14.1799 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #107: GFLOPs: 3582.6093. Time: 14.4185 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #108: GFLOPs: 3349.2943. Time: 15.4229 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #109: GFLOPs: 3101.4329. Time: 16.6554 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #110: GFLOPs: 3289.5676. Time: 15.7029 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #111: GFLOPs: 3352.7339. Time: 15.4070 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #112: GFLOPs: 3290.9986. Time: 15.6961 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #113: GFLOPs: 3295.7843. Time: 15.6733 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #114: GFLOPs: 3250.4354. Time: 15.8919 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #115: GFLOPs: 3186.1695. Time: 16.2125 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #116: GFLOPs: 3658.7025. Time: 14.1186 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #117: GFLOPs: 3188.9063. Time: 16.1986 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #118: GFLOPs: 3174.8219. Time: 16.2704 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #119: GFLOPs: 2992.4365. Time: 17.2621 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #120: GFLOPs: 3403.1294. Time: 15.1789 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #121: GFLOPs: 3345.7555. Time: 15.4392 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #122: GFLOPs: 3464.8217. Time: 14.9086 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #123: GFLOPs: 3089.8725. Time: 16.7177 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #124: GFLOPs: 2875.4859. Time: 17.9642 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #125: GFLOPs: 3194.5311. Time: 16.1700 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #126: GFLOPs: 812.0535. Time: 63.6112 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #127: GFLOPs: 269.4613. Time: 191.6998 us. Best GFLOPs: 3660.5122
2024-05-01 17:07:37 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #128: GFLOPs: 119.9693. Time: 430.5741 us. Best GFLOPs: 3660.5122
2024-05-01 17:54:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 17:54:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 17:54:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 385 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:54:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 775 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:54:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 1161 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:54:20 [INFO] [evolutionary_search.cc:723] Sampled 69 candidate(s)
2024-05-01 17:54:24 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 250 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:54:29 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 181 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:54:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:54:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 195 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 17:54:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0341  1.0252  0.9656  0.9627  0.9469  0.9456  0.9428  0.9401  0.9377  0.9349  0.9337  0.9322  0.9310  0.9276  0.9238  0.9231
[17 : 32]:	0.9230  0.9228  0.9226  0.9225  0.9221  0.9220  0.9210  0.9191  0.9187  0.9173  0.9171  0.9168  0.9167  0.9167  0.9160  0.9154
[33 : 48]:	0.9144  0.9141  0.9141  0.9141  0.9141  0.9141  0.9141  0.9141  0.9140  0.9140  0.9139  0.9135  0.9132  0.9121  0.9115  0.9111
[49 : 64]:	0.9111  0.9111  0.9111  0.9111  0.9110  0.9110  0.9109  0.9109  0.9108  0.9107  0.9105  0.9096  0.9090  0.9088  0.9080  0.9075
2024-05-01 17:54:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 17:54:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #129: GFLOPs: 1551.3192. Time: 33.2979 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #130: GFLOPs: 1373.9524. Time: 37.5964 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #131: GFLOPs: 3308.3550. Time: 15.6137 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #132: GFLOPs: 3300.6151. Time: 15.6503 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #133: GFLOPs: 2499.8080. Time: 20.6639 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #134: GFLOPs: 3648.4375. Time: 14.1583 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #135: GFLOPs: 3635.3833. Time: 14.2091 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #136: GFLOPs: 3651.3958. Time: 14.1468 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #137: GFLOPs: 3529.5996. Time: 14.6350 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #138: GFLOPs: 3583.7641. Time: 14.4138 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #139: GFLOPs: 3191.2505. Time: 16.1867 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #140: GFLOPs: 3469.9496. Time: 14.8866 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #141: GFLOPs: 3166.7281. Time: 16.3120 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #142: GFLOPs: 3270.4038. Time: 15.7949 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #143: GFLOPs: 2137.9355. Time: 24.1615 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #144: GFLOPs: 3129.3434. Time: 16.5069 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #145: GFLOPs: 3182.9973. Time: 16.2286 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #146: GFLOPs: 1513.5804. Time: 34.1281 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #147: GFLOPs: 3511.9053. Time: 14.7087 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #148: GFLOPs: 2324.0914. Time: 22.2262 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #149: GFLOPs: 3613.5838. Time: 14.2949 us. Best GFLOPs: 3660.5122
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #150: GFLOPs: 3692.8280. Time: 13.9881 us. Best GFLOPs: 3692.8280
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #151: GFLOPs: 3489.9322. Time: 14.8013 us. Best GFLOPs: 3692.8280
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #152: GFLOPs: 3579.7905. Time: 14.4298 us. Best GFLOPs: 3692.8280
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #153: GFLOPs: 3527.0430. Time: 14.6456 us. Best GFLOPs: 3692.8280
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #154: GFLOPs: 3510.2547. Time: 14.7157 us. Best GFLOPs: 3692.8280
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #155: GFLOPs: 3713.0094. Time: 13.9121 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #156: GFLOPs: 3526.7729. Time: 14.6467 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #157: GFLOPs: 3602.0906. Time: 14.3405 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #158: GFLOPs: 2237.1194. Time: 23.0903 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #159: GFLOPs: 3187.6426. Time: 16.2050 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #160: GFLOPs: 3512.3938. Time: 14.7067 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #161: GFLOPs: 3183.9992. Time: 16.2235 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #162: GFLOPs: 3638.4452. Time: 14.1972 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #163: GFLOPs: 3238.7438. Time: 15.9493 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #164: GFLOPs: 3634.5374. Time: 14.2124 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #165: GFLOPs: 3176.4949. Time: 16.2618 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #166: GFLOPs: 3226.8984. Time: 16.0078 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #167: GFLOPs: 2793.8118. Time: 18.4893 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #168: GFLOPs: 3527.6251. Time: 14.6432 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #169: GFLOPs: 3622.9128. Time: 14.2581 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #170: GFLOPs: 3534.8206. Time: 14.6134 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #171: GFLOPs: 3412.5983. Time: 15.1368 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #172: GFLOPs: 3471.5091. Time: 14.8799 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #173: GFLOPs: 3352.1668. Time: 15.4096 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #174: GFLOPs: 2830.8573. Time: 18.2474 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #175: GFLOPs: 3353.8851. Time: 15.4017 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #176: GFLOPs: 3234.5725. Time: 15.9699 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #177: GFLOPs: 3491.6387. Time: 14.7941 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #178: GFLOPs: 3136.6825. Time: 16.4683 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #179: GFLOPs: 2813.0861. Time: 18.3626 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #180: GFLOPs: 3541.5335. Time: 14.5857 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #181: GFLOPs: 3633.6506. Time: 14.2159 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #182: GFLOPs: 3238.7786. Time: 15.9491 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #183: GFLOPs: 3313.0416. Time: 15.5916 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #184: GFLOPs: 3266.7672. Time: 15.8125 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #185: GFLOPs: 3300.7327. Time: 15.6498 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #186: GFLOPs: 3643.0059. Time: 14.1794 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #187: GFLOPs: 3139.0295. Time: 16.4559 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #188: GFLOPs: 3352.4186. Time: 15.4085 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #189: GFLOPs: 3241.2141. Time: 15.9371 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #190: GFLOPs: 125.7908. Time: 410.6476 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #191: GFLOPs: 103.5500. Time: 498.8475 us. Best GFLOPs: 3713.0094
2024-05-01 17:55:52 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #192: GFLOPs: 1241.1121. Time: 41.6205 us. Best GFLOPs: 3713.0094
2024-05-01 18:44:53 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 18:44:53 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 18:44:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 393 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 18:44:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 789 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 18:44:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 1181 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 18:44:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 1570 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 18:44:58 [INFO] [evolutionary_search.cc:723] Sampled 70 candidate(s)
2024-05-01 18:45:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 181 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 18:45:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 187 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 18:45:13 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 196 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 18:45:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 168 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 18:45:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9487  0.9478  0.9450  0.9449  0.9441  0.9440  0.9434  0.9424  0.9420  0.9411  0.9385  0.9385  0.9377  0.9376  0.9373  0.9368
[17 : 32]:	0.9356  0.9338  0.9337  0.9329  0.9319  0.9309  0.9302  0.9294  0.9288  0.9286  0.9282  0.9278  0.9277  0.9273  0.9269  0.9265
[33 : 48]:	0.9238  0.9229  0.9223  0.9220  0.9208  0.9201  0.9200  0.9200  0.9198  0.9192  0.9184  0.9184  0.9183  0.9181  0.9172  0.9164
[49 : 64]:	0.9157  0.9130  0.9118  0.9110  0.9101  0.9096  0.9096  0.9089  0.9087  0.9084  0.9081  0.9081  0.9075  0.9067  0.9062  0.9062
2024-05-01 18:45:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 18:45:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:121] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #193: Error in running:
LocalRunner: An exception occurred
Subprocess terminated
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(160), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(12), T.int64(12)), scope="local")
        pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(160), T.int64(18), T.int64(12)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(160), T.int64(160), T.int64(7), T.int64(1)), scope="shared")
        for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(64), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                    for nn_3_init, ff_3_init, yy_3_init, xx_3_init, nn_4_init, ff_4_init, yy_4_init, xx_4_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("conv2d_nchw_init"):
                            v_nn = T.axis.spatial(T.int64(1), nn_3_init + nn_4_init)
                            v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(10) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) * T.int64(2) + ff_3_init * T.int64(2) + ff_4_init)
                            v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) * T.int64(2) + yy_3_init + yy_4_init)
                            v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + xx_3_init + xx_4_init)
                            T.reads()
                            T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                            conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                    for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("pad_temp_shared"):
                                        v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(72))
                                        v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(6) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(72) // T.int64(6))
                                        v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(6))
                                        T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                        T.writes(pad_temp_shared[v0, v1, v2, v3])
                                        pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(90), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(2)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(10) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) // T.int64(560))
                                        v1 = T.axis.spatial(T.int64(160), rc_0 * T.int64(80) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(560) // T.int64(7))
                                        v2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(180) + ax0_ax1_ax2_ax3_fused_1 * T.int64(2) + ax0_ax1_ax2_ax3_fused_2) % T.int64(7))
                                        v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(90) + ax0_ax1_ax2_ax3_fused_1) * T.int64(2) + ax0_ax1_ax2_ax3_fused_2 < T.int64(5600))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_update"):
                                v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                v_ff = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(10) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) * T.int64(2) + ff_3 * T.int64(2) + ff_4)
                                v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) * T.int64(2) + yy_3 + yy_4)
                                v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + xx_3 + xx_4)
                                v_rc = T.axis.reduce(T.int64(160), rc_0 * T.int64(80) + rc_1 * T.int64(16) + rc_2)
                                v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 * T.int64(7) + ry_2)
                                v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                T.reads(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx], pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": T.int64(1024), "meta_schedule.thread_extent_low_inclusive": T.int64(32), "meta_schedule.tiling_structure": "SSSRRSRS"})
                                conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                        with T.block("conv2d_nchw_local"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(160), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(10) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(18) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) // T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(18) // T.int64(6) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(6) + ax3)
                            T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v0, v1, v2, v3])
                            T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[16, 1, 5, 1, 2])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 3, 2, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[2, 1, 6, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 5, 16])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 7])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
sch.enter_postproc()
sch.unannotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch")
l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b74)
l108, l109, l110 = sch.split(loop=l107, factors=[None, 90, 2], preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.bind(loop=l109, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch")
l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b87)
l118, l119, l120 = sch.split(loop=l117, factors=[None, 90, 2], preserve_unit_iters=True)
sch.vectorize(loop=l120)
sch.bind(loop=l119, thread_axis="threadIdx.x")
b121 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b121, ann_key="meta_schedule.unroll_explicit")
b122, b123, b124, b125 = sch.get_child_blocks(b121)
l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b122)
l135, l136, l137, l138, l139, l140, l141, l142, l143 = sch.get_loops(block=b123)
l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159, l160, l161, l162, l163 = sch.get_loops(block=b124)
sch.annotate(block_or_loop=l144, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l144, ann_key="pragma_unroll_explicit", ann_val=1)
l164, l165, l166, l167, l168, l169, l170 = sch.get_loops(block=b125)
b171 = sch.get_block(name="conv2d_nchw", func_name="main")
l172, l173, l174, l175, l176, l177, l178, l179, l180, l181, l182, l183, l184, l185, l186, l187, l188, l189, l190, l191 = sch.get_loops(block=b171)
b192 = sch.decompose_reduction(block=b171, loop=l175)
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #194: GFLOPs: 3651.1937. Time: 14.1476 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #195: GFLOPs: 3538.6672. Time: 14.5975 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #196: GFLOPs: 3360.9715. Time: 15.3693 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #197: GFLOPs: 3668.2808. Time: 14.0817 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #198: GFLOPs: 3261.2204. Time: 15.8394 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #199: GFLOPs: 3656.1468. Time: 14.1284 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #200: GFLOPs: 3667.3071. Time: 14.0855 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #201: GFLOPs: 3664.4863. Time: 14.0963 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #202: GFLOPs: 3664.2907. Time: 14.0970 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #203: GFLOPs: 2298.3922. Time: 22.4747 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #204: GFLOPs: 2362.5547. Time: 21.8643 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #205: GFLOPs: 3567.4826. Time: 14.4796 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #206: GFLOPs: 3496.4179. Time: 14.7739 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #207: GFLOPs: 3419.7585. Time: 15.1051 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #208: GFLOPs: 3437.8347. Time: 15.0256 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #209: GFLOPs: 3664.7502. Time: 14.0953 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #210: GFLOPs: 3536.9712. Time: 14.6045 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #211: GFLOPs: 3203.4311. Time: 16.1251 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #212: GFLOPs: 3420.2645. Time: 15.1028 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #213: GFLOPs: 3664.3760. Time: 14.0967 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #214: GFLOPs: 3012.9006. Time: 17.1448 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #215: GFLOPs: 3601.7734. Time: 14.3417 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #216: GFLOPs: 3581.0688. Time: 14.4247 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #217: GFLOPs: 3682.0861. Time: 14.0289 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #218: GFLOPs: 3543.7354. Time: 14.5766 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #219: GFLOPs: 2958.2419. Time: 17.4616 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #220: GFLOPs: 3637.3005. Time: 14.2017 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #221: GFLOPs: 3536.6040. Time: 14.6060 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #222: GFLOPs: 2928.6244. Time: 17.6382 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #223: GFLOPs: 3655.7433. Time: 14.1300 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #224: GFLOPs: 3604.6886. Time: 14.3301 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #225: GFLOPs: 3271.0828. Time: 15.7916 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #226: GFLOPs: 2948.5575. Time: 17.5190 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #227: GFLOPs: 3494.1613. Time: 14.7834 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #228: GFLOPs: 2961.4263. Time: 17.4428 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #229: GFLOPs: 2957.7214. Time: 17.4647 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #230: GFLOPs: 3536.9853. Time: 14.6044 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #231: GFLOPs: 2130.2332. Time: 24.2488 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #232: GFLOPs: 3155.1044. Time: 16.3721 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #233: GFLOPs: 2928.7617. Time: 17.6374 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #234: GFLOPs: 2366.9199. Time: 21.8240 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #235: GFLOPs: 2352.4884. Time: 21.9579 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #236: GFLOPs: 3237.7176. Time: 15.9544 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #237: GFLOPs: 2362.6119. Time: 21.8638 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #238: GFLOPs: 2941.8338. Time: 17.5590 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #239: GFLOPs: 2970.3009. Time: 17.3907 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #240: GFLOPs: 3420.2114. Time: 15.1031 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #241: GFLOPs: 3203.0439. Time: 16.1271 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #242: GFLOPs: 1179.5486. Time: 43.7928 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #243: GFLOPs: 3110.2981. Time: 16.6080 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #244: GFLOPs: 2325.2777. Time: 22.2148 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #245: GFLOPs: 3058.5501. Time: 16.8889 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #246: GFLOPs: 3020.9533. Time: 17.0991 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #247: GFLOPs: 3203.1734. Time: 16.1264 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #248: GFLOPs: 3370.4397. Time: 15.3261 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #249: GFLOPs: 3416.8651. Time: 15.1179 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #250: GFLOPs: 3155.6557. Time: 16.3692 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #251: GFLOPs: 2903.3564. Time: 17.7917 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #252: GFLOPs: 3416.8101. Time: 15.1181 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #253: GFLOPs: 3110.0980. Time: 16.6090 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #254: GFLOPs: 149.3194. Time: 345.9410 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #255: GFLOPs: 154.8425. Time: 333.6014 us. Best GFLOPs: 3713.0094
2024-05-01 18:47:00 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #256: GFLOPs: 116.3134. Time: 444.1077 us. Best GFLOPs: 3713.0094
2024-05-01 19:40:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:40:30 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:40:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 383 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 19:40:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 773 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 19:40:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 1163 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 19:40:36 [INFO] [evolutionary_search.cc:723] Sampled 67 candidate(s)
2024-05-01 19:40:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 237 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 19:40:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 160 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 19:40:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 181 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 19:40:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabd8348)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb485b08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x87160c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x872b088)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3520358)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b2468)]: 186 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb251a58)]: 0 failure(s)
2024-05-01 19:40:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9824  0.9653  0.9614  0.9606  0.9604  0.9597  0.9573  0.9564  0.9479  0.9447  0.9446  0.9442  0.9433  0.9419  0.9412  0.9395
[17 : 32]:	0.9384  0.9372  0.9372  0.9370  0.9370  0.9367  0.9361  0.9351  0.9348  0.9344  0.9339  0.9336  0.9309  0.9286  0.9281  0.9277
[33 : 48]:	0.9272  0.9260  0.9251  0.9247  0.9245  0.9236  0.9222  0.9220  0.9203  0.9190  0.9185  0.9173  0.9172  0.9157  0.9149  0.9145
[49 : 64]:	0.9145  0.9138  0.9130  0.9110  0.9096  0.9096  0.9091  0.9090  0.9087  0.9084  0.9075  0.9074  0.9054  0.9047  0.9042  0.9038
2024-05-01 19:40:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:40:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #257: GFLOPs: 3607.7053. Time: 14.3182 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #258: GFLOPs: 3625.3781. Time: 14.2484 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #259: GFLOPs: 3600.7152. Time: 14.3460 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #260: GFLOPs: 2240.4974. Time: 23.0555 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #261: GFLOPs: 3484.4424. Time: 14.8247 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #262: GFLOPs: 3540.4276. Time: 14.5902 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #263: GFLOPs: 3548.7449. Time: 14.5560 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #264: GFLOPs: 3351.7014. Time: 15.4118 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #265: GFLOPs: 3582.7762. Time: 14.4178 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #266: GFLOPs: 3600.5113. Time: 14.3468 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #267: GFLOPs: 3529.9115. Time: 14.6337 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #268: GFLOPs: 2662.9900. Time: 19.3976 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #269: GFLOPs: 3526.9557. Time: 14.6460 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #270: GFLOPs: 3406.6618. Time: 15.1631 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #271: GFLOPs: 3360.7411. Time: 15.3703 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #272: GFLOPs: 2657.0526. Time: 19.4410 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #273: GFLOPs: 3179.3212. Time: 16.2474 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #274: GFLOPs: 2267.8359. Time: 22.7775 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #275: GFLOPs: 3466.4994. Time: 14.9014 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #276: GFLOPs: 2288.0095. Time: 22.5767 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #277: GFLOPs: 3416.8569. Time: 15.1179 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #278: GFLOPs: 3112.8105. Time: 16.5945 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #279: GFLOPs: 3607.5072. Time: 14.3189 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #280: GFLOPs: 3144.0932. Time: 16.4294 us. Best GFLOPs: 3713.0094
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #281: GFLOPs: 3735.8477. Time: 13.8270 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #282: GFLOPs: 3467.0881. Time: 14.8989 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #283: GFLOPs: 3298.3625. Time: 15.6610 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #284: GFLOPs: 3555.1560. Time: 14.5298 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #285: GFLOPs: 3592.4474. Time: 14.3790 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #286: GFLOPs: 3416.5347. Time: 15.1193 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #287: GFLOPs: 3540.4310. Time: 14.5902 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #288: GFLOPs: 3589.1231. Time: 14.3923 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #289: GFLOPs: 3517.1075. Time: 14.6870 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #290: GFLOPs: 3554.3902. Time: 14.5329 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #291: GFLOPs: 3593.2519. Time: 14.3757 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #292: GFLOPs: 2530.3291. Time: 20.4146 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #293: GFLOPs: 3361.8881. Time: 15.3651 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #294: GFLOPs: 3502.2755. Time: 14.7492 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #295: GFLOPs: 3525.5458. Time: 14.6518 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #296: GFLOPs: 2759.9561. Time: 18.7161 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #297: GFLOPs: 3501.9215. Time: 14.7507 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #298: GFLOPs: 3237.0340. Time: 15.9577 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #299: GFLOPs: 3254.5272. Time: 15.8719 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #300: GFLOPs: 3482.1997. Time: 14.8342 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #301: GFLOPs: 3528.5961. Time: 14.6392 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #302: GFLOPs: 3445.2549. Time: 14.9933 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #303: GFLOPs: 2961.5521. Time: 17.4421 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #304: GFLOPs: 3544.0562. Time: 14.5753 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #305: GFLOPs: 3200.7564. Time: 16.1386 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #306: GFLOPs: 3299.0189. Time: 15.6579 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #307: GFLOPs: 3542.8717. Time: 14.5802 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #308: GFLOPs: 3240.0669. Time: 15.9428 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #309: GFLOPs: 3367.7339. Time: 15.3384 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #310: GFLOPs: 3529.1100. Time: 14.6370 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #311: GFLOPs: 2845.5257. Time: 18.1533 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #312: GFLOPs: 3444.9396. Time: 14.9947 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #313: GFLOPs: 2346.8194. Time: 22.0109 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #314: GFLOPs: 2061.6861. Time: 25.0551 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #315: GFLOPs: 3369.3228. Time: 15.3312 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #316: GFLOPs: 3386.7535. Time: 15.2523 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #317: GFLOPs: 2315.4595. Time: 22.3090 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #318: GFLOPs: 103.2915. Time: 500.0960 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #319: GFLOPs: 29.0835. Time: 1776.1190 us. Best GFLOPs: 3735.8477
2024-05-01 19:42:12 [INFO] [task_scheduler.cc:131] [Task #17: fused_nn_conv2d_add_nn_relu_11] Trial #320: GFLOPs: 149.4398. Time: 345.6621 us. Best GFLOPs: 3735.8477
