2024-04-29 01:54:14 [INFO] [task_scheduler.cc:160] Initializing Task #5: "fused_nn_pad_1"
2024-04-29 01:54:14 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280), T.int64(5), T.int64(5)), "float32"), T_pad: T.Buffer((T.int64(1), T.int64(1280), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        compile_engine_const = T.alloc_buffer(())
        T_cast = T.alloc_buffer(())
        with T.block("compile_engine_const"):
            vi = T.axis.spatial(T.int64(1), T.int64(0))
            T.reads()
            T.writes(compile_engine_const[()])
            compile_engine_const[()] = T.float32(0)
        with T.block("T_cast"):
            vi = T.axis.spatial(T.int64(1), T.int64(0))
            T.reads(compile_engine_const[()])
            T.writes(T_cast[()])
            T_cast[()] = compile_engine_const[()]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1280), T.int64(7), T.int64(7)):
            with T.block("T_pad"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1, v_ax2 - T.int64(1), v_ax3 - T.int64(1)], T_cast[()])
                T.writes(T_pad[v_ax0, v_ax1, v_ax2, v_ax3])
                T_pad[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(1) <= v_ax2 and v_ax2 < T.int64(6) and T.int64(1) <= v_ax3 and v_ax3 < T.int64(6), p0[v_ax0, v_ax1, v_ax2 - T.int64(1), v_ax3 - T.int64(1)], T_cast[()])
2024-04-29 01:54:14 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-29 01:54:14 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280), T.int64(5), T.int64(5)), "float32"), T_pad: T.Buffer((T.int64(1), T.int64(1280), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(490), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                with T.block("T_pad"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(1280), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) // T.int64(49))
                    v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49) // T.int64(7))
                    v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                    T.reads(p0[v_ax0, v_ax1, v_ax2 - T.int64(1), v_ax3 - T.int64(1)])
                    T.writes(T_pad[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_pad[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(1) <= v_ax2 and v_ax2 < T.int64(6) and T.int64(1) <= v_ax3 and v_ax3 < T.int64(6), p0[v_ax0, v_ax1, v_ax2 - T.int64(1), v_ax3 - T.int64(1)], T.float32(0))
b0 = sch.get_block(name="compile_engine_const", func_name="main")
b1 = sch.get_block(name="T_cast", func_name="main")
b2 = sch.get_block(name="T_pad", func_name="main")
sch.compute_inline(block=b0)
sch.compute_inline(block=b1)
l3, l4, l5, l6 = sch.get_loops(block=b2)
l7 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
v8 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l9, thread_axis="blockIdx.x")
sch.bind(loop=l10, thread_axis="threadIdx.x")
2024-04-29 02:03:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:03:55 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:03:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabb19a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c50a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xab4a8c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3fc7838)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7d35f98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x32de038)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x32ca398)]: 0 failure(s)
2024-04-29 02:03:58 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 02:03:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabb19a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c50a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xab4a8c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3fc7838)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7d35f98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x32de038)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x32ca398)]: 0 failure(s)
2024-04-29 02:03:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabb19a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c50a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xab4a8c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3fc7838)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7d35f98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x32de038)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x32ca398)]: 0 failure(s)
2024-04-29 02:03:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabb19a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c50a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xab4a8c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3fc7838)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7d35f98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x32de038)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x32ca398)]: 0 failure(s)
2024-04-29 02:03:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xabb19a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c50a38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xab4a8c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3fc7838)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7d35f98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x32de038)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x32ca398)]: 0 failure(s)
2024-04-29 02:03:59 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.7632  0.7489  0.7440  0.5637  0.4567  0.0253
2024-04-29 02:03:59 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-04-29 02:03:59 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-04-29 04:00:25 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #1: GFLOPs: 0.0003. Time: 3.3864 us. Best GFLOPs: 0.0003
2024-04-29 04:00:25 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #2: GFLOPs: 0.0003. Time: 3.1467 us. Best GFLOPs: 0.0003
2024-04-29 04:00:25 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #3: GFLOPs: 0.0003. Time: 3.1517 us. Best GFLOPs: 0.0003
2024-04-29 04:00:25 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #4: GFLOPs: 0.0003. Time: 3.1279 us. Best GFLOPs: 0.0003
2024-04-29 04:00:25 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #5: GFLOPs: 0.0003. Time: 3.1098 us. Best GFLOPs: 0.0003
2024-04-29 04:00:25 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #6: GFLOPs: 0.0002. Time: 4.1058 us. Best GFLOPs: 0.0003
2024-05-01 15:09:52 [INFO] [task_scheduler.cc:160] Initializing Task #5: "fused_nn_pad_1"
2024-05-01 15:09:52 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280), T.int64(5), T.int64(5)), "float32"), T_pad: T.Buffer((T.int64(1), T.int64(1280), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        compile_engine_const = T.alloc_buffer(())
        T_cast = T.alloc_buffer(())
        with T.block("compile_engine_const"):
            vi = T.axis.spatial(T.int64(1), T.int64(0))
            T.reads()
            T.writes(compile_engine_const[()])
            compile_engine_const[()] = T.float32(0)
        with T.block("T_cast"):
            vi = T.axis.spatial(T.int64(1), T.int64(0))
            T.reads(compile_engine_const[()])
            T.writes(T_cast[()])
            T_cast[()] = compile_engine_const[()]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1280), T.int64(7), T.int64(7)):
            with T.block("T_pad"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1, v_ax2 - T.int64(1), v_ax3 - T.int64(1)], T_cast[()])
                T.writes(T_pad[v_ax0, v_ax1, v_ax2, v_ax3])
                T_pad[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(1) <= v_ax2 and v_ax2 < T.int64(6) and T.int64(1) <= v_ax3 and v_ax3 < T.int64(6), p0[v_ax0, v_ax1, v_ax2 - T.int64(1), v_ax3 - T.int64(1)], T_cast[()])
2024-05-01 15:09:52 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-05-01 15:09:52 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1280), T.int64(5), T.int64(5)), "float32"), T_pad: T.Buffer((T.int64(1), T.int64(1280), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(123), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                with T.block("T_pad"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(1280), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) // T.int64(49))
                    v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49) // T.int64(7))
                    v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                    T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1 < T.int64(62720))
                    T.reads(p0[v_ax0, v_ax1, v_ax2 - T.int64(1), v_ax3 - T.int64(1)])
                    T.writes(T_pad[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_pad[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(1) <= v_ax2 and v_ax2 < T.int64(6) and T.int64(1) <= v_ax3 and v_ax3 < T.int64(6), p0[v_ax0, v_ax1, v_ax2 - T.int64(1), v_ax3 - T.int64(1)], T.float32(0))
b0 = sch.get_block(name="compile_engine_const", func_name="main")
b1 = sch.get_block(name="T_cast", func_name="main")
b2 = sch.get_block(name="T_pad", func_name="main")
sch.compute_inline(block=b0)
sch.compute_inline(block=b1)
l3, l4, l5, l6 = sch.get_loops(block=b2)
l7 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
v8 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l9, thread_axis="blockIdx.x")
sch.bind(loop=l10, thread_axis="threadIdx.x")
2024-05-01 15:16:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 15:16:32 [INFO] [evolutionary_search.cc:715] Picked top 6 candidate(s) from database
2024-05-01 15:16:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x354cfd8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86e5538)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb095a08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab83628)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35f7f28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7c454e8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86e5818)]: 0 failure(s)
2024-05-01 15:16:34 [INFO] [evolutionary_search.cc:723] Sampled 506 candidate(s)
2024-05-01 15:16:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x354cfd8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86e5538)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb095a08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab83628)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35f7f28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7c454e8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86e5818)]: 0 failure(s)
2024-05-01 15:16:34 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x354cfd8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86e5538)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb095a08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab83628)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35f7f28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7c454e8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86e5818)]: 0 failure(s)
2024-05-01 15:16:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x354cfd8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86e5538)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb095a08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab83628)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35f7f28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7c454e8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86e5818)]: 0 failure(s)
2024-05-01 15:16:35 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x354cfd8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x86e5538)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb095a08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xab83628)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35f7f28)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7c454e8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x86e5818)]: 0 failure(s)
2024-05-01 15:16:35 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.8151  0.7379  0.4432  0.3760  0.3715  0.3200
2024-05-01 15:16:35 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-05-01 15:16:35 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-05-01 16:36:55 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #1: GFLOPs: 0.0003. Time: 3.3573 us. Best GFLOPs: 0.0003
2024-05-01 16:36:55 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #2: GFLOPs: 0.0004. Time: 2.8362 us. Best GFLOPs: 0.0004
2024-05-01 16:36:55 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #3: GFLOPs: 0.0003. Time: 3.1510 us. Best GFLOPs: 0.0004
2024-05-01 16:36:55 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #4: GFLOPs: 0.0004. Time: 2.8571 us. Best GFLOPs: 0.0004
2024-05-01 16:36:55 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #5: GFLOPs: 0.0004. Time: 2.8299 us. Best GFLOPs: 0.0004
2024-05-01 16:36:55 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_pad_1] Trial #6: GFLOPs: 0.0002. Time: 4.0878 us. Best GFLOPs: 0.0004
