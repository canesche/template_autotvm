2024-04-29 01:54:30 [INFO] [task_scheduler.cc:160] Initializing Task #51: "fused_nn_max_pool2d_3"
2024-04-29 01:54:30 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(52), T.int64(52)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(192), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0, ax1, ax2, ax3, rv0, rv1 in T.grid(T.int64(1), T.int64(192), T.int64(25), T.int64(25), T.int64(3), T.int64(3)):
            with T.block("pool_max"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_rv0, v_rv1 = T.axis.remap("SSSSRR", [ax0, ax1, ax2, ax3, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"schedule_rule": "meta_schedule.pool_max"})
                with T.init():
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
2024-04-29 01:54:30 [INFO] [task_scheduler.cc:164] Total 2 design space(s) generated
2024-04-29 01:54:30 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(52), T.int64(52)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(192), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(469), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for rv0, rv1 in T.grid(T.int64(3), T.int64(3)):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(192), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) // T.int64(625))
                            v_ax2 = T.axis.spatial(T.int64(25), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) % T.int64(625) // T.int64(25))
                            v_ax3 = T.axis.spatial(T.int64(25), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) % T.int64(25))
                            v_rv0, v_rv1 = T.axis.remap("RR", [rv0, rv1])
                            T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1 < T.int64(120000))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v2)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
v10 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l11, l12 = sch.split(loop=l9, factors=[None, v10], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="blockIdx.x")
sch.bind(loop=l12, thread_axis="threadIdx.x")
2024-04-29 01:54:30 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(52), T.int64(52)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(192), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            for ax0_ax1_ax2_ax3_fused in T.thread_binding(T.int64(120000), thread="blockIdx.x"):
                for rv0_rv1_fused_0 in range(T.int64(1)):
                    for rv0_rv1_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(192), ax0_ax1_ax2_ax3_fused // T.int64(625))
                            v_ax2 = T.axis.spatial(T.int64(25), ax0_ax1_ax2_ax3_fused % T.int64(625) // T.int64(25))
                            v_ax3 = T.axis.spatial(T.int64(25), ax0_ax1_ax2_ax3_fused % T.int64(25))
                            v_rv0 = T.axis.reduce(T.int64(3), (rv0_rv1_fused_0 * T.int64(32) + rv0_rv1_fused_1) // T.int64(3))
                            v_rv1 = T.axis.reduce(T.int64(3), (rv0_rv1_fused_0 * T.int64(32) + rv0_rv1_fused_1) % T.int64(3))
                            T.where(rv0_rv1_fused_0 * T.int64(32) + rv0_rv1_fused_1 < T.int64(9))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=3)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l7, l8, preserve_unit_iters=True)
l10, l11 = sch.split(loop=l9, factors=[None, v2], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="threadIdx.x")
v12 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v12)
l13, l14, l15, l16, l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l13, l14, l15, l16, preserve_unit_iters=True)
sch.bind(loop=l19, thread_axis="blockIdx.x")
2024-04-29 03:32:05 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:32:05 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 03:32:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xaba8e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb24b778)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb24b148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6d53878)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7358b78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33f9958)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x35de9a8)]: 0 failure(s)
2024-04-29 03:32:05 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 03:32:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xaba8e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb24b778)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb24b148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6d53878)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7358b78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33f9958)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x35de9a8)]: 0 failure(s)
2024-04-29 03:32:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xaba8e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb24b778)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb24b148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6d53878)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7358b78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33f9958)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x35de9a8)]: 0 failure(s)
2024-04-29 03:32:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xaba8e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb24b778)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb24b148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6d53878)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7358b78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33f9958)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x35de9a8)]: 0 failure(s)
2024-04-29 03:32:07 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xaba8e18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb24b778)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb24b148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6d53878)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7358b78)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33f9958)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x35de9a8)]: 0 failure(s)
2024-04-29 03:32:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9880  0.9668  0.9493  0.9437  0.9157  0.9001  0.8859  0.8610  0.8534  0.8416  0.8401  0.8325  0.8304  0.8273  0.8157  0.8116
[17 : 32]:	0.8099  0.7914  0.7896  0.7874  0.7858  0.7801  0.7717  0.7658  0.7237  0.6871  0.6858  0.6498  0.6381  0.6201  0.6043  0.5852
[33 : 48]:	0.5663  0.5630  0.5579  0.5413  0.5192  0.5094  0.5031  0.4696  0.4568  0.4394  0.4372  0.4251  0.4224  0.3954  0.3640  0.3359
[49 : 64]:	0.3258  0.3172  0.3033  0.2428  0.2173  0.1756  0.1711  0.1655  0.1563  0.1550  0.1533  0.1111  0.1070  0.1069  0.1049  0.1045
2024-04-29 03:32:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:32:07 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #1: GFLOPs: 230.7333. Time: 4.6807 us. Best GFLOPs: 230.7333
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #2: GFLOPs: 11.7215. Time: 92.1384 us. Best GFLOPs: 230.7333
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #3: GFLOPs: 269.5458. Time: 4.0067 us. Best GFLOPs: 269.5458
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #4: GFLOPs: 249.7478. Time: 4.3244 us. Best GFLOPs: 269.5458
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #5: GFLOPs: 9.1121. Time: 118.5243 us. Best GFLOPs: 269.5458
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #6: GFLOPs: 255.4633. Time: 4.2276 us. Best GFLOPs: 269.5458
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #7: GFLOPs: 250.7417. Time: 4.3072 us. Best GFLOPs: 269.5458
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #8: GFLOPs: 270.1391. Time: 3.9979 us. Best GFLOPs: 270.1391
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #9: GFLOPs: 270.1446. Time: 3.9979 us. Best GFLOPs: 270.1446
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #10: GFLOPs: 11.7685. Time: 91.7702 us. Best GFLOPs: 270.1446
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #11: GFLOPs: 11.7333. Time: 92.0459 us. Best GFLOPs: 270.1446
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #12: GFLOPs: 11.7963. Time: 91.5538 us. Best GFLOPs: 270.1446
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #13: GFLOPs: 4.5435. Time: 237.7008 us. Best GFLOPs: 270.1446
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #14: GFLOPs: 4.5435. Time: 237.7008 us. Best GFLOPs: 270.1446
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #15: GFLOPs: 11.7406. Time: 91.9888 us. Best GFLOPs: 270.1446
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #16: GFLOPs: 270.1609. Time: 3.9976 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #17: GFLOPs: 11.7236. Time: 92.1215 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #18: GFLOPs: 4.5436. Time: 237.6971 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #19: GFLOPs: 9.1121. Time: 118.5232 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #20: GFLOPs: 9.1123. Time: 118.5209 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #21: GFLOPs: 9.1121. Time: 118.5232 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #22: GFLOPs: 255.4875. Time: 4.2272 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #23: GFLOPs: 238.7612. Time: 4.5233 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #24: GFLOPs: 270.0766. Time: 3.9989 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #25: GFLOPs: 11.7370. Time: 92.0168 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #26: GFLOPs: 186.0855. Time: 5.8038 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #27: GFLOPs: 11.7379. Time: 92.0098 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #28: GFLOPs: 11.7335. Time: 92.0444 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #29: GFLOPs: 11.7370. Time: 92.0169 us. Best GFLOPs: 270.1609
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #30: GFLOPs: 273.6010. Time: 3.9474 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #31: GFLOPs: 11.7379. Time: 92.0097 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #32: GFLOPs: 11.7376. Time: 92.0121 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #33: GFLOPs: 4.5436. Time: 237.6956 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #34: GFLOPs: 11.7963. Time: 91.5542 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #35: GFLOPs: 11.7403. Time: 91.9907 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #36: GFLOPs: 11.7374. Time: 92.0135 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #37: GFLOPs: 255.4984. Time: 4.2270 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #38: GFLOPs: 11.7678. Time: 91.7758 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #39: GFLOPs: 269.9580. Time: 4.0006 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #40: GFLOPs: 251.4440. Time: 4.2952 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #41: GFLOPs: 238.8124. Time: 4.5224 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #42: GFLOPs: 11.7674. Time: 91.7792 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #43: GFLOPs: 11.7371. Time: 92.0159 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #44: GFLOPs: 255.3540. Time: 4.2294 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #45: GFLOPs: 11.7402. Time: 91.9912 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #46: GFLOPs: 11.7681. Time: 91.7733 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #47: GFLOPs: 185.7479. Time: 5.8143 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #48: GFLOPs: 11.7367. Time: 92.0191 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #49: GFLOPs: 11.7966. Time: 91.5514 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #50: GFLOPs: 11.7964. Time: 91.5534 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #51: GFLOPs: 186.0734. Time: 5.8042 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #52: GFLOPs: 270.2405. Time: 3.9964 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #53: GFLOPs: 253.7456. Time: 4.2562 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #54: GFLOPs: 251.1362. Time: 4.3005 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #55: GFLOPs: 228.2982. Time: 4.7307 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #56: GFLOPs: 11.7371. Time: 92.0160 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #57: GFLOPs: 262.9421. Time: 4.1074 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #58: GFLOPs: 11.7424. Time: 91.9740 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #59: GFLOPs: 11.7964. Time: 91.5537 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #60: GFLOPs: 11.7396. Time: 91.9960 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #61: GFLOPs: 11.7424. Time: 91.9745 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #62: GFLOPs: 186.0059. Time: 5.8063 us. Best GFLOPs: 273.6010
2024-04-29 04:03:11 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #63: GFLOPs: 185.6667. Time: 5.8169 us. Best GFLOPs: 273.6010
2024-05-01 15:10:07 [INFO] [task_scheduler.cc:160] Initializing Task #51: "fused_nn_max_pool2d_3"
2024-05-01 15:10:07 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(52), T.int64(52)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(192), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0, ax1, ax2, ax3, rv0, rv1 in T.grid(T.int64(1), T.int64(192), T.int64(25), T.int64(25), T.int64(3), T.int64(3)):
            with T.block("pool_max"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_rv0, v_rv1 = T.axis.remap("SSSSRR", [ax0, ax1, ax2, ax3, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"schedule_rule": "meta_schedule.pool_max"})
                with T.init():
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
2024-05-01 15:10:07 [INFO] [task_scheduler.cc:164] Total 2 design space(s) generated
2024-05-01 15:10:07 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(52), T.int64(52)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(192), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(3750), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for rv0, rv1 in T.grid(T.int64(3), T.int64(3)):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(192), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(625))
                            v_ax2 = T.axis.spatial(T.int64(25), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(625) // T.int64(25))
                            v_ax3 = T.axis.spatial(T.int64(25), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(25))
                            v_rv0, v_rv1 = T.axis.remap("RR", [rv0, rv1])
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v2)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
v10 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l11, l12 = sch.split(loop=l9, factors=[None, v10], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="blockIdx.x")
sch.bind(loop=l12, thread_axis="threadIdx.x")
2024-05-01 15:10:07 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(52), T.int64(52)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(192), T.int64(25), T.int64(25)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            for ax0_ax1_ax2_ax3_fused in T.thread_binding(T.int64(120000), thread="blockIdx.x"):
                for rv0_rv1_fused_0 in range(T.int64(1)):
                    for rv0_rv1_fused_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(192), ax0_ax1_ax2_ax3_fused // T.int64(625))
                            v_ax2 = T.axis.spatial(T.int64(25), ax0_ax1_ax2_ax3_fused % T.int64(625) // T.int64(25))
                            v_ax3 = T.axis.spatial(T.int64(25), ax0_ax1_ax2_ax3_fused % T.int64(25))
                            v_rv0 = T.axis.reduce(T.int64(3), (rv0_rv1_fused_0 * T.int64(16) + rv0_rv1_fused_1) // T.int64(3))
                            v_rv1 = T.axis.reduce(T.int64(3), (rv0_rv1_fused_0 * T.int64(16) + rv0_rv1_fused_1) % T.int64(3))
                            T.where(rv0_rv1_fused_0 * T.int64(16) + rv0_rv1_fused_1 < T.int64(9))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=2)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l7, l8, preserve_unit_iters=True)
l10, l11 = sch.split(loop=l9, factors=[None, v2], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="threadIdx.x")
v12 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v12)
l13, l14, l15, l16, l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l13, l14, l15, l16, preserve_unit_iters=True)
sch.bind(loop=l19, thread_axis="blockIdx.x")
2024-05-01 16:20:20 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 16:20:20 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-05-01 16:20:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x398e8d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8702168)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x872fcd8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x38a6468)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4030328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac54638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x3426fe8)]: 0 failure(s)
2024-05-01 16:20:21 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-05-01 16:20:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x398e8d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8702168)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x872fcd8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x38a6468)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4030328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac54638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x3426fe8)]: 0 failure(s)
2024-05-01 16:20:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x398e8d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8702168)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x872fcd8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x38a6468)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4030328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac54638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x3426fe8)]: 0 failure(s)
2024-05-01 16:20:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x398e8d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8702168)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x872fcd8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x38a6468)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4030328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac54638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x3426fe8)]: 0 failure(s)
2024-05-01 16:20:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x398e8d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x8702168)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x872fcd8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x38a6468)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4030328)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xac54638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x3426fe8)]: 0 failure(s)
2024-05-01 16:20:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9853  0.9506  0.9301  0.8964  0.8845  0.8818  0.8670  0.8643  0.8588  0.8311  0.8282  0.8172  0.8145  0.8060  0.7994  0.7985
[17 : 32]:	0.7902  0.7621  0.7598  0.7327  0.7322  0.7290  0.6946  0.6613  0.6554  0.6492  0.6333  0.6322  0.6210  0.6182  0.6089  0.5852
[33 : 48]:	0.5802  0.5690  0.5641  0.5487  0.5447  0.5425  0.5186  0.5042  0.5005  0.4767  0.4674  0.4591  0.4507  0.4486  0.4173  0.4051
[49 : 64]:	0.4013  0.3918  0.3777  0.3728  0.3335  0.3216  0.3206  0.3004  0.2788  0.2780  0.2753  0.2726  0.1969  0.1925  0.1565  0.1278
2024-05-01 16:20:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 16:20:22 [INFO] [evolutionary_search.cc:730] Sending 61 candidates(s) for measurement
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #1: GFLOPs: 11.7625. Time: 91.8171 us. Best GFLOPs: 11.7625
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #2: GFLOPs: 11.7493. Time: 91.9200 us. Best GFLOPs: 11.7625
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #3: GFLOPs: 11.7433. Time: 91.9676 us. Best GFLOPs: 11.7625
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #4: GFLOPs: 254.0542. Time: 4.2511 us. Best GFLOPs: 254.0542
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #5: GFLOPs: 194.0070. Time: 5.5668 us. Best GFLOPs: 254.0542
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #6: GFLOPs: 268.7916. Time: 4.0180 us. Best GFLOPs: 268.7916
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #7: GFLOPs: 268.2692. Time: 4.0258 us. Best GFLOPs: 268.7916
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #8: GFLOPs: 11.8096. Time: 91.4514 us. Best GFLOPs: 268.7916
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #9: GFLOPs: 11.7432. Time: 91.9678 us. Best GFLOPs: 268.7916
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #10: GFLOPs: 9.1093. Time: 118.5597 us. Best GFLOPs: 268.7916
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #11: GFLOPs: 4.5408. Time: 237.8415 us. Best GFLOPs: 268.7916
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #12: GFLOPs: 284.0919. Time: 3.8016 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #13: GFLOPs: 11.7501. Time: 91.9139 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #14: GFLOPs: 11.7746. Time: 91.7228 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #15: GFLOPs: 11.7460. Time: 91.9462 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #16: GFLOPs: 11.8100. Time: 91.4478 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #17: GFLOPs: 11.7430. Time: 91.9695 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #18: GFLOPs: 4.5408. Time: 237.8412 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #19: GFLOPs: 11.7740. Time: 91.7276 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #20: GFLOPs: 11.7504. Time: 91.9116 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #21: GFLOPs: 284.0779. Time: 3.8018 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #22: GFLOPs: 11.7452. Time: 91.9521 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #23: GFLOPs: 283.3037. Time: 3.8122 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #24: GFLOPs: 11.7424. Time: 91.9743 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #25: GFLOPs: 276.7269. Time: 3.9028 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #26: GFLOPs: 193.9515. Time: 5.5684 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #27: GFLOPs: 268.0331. Time: 4.0294 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #28: GFLOPs: 4.5405. Time: 237.8580 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #29: GFLOPs: 284.0629. Time: 3.8020 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #30: GFLOPs: 268.0484. Time: 4.0291 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #31: GFLOPs: 11.7508. Time: 91.9086 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #32: GFLOPs: 193.9375. Time: 5.5688 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #33: GFLOPs: 11.7419. Time: 91.9780 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #34: GFLOPs: 11.7737. Time: 91.7297 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #35: GFLOPs: 193.9321. Time: 5.5690 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #36: GFLOPs: 11.7741. Time: 91.7270 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #37: GFLOPs: 11.7498. Time: 91.9168 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #38: GFLOPs: 4.5406. Time: 237.8528 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #39: GFLOPs: 11.7460. Time: 91.9464 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #40: GFLOPs: 11.7498. Time: 91.9164 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #41: GFLOPs: 11.8094. Time: 91.4528 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #42: GFLOPs: 9.1091. Time: 118.5625 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #43: GFLOPs: 253.8555. Time: 4.2544 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #44: GFLOPs: 9.1093. Time: 118.5597 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #45: GFLOPs: 229.6893. Time: 4.7020 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #46: GFLOPs: 11.7455. Time: 91.9503 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #47: GFLOPs: 253.9703. Time: 4.2525 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #48: GFLOPs: 9.1097. Time: 118.5546 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #49: GFLOPs: 253.8577. Time: 4.2544 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #50: GFLOPs: 267.9557. Time: 4.0305 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #51: GFLOPs: 253.8137. Time: 4.2551 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #52: GFLOPs: 4.5406. Time: 237.8543 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #53: GFLOPs: 11.7451. Time: 91.9533 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #54: GFLOPs: 283.3178. Time: 3.8120 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #55: GFLOPs: 11.7495. Time: 91.9188 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #56: GFLOPs: 11.8094. Time: 91.4526 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #57: GFLOPs: 193.9340. Time: 5.5689 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #58: GFLOPs: 254.0139. Time: 4.2517 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #59: GFLOPs: 11.7515. Time: 91.9030 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #60: GFLOPs: 284.0515. Time: 3.8021 us. Best GFLOPs: 284.0919
2024-05-01 16:38:23 [INFO] [task_scheduler.cc:131] [Task #51: fused_nn_max_pool2d_3] Trial #61: GFLOPs: 283.3082. Time: 3.8121 us. Best GFLOPs: 284.0919
