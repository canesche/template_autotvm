2024-04-29 01:54:28 [INFO] [task_scheduler.cc:160] Initializing Task #48: "fused_nn_max_pool2d_2"
2024-04-29 01:54:28 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(109), T.int64(109)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(54), T.int64(54)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0, ax1, ax2, ax3, rv0, rv1 in T.grid(T.int64(1), T.int64(64), T.int64(54), T.int64(54), T.int64(3), T.int64(3)):
            with T.block("pool_max"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_rv0, v_rv1 = T.axis.remap("SSSSRR", [ax0, ax1, ax2, ax3, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"schedule_rule": "meta_schedule.pool_max"})
                with T.init():
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
2024-04-29 01:54:28 [INFO] [task_scheduler.cc:164] Total 2 design space(s) generated
2024-04-29 01:54:28 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(109), T.int64(109)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(54), T.int64(54)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(2916), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    for rv0, rv1 in T.grid(T.int64(3), T.int64(3)):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) // T.int64(2916))
                            v_ax2 = T.axis.spatial(T.int64(54), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) % T.int64(2916) // T.int64(54))
                            v_ax3 = T.axis.spatial(T.int64(54), (ax0_ax1_ax2_ax3_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused_1) % T.int64(54))
                            v_rv0, v_rv1 = T.axis.remap("RR", [rv0, rv1])
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v2)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
v10 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=1)
l11, l12 = sch.split(loop=l9, factors=[None, v10], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="blockIdx.x")
sch.bind(loop=l12, thread_axis="threadIdx.x")
2024-04-29 01:54:28 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(109), T.int64(109)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(54), T.int64(54)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            for ax0_ax1_ax2_ax3_fused in T.thread_binding(T.int64(186624), thread="blockIdx.x"):
                for rv0_rv1_fused_0 in range(T.int64(3)):
                    for rv0_rv1_fused_1 in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(64), ax0_ax1_ax2_ax3_fused // T.int64(2916))
                            v_ax2 = T.axis.spatial(T.int64(54), ax0_ax1_ax2_ax3_fused % T.int64(2916) // T.int64(54))
                            v_ax3 = T.axis.spatial(T.int64(54), ax0_ax1_ax2_ax3_fused % T.int64(54))
                            v_rv0 = T.axis.reduce(T.int64(3), (rv0_rv1_fused_0 * T.int64(4) + rv0_rv1_fused_1) // T.int64(3))
                            v_rv1 = T.axis.reduce(T.int64(3), (rv0_rv1_fused_0 * T.int64(4) + rv0_rv1_fused_1) % T.int64(3))
                            T.where(rv0_rv1_fused_0 * T.int64(4) + rv0_rv1_fused_1 < T.int64(9))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=0)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l7, l8, preserve_unit_iters=True)
l10, l11 = sch.split(loop=l9, factors=[None, v2], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="threadIdx.x")
v12 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v12)
l13, l14, l15, l16, l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l13, l14, l15, l16, preserve_unit_iters=True)
sch.bind(loop=l19, thread_axis="blockIdx.x")
2024-04-29 03:23:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:23:38 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 03:23:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xab145c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xac08678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xac08ae8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6cd8148)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x763e978)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33481a8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb3dfa38)]: 0 failure(s)
2024-04-29 03:23:39 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 03:23:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xab145c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xac08678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xac08ae8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6cd8148)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x763e978)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33481a8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb3dfa38)]: 0 failure(s)
2024-04-29 03:23:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xab145c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xac08678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xac08ae8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6cd8148)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x763e978)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33481a8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb3dfa38)]: 0 failure(s)
2024-04-29 03:23:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xab145c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xac08678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xac08ae8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6cd8148)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x763e978)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33481a8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb3dfa38)]: 0 failure(s)
2024-04-29 03:23:40 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xab145c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xac08678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xac08ae8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x6cd8148)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x763e978)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x33481a8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb3dfa38)]: 0 failure(s)
2024-04-29 03:23:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9741  0.9339  0.9296  0.9192  0.9008  0.8965  0.8880  0.8815  0.8505  0.8396  0.8395  0.8227  0.8080  0.7880  0.7564  0.7431
[17 : 32]:	0.7161  0.7151  0.7129  0.7023  0.6771  0.6579  0.6443  0.6367  0.6274  0.6150  0.6075  0.5871  0.5803  0.5771  0.4980  0.4963
[33 : 48]:	0.4814  0.4584  0.4433  0.4331  0.4211  0.4190  0.4186  0.4183  0.4172  0.4142  0.4121  0.4111  0.3986  0.3924  0.3678  0.3569
[49 : 64]:	0.3331  0.3241  0.3206  0.2995  0.2796  0.2693  0.2283  0.2252  0.2250  0.2174  0.2083  0.1640  0.1488  0.1460  0.1305  0.1061
2024-04-29 03:23:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:23:40 [INFO] [evolutionary_search.cc:730] Sending 62 candidates(s) for measurement
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #1: GFLOPs: 11.8764. Time: 141.4249 us. Best GFLOPs: 11.8764
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #2: GFLOPs: 233.8566. Time: 7.1822 us. Best GFLOPs: 233.8566
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #3: GFLOPs: 419.4068. Time: 4.0047 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #4: GFLOPs: 398.3712. Time: 4.2162 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #5: GFLOPs: 392.1944. Time: 4.2826 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #6: GFLOPs: 413.2163. Time: 4.0647 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #7: GFLOPs: 4.5663. Time: 367.8311 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #8: GFLOPs: 11.9308. Time: 140.7799 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #9: GFLOPs: 9.1948. Time: 182.6698 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #10: GFLOPs: 11.9073. Time: 141.0571 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #11: GFLOPs: 11.8869. Time: 141.3002 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #12: GFLOPs: 334.0973. Time: 5.0273 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #13: GFLOPs: 419.2618. Time: 4.0061 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #14: GFLOPs: 11.8887. Time: 141.2781 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #15: GFLOPs: 377.4260. Time: 4.4502 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #16: GFLOPs: 413.2490. Time: 4.0644 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #17: GFLOPs: 11.9297. Time: 140.7923 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #18: GFLOPs: 11.8864. Time: 141.3056 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #19: GFLOPs: 11.8876. Time: 141.2918 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #20: GFLOPs: 11.8895. Time: 141.2683 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #21: GFLOPs: 11.8827. Time: 141.3503 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #22: GFLOPs: 11.8860. Time: 141.3102 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #23: GFLOPs: 334.6120. Time: 5.0196 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #24: GFLOPs: 11.8869. Time: 141.3000 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #25: GFLOPs: 398.2744. Time: 4.2172 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #26: GFLOPs: 392.2692. Time: 4.2818 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #27: GFLOPs: 9.1948. Time: 182.6711 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #28: GFLOPs: 11.9308. Time: 140.7796 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #29: GFLOPs: 335.7471. Time: 5.0026 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #30: GFLOPs: 4.5663. Time: 367.8279 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #31: GFLOPs: 392.2085. Time: 4.2825 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #32: GFLOPs: 11.8893. Time: 141.2711 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #33: GFLOPs: 11.8868. Time: 141.3011 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #34: GFLOPs: 233.8675. Time: 7.1819 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #35: GFLOPs: 11.8867. Time: 141.3019 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #36: GFLOPs: 413.3153. Time: 4.0638 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #37: GFLOPs: 11.8869. Time: 141.3002 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #38: GFLOPs: 371.4934. Time: 4.5213 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #39: GFLOPs: 334.8795. Time: 5.0156 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #40: GFLOPs: 9.1953. Time: 182.6605 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #41: GFLOPs: 418.9307. Time: 4.0093 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #42: GFLOPs: 11.8802. Time: 141.3798 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #43: GFLOPs: 233.8439. Time: 7.1826 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #44: GFLOPs: 335.4864. Time: 5.0065 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #45: GFLOPs: 9.1952. Time: 182.6617 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #46: GFLOPs: 11.9316. Time: 140.7701 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #47: GFLOPs: 11.9076. Time: 141.0546 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #48: GFLOPs: 11.9074. Time: 141.0560 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #49: GFLOPs: 11.8782. Time: 141.4034 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #50: GFLOPs: 11.9316. Time: 140.7701 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #51: GFLOPs: 398.2780. Time: 4.2172 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #52: GFLOPs: 413.2162. Time: 4.0647 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #53: GFLOPs: 233.8742. Time: 7.1817 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #54: GFLOPs: 4.5663. Time: 367.8274 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #55: GFLOPs: 11.8894. Time: 141.2701 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #56: GFLOPs: 413.2597. Time: 4.0643 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #57: GFLOPs: 419.0476. Time: 4.0082 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #58: GFLOPs: 11.9071. Time: 141.0596 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #59: GFLOPs: 233.3405. Time: 7.1981 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #60: GFLOPs: 9.1951. Time: 182.6651 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #61: GFLOPs: 392.1966. Time: 4.2826 us. Best GFLOPs: 419.4068
2024-04-29 04:02:59 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #62: GFLOPs: 11.8890. Time: 141.2746 us. Best GFLOPs: 419.4068
2024-05-01 15:10:06 [INFO] [task_scheduler.cc:160] Initializing Task #48: "fused_nn_max_pool2d_2"
2024-05-01 15:10:06 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(109), T.int64(109)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(54), T.int64(54)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0, ax1, ax2, ax3, rv0, rv1 in T.grid(T.int64(1), T.int64(64), T.int64(54), T.int64(54), T.int64(3), T.int64(3)):
            with T.block("pool_max"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_rv0, v_rv1 = T.axis.remap("SSSSRR", [ax0, ax1, ax2, ax3, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"schedule_rule": "meta_schedule.pool_max"})
                with T.init():
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
2024-05-01 15:10:06 [INFO] [task_scheduler.cc:164] Total 2 design space(s) generated
2024-05-01 15:10:06 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(109), T.int64(109)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(54), T.int64(54)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(5832), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    for rv0, rv1 in T.grid(T.int64(3), T.int64(3)):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(2916))
                            v_ax2 = T.axis.spatial(T.int64(54), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(2916) // T.int64(54))
                            v_ax3 = T.axis.spatial(T.int64(54), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(54))
                            v_rv0, v_rv1 = T.axis.remap("RR", [rv0, rv1])
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v2)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
v10 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l11, l12 = sch.split(loop=l9, factors=[None, v10], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="blockIdx.x")
sch.bind(loop=l12, thread_axis="threadIdx.x")
2024-05-01 15:10:06 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(109), T.int64(109)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(54), T.int64(54)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            for ax0_ax1_ax2_ax3_fused in T.thread_binding(T.int64(186624), thread="blockIdx.x"):
                for rv0_rv1_fused_0 in range(T.int64(3)):
                    for rv0_rv1_fused_1 in T.thread_binding(T.int64(4), thread="threadIdx.x"):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(64), ax0_ax1_ax2_ax3_fused // T.int64(2916))
                            v_ax2 = T.axis.spatial(T.int64(54), ax0_ax1_ax2_ax3_fused % T.int64(2916) // T.int64(54))
                            v_ax3 = T.axis.spatial(T.int64(54), ax0_ax1_ax2_ax3_fused % T.int64(54))
                            v_rv0 = T.axis.reduce(T.int64(3), (rv0_rv1_fused_0 * T.int64(4) + rv0_rv1_fused_1) // T.int64(3))
                            v_rv1 = T.axis.reduce(T.int64(3), (rv0_rv1_fused_0 * T.int64(4) + rv0_rv1_fused_1) % T.int64(3))
                            T.where(rv0_rv1_fused_0 * T.int64(4) + rv0_rv1_fused_1 < T.int64(9))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=0)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l7, l8, preserve_unit_iters=True)
l10, l11 = sch.split(loop=l9, factors=[None, v2], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="threadIdx.x")
v12 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v12)
l13, l14, l15, l16, l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l13, l14, l15, l16, preserve_unit_iters=True)
sch.bind(loop=l19, thread_axis="blockIdx.x")
2024-05-01 16:14:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 16:14:33 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-05-01 16:14:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x399ed98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c891f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c897d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb31f4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3297098)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x86dd588)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac51a68)]: 0 failure(s)
2024-05-01 16:14:34 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-05-01 16:14:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x399ed98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c891f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c897d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb31f4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3297098)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x86dd588)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac51a68)]: 0 failure(s)
2024-05-01 16:14:34 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x399ed98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c891f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c897d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb31f4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3297098)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x86dd588)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac51a68)]: 0 failure(s)
2024-05-01 16:14:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x399ed98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c891f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c897d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb31f4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3297098)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x86dd588)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac51a68)]: 0 failure(s)
2024-05-01 16:14:35 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x399ed98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7c891f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c897d8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb31f4c8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x3297098)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x86dd588)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xac51a68)]: 0 failure(s)
2024-05-01 16:14:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9866  0.9692  0.9598  0.9558  0.9296  0.9279  0.9244  0.9138  0.8869  0.8790  0.8710  0.8633  0.8552  0.8510  0.7950  0.7864
[17 : 32]:	0.7833  0.6920  0.6828  0.6825  0.6751  0.6741  0.6627  0.6248  0.6195  0.6160  0.6051  0.6018  0.5906  0.5866  0.5846  0.5813
[33 : 48]:	0.5568  0.5458  0.5275  0.5167  0.4963  0.4827  0.4732  0.4666  0.4492  0.4474  0.4467  0.4396  0.4283  0.4163  0.4145  0.3989
[49 : 64]:	0.3988  0.3847  0.3834  0.3555  0.3138  0.2923  0.2851  0.2807  0.2785  0.2672  0.2629  0.2552  0.1964  0.1452  0.1302  0.1078
2024-05-01 16:14:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 16:14:35 [INFO] [evolutionary_search.cc:730] Sending 61 candidates(s) for measurement
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #1: GFLOPs: 11.9199. Time: 140.9080 us. Best GFLOPs: 11.9199
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #2: GFLOPs: 369.2705. Time: 4.5485 us. Best GFLOPs: 369.2705
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #3: GFLOPs: 11.8857. Time: 141.3138 us. Best GFLOPs: 369.2705
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #4: GFLOPs: 323.6488. Time: 5.1896 us. Best GFLOPs: 369.2705
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #5: GFLOPs: 11.9012. Time: 141.1305 us. Best GFLOPs: 369.2705
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #6: GFLOPs: 384.9873. Time: 4.3628 us. Best GFLOPs: 384.9873
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #7: GFLOPs: 11.8843. Time: 141.3309 us. Best GFLOPs: 384.9873
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #8: GFLOPs: 400.4625. Time: 4.1942 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #9: GFLOPs: 11.9001. Time: 141.1427 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #10: GFLOPs: 11.8823. Time: 141.3544 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #11: GFLOPs: 232.9103. Time: 7.2114 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #12: GFLOPs: 11.9003. Time: 141.1404 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #13: GFLOPs: 358.4720. Time: 4.6855 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #14: GFLOPs: 379.1660. Time: 4.4298 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #15: GFLOPs: 323.5583. Time: 5.1911 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #16: GFLOPs: 379.0955. Time: 4.4306 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #17: GFLOPs: 399.8595. Time: 4.2005 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #18: GFLOPs: 400.4229. Time: 4.1946 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #19: GFLOPs: 4.5601. Time: 368.3314 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #20: GFLOPs: 4.5617. Time: 368.2028 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #21: GFLOPs: 11.8831. Time: 141.3445 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #22: GFLOPs: 11.9271. Time: 140.8233 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #23: GFLOPs: 11.8829. Time: 141.3469 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #24: GFLOPs: 11.9276. Time: 140.8172 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #25: GFLOPs: 11.8863. Time: 141.3074 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #26: GFLOPs: 9.1787. Time: 182.9897 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #27: GFLOPs: 400.1144. Time: 4.1978 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #28: GFLOPs: 11.8853. Time: 141.3183 us. Best GFLOPs: 400.4625
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #29: GFLOPs: 400.5268. Time: 4.1935 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #30: GFLOPs: 400.0933. Time: 4.1981 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #31: GFLOPs: 323.5099. Time: 5.1919 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #32: GFLOPs: 385.2375. Time: 4.3599 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #33: GFLOPs: 11.8816. Time: 141.3624 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #34: GFLOPs: 385.4247. Time: 4.3578 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #35: GFLOPs: 11.8861. Time: 141.3093 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #36: GFLOPs: 399.9110. Time: 4.2000 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #37: GFLOPs: 11.9244. Time: 140.8554 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #38: GFLOPs: 323.7115. Time: 5.1886 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #39: GFLOPs: 379.1535. Time: 4.4299 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #40: GFLOPs: 11.8853. Time: 141.3183 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #41: GFLOPs: 232.9472. Time: 7.2103 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #42: GFLOPs: 11.8852. Time: 141.3202 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #43: GFLOPs: 4.5601. Time: 368.3300 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #44: GFLOPs: 11.8680. Time: 141.5246 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #45: GFLOPs: 233.0778. Time: 7.2062 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #46: GFLOPs: 9.1781. Time: 183.0021 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #47: GFLOPs: 11.8863. Time: 141.3066 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #48: GFLOPs: 11.8795. Time: 141.3877 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #49: GFLOPs: 11.8833. Time: 141.3428 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #50: GFLOPs: 323.9524. Time: 5.1848 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #51: GFLOPs: 232.9715. Time: 7.2095 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #52: GFLOPs: 11.9248. Time: 140.8512 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #53: GFLOPs: 9.1779. Time: 183.0063 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #54: GFLOPs: 11.8833. Time: 141.3427 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #55: GFLOPs: 9.1813. Time: 182.9395 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #56: GFLOPs: 11.9030. Time: 141.1081 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #57: GFLOPs: 11.9030. Time: 141.1085 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #58: GFLOPs: 11.8753. Time: 141.4381 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #59: GFLOPs: 4.5600. Time: 368.3408 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #60: GFLOPs: 400.0438. Time: 4.1986 us. Best GFLOPs: 400.5268
2024-05-01 16:38:15 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_max_pool2d_2] Trial #61: GFLOPs: 379.1926. Time: 4.4295 us. Best GFLOPs: 400.5268
