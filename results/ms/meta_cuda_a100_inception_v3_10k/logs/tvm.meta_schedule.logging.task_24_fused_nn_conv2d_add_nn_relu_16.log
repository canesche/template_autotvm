2024-04-29 01:54:20 [INFO] [task_scheduler.cc:160] Initializing Task #24: "fused_nn_conv2d_add_nn_relu_16"
2024-04-29 01:54:20 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(18), T.int64(12)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(128), T.int64(18), T.int64(12)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3], T.float32(0))
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(128), T.int64(12), T.int64(12), T.int64(128), T.int64(7), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(12), T.int64(12)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(12), T.int64(12)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 01:54:20 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 01:54:20 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(9), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(1), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3456)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(27))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(27) // T.int64(3))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(3))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(114688)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(896))
                                    v1 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(896) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), ff_3 * T.int64(32) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_0 * T.int64(128) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0, v1 = T.axis.remap("SS", [ax0, ax1])
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 4, 32])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[4, 1, 3, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[4, 1, 3, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 16, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 7, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-29 01:54:20 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(9), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3456)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(27))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(27) // T.int64(3))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(3))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(114688)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(896))
                                    v1 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(896) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), ff_3 * T.int64(32) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0, v1 = T.axis.remap("SS", [ax0, ax1])
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 4, 32])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[4, 1, 3, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[4, 1, 3, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 16, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 7, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 01:54:20 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(16), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(9), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(3456)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(27))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(27) // T.int64(3))
                                    v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(3))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(114688)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(896))
                                    v1 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(896) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), ff_3 * T.int64(32) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(1), T.int64(1)):
                            with T.block("conv2d_nchw_local"):
                                v0, v1 = T.axis.remap("SS", [ax0, ax1])
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused // T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(3) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(4) * T.int64(3) + nn_2_ff_2_yy_2_xx_2_fused % T.int64(3) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 1, 4, 32])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[4, 1, 3, 1, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[4, 1, 3, 1, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[1, 16, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 7, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-29 02:37:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:37:42 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:37:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 492 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 02:37:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 975 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 02:37:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 1466 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 02:37:47 [INFO] [evolutionary_search.cc:723] Sampled 70 candidate(s)
2024-04-29 02:37:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 02:37:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 02:37:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 02:37:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 02:38:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9994  0.9989  0.9985  0.9979  0.9978  0.9967  0.9965  0.9964  0.9955  0.9951  0.9945  0.9938  0.9934  0.9933  0.9925  0.9924
[17 : 32]:	0.9919  0.9916  0.9912  0.9910  0.9899  0.9898  0.9887  0.9863  0.9860  0.9856  0.9852  0.9847  0.9841  0.9832  0.9826  0.9824
[33 : 48]:	0.9814  0.9813  0.9812  0.9807  0.9791  0.9790  0.9790  0.9769  0.9768  0.9767  0.9766  0.9762  0.9762  0.9761  0.9757  0.9752
[49 : 64]:	0.9748  0.9744  0.9740  0.9731  0.9726  0.9725  0.9722  0.9719  0.9718  0.9712  0.9704  0.9696  0.9695  0.9680  0.9677  0.9674
2024-04-29 02:38:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:38:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #1: GFLOPs: 211.0603. Time: 156.6709 us. Best GFLOPs: 211.0603
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #2: GFLOPs: 13.5168. Time: 2446.3609 us. Best GFLOPs: 211.0603
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #3: GFLOPs: 86.3863. Time: 382.7805 us. Best GFLOPs: 211.0603
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #4: GFLOPs: 136.8672. Time: 241.5991 us. Best GFLOPs: 211.0603
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #5: GFLOPs: 210.1845. Time: 157.3237 us. Best GFLOPs: 211.0603
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #6: GFLOPs: 167.1228. Time: 197.8605 us. Best GFLOPs: 211.0603
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #7: GFLOPs: 359.9310. Time: 91.8704 us. Best GFLOPs: 359.9310
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #8: GFLOPs: 397.9719. Time: 83.0888 us. Best GFLOPs: 397.9719
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #9: GFLOPs: 359.2144. Time: 92.0537 us. Best GFLOPs: 397.9719
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #10: GFLOPs: 204.7839. Time: 161.4727 us. Best GFLOPs: 397.9719
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #11: GFLOPs: 119.4276. Time: 276.8790 us. Best GFLOPs: 397.9719
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #12: GFLOPs: 12.8581. Time: 2571.6840 us. Best GFLOPs: 397.9719
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #13: GFLOPs: 401.9907. Time: 82.2581 us. Best GFLOPs: 401.9907
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #14: GFLOPs: 161.7875. Time: 204.3854 us. Best GFLOPs: 401.9907
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #15: GFLOPs: 232.9731. Time: 141.9349 us. Best GFLOPs: 401.9907
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #16: GFLOPs: 183.1885. Time: 180.5081 us. Best GFLOPs: 401.9907
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #17: GFLOPs: 445.2558. Time: 74.2652 us. Best GFLOPs: 445.2558
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #18: GFLOPs: 15.2485. Time: 2168.5487 us. Best GFLOPs: 445.2558
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #19: GFLOPs: 7.1854. Time: 4601.9491 us. Best GFLOPs: 445.2558
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #20: GFLOPs: 395.1736. Time: 83.6772 us. Best GFLOPs: 445.2558
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #21: GFLOPs: 20.3735. Time: 1623.0400 us. Best GFLOPs: 445.2558
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #22: GFLOPs: 18.9014. Time: 1749.4511 us. Best GFLOPs: 445.2558
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #23: GFLOPs: 257.2265. Time: 128.5521 us. Best GFLOPs: 445.2558
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #24: GFLOPs: 938.1657. Time: 35.2464 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #25: GFLOPs: 395.8588. Time: 83.5323 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #26: GFLOPs: 71.3503. Time: 463.4458 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #27: GFLOPs: 123.3635. Time: 268.0453 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #28: GFLOPs: 8.7510. Time: 3778.6738 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #29: GFLOPs: 38.2560. Time: 864.3619 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #30: GFLOPs: 191.4397. Time: 172.7281 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #31: GFLOPs: 94.4622. Time: 350.0556 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #32: GFLOPs: 44.2687. Time: 746.9621 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #33: GFLOPs: 78.2617. Time: 422.5186 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #34: GFLOPs: 96.0844. Time: 344.1455 us. Best GFLOPs: 938.1657
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #35: GFLOPs: 1021.4334. Time: 32.3731 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #36: GFLOPs: 371.9675. Time: 88.8976 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #37: GFLOPs: 40.8630. Time: 809.2173 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #38: GFLOPs: 56.9780. Time: 580.3473 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #39: GFLOPs: 14.9146. Time: 2217.0936 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #40: GFLOPs: 137.4322. Time: 240.6059 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #41: GFLOPs: 313.1584. Time: 105.5920 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #42: GFLOPs: 152.8131. Time: 216.3886 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #43: GFLOPs: 57.2002. Time: 578.0924 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #44: GFLOPs: 372.1560. Time: 88.8526 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #45: GFLOPs: 457.6223. Time: 72.2583 us. Best GFLOPs: 1021.4334
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #46: GFLOPs: 1101.1804. Time: 30.0287 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #47: GFLOPs: 304.6375. Time: 108.5454 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #48: GFLOPs: 80.2986. Time: 411.8007 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #49: GFLOPs: 9.9040. Time: 3338.7520 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #50: GFLOPs: 111.9550. Time: 295.3598 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #51: GFLOPs: 285.3644. Time: 115.8764 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #52: GFLOPs: 110.6436. Time: 298.8606 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #53: GFLOPs: 125.1918. Time: 264.1309 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #54: GFLOPs: 96.4976. Time: 342.6718 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #55: GFLOPs: 55.8550. Time: 592.0156 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #56: GFLOPs: 34.8603. Time: 948.5573 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #57: GFLOPs: 93.8817. Time: 352.2199 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #58: GFLOPs: 16.9037. Time: 1956.2021 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #59: GFLOPs: 60.2405. Time: 548.9163 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #60: GFLOPs: 58.1427. Time: 568.7216 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #61: GFLOPs: 102.4271. Time: 322.8346 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #62: GFLOPs: 81.5590. Time: 405.4368 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #63: GFLOPs: 66.6533. Time: 496.1042 us. Best GFLOPs: 1101.1804
2024-04-29 04:01:29 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #64: GFLOPs: 646.5467. Time: 51.1440 us. Best GFLOPs: 1101.1804
2024-04-29 04:53:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:53:09 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 04:53:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 412 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 04:53:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 836 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 04:53:14 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2024-04-29 04:53:18 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 87 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 04:53:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 73 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 04:53:27 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 04:53:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 61 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 04:53:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9819  0.9592  0.9542  0.9542  0.9487  0.9315  0.9315  0.9269  0.9260  0.9232  0.9232  0.9153  0.9092  0.9004  0.8962  0.8958
[17 : 32]:	0.8943  0.8943  0.8853  0.8853  0.8853  0.8853  0.8834  0.8617  0.8520  0.8501  0.8501  0.8480  0.8480  0.8441  0.8423  0.8413
[33 : 48]:	0.8411  0.8392  0.8392  0.8390  0.8376  0.8367  0.8367  0.8367  0.8348  0.8348  0.8317  0.8299  0.8299  0.8190  0.8190  0.8190
[49 : 64]:	0.8178  0.8088  0.8088  0.8088  0.8088  0.8075  0.8069  0.8069  0.8017  0.8017  0.7963  0.7963  0.7921  0.7917  0.7906  0.7879
2024-04-29 04:53:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:53:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #65: GFLOPs: 1053.8761. Time: 31.3766 us. Best GFLOPs: 1101.1804
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #66: GFLOPs: 678.0374. Time: 48.7687 us. Best GFLOPs: 1101.1804
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #67: GFLOPs: 888.8300. Time: 37.2028 us. Best GFLOPs: 1101.1804
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #68: GFLOPs: 888.8239. Time: 37.2031 us. Best GFLOPs: 1101.1804
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #69: GFLOPs: 1146.0824. Time: 28.8522 us. Best GFLOPs: 1146.0824
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #70: GFLOPs: 989.0363. Time: 33.4336 us. Best GFLOPs: 1146.0824
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #71: GFLOPs: 989.0620. Time: 33.4327 us. Best GFLOPs: 1146.0824
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #72: GFLOPs: 1157.9883. Time: 28.5556 us. Best GFLOPs: 1157.9883
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #73: GFLOPs: 705.3782. Time: 46.8784 us. Best GFLOPs: 1157.9883
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #74: GFLOPs: 673.1710. Time: 49.1213 us. Best GFLOPs: 1157.9883
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #75: GFLOPs: 1001.7500. Time: 33.0092 us. Best GFLOPs: 1157.9883
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #76: GFLOPs: 1582.5302. Time: 20.8950 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #77: GFLOPs: 424.0749. Time: 77.9745 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #78: GFLOPs: 817.4667. Time: 40.4506 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #79: GFLOPs: 937.1890. Time: 35.2832 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #80: GFLOPs: 1062.1481. Time: 31.1322 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #81: GFLOPs: 1032.8291. Time: 32.0160 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #82: GFLOPs: 1032.9072. Time: 32.0135 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #83: GFLOPs: 937.1295. Time: 35.2854 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #84: GFLOPs: 937.1797. Time: 35.2835 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #85: GFLOPs: 1060.8929. Time: 31.1690 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #86: GFLOPs: 1060.7980. Time: 31.1718 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #87: GFLOPs: 1032.9000. Time: 32.0138 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #88: GFLOPs: 1149.2292. Time: 28.7732 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #89: GFLOPs: 871.4123. Time: 37.9465 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #90: GFLOPs: 985.7461. Time: 33.5452 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #91: GFLOPs: 985.7928. Time: 33.5436 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #92: GFLOPs: 758.2665. Time: 43.6087 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #93: GFLOPs: 758.2661. Time: 43.6087 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #94: GFLOPs: 802.7577. Time: 41.1918 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #95: GFLOPs: 1012.4954. Time: 32.6589 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #96: GFLOPs: 1019.7639. Time: 32.4261 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #97: GFLOPs: 871.5149. Time: 37.9420 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #98: GFLOPs: 985.7852. Time: 33.5438 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #99: GFLOPs: 985.7493. Time: 33.5450 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #100: GFLOPs: 719.7830. Time: 45.9402 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #101: GFLOPs: 356.1681. Time: 92.8410 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #102: GFLOPs: 802.7614. Time: 41.1916 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #103: GFLOPs: 1057.1309. Time: 31.2800 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #104: GFLOPs: 1057.0689. Time: 31.2818 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #105: GFLOPs: 317.2224. Time: 104.2392 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #106: GFLOPs: 317.2056. Time: 104.2447 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #107: GFLOPs: 860.0737. Time: 38.4467 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #108: GFLOPs: 349.2322. Time: 94.6849 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #109: GFLOPs: 349.2846. Time: 94.6707 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #110: GFLOPs: 1031.8747. Time: 32.0456 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #111: GFLOPs: 1081.5815. Time: 30.5728 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #112: GFLOPs: 1043.8923. Time: 31.6766 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #113: GFLOPs: 812.7856. Time: 40.6836 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #114: GFLOPs: 818.1553. Time: 40.4165 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #115: GFLOPs: 818.1553. Time: 40.4165 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #116: GFLOPs: 824.4832. Time: 40.1063 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #117: GFLOPs: 824.4832. Time: 40.1063 us. Best GFLOPs: 1582.5302
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #118: GFLOPs: 1659.5927. Time: 19.9248 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #119: GFLOPs: 812.6717. Time: 40.6893 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #120: GFLOPs: 812.7671. Time: 40.6845 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #121: GFLOPs: 1020.3694. Time: 32.4069 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #122: GFLOPs: 1100.0212. Time: 30.0603 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #123: GFLOPs: 944.7127. Time: 35.0022 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #124: GFLOPs: 944.7810. Time: 34.9997 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #125: GFLOPs: 1397.9500. Time: 23.6539 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #126: GFLOPs: 201.5255. Time: 164.0835 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #127: GFLOPs: 138.5289. Time: 238.7012 us. Best GFLOPs: 1659.5927
2024-04-29 04:55:28 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #128: GFLOPs: 24.1981. Time: 1366.5107 us. Best GFLOPs: 1659.5927
2024-04-29 07:04:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:04:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:04:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 385 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 07:04:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 771 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 07:04:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 1154 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 07:04:53 [INFO] [evolutionary_search.cc:723] Sampled 76 candidate(s)
2024-04-29 07:04:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 61 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 07:05:01 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 49 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 07:05:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 60 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 07:05:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4164d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb492578)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x3419098)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb064ea8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x35499e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x3327d08)]: 45 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8739008)]: 0 failure(s)
2024-04-29 07:05:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9806  0.9806  0.9798  0.9555  0.9486  0.9123  0.9080  0.8955  0.8851  0.8787  0.8578  0.8578  0.8533  0.8531  0.8531  0.8448
[17 : 32]:	0.8420  0.8402  0.8401  0.8375  0.8207  0.8173  0.8050  0.8015  0.7938  0.7925  0.7906  0.7900  0.7900  0.7895  0.7893  0.7882
[33 : 48]:	0.7882  0.7881  0.7875  0.7872  0.7869  0.7869  0.7813  0.7806  0.7785  0.7785  0.7747  0.7732  0.7709  0.7691  0.7657  0.7644
[49 : 64]:	0.7643  0.7619  0.7457  0.7457  0.7423  0.7421  0.7387  0.7310  0.7202  0.7199  0.7191  0.7189  0.7130  0.7108  0.7108  0.7100
2024-04-29 07:05:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:05:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #129: GFLOPs: 1634.2122. Time: 20.2342 us. Best GFLOPs: 1659.5927
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #130: GFLOPs: 1664.0142. Time: 19.8718 us. Best GFLOPs: 1664.0142
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #131: GFLOPs: 1467.6975. Time: 22.5299 us. Best GFLOPs: 1664.0142
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #132: GFLOPs: 1682.1071. Time: 19.6581 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #133: GFLOPs: 1608.6881. Time: 20.5553 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #134: GFLOPs: 1668.1140. Time: 19.8230 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #135: GFLOPs: 1644.8764. Time: 20.1030 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #136: GFLOPs: 1626.4506. Time: 20.3308 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #137: GFLOPs: 1604.9604. Time: 20.6030 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #138: GFLOPs: 1346.3346. Time: 24.5608 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #139: GFLOPs: 1081.7061. Time: 30.5693 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #140: GFLOPs: 1081.7111. Time: 30.5692 us. Best GFLOPs: 1682.1071
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #141: GFLOPs: 1898.6871. Time: 17.4157 us. Best GFLOPs: 1898.6871
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #142: GFLOPs: 1396.7462. Time: 23.6743 us. Best GFLOPs: 1898.6871
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #143: GFLOPs: 1396.7373. Time: 23.6745 us. Best GFLOPs: 1898.6871
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #144: GFLOPs: 1987.5580. Time: 16.6370 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #145: GFLOPs: 1981.9200. Time: 16.6843 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #146: GFLOPs: 1224.1569. Time: 27.0121 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #147: GFLOPs: 1081.6981. Time: 30.5695 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #148: GFLOPs: 1042.9639. Time: 31.7048 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #149: GFLOPs: 1740.5733. Time: 18.9978 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #150: GFLOPs: 1850.8186. Time: 17.8662 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #151: GFLOPs: 1747.2733. Time: 18.9249 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #152: GFLOPs: 1918.2423. Time: 17.2382 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #153: GFLOPs: 1174.3551. Time: 28.1576 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #154: GFLOPs: 1134.5773. Time: 29.1448 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #155: GFLOPs: 674.4231. Time: 49.0301 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #156: GFLOPs: 1591.9478. Time: 20.7714 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #157: GFLOPs: 1543.6688. Time: 21.4211 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #158: GFLOPs: 1510.8329. Time: 21.8866 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #159: GFLOPs: 1560.6594. Time: 21.1878 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #160: GFLOPs: 1378.8505. Time: 23.9816 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #161: GFLOPs: 1379.0593. Time: 23.9779 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #162: GFLOPs: 1436.6007. Time: 23.0175 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #163: GFLOPs: 1612.3854. Time: 20.5081 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #164: GFLOPs: 1423.8803. Time: 23.2232 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #165: GFLOPs: 1185.4670. Time: 27.8937 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #166: GFLOPs: 1224.6330. Time: 27.0016 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #167: GFLOPs: 156.9749. Time: 210.6516 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #168: GFLOPs: 678.3986. Time: 48.7427 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #169: GFLOPs: 1544.3181. Time: 21.4120 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #170: GFLOPs: 1544.2056. Time: 21.4136 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #171: GFLOPs: 886.6583. Time: 37.2940 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #172: GFLOPs: 1380.5751. Time: 23.9516 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #173: GFLOPs: 1538.7834. Time: 21.4891 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #174: GFLOPs: 1029.1480. Time: 32.1305 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #175: GFLOPs: 943.5982. Time: 35.0435 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #176: GFLOPs: 1335.9317. Time: 24.7520 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #177: GFLOPs: 888.8081. Time: 37.2038 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #178: GFLOPs: 1436.5860. Time: 23.0178 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #179: GFLOPs: 1596.6696. Time: 20.7100 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #180: GFLOPs: 1408.4367. Time: 23.4778 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #181: GFLOPs: 1701.1298. Time: 19.4383 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #182: GFLOPs: 1542.5589. Time: 21.4365 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #183: GFLOPs: 1170.8816. Time: 28.2411 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #184: GFLOPs: 376.5762. Time: 87.8096 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #185: GFLOPs: 920.8711. Time: 35.9084 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #186: GFLOPs: 926.1963. Time: 35.7019 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #187: GFLOPs: 942.8889. Time: 35.0699 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #188: GFLOPs: 909.8771. Time: 36.3423 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #189: GFLOPs: 925.2637. Time: 35.7379 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #190: GFLOPs: 140.2422. Time: 235.7851 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #191: GFLOPs: 164.9677. Time: 200.4454 us. Best GFLOPs: 1987.5580
2024-04-29 07:06:56 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #192: GFLOPs: 200.1141. Time: 165.2408 us. Best GFLOPs: 1987.5580
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:160] Initializing Task #24: "fused_nn_conv2d_add_nn_relu_16"
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(18), T.int64(12)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(128), T.int64(18), T.int64(12)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(3) <= v_i2 and v_i2 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(3), v_i3], T.float32(0))
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(128), T.int64(12), T.int64(12), T.int64(128), T.int64(7), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(12), T.int64(12)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(12), T.int64(12)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(2), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(9216)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), rc_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(14336)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(448))
                                    v1 = T.axis.spatial(T.int64(128), rc_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(448) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(8), T.int64(7), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(3), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(8) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(3) + yy_3 * T.int64(3) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(3) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_0 * T.int64(64) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_0 * T.int64(7) + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(3), T.int64(3)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(3) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(3) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 4, 1, 8, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 3])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 4, 3, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 8, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 7, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(9216)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(14336)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(448))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(448) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(8), T.int64(7), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(3), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(8) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(3) + yy_3 * T.int64(3) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(3) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(3), T.int64(3)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(3) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(3) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 4, 1, 8, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 3])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 4, 3, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 8, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 7, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-05-01 15:09:57 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32"), p1: T.Buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(12), T.int64(12)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(18), T.int64(12)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(128), T.int64(7), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(8), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(4), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(9216)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused // T.int64(144))
                                    v2 = T.axis.spatial(T.int64(18), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(144) // T.int64(12))
                                    v3 = T.axis.spatial(T.int64(12), ax0_ax1_ax2_ax3_fused % T.int64(12))
                                    T.reads(p0[v0, v1, v2 - T.int64(3), v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    pad_temp_shared[v0, v1, v2, v3] = T.if_then_else(T.int64(3) <= v2 and v2 < T.int64(15), p0[v0, v1, v2 - T.int64(3), v3], T.float32(0))
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(14336)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + ax0_ax1_ax2_ax3_fused // T.int64(448))
                                    v1 = T.axis.spatial(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(448) // T.int64(7))
                                    v2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(8), T.int64(7), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(3), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(8) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(3) + yy_3 * T.int64(3) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(3) + xx_3 + xx_4)
                                    v_rc = T.axis.reduce(T.int64(128), rc_0_ry_0_rx_0_fused * T.int64(64) + rc_1 * T.int64(8) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(7), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(3), T.int64(3)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_0_ff_0_yy_0_xx_0_fused // T.int64(2) * T.int64(32) + nn_1_ff_1_yy_1_xx_1_fused * T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(12), nn_0_ff_0_yy_0_xx_0_fused % T.int64(2) * T.int64(6) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(4) * T.int64(3) + ax2)
                                v3 = T.axis.spatial(T.int64(12), nn_2_ff_2_yy_2_xx_2_fused % T.int64(4) * T.int64(3) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[4, 4, 1, 8, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[2, 1, 2, 1, 3])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 1, 4, 3, 1])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[2, 8, 8])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 7, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-05-01 15:43:23 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 15:43:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 15:43:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 391 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 15:43:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 770 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 15:43:28 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-05-01 15:43:32 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 63 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 15:43:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 71 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 15:43:38 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 78 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 15:43:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 60 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 15:43:41 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9991  0.9984  0.9980  0.9979  0.9978  0.9969  0.9968  0.9957  0.9949  0.9943  0.9929  0.9927  0.9927  0.9922  0.9918  0.9906
[17 : 32]:	0.9906  0.9905  0.9903  0.9886  0.9880  0.9871  0.9870  0.9864  0.9863  0.9859  0.9856  0.9854  0.9851  0.9844  0.9840  0.9823
[33 : 48]:	0.9805  0.9801  0.9786  0.9771  0.9771  0.9760  0.9752  0.9749  0.9748  0.9746  0.9742  0.9732  0.9727  0.9703  0.9698  0.9698
[49 : 64]:	0.9698  0.9697  0.9689  0.9687  0.9682  0.9674  0.9674  0.9661  0.9661  0.9651  0.9645  0.9639  0.9638  0.9636  0.9631  0.9629
2024-05-01 15:43:41 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 15:43:41 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #1: GFLOPs: 1106.9907. Time: 29.8711 us. Best GFLOPs: 1106.9907
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #2: GFLOPs: 789.7111. Time: 41.8723 us. Best GFLOPs: 1106.9907
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #3: GFLOPs: 1046.7946. Time: 31.5888 us. Best GFLOPs: 1106.9907
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #4: GFLOPs: 192.0709. Time: 172.1604 us. Best GFLOPs: 1106.9907
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #5: GFLOPs: 2045.4757. Time: 16.1659 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #6: GFLOPs: 1101.5785. Time: 30.0178 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #7: GFLOPs: 428.0524. Time: 77.2499 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #8: GFLOPs: 1821.6865. Time: 18.1519 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #9: GFLOPs: 1066.7079. Time: 30.9991 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #10: GFLOPs: 1074.9343. Time: 30.7619 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #11: GFLOPs: 658.4422. Time: 50.2201 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #12: GFLOPs: 1202.0206. Time: 27.5095 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #13: GFLOPs: 1346.8767. Time: 24.5509 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #14: GFLOPs: 963.2523. Time: 34.3285 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #15: GFLOPs: 818.0187. Time: 40.4233 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #16: GFLOPs: 1897.6902. Time: 17.4249 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #17: GFLOPs: 585.9613. Time: 56.4321 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #18: GFLOPs: 897.6128. Time: 36.8388 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #19: GFLOPs: 1058.2777. Time: 31.2461 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #20: GFLOPs: 250.5279. Time: 131.9893 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #21: GFLOPs: 8.7380. Time: 3784.2868 us. Best GFLOPs: 2045.4757
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #22: GFLOPs: 2058.7890. Time: 16.0614 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #23: GFLOPs: 542.3342. Time: 60.9716 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #24: GFLOPs: 799.5447. Time: 41.3573 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #25: GFLOPs: 1021.8271. Time: 32.3607 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #26: GFLOPs: 305.5314. Time: 108.2279 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #27: GFLOPs: 942.3522. Time: 35.0899 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #28: GFLOPs: 255.4499. Time: 129.4462 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #29: GFLOPs: 779.3261. Time: 42.4303 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #30: GFLOPs: 1073.7315. Time: 30.7963 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #31: GFLOPs: 218.0458. Time: 151.6517 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #32: GFLOPs: 603.9933. Time: 54.7473 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #33: GFLOPs: 1321.9104. Time: 25.0146 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #34: GFLOPs: 123.7973. Time: 267.1061 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #35: GFLOPs: 28.4590. Time: 1161.9158 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #36: GFLOPs: 529.7751. Time: 62.4171 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #37: GFLOPs: 22.7608. Time: 1452.8037 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #38: GFLOPs: 422.2460. Time: 78.3122 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #39: GFLOPs: 203.2674. Time: 162.6774 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #40: GFLOPs: 842.9779. Time: 39.2264 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #41: GFLOPs: 597.4335. Time: 55.3484 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #42: GFLOPs: 371.5995. Time: 88.9856 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #43: GFLOPs: 305.5408. Time: 108.2245 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #44: GFLOPs: 780.7802. Time: 42.3512 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #45: GFLOPs: 1293.3944. Time: 25.5661 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #46: GFLOPs: 1246.1114. Time: 26.5362 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #47: GFLOPs: 1071.3821. Time: 30.8639 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #48: GFLOPs: 1110.8263. Time: 29.7679 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #49: GFLOPs: 125.5700. Time: 263.3353 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #50: GFLOPs: 1372.6105. Time: 24.0906 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #51: GFLOPs: 999.7079. Time: 33.0767 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #52: GFLOPs: 644.6019. Time: 51.2983 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #53: GFLOPs: 528.7426. Time: 62.5390 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #54: GFLOPs: 115.8392. Time: 285.4560 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #55: GFLOPs: 178.1556. Time: 185.6075 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #56: GFLOPs: 299.2633. Time: 110.4947 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #57: GFLOPs: 1605.7361. Time: 20.5931 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #58: GFLOPs: 682.6567. Time: 48.4387 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #59: GFLOPs: 116.0015. Time: 285.0567 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #60: GFLOPs: 1049.8028. Time: 31.4983 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #61: GFLOPs: 789.8701. Time: 41.8639 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #62: GFLOPs: 283.7204. Time: 116.5479 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #63: GFLOPs: 13.4974. Time: 2449.8825 us. Best GFLOPs: 2058.7890
2024-05-01 16:37:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #64: GFLOPs: 101.2392. Time: 326.6226 us. Best GFLOPs: 2058.7890
2024-05-01 17:39:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 17:39:35 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 17:39:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 388 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 17:39:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 772 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 17:39:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 1159 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 17:39:40 [INFO] [evolutionary_search.cc:723] Sampled 71 candidate(s)
2024-05-01 17:39:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 17:39:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 17:39:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 74 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 17:39:57 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 70 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 17:39:58 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9826  0.9826  0.9813  0.9737  0.9701  0.9686  0.9580  0.9563  0.9563  0.9563  0.9516  0.9511  0.9455  0.9398  0.9356  0.9304
[17 : 32]:	0.9279  0.9265  0.9263  0.9262  0.9261  0.9260  0.9259  0.9224  0.9224  0.9208  0.9207  0.9207  0.9207  0.9207  0.9206  0.9198
[33 : 48]:	0.9193  0.9189  0.9171  0.9171  0.9163  0.9141  0.9135  0.9118  0.9112  0.9079  0.9079  0.9064  0.9064  0.9054  0.9054  0.9036
[49 : 64]:	0.9005  0.9005  0.8994  0.8994  0.8994  0.8994  0.8989  0.8989  0.8989  0.8987  0.8977  0.8968  0.8966  0.8954  0.8935  0.8935
2024-05-01 17:39:58 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 17:39:58 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #65: GFLOPs: 1962.6579. Time: 16.8481 us. Best GFLOPs: 2058.7890
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #66: GFLOPs: 1779.8218. Time: 18.5788 us. Best GFLOPs: 2058.7890
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #67: GFLOPs: 1276.4727. Time: 25.9050 us. Best GFLOPs: 2058.7890
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #68: GFLOPs: 2064.5611. Time: 16.0165 us. Best GFLOPs: 2064.5611
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #69: GFLOPs: 2138.4333. Time: 15.4632 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #70: GFLOPs: 2047.3878. Time: 16.1508 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #71: GFLOPs: 1855.8257. Time: 17.8179 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #72: GFLOPs: 876.3566. Time: 37.7324 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #73: GFLOPs: 934.6822. Time: 35.3778 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #74: GFLOPs: 919.1805. Time: 35.9744 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #75: GFLOPs: 2064.4616. Time: 16.0173 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #76: GFLOPs: 1630.7460. Time: 20.2772 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #77: GFLOPs: 1731.0251. Time: 19.1026 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #78: GFLOPs: 581.8621. Time: 56.8296 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #79: GFLOPs: 1411.5510. Time: 23.4260 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #80: GFLOPs: 1400.4078. Time: 23.6124 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #81: GFLOPs: 1906.2816. Time: 17.3463 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #82: GFLOPs: 1091.7693. Time: 30.2875 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #83: GFLOPs: 1194.4086. Time: 27.6848 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #84: GFLOPs: 1965.1605. Time: 16.8266 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #85: GFLOPs: 1804.4515. Time: 18.3252 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #86: GFLOPs: 1828.9279. Time: 18.0800 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #87: GFLOPs: 1101.0390. Time: 30.0325 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #88: GFLOPs: 1912.6915. Time: 17.2882 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #89: GFLOPs: 1912.8592. Time: 17.2867 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #90: GFLOPs: 1805.2400. Time: 18.3172 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #91: GFLOPs: 1299.8495. Time: 25.4391 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #92: GFLOPs: 1299.8753. Time: 25.4386 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #93: GFLOPs: 1300.6967. Time: 25.4225 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #94: GFLOPs: 1299.8667. Time: 25.4388 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #95: GFLOPs: 1779.4986. Time: 18.5822 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #96: GFLOPs: 1388.9170. Time: 23.8078 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #97: GFLOPs: 700.6634. Time: 47.1939 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #98: GFLOPs: 1995.0137. Time: 16.5748 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #99: GFLOPs: 1262.2253. Time: 26.1974 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #100: GFLOPs: 1262.3180. Time: 26.1955 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #101: GFLOPs: 1831.5642. Time: 18.0540 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #102: GFLOPs: 1091.9576. Time: 30.2823 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #103: GFLOPs: 1101.0616. Time: 30.0319 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #104: GFLOPs: 1215.9275. Time: 27.1949 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #105: GFLOPs: 1183.0911. Time: 27.9497 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #106: GFLOPs: 872.2975. Time: 37.9079 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #107: GFLOPs: 947.5026. Time: 34.8991 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #108: GFLOPs: 1712.0396. Time: 19.3144 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #109: GFLOPs: 1711.8921. Time: 19.3161 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #110: GFLOPs: 1531.1086. Time: 21.5968 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #111: GFLOPs: 1814.6453. Time: 18.2223 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #112: GFLOPs: 1996.0796. Time: 16.5660 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #113: GFLOPs: 1800.9431. Time: 18.3609 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #114: GFLOPs: 1802.3805. Time: 18.3463 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #115: GFLOPs: 1927.2810. Time: 17.1573 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #116: GFLOPs: 1936.5097. Time: 17.0756 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #117: GFLOPs: 1215.9828. Time: 27.1936 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #118: GFLOPs: 1216.3233. Time: 27.1860 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #119: GFLOPs: 1183.0270. Time: 27.9512 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #120: GFLOPs: 1494.1039. Time: 22.1317 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #121: GFLOPs: 1493.9840. Time: 22.1334 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #122: GFLOPs: 1846.6346. Time: 17.9066 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #123: GFLOPs: 1884.8078. Time: 17.5440 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #124: GFLOPs: 1802.8591. Time: 18.3414 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #125: GFLOPs: 671.6216. Time: 49.2346 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #126: GFLOPs: 376.8326. Time: 87.7499 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #127: GFLOPs: 5.0384. Time: 6563.0078 us. Best GFLOPs: 2138.4333
2024-05-01 17:41:17 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #128: GFLOPs: 47.3550. Time: 698.2793 us. Best GFLOPs: 2138.4333
2024-05-01 19:19:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:19:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:19:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 397 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 19:19:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 788 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 19:19:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 1178 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 19:19:36 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-05-01 19:19:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 19:19:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 83 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 19:19:49 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 79 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 19:19:53 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x557eef8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb0c5c58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7c0dd68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xb097618)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x7bf0378)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x96b21a8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x8703b28)]: 0 failure(s)
2024-05-01 19:19:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0700  1.0255  1.0205  1.0101  0.9967  0.9925  0.9812  0.9576  0.9576  0.9543  0.9543  0.9543  0.9351  0.9351  0.9351  0.9333
[17 : 32]:	0.9241  0.9185  0.9184  0.9106  0.9081  0.9067  0.9067  0.9063  0.9051  0.9048  0.9020  0.9020  0.9017  0.9007  0.8996  0.8987
[33 : 48]:	0.8979  0.8977  0.8976  0.8972  0.8958  0.8958  0.8957  0.8952  0.8945  0.8944  0.8944  0.8943  0.8939  0.8937  0.8920  0.8916
[49 : 64]:	0.8914  0.8912  0.8912  0.8912  0.8909  0.8905  0.8885  0.8865  0.8865  0.8857  0.8846  0.8828  0.8808  0.8794  0.8787  0.8787
2024-05-01 19:19:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:19:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #129: GFLOPs: 1574.6059. Time: 21.0002 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #130: GFLOPs: 1504.1747. Time: 21.9835 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #131: GFLOPs: 1913.5983. Time: 17.2800 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #132: GFLOPs: 1971.9904. Time: 16.7683 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #133: GFLOPs: 1724.4918. Time: 19.1749 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #134: GFLOPs: 1958.5500. Time: 16.8834 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #135: GFLOPs: 1794.7322. Time: 18.4245 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #136: GFLOPs: 2124.3677. Time: 15.5656 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #137: GFLOPs: 1998.3665. Time: 16.5470 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #138: GFLOPs: 2045.6541. Time: 16.1645 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #139: GFLOPs: 1303.7519. Time: 25.3630 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #140: GFLOPs: 1844.4964. Time: 17.9274 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #141: GFLOPs: 2049.2118. Time: 16.1365 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #142: GFLOPs: 1304.4541. Time: 25.3493 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #143: GFLOPs: 1827.1154. Time: 18.0979 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #144: GFLOPs: 1692.3579. Time: 19.5390 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #145: GFLOPs: 1692.5913. Time: 19.5363 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #146: GFLOPs: 993.0759. Time: 33.2976 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #147: GFLOPs: 2032.4619. Time: 16.2694 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #148: GFLOPs: 1641.0540. Time: 20.1499 us. Best GFLOPs: 2138.4333
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #149: GFLOPs: 2422.4147. Time: 13.6504 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #150: GFLOPs: 1558.2748. Time: 21.2203 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #151: GFLOPs: 1558.3271. Time: 21.2196 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #152: GFLOPs: 1406.1446. Time: 23.5161 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #153: GFLOPs: 2030.6067. Time: 16.2843 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #154: GFLOPs: 1917.3985. Time: 17.2458 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #155: GFLOPs: 1825.1782. Time: 18.1171 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #156: GFLOPs: 1815.5577. Time: 18.2131 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #157: GFLOPs: 1825.0982. Time: 18.1179 us. Best GFLOPs: 2422.4147
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #158: GFLOPs: 2431.0619. Time: 13.6019 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #159: GFLOPs: 1879.4106. Time: 17.5944 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #160: GFLOPs: 1880.3472. Time: 17.5856 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #161: GFLOPs: 1799.7593. Time: 18.3730 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #162: GFLOPs: 1879.0197. Time: 17.5980 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #163: GFLOPs: 1837.0452. Time: 18.0001 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #164: GFLOPs: 1847.4121. Time: 17.8991 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #165: GFLOPs: 1879.8994. Time: 17.5898 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #166: GFLOPs: 1879.9120. Time: 17.5897 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #167: GFLOPs: 1825.7051. Time: 18.1119 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #168: GFLOPs: 1799.7916. Time: 18.3727 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #169: GFLOPs: 1941.8023. Time: 17.0290 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #170: GFLOPs: 1879.9855. Time: 17.5890 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #171: GFLOPs: 1294.3908. Time: 25.5464 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #172: GFLOPs: 1599.6765. Time: 20.6711 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #173: GFLOPs: 1828.7950. Time: 18.0813 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #174: GFLOPs: 1486.9635. Time: 22.2379 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #175: GFLOPs: 1836.7785. Time: 18.0027 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #176: GFLOPs: 1234.1259. Time: 26.7939 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #177: GFLOPs: 1843.5708. Time: 17.9364 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #178: GFLOPs: 2050.8076. Time: 16.1239 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #179: GFLOPs: 1874.6699. Time: 17.6388 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #180: GFLOPs: 1702.8690. Time: 19.4184 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #181: GFLOPs: 1830.9898. Time: 18.0596 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #182: GFLOPs: 1937.5004. Time: 17.0668 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #183: GFLOPs: 1990.3162. Time: 16.6139 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #184: GFLOPs: 1827.5144. Time: 18.0940 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #185: GFLOPs: 1826.4195. Time: 18.1048 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #186: GFLOPs: 1830.8899. Time: 18.0606 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #187: GFLOPs: 1829.7671. Time: 18.0717 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #188: GFLOPs: 679.4483. Time: 48.6674 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #189: GFLOPs: 1264.3280. Time: 26.1538 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #190: GFLOPs: 192.4003. Time: 171.8657 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #191: GFLOPs: 345.8302. Time: 95.6163 us. Best GFLOPs: 2431.0619
2024-05-01 19:21:44 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_conv2d_add_nn_relu_16] Trial #192: GFLOPs: 217.4187. Time: 152.0891 us. Best GFLOPs: 2431.0619
