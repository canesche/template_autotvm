2024-04-29 09:58:39 [INFO] [task_scheduler.cc:160] Initializing Task #127: "fused_concatenate_add_nn_relu_1"
2024-04-29 09:58:39 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_concat = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = p0[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_concat[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = T_concat[v_ax0, v_ax1, v_ax2, v_ax3] + p1[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 09:58:39 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-29 09:58:39 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                with T.block("T_concat"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(256), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) // T.int64(196))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196) // T.int64(14))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) % T.int64(14))
                    T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(p0[v_ax0, v_ax1, v_ax2, v_ax3] + p1[v_ax0, v_ax1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="T_concat", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="T_relu", func_name="main")
sch.reverse_compute_inline(block=b2)
sch.reverse_compute_inline(block=b1)
l3, l4, l5, l6 = sch.get_loops(block=b0)
l7 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
v8 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l9, thread_axis="blockIdx.x")
sch.bind(loop=l10, thread_axis="threadIdx.x")
2024-04-29 12:41:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:41:50 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 12:41:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x89e3598)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xcad1c78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xcad1b78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc80b658)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ab6458)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1190c878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xcad1f78)]: 0 failure(s)
2024-04-29 12:41:50 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 12:41:50 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x89e3598)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xcad1c78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xcad1b78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc80b658)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ab6458)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1190c878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xcad1f78)]: 0 failure(s)
2024-04-29 12:41:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x89e3598)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xcad1c78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xcad1b78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc80b658)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ab6458)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1190c878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xcad1f78)]: 0 failure(s)
2024-04-29 12:41:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x89e3598)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xcad1c78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xcad1b78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc80b658)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ab6458)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1190c878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xcad1f78)]: 0 failure(s)
2024-04-29 12:41:51 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x89e3598)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xcad1c78)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xcad1b78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xc80b658)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5ab6458)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x1190c878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xcad1f78)]: 0 failure(s)
2024-04-29 12:41:51 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.7204  0.6952  0.6692  0.6676  0.3375  0.0751
2024-04-29 12:41:51 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-04-29 12:41:51 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-04-29 14:04:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_concatenate_add_nn_relu_1] Trial #1: GFLOPs: 31.5445. Time: 3.1813 us. Best GFLOPs: 31.5445
2024-04-29 14:04:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_concatenate_add_nn_relu_1] Trial #2: GFLOPs: 31.5408. Time: 3.1817 us. Best GFLOPs: 31.5445
2024-04-29 14:04:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_concatenate_add_nn_relu_1] Trial #3: GFLOPs: 31.1304. Time: 3.2236 us. Best GFLOPs: 31.5445
2024-04-29 14:04:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_concatenate_add_nn_relu_1] Trial #4: GFLOPs: 31.1691. Time: 3.2196 us. Best GFLOPs: 31.5445
2024-04-29 14:04:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_concatenate_add_nn_relu_1] Trial #5: GFLOPs: 30.3169. Time: 3.3101 us. Best GFLOPs: 31.5445
2024-04-29 14:04:59 [INFO] [task_scheduler.cc:131] [Task #127: fused_concatenate_add_nn_relu_1] Trial #6: GFLOPs: 27.3895. Time: 3.6639 us. Best GFLOPs: 31.5445
