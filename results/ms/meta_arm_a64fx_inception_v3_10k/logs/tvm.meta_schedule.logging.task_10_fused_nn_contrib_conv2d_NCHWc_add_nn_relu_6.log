2024-04-29 07:41:29 [INFO] [task_scheduler.cc:160] Initializing Task #10: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6"
2024-04-29 07:41:29 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(96), T.int64(3), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(7), T.int64(5), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(96), T.int64(7), T.int64(5), T.int64(4)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3, v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(6), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3, v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4), T.int64(384), T.int64(3), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 07:41:29 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 07:41:29 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(96), T.int64(3), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(7), T.int64(5), T.int64(4)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0 in T.grid(T.int64(1), T.int64(4), T.int64(5), T.int64(5)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(96), T.int64(3), T.int64(1), T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(7), oh_0 + ax2)
                        v_i3 = T.axis.spatial(T.int64(5), ow_0 + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3, v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(6), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3, v_i4], T.float32(0))
                for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(384), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(5), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(5), ow_0 + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(384), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 4, 3, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[384, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-29 07:41:29 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(96), T.int64(3), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(5), T.int64(5), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(384), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(5), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(5), ow_0 + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(384), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh - T.int64(1), v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(6), p0[v_n, v_ic // T.int64(4), v_oh + v_kh - T.int64(1), v_ow + v_kw, v_ic % T.int64(4)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(6) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(5), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(5), ow_0 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 4, 3, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[384, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 07:41:29 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(96), T.int64(3), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(7), T.int64(5), T.int64(4)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)))
            for n_0, oc_chunk_0 in T.grid(T.int64(1), T.int64(4)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(96), T.int64(7), T.int64(5), T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3, v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(6), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3, v_i4], T.float32(0))
                for oh_0, ow_0, oc_block_0 in T.grid(T.int64(5), T.int64(5), T.int64(1)):
                    for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(384), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(5), oh_0 + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(5), ow_0 + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(384), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(24) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(5), oh_0 + ax2)
                            v_ax3 = T.axis.spatial(T.int64(5), ow_0 + ax3)
                            v_ax4 = T.axis.spatial(T.int64(4), ax4)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 4, 3, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[384, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 07:57:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:57:42 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 07:57:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 8 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 07:57:46 [INFO] [evolutionary_search.cc:723] Sampled 504 candidate(s)
2024-04-29 07:57:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 3 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 07:57:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 1 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 07:58:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 07:58:04 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 1 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 07:58:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9991  0.9989  0.9974  0.9973  0.9972  0.9968  0.9961  0.9959  0.9958  0.9953  0.9947  0.9946  0.9946  0.9944  0.9938  0.9937
[17 : 32]:	0.9937  0.9936  0.9935  0.9934  0.9932  0.9924  0.9917  0.9915  0.9908  0.9907  0.9904  0.9900  0.9897  0.9894  0.9891  0.9889
[33 : 48]:	0.9882  0.9880  0.9877  0.9869  0.9864  0.9858  0.9858  0.9853  0.9845  0.9839  0.9838  0.9829  0.9827  0.9812  0.9809  0.9805
[49 : 64]:	0.9803  0.9802  0.9791  0.9790  0.9787  0.9784  0.9783  0.9782  0.9778  0.9777  0.9773  0.9771  0.9769  0.9763  0.9759  0.9750
2024-04-29 07:58:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:58:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #1: GFLOPs: 97.3631. Time: 227.3714 us. Best GFLOPs: 97.3631
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #2: GFLOPs: 176.3306. Time: 125.5460 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #3: GFLOPs: 6.5999. Time: 3354.2426 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #4: GFLOPs: 12.7399. Time: 1737.6656 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #5: GFLOPs: 3.2655. Time: 6779.2440 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #6: GFLOPs: 24.4004. Time: 907.2654 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #7: GFLOPs: 21.5363. Time: 1027.9211 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #8: GFLOPs: 116.3521. Time: 190.2639 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #9: GFLOPs: 20.7064. Time: 1069.1205 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #10: GFLOPs: 12.4878. Time: 1772.7321 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #11: GFLOPs: 22.9808. Time: 963.3079 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #12: GFLOPs: 107.2392. Time: 206.4320 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #13: GFLOPs: 3.3276. Time: 6652.7246 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #14: GFLOPs: 26.0985. Time: 848.2336 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #15: GFLOPs: 12.9380. Time: 1711.0517 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #16: GFLOPs: 35.9992. Time: 614.9469 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #17: GFLOPs: 23.8522. Time: 928.1140 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #18: GFLOPs: 6.2950. Time: 3516.6886 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #19: GFLOPs: 44.0210. Time: 502.8867 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #20: GFLOPs: 1.6609. Time: 13328.7406 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #21: GFLOPs: 75.1740. Time: 294.4850 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #22: GFLOPs: 19.6328. Time: 1127.5827 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #23: GFLOPs: 46.3072. Time: 478.0600 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #24: GFLOPs: 5.2707. Time: 4200.1428 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #25: GFLOPs: 32.9523. Time: 671.8075 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #26: GFLOPs: 18.5840. Time: 1191.2214 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #27: GFLOPs: 53.3970. Time: 414.5851 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #28: GFLOPs: 13.9169. Time: 1590.6953 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #29: GFLOPs: 56.6117. Time: 391.0430 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #30: GFLOPs: 6.7290. Time: 3289.8919 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #31: GFLOPs: 15.5046. Time: 1427.8090 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #32: GFLOPs: 7.8791. Time: 2809.6441 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #33: GFLOPs: 16.1189. Time: 1373.3955 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #34: GFLOPs: 17.6965. Time: 1250.9618 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:121] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #35: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(96), T.int64(3), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(7), T.int64(5), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(5), T.int64(5), T.int64(4)))
        for n_0 in T.serial(T.int64(1), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(6), T.int64(1), T.int64(5), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(5), T.int64(1)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(96) + oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(16) + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(5), oh_0 * T.int64(5) + oh_1 * T.int64(5) + oh_2_init * T.int64(5) + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(5), ow_0 * T.int64(5) + ow_1 + ow_2_init + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1 in T.grid(T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32)):
                        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                            with T.block("data_pad"):
                                v_i0 = T.axis.spatial(T.int64(1), ax0)
                                v_i1 = T.axis.spatial(T.int64(96), ic_0 * T.int64(8) + ic_1 // T.int64(4) + ax1)
                                v_i2 = T.axis.spatial(T.int64(7), ax2)
                                v_i3 = T.axis.spatial(T.int64(5), ow_1 + ax3)
                                v_i4 = T.axis.spatial(T.int64(4), ic_1 % T.int64(4) + ax4)
                                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3, v_i4])
                                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(6), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3, v_i4], T.float32(0))
                        for kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(16), T.int64(5), T.int64(1)):
                            for oc_block_3_fused in T.vectorized(T.int64(4)):
                                with T.block("conv2d_NCHWc_update"):
                                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                                    v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(96) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(16) + oc_chunk_3)
                                    v_oh = T.axis.spatial(T.int64(5), oh_0 * T.int64(5) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                                    v_ow = T.axis.spatial(T.int64(5), ow_0 * T.int64(5) + ow_1 + ow_2 + ow_3)
                                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                    v_ic = T.axis.reduce(T.int64(384), ic_0 * T.int64(32) + ic_1)
                                    v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(96), T.int64(5)):
                    for ax3_ax4_fused in T.vectorized(T.int64(20)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                            v_ax3 = T.axis.spatial(T.int64(5), ax3_ax4_fused // T.int64(4))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 6, 1, 16])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 5])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 5, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[12, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=18)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94 = sch.get_loops(block=b68)
l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b69)
l121 = sch.fuse(l120, preserve_unit_iters=True)
sch.vectorize(loop=l121)
sch.annotate(block_or_loop=l95, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l95, ann_key="pragma_unroll_explicit", ann_val=1)
l122, l123, l124, l125, l126, l127, l128, l129, l130, l131 = sch.get_loops(block=b70)
l132 = sch.fuse(l130, l131, preserve_unit_iters=True)
sch.vectorize(loop=l132)
b133 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l134, l135, l136, l137, l138, l139, l140, l141, l142, l143, l144, l145, l146, l147, l148, l149, l150, l151, l152, l153, l154, l155, l156, l157, l158, l159 = sch.get_loops(block=b133)
b160 = sch.decompose_reduction(block=b133, loop=l144)
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #36: GFLOPs: 84.0132. Time: 263.5014 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #37: GFLOPs: 15.7527. Time: 1405.3219 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #38: GFLOPs: 94.0230. Time: 235.4487 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #39: GFLOPs: 5.9524. Time: 3719.1351 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #40: GFLOPs: 65.0811. Time: 340.1542 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #41: GFLOPs: 58.1982. Time: 380.3827 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #42: GFLOPs: 128.9589. Time: 171.6640 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #43: GFLOPs: 1.0982. Time: 20157.8129 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #44: GFLOPs: 43.5391. Time: 508.4532 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #45: GFLOPs: 11.9463. Time: 1853.0970 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #46: GFLOPs: 26.9561. Time: 821.2470 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #47: GFLOPs: 56.7650. Time: 389.9868 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #48: GFLOPs: 3.3594. Time: 6589.8121 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #49: GFLOPs: 2.8673. Time: 7720.7819 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #50: GFLOPs: 2.8871. Time: 7667.8704 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #51: GFLOPs: 13.9625. Time: 1585.4998 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #52: GFLOPs: 19.8871. Time: 1113.1620 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #53: GFLOPs: 3.0640. Time: 7225.1557 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #54: GFLOPs: 96.0790. Time: 230.4103 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #55: GFLOPs: 99.5406. Time: 222.3976 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #56: GFLOPs: 13.9685. Time: 1584.8208 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #57: GFLOPs: 30.6692. Time: 721.8192 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #58: GFLOPs: 72.9148. Time: 303.6093 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #59: GFLOPs: 5.1949. Time: 4261.3967 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #60: GFLOPs: 90.0006. Time: 245.9718 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #61: GFLOPs: 12.6669. Time: 1747.6753 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #62: GFLOPs: 66.9665. Time: 330.5773 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #63: GFLOPs: 12.8614. Time: 1721.2479 us. Best GFLOPs: 176.3306
2024-04-29 09:15:56 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #64: GFLOPs: 2.5650. Time: 8630.7968 us. Best GFLOPs: 176.3306
2024-04-29 10:17:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:17:05 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 10:17:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 5 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 10:17:08 [INFO] [evolutionary_search.cc:723] Sampled 444 candidate(s)
2024-04-29 10:17:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 2 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 10:17:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 10:17:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 1 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 10:17:40 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 10:17:45 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.7891  0.7793  0.7768  0.7741  0.7646  0.7529  0.7528  0.7223  0.7105  0.7092  0.7039  0.6996  0.6980  0.6839  0.6835  0.6835
[17 : 32]:	0.6793  0.6778  0.6764  0.6760  0.6722  0.6716  0.6584  0.6526  0.6485  0.6469  0.6465  0.6417  0.6405  0.6397  0.6363  0.6356
[33 : 48]:	0.6354  0.6333  0.6333  0.6271  0.6244  0.6194  0.6189  0.6183  0.6166  0.6152  0.6148  0.6132  0.6092  0.6080  0.6041  0.6030
[49 : 64]:	0.6030  0.6013  0.6013  0.6012  0.6004  0.6003  0.5999  0.5993  0.5989  0.5978  0.5977  0.5976  0.5963  0.5951  0.5951  0.5946
2024-04-29 10:17:45 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:17:45 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #65: GFLOPs: 64.0469. Time: 345.6468 us. Best GFLOPs: 176.3306
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #66: GFLOPs: 87.2174. Time: 253.8210 us. Best GFLOPs: 176.3306
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #67: GFLOPs: 106.8778. Time: 207.1299 us. Best GFLOPs: 176.3306
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #68: GFLOPs: 161.2461. Time: 137.2907 us. Best GFLOPs: 176.3306
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #69: GFLOPs: 139.4548. Time: 158.7439 us. Best GFLOPs: 176.3306
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #70: GFLOPs: 85.5205. Time: 258.8571 us. Best GFLOPs: 176.3306
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #71: GFLOPs: 220.1746. Time: 100.5456 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #72: GFLOPs: 145.6344. Time: 152.0081 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #73: GFLOPs: 175.7443. Time: 125.9648 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #74: GFLOPs: 96.7324. Time: 228.8541 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #75: GFLOPs: 151.9779. Time: 145.6632 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #76: GFLOPs: 63.6962. Time: 347.5496 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #77: GFLOPs: 107.8818. Time: 205.2024 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #78: GFLOPs: 79.4541. Time: 278.6214 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #79: GFLOPs: 147.7791. Time: 149.8020 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #80: GFLOPs: 102.0170. Time: 216.9990 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #81: GFLOPs: 130.7331. Time: 169.3343 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #82: GFLOPs: 110.4736. Time: 200.3882 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #83: GFLOPs: 149.6421. Time: 147.9369 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #84: GFLOPs: 123.4514. Time: 179.3225 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #85: GFLOPs: 127.8537. Time: 173.1478 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #86: GFLOPs: 132.5615. Time: 166.9987 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #87: GFLOPs: 87.5227. Time: 252.9355 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #88: GFLOPs: 90.4015. Time: 244.8810 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #89: GFLOPs: 169.7176. Time: 130.4379 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #90: GFLOPs: 162.0713. Time: 136.5918 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #91: GFLOPs: 88.4127. Time: 250.3894 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #92: GFLOPs: 160.5389. Time: 137.8956 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #93: GFLOPs: 112.6453. Time: 196.5249 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #94: GFLOPs: 79.1026. Time: 279.8594 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #95: GFLOPs: 116.7061. Time: 189.6868 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #96: GFLOPs: 119.9998. Time: 184.4802 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #97: GFLOPs: 147.9339. Time: 149.6452 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #98: GFLOPs: 81.3780. Time: 272.0344 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #99: GFLOPs: 151.8178. Time: 145.8169 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #100: GFLOPs: 124.8820. Time: 177.2682 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #101: GFLOPs: 177.9696. Time: 124.3898 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #102: GFLOPs: 137.4492. Time: 161.0602 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #103: GFLOPs: 104.9249. Time: 210.9851 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #104: GFLOPs: 146.8751. Time: 150.7240 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #105: GFLOPs: 80.6315. Time: 274.5528 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #106: GFLOPs: 132.0183. Time: 167.6859 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #107: GFLOPs: 102.6135. Time: 215.7376 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #108: GFLOPs: 128.9118. Time: 171.7267 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #109: GFLOPs: 119.3075. Time: 185.5508 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #110: GFLOPs: 92.6074. Time: 239.0478 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #111: GFLOPs: 5.9400. Time: 3726.8406 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #112: GFLOPs: 129.0289. Time: 171.5708 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #113: GFLOPs: 65.3273. Time: 338.8722 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #114: GFLOPs: 109.0328. Time: 203.0361 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #115: GFLOPs: 89.2958. Time: 247.9131 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #116: GFLOPs: 77.6400. Time: 285.1312 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #117: GFLOPs: 163.6818. Time: 135.2478 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #118: GFLOPs: 172.5570. Time: 128.2916 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #119: GFLOPs: 77.2406. Time: 286.6059 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #120: GFLOPs: 123.3277. Time: 179.5022 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #121: GFLOPs: 95.9130. Time: 230.8091 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #122: GFLOPs: 66.6840. Time: 331.9776 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #123: GFLOPs: 145.7910. Time: 151.8448 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #124: GFLOPs: 67.6851. Time: 327.0674 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #125: GFLOPs: 55.5691. Time: 398.3793 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #126: GFLOPs: 7.8573. Time: 2817.4588 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #127: GFLOPs: 7.1474. Time: 3097.2942 us. Best GFLOPs: 220.1746
2024-04-29 10:19:12 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #128: GFLOPs: 18.8097. Time: 1176.9237 us. Best GFLOPs: 220.1746
2024-04-29 12:00:53 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:00:54 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:00:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 10 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 12:00:58 [INFO] [evolutionary_search.cc:723] Sampled 400 candidate(s)
2024-04-29 12:01:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 1 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 12:01:13 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 1 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 12:01:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 1 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 12:01:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb674288)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5dfa98)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xf918958)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xb1f8d88)]: 0 failure(s)
2024-04-29 12:01:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9290  0.8897  0.8395  0.8323  0.8269  0.8065  0.8045  0.7945  0.7915  0.7903  0.7870  0.7830  0.7756  0.7740  0.7700  0.7700
[17 : 32]:	0.7580  0.7580  0.7540  0.7521  0.7519  0.7507  0.7435  0.7424  0.7424  0.7409  0.7383  0.7380  0.7319  0.7319  0.7319  0.7319
[33 : 48]:	0.7319  0.7319  0.7267  0.7264  0.7215  0.7179  0.7164  0.7164  0.7159  0.7146  0.7135  0.7121  0.7118  0.7091  0.7063  0.7063
[49 : 64]:	0.7028  0.7025  0.7011  0.6961  0.6953  0.6951  0.6945  0.6945  0.6926  0.6926  0.6858  0.6847  0.6838  0.6814  0.6777  0.6764
2024-04-29 12:01:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:01:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #129: GFLOPs: 113.6832. Time: 194.7307 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #130: GFLOPs: 131.5071. Time: 168.3377 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #131: GFLOPs: 198.5123. Time: 111.5175 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #132: GFLOPs: 190.9528. Time: 115.9323 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #133: GFLOPs: 187.6692. Time: 117.9607 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #134: GFLOPs: 168.1220. Time: 131.6758 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #135: GFLOPs: 88.1793. Time: 251.0520 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #136: GFLOPs: 169.2472. Time: 130.8004 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #137: GFLOPs: 189.6038. Time: 116.7572 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #138: GFLOPs: 178.3857. Time: 124.0996 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #139: GFLOPs: 168.8337. Time: 131.1207 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #140: GFLOPs: 92.4705. Time: 239.4017 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #141: GFLOPs: 86.2437. Time: 256.6867 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #142: GFLOPs: 93.9161. Time: 235.7168 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #143: GFLOPs: 172.3479. Time: 128.4472 us. Best GFLOPs: 220.1746
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #144: GFLOPs: 263.2305. Time: 84.0997 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #145: GFLOPs: 163.0764. Time: 135.7499 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #146: GFLOPs: 78.2531. Time: 282.8975 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #147: GFLOPs: 142.3382. Time: 155.5282 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #148: GFLOPs: 178.5192. Time: 124.0068 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #149: GFLOPs: 202.1429. Time: 109.5146 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #150: GFLOPs: 140.6902. Time: 157.3500 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #151: GFLOPs: 239.2693. Time: 92.5217 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #152: GFLOPs: 171.7417. Time: 128.9006 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #153: GFLOPs: 172.4271. Time: 128.3882 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #154: GFLOPs: 134.0826. Time: 165.1042 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #155: GFLOPs: 153.6423. Time: 144.0853 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #156: GFLOPs: 114.7324. Time: 192.9498 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #157: GFLOPs: 145.1777. Time: 152.4862 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #158: GFLOPs: 167.8940. Time: 131.8546 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #159: GFLOPs: 175.2643. Time: 126.3098 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #160: GFLOPs: 126.5021. Time: 174.9978 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #161: GFLOPs: 139.2573. Time: 158.9690 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #162: GFLOPs: 180.1575. Time: 122.8792 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #163: GFLOPs: 179.3529. Time: 123.4304 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #164: GFLOPs: 128.0109. Time: 172.9353 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #165: GFLOPs: 183.7056. Time: 120.5059 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #166: GFLOPs: 130.9596. Time: 169.0414 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #167: GFLOPs: 148.4501. Time: 149.1248 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #168: GFLOPs: 147.2669. Time: 150.3230 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #169: GFLOPs: 127.9582. Time: 173.0065 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #170: GFLOPs: 141.4853. Time: 156.4658 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #171: GFLOPs: 87.2980. Time: 253.5865 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #172: GFLOPs: 160.9482. Time: 137.5449 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #173: GFLOPs: 148.8631. Time: 148.7111 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #174: GFLOPs: 180.3488. Time: 122.7488 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #175: GFLOPs: 131.1555. Time: 168.7889 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #176: GFLOPs: 175.5283. Time: 126.1198 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #177: GFLOPs: 218.3950. Time: 101.3650 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #178: GFLOPs: 117.9140. Time: 187.7436 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #179: GFLOPs: 139.6246. Time: 158.5508 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #180: GFLOPs: 152.4711. Time: 145.1921 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #181: GFLOPs: 161.7545. Time: 136.8593 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #182: GFLOPs: 182.1306. Time: 121.5479 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #183: GFLOPs: 69.7376. Time: 317.4414 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #184: GFLOPs: 104.2426. Time: 212.3661 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #185: GFLOPs: 167.5003. Time: 132.1645 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #186: GFLOPs: 173.0849. Time: 127.9002 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #187: GFLOPs: 122.0288. Time: 181.4130 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #188: GFLOPs: 198.3609. Time: 111.6027 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #189: GFLOPs: 49.0316. Time: 451.4969 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #190: GFLOPs: 104.3351. Time: 212.1779 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #191: GFLOPs: 0.6000. Time: 36895.7303 us. Best GFLOPs: 263.2305
2024-04-29 12:02:59 [INFO] [task_scheduler.cc:131] [Task #10: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #192: GFLOPs: 3.9389. Time: 5620.3056 us. Best GFLOPs: 263.2305
