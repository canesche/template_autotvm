2024-04-29 07:42:38 [INFO] [task_scheduler.cc:160] Initializing Task #26: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19"
2024-04-29 07:42:38 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4), T.int64(768), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 07:42:38 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 07:42:38 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(8), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(192), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(3), T.int64(6), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(12), oh_0 * T.int64(3) + oh_1 * T.int64(3) + oh_2 * T.int64(3) + oh_3)
                    v_ow = T.axis.spatial(T.int64(12), ow_0 * T.int64(12) + ow_1 * T.int64(12) + ow_2 * T.int64(6) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 1, 1, 3])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 6])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[192, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 07:42:38 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(192), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(3), T.int64(6), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(12), oh_0 * T.int64(3) + oh_1 * T.int64(3) + oh_2 * T.int64(3) + oh_3)
                        v_ow = T.axis.spatial(T.int64(12), ow_0 * T.int64(12) + ow_1 * T.int64(12) + ow_2 * T.int64(6) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(3), T.int64(12), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(12), oh_0 * T.int64(3) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(12), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 1, 1, 3])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 6])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[192, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 07:42:38 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(12), T.int64(12), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(12), T.int64(12), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(8), T.int64(4), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(192), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(3), T.int64(6), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(12), oh_0 * T.int64(3) + oh_1 * T.int64(3) + oh_2 * T.int64(3) + oh_3)
                        v_ow = T.axis.spatial(T.int64(12), ow_0 * T.int64(12) + ow_1 * T.int64(12) + ow_2 * T.int64(6) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(3), T.int64(12), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(12), oh_0 * T.int64(3) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 1, 1, 3])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 6])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[192, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 08:22:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:22:40 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 08:22:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 08:22:43 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 08:22:45 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 08:22:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 08:22:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 08:22:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 08:22:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9994  0.9988  0.9985  0.9974  0.9969  0.9964  0.9962  0.9962  0.9960  0.9958  0.9957  0.9956  0.9956  0.9955  0.9944  0.9936
[17 : 32]:	0.9935  0.9933  0.9927  0.9920  0.9918  0.9911  0.9903  0.9892  0.9884  0.9879  0.9872  0.9871  0.9871  0.9869  0.9869  0.9865
[33 : 48]:	0.9863  0.9859  0.9856  0.9853  0.9852  0.9852  0.9843  0.9842  0.9842  0.9833  0.9830  0.9824  0.9822  0.9818  0.9814  0.9808
[49 : 64]:	0.9807  0.9805  0.9804  0.9797  0.9797  0.9794  0.9770  0.9768  0.9764  0.9761  0.9756  0.9747  0.9740  0.9712  0.9711  0.9708
2024-04-29 08:22:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:22:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #1: GFLOPs: 40.7814. Time: 695.1313 us. Best GFLOPs: 40.7814
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #2: GFLOPs: 60.5199. Time: 468.4145 us. Best GFLOPs: 60.5199
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #3: GFLOPs: 132.3458. Time: 214.1996 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #4: GFLOPs: 76.5685. Time: 370.2358 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #5: GFLOPs: 1.2497. Time: 22684.6830 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #6: GFLOPs: 10.4987. Time: 2700.1814 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #7: GFLOPs: 127.4205. Time: 222.4793 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #8: GFLOPs: 57.0644. Time: 496.7792 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #9: GFLOPs: 107.6078. Time: 263.4419 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #10: GFLOPs: 5.7709. Time: 4912.2625 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #11: GFLOPs: 16.4771. Time: 1720.4778 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #12: GFLOPs: 41.0350. Time: 690.8354 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #13: GFLOPs: 132.2414. Time: 214.3688 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #14: GFLOPs: 19.5817. Time: 1447.7007 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #15: GFLOPs: 15.7527. Time: 1799.5964 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #16: GFLOPs: 6.1685. Time: 4595.6550 us. Best GFLOPs: 132.3458
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #17: GFLOPs: 143.4286. Time: 197.6482 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #18: GFLOPs: 123.4860. Time: 229.5679 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #19: GFLOPs: 3.9679. Time: 7144.3500 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #20: GFLOPs: 55.7830. Time: 508.1908 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #21: GFLOPs: 9.4433. Time: 3001.9668 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #22: GFLOPs: 49.0404. Time: 578.0625 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #23: GFLOPs: 17.7766. Time: 1594.7030 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #24: GFLOPs: 34.5649. Time: 820.1496 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #25: GFLOPs: 71.3692. Time: 397.2079 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #26: GFLOPs: 77.4406. Time: 366.0665 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #27: GFLOPs: 40.1274. Time: 706.4600 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #28: GFLOPs: 70.7014. Time: 400.9596 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #29: GFLOPs: 21.1341. Time: 1341.3601 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #30: GFLOPs: 7.8823. Time: 3596.4625 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #31: GFLOPs: 4.3159. Time: 6568.3009 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #32: GFLOPs: 13.6242. Time: 2080.7395 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #33: GFLOPs: 31.7715. Time: 892.2586 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #34: GFLOPs: 79.3196. Time: 357.3946 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #35: GFLOPs: 89.2036. Time: 317.7945 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #36: GFLOPs: 45.2639. Time: 626.2923 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #37: GFLOPs: 107.7994. Time: 262.9738 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #38: GFLOPs: 75.5334. Time: 375.3096 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #39: GFLOPs: 12.8935. Time: 2198.6607 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #40: GFLOPs: 8.0023. Time: 3542.5129 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #41: GFLOPs: 16.9554. Time: 1671.9414 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #42: GFLOPs: 82.3584. Time: 344.2079 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #43: GFLOPs: 43.0953. Time: 657.8069 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #44: GFLOPs: 2.8166. Time: 10064.6111 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #45: GFLOPs: 36.8056. Time: 770.2202 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #46: GFLOPs: 13.2274. Time: 2143.1529 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #47: GFLOPs: 2.5907. Time: 10942.5350 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #48: GFLOPs: 6.7970. Time: 4170.7144 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #49: GFLOPs: 6.5760. Time: 4310.9180 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #50: GFLOPs: 14.9354. Time: 1898.0744 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #51: GFLOPs: 3.2333. Time: 8767.5173 us. Best GFLOPs: 143.4286
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #52: GFLOPs: 171.3889. Time: 165.4040 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #53: GFLOPs: 28.1414. Time: 1007.3559 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #54: GFLOPs: 36.5756. Time: 775.0630 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #55: GFLOPs: 22.3465. Time: 1268.5815 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #56: GFLOPs: 22.1965. Time: 1277.1586 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #57: GFLOPs: 18.2766. Time: 1551.0759 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #58: GFLOPs: 36.3753. Time: 779.3310 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #59: GFLOPs: 32.6234. Time: 868.9609 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #60: GFLOPs: 56.7697. Time: 499.3579 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #61: GFLOPs: 46.3737. Time: 611.3038 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #62: GFLOPs: 157.7313. Time: 179.7260 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #63: GFLOPs: 100.8365. Time: 281.1325 us. Best GFLOPs: 171.3889
2024-04-29 09:16:55 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #64: GFLOPs: 6.7235. Time: 4216.3375 us. Best GFLOPs: 171.3889
2024-04-29 10:45:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:45:42 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 10:45:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 10:45:44 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2024-04-29 10:45:50 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 10:45:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 10:46:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 10:46:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x8c73528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xd119518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xd84a8e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xece8798)]: 0 failure(s)
2024-04-29 10:46:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9859  0.9859  0.9602  0.9546  0.8790  0.8764  0.8733  0.8555  0.8555  0.8516  0.8436  0.8204  0.8198  0.8079  0.7893  0.7885
[17 : 32]:	0.7863  0.7810  0.7810  0.7697  0.7693  0.7637  0.7613  0.7559  0.7538  0.7538  0.7538  0.7454  0.7414  0.7359  0.7359  0.7325
[33 : 48]:	0.7319  0.7226  0.7173  0.7134  0.7100  0.7095  0.7031  0.7031  0.7031  0.7031  0.7024  0.6984  0.6973  0.6953  0.6934  0.6924
[49 : 64]:	0.6893  0.6878  0.6848  0.6840  0.6837  0.6833  0.6806  0.6791  0.6758  0.6736  0.6735  0.6729  0.6724  0.6676  0.6676  0.6651
2024-04-29 10:46:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:46:09 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #65: GFLOPs: 78.0524. Time: 363.1971 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #66: GFLOPs: 71.7502. Time: 395.0990 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #67: GFLOPs: 67.4368. Time: 420.3701 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #68: GFLOPs: 84.8229. Time: 334.2070 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #69: GFLOPs: 78.9632. Time: 359.0079 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #70: GFLOPs: 63.0514. Time: 449.6081 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #71: GFLOPs: 123.8055. Time: 228.9754 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #72: GFLOPs: 159.6739. Time: 177.5394 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #73: GFLOPs: 102.0072. Time: 277.9061 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #74: GFLOPs: 147.8082. Time: 191.7919 us. Best GFLOPs: 171.3889
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #75: GFLOPs: 190.6234. Time: 148.7143 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #76: GFLOPs: 147.3148. Time: 192.4343 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #77: GFLOPs: 178.5500. Time: 158.7702 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #78: GFLOPs: 153.2409. Time: 184.9925 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #79: GFLOPs: 132.4844. Time: 213.9754 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #80: GFLOPs: 77.7051. Time: 364.8205 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #81: GFLOPs: 142.8463. Time: 198.4540 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #82: GFLOPs: 115.3499. Time: 245.7603 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #83: GFLOPs: 108.3978. Time: 261.5220 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #84: GFLOPs: 159.9117. Time: 177.2755 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #85: GFLOPs: 156.9112. Time: 180.6653 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #86: GFLOPs: 110.1342. Time: 257.3987 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #87: GFLOPs: 176.1353. Time: 160.9468 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #88: GFLOPs: 190.0713. Time: 149.1462 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #89: GFLOPs: 100.9724. Time: 280.7541 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #90: GFLOPs: 100.8719. Time: 281.0339 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #91: GFLOPs: 101.3177. Time: 279.7972 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #92: GFLOPs: 48.4236. Time: 585.4262 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #93: GFLOPs: 3.9171. Time: 7237.0857 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #94: GFLOPs: 128.5024. Time: 220.6062 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #95: GFLOPs: 124.7295. Time: 227.2791 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #96: GFLOPs: 122.8538. Time: 230.7492 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #97: GFLOPs: 131.8801. Time: 214.9560 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #98: GFLOPs: 115.7491. Time: 244.9127 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #99: GFLOPs: 132.1090. Time: 214.5835 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #100: GFLOPs: 69.2048. Time: 409.6309 us. Best GFLOPs: 190.6234
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #101: GFLOPs: 194.0808. Time: 146.0650 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #102: GFLOPs: 116.1340. Time: 244.1010 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #103: GFLOPs: 140.3812. Time: 201.9389 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #104: GFLOPs: 147.4637. Time: 192.2399 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #105: GFLOPs: 122.7775. Time: 230.8925 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #106: GFLOPs: 122.5085. Time: 231.3997 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #107: GFLOPs: 61.8033. Time: 458.6876 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #108: GFLOPs: 123.5671. Time: 229.4172 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #109: GFLOPs: 111.9605. Time: 253.2001 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #110: GFLOPs: 144.5428. Time: 196.1247 us. Best GFLOPs: 194.0808
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #111: GFLOPs: 375.9512. Time: 75.4045 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #112: GFLOPs: 210.1372. Time: 134.9043 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #113: GFLOPs: 3.9588. Time: 7160.8456 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #114: GFLOPs: 180.8783. Time: 156.7265 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #115: GFLOPs: 130.1910. Time: 217.7448 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #116: GFLOPs: 149.5288. Time: 189.5849 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #117: GFLOPs: 48.3691. Time: 586.0847 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #118: GFLOPs: 135.9937. Time: 208.4539 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #119: GFLOPs: 83.1737. Time: 340.8339 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #120: GFLOPs: 83.3982. Time: 339.9164 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #121: GFLOPs: 194.6977. Time: 145.6022 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #122: GFLOPs: 9.0570. Time: 3129.9967 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #123: GFLOPs: 145.5704. Time: 194.7403 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #124: GFLOPs: 171.5330. Time: 165.2651 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #125: GFLOPs: 158.3422. Time: 179.0326 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #126: GFLOPs: 93.4616. Time: 303.3163 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #127: GFLOPs: 85.2213. Time: 332.6448 us. Best GFLOPs: 375.9512
2024-04-29 10:47:27 [INFO] [task_scheduler.cc:131] [Task #26: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_19] Trial #128: GFLOPs: 98.2344. Time: 288.5792 us. Best GFLOPs: 375.9512
