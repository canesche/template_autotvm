2024-04-29 07:44:00 [INFO] [task_scheduler.cc:160] Initializing Task #49: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34"
2024-04-29 07:44:00 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4), T.int64(80), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 07:44:01 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 07:44:01 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(8), T.int64(13), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(13), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(40), T.int64(3), T.int64(3), T.int64(1), T.int64(3), T.int64(2), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(6) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(52), oh_0 * T.int64(4) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(52), ow_0 * T.int64(52) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(40) + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 1, 2, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[13, 2, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 13, 2, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[2, 40])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 07:44:01 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(13), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(13), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(40), T.int64(3), T.int64(3), T.int64(1), T.int64(3), T.int64(2), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(6) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(52), oh_0 * T.int64(4) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(52), ow_0 * T.int64(52) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(40) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(2), T.int64(4), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(6) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(52), oh_0 * T.int64(4) + oh_1 * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(52), ow_1 * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 1, 2, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[13, 2, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 13, 2, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[2, 40])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 07:44:01 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(8), T.int64(13), T.int64(1), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(13), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(40), T.int64(3), T.int64(3), T.int64(1), T.int64(3), T.int64(2), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(6) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(52), oh_0 * T.int64(4) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(52), ow_0 * T.int64(52) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(40) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(4), T.int64(52), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(6) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(52), oh_0 * T.int64(4) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(52), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 1, 2, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[13, 2, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 13, 2, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[2, 40])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 08:55:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:55:00 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 08:55:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 08:55:03 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 08:55:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 08:55:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 08:55:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 08:55:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 08:55:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9992  0.9984  0.9984  0.9979  0.9977  0.9972  0.9971  0.9971  0.9971  0.9964  0.9935  0.9924  0.9920  0.9913  0.9908
[17 : 32]:	0.9905  0.9901  0.9884  0.9883  0.9882  0.9871  0.9870  0.9860  0.9853  0.9841  0.9838  0.9836  0.9830  0.9825  0.9819  0.9817
[33 : 48]:	0.9815  0.9806  0.9806  0.9805  0.9804  0.9799  0.9792  0.9783  0.9782  0.9773  0.9767  0.9764  0.9761  0.9761  0.9753  0.9752
[49 : 64]:	0.9746  0.9745  0.9742  0.9741  0.9736  0.9736  0.9734  0.9729  0.9724  0.9722  0.9708  0.9693  0.9689  0.9682  0.9676  0.9672
2024-04-29 08:55:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:55:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #1: GFLOPs: 67.8484. Time: 11034.0190 us. Best GFLOPs: 67.8484
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #2: GFLOPs: 51.4826. Time: 14541.6211 us. Best GFLOPs: 67.8484
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #3: GFLOPs: 1.2146. Time: 616348.1737 us. Best GFLOPs: 67.8484
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #4: GFLOPs: 19.1992. Time: 38993.3067 us. Best GFLOPs: 67.8484
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #5: GFLOPs: 156.0420. Time: 4797.6834 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #6: GFLOPs: 150.4262. Time: 4976.7955 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #7: GFLOPs: 54.4569. Time: 13747.3851 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #8: GFLOPs: 4.9547. Time: 151097.6540 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #9: GFLOPs: 8.4105. Time: 89012.6130 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #10: GFLOPs: 25.7503. Time: 29073.0722 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #11: GFLOPs: 78.5093. Time: 9535.6859 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #12: GFLOPs: 45.4748. Time: 16462.7639 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #13: GFLOPs: 9.5959. Time: 78016.4400 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #14: GFLOPs: 154.3585. Time: 4850.0100 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #15: GFLOPs: 34.3754. Time: 21778.3700 us. Best GFLOPs: 156.0420
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #16: GFLOPs: 179.6027. Time: 4168.3137 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #17: GFLOPs: 39.9198. Time: 18753.5990 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #18: GFLOPs: 121.5052. Time: 6161.3862 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #19: GFLOPs: 19.8894. Time: 37640.2283 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #20: GFLOPs: 3.7148. Time: 201529.3277 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #21: GFLOPs: 74.9055. Time: 9994.4593 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #22: GFLOPs: 34.9346. Time: 21429.7636 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #23: GFLOPs: 4.9402. Time: 151541.6677 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #24: GFLOPs: 168.1865. Time: 4451.2506 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #25: GFLOPs: 67.0886. Time: 11158.9856 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #26: GFLOPs: 93.0457. Time: 8045.9388 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #27: GFLOPs: 35.3254. Time: 21192.6754 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #28: GFLOPs: 76.1979. Time: 9824.9454 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #29: GFLOPs: 6.0786. Time: 123160.0873 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #30: GFLOPs: 27.0694. Time: 27656.3055 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #31: GFLOPs: 99.2777. Time: 7540.8669 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #32: GFLOPs: 119.7309. Time: 6252.6881 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #33: GFLOPs: 71.8268. Time: 10422.8565 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #34: GFLOPs: 3.6035. Time: 207751.4087 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #35: GFLOPs: 30.8106. Time: 24298.1052 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #36: GFLOPs: 0.7459. Time: 1003730.3167 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #37: GFLOPs: 19.9092. Time: 37602.7950 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #38: GFLOPs: 3.1927. Time: 234483.2623 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #39: GFLOPs: 3.6016. Time: 207864.5377 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #40: GFLOPs: 44.2973. Time: 16900.3652 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #41: GFLOPs: 2.7851. Time: 268804.9870 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #42: GFLOPs: 36.5880. Time: 20461.3422 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #43: GFLOPs: 12.9448. Time: 57833.3053 us. Best GFLOPs: 179.6027
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #44: GFLOPs: 186.8997. Time: 4005.5732 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #45: GFLOPs: 16.2541. Time: 46058.4747 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #46: GFLOPs: 63.3935. Time: 11809.4108 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #47: GFLOPs: 77.5886. Time: 9648.8379 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #48: GFLOPs: 1.8127. Time: 413004.6220 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #49: GFLOPs: 48.5216. Time: 15428.9975 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #50: GFLOPs: 83.1099. Time: 9007.8378 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #51: GFLOPs: 36.7558. Time: 20367.9530 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #52: GFLOPs: 119.0742. Time: 6287.1737 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #53: GFLOPs: 91.2167. Time: 8207.2736 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #54: GFLOPs: 171.9487. Time: 4353.8587 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #55: GFLOPs: 128.0391. Time: 5846.9648 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #56: GFLOPs: 2.1398. Time: 349872.6400 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #57: GFLOPs: 13.6350. Time: 54905.9590 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #58: GFLOPs: 3.3550. Time: 223142.1657 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #59: GFLOPs: 76.0329. Time: 9846.2617 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #60: GFLOPs: 54.8324. Time: 13653.2475 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #61: GFLOPs: 101.1560. Time: 7400.8481 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #62: GFLOPs: 40.2280. Time: 18609.9243 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #63: GFLOPs: 66.5441. Time: 11250.2890 us. Best GFLOPs: 186.8997
2024-04-29 09:18:53 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #64: GFLOPs: 6.3467. Time: 117957.1507 us. Best GFLOPs: 186.8997
2024-04-29 09:20:18 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:20:19 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 09:20:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:20:21 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2024-04-29 09:20:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:20:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:20:38 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:20:43 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:20:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9984  0.9781  0.9538  0.9038  0.9027  0.8845  0.8731  0.8690  0.8689  0.8670  0.8658  0.8582  0.8577  0.8523  0.8505  0.8497
[17 : 32]:	0.8413  0.8393  0.8393  0.8371  0.8350  0.8350  0.8350  0.8350  0.8301  0.8301  0.8301  0.8293  0.8252  0.8252  0.8252  0.8252
[33 : 48]:	0.8242  0.8237  0.8237  0.8234  0.8214  0.8197  0.8189  0.8154  0.8137  0.8135  0.8114  0.8112  0.8097  0.8062  0.8059  0.8052
[49 : 64]:	0.8035  0.8033  0.8026  0.8004  0.7959  0.7956  0.7956  0.7956  0.7941  0.7919  0.7888  0.7887  0.7818  0.7818  0.7818  0.7815
2024-04-29 09:20:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:20:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #65: GFLOPs: 158.7386. Time: 4716.1843 us. Best GFLOPs: 186.8997
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #66: GFLOPs: 206.1122. Time: 3632.1976 us. Best GFLOPs: 206.1122
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #67: GFLOPs: 190.4566. Time: 3930.7662 us. Best GFLOPs: 206.1122
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #68: GFLOPs: 158.8491. Time: 4712.9006 us. Best GFLOPs: 206.1122
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #69: GFLOPs: 233.6066. Time: 3204.7048 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #70: GFLOPs: 165.8616. Time: 4513.6441 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #71: GFLOPs: 121.5786. Time: 6157.6645 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #72: GFLOPs: 163.3465. Time: 4583.1437 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #73: GFLOPs: 181.7382. Time: 4119.3325 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #74: GFLOPs: 182.5630. Time: 4100.7221 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #75: GFLOPs: 219.0887. Time: 3417.0651 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #76: GFLOPs: 218.2702. Time: 3429.8788 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #77: GFLOPs: 135.6658. Time: 5518.2698 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #78: GFLOPs: 178.3804. Time: 4196.8742 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #79: GFLOPs: 233.3965. Time: 3207.5899 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #80: GFLOPs: 100.2307. Time: 7469.1747 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #81: GFLOPs: 178.2552. Time: 4199.8229 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #82: GFLOPs: 182.9986. Time: 4090.9625 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #83: GFLOPs: 198.7992. Time: 3765.8104 us. Best GFLOPs: 233.6066
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #84: GFLOPs: 410.7568. Time: 1822.5878 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #85: GFLOPs: 174.0937. Time: 4300.2156 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #86: GFLOPs: 138.5315. Time: 5404.1159 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #87: GFLOPs: 93.3329. Time: 8021.1797 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #88: GFLOPs: 166.1456. Time: 4505.9276 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #89: GFLOPs: 188.4929. Time: 3971.7163 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #90: GFLOPs: 189.3153. Time: 3954.4632 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #91: GFLOPs: 188.6116. Time: 3969.2167 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #92: GFLOPs: 63.1149. Time: 11861.5499 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #93: GFLOPs: 179.8457. Time: 4162.6814 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #94: GFLOPs: 121.4160. Time: 6165.9115 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #95: GFLOPs: 160.7961. Time: 4655.8351 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #96: GFLOPs: 131.7450. Time: 5682.4940 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #97: GFLOPs: 190.7026. Time: 3925.6947 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #98: GFLOPs: 174.9024. Time: 4280.3322 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #99: GFLOPs: 139.6034. Time: 5362.6222 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #100: GFLOPs: 99.0433. Time: 7558.7134 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #101: GFLOPs: 192.0398. Time: 3898.3589 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #102: GFLOPs: 183.4134. Time: 4081.7105 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #103: GFLOPs: 192.7947. Time: 3883.0962 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #104: GFLOPs: 48.3994. Time: 15467.9729 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #105: GFLOPs: 55.3605. Time: 13523.0053 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #106: GFLOPs: 172.0402. Time: 4351.5432 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #107: GFLOPs: 173.3295. Time: 4319.1748 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #108: GFLOPs: 171.5189. Time: 4364.7691 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #109: GFLOPs: 43.8035. Time: 17090.8622 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #110: GFLOPs: 142.8481. Time: 5240.8153 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #111: GFLOPs: 106.2627. Time: 7045.1871 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #112: GFLOPs: 109.4606. Time: 6839.3562 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #113: GFLOPs: 183.3690. Time: 4082.6981 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #114: GFLOPs: 141.1650. Time: 5303.3001 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #115: GFLOPs: 152.4570. Time: 4910.5004 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #116: GFLOPs: 166.9760. Time: 4483.5193 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #117: GFLOPs: 213.8901. Time: 3500.1163 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #118: GFLOPs: 123.9056. Time: 6042.0208 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #119: GFLOPs: 123.9609. Time: 6039.3266 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #120: GFLOPs: 130.0826. Time: 5755.1141 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #121: GFLOPs: 70.6021. Time: 10603.6549 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #122: GFLOPs: 178.2644. Time: 4199.6054 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #123: GFLOPs: 93.6153. Time: 7996.9850 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #124: GFLOPs: 90.6732. Time: 8256.4692 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #125: GFLOPs: 147.6045. Time: 5071.9351 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #126: GFLOPs: 56.4418. Time: 13263.9448 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #127: GFLOPs: 112.9463. Time: 6628.2874 us. Best GFLOPs: 410.7568
2024-04-29 09:22:15 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #128: GFLOPs: 137.8241. Time: 5431.8523 us. Best GFLOPs: 410.7568
2024-04-29 09:48:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:48:03 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:48:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:48:06 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:48:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:48:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:48:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:48:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 09:48:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9092  0.8530  0.8530  0.8434  0.8429  0.7184  0.7146  0.7061  0.7061  0.7061  0.6999  0.6857  0.6754  0.6511  0.6472  0.6434
[17 : 32]:	0.6402  0.6398  0.6373  0.6361  0.6247  0.6238  0.6113  0.5979  0.5918  0.5804  0.5777  0.5754  0.5710  0.5699  0.5699  0.5656
[33 : 48]:	0.5639  0.5604  0.5586  0.5585  0.5561  0.5530  0.5510  0.5484  0.5483  0.5391  0.5387  0.5387  0.5370  0.5322  0.5322  0.5316
[49 : 64]:	0.5303  0.5268  0.5259  0.5259  0.5252  0.5250  0.5246  0.5245  0.5245  0.5245  0.5236  0.5228  0.5216  0.5213  0.5197  0.5190
2024-04-29 09:48:32 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:48:32 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #129: GFLOPs: 145.3548. Time: 5150.4336 us. Best GFLOPs: 410.7568
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #130: GFLOPs: 238.3451. Time: 3140.9930 us. Best GFLOPs: 410.7568
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #131: GFLOPs: 192.0681. Time: 3897.7847 us. Best GFLOPs: 410.7568
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #132: GFLOPs: 165.0981. Time: 4534.5172 us. Best GFLOPs: 410.7568
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #133: GFLOPs: 151.2197. Time: 4950.6783 us. Best GFLOPs: 410.7568
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #134: GFLOPs: 139.3253. Time: 5373.3270 us. Best GFLOPs: 410.7568
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #135: GFLOPs: 184.9732. Time: 4047.2905 us. Best GFLOPs: 410.7568
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #136: GFLOPs: 595.1127. Time: 1257.9807 us. Best GFLOPs: 595.1127
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #137: GFLOPs: 709.3590. Time: 1055.3757 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #138: GFLOPs: 191.7371. Time: 3904.5135 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #139: GFLOPs: 199.0242. Time: 3761.5534 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #140: GFLOPs: 332.7533. Time: 2249.8360 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #141: GFLOPs: 182.5858. Time: 4100.2097 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #142: GFLOPs: 125.8942. Time: 5946.5819 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #143: GFLOPs: 150.4831. Time: 4974.9131 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #144: GFLOPs: 110.5684. Time: 6770.8308 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #145: GFLOPs: 156.8518. Time: 4772.9158 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #146: GFLOPs: 178.7283. Time: 4188.7055 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #147: GFLOPs: 91.5880. Time: 8174.0036 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #148: GFLOPs: 234.5946. Time: 3191.2079 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #149: GFLOPs: 141.8056. Time: 5279.3411 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #150: GFLOPs: 86.0824. Time: 8696.7879 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #151: GFLOPs: 108.5415. Time: 6897.2696 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #152: GFLOPs: 91.5824. Time: 8174.5021 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #153: GFLOPs: 321.1989. Time: 2330.7682 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #154: GFLOPs: 181.1325. Time: 4133.1082 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #155: GFLOPs: 229.9064. Time: 3256.2833 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #156: GFLOPs: 106.9754. Time: 6998.2457 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #157: GFLOPs: 201.2097. Time: 3720.6959 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #158: GFLOPs: 106.3722. Time: 7037.9311 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #159: GFLOPs: 106.8731. Time: 7004.9477 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #160: GFLOPs: 150.9595. Time: 4959.2135 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #161: GFLOPs: 263.0228. Time: 2846.2943 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #162: GFLOPs: 240.5183. Time: 3112.6128 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #163: GFLOPs: 194.8370. Time: 3842.3927 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #164: GFLOPs: 298.0029. Time: 2512.1913 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #165: GFLOPs: 159.5387. Time: 4692.5311 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #166: GFLOPs: 133.3819. Time: 5612.7590 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #167: GFLOPs: 250.3324. Time: 2990.5847 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #168: GFLOPs: 328.2451. Time: 2280.7352 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #169: GFLOPs: 235.5568. Time: 3178.1729 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #170: GFLOPs: 334.5071. Time: 2238.0400 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #171: GFLOPs: 248.0903. Time: 3017.6119 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #172: GFLOPs: 247.9141. Time: 3019.7566 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #173: GFLOPs: 334.6211. Time: 2237.2772 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #174: GFLOPs: 206.7030. Time: 3621.8154 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #175: GFLOPs: 169.6421. Time: 4413.0566 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #176: GFLOPs: 147.1011. Time: 5089.2897 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #177: GFLOPs: 200.2239. Time: 3739.0149 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #178: GFLOPs: 182.5466. Time: 4101.0913 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #179: GFLOPs: 116.7488. Time: 6412.4046 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #180: GFLOPs: 137.7156. Time: 5436.1340 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #181: GFLOPs: 213.5113. Time: 3506.3270 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #182: GFLOPs: 345.1692. Time: 2168.9083 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #183: GFLOPs: 158.6141. Time: 4719.8834 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #184: GFLOPs: 150.3446. Time: 4979.4945 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #185: GFLOPs: 43.9139. Time: 17047.9188 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #186: GFLOPs: 116.9321. Time: 6402.3521 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #187: GFLOPs: 87.0896. Time: 8596.2120 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #188: GFLOPs: 157.5754. Time: 4750.9975 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #189: GFLOPs: 445.8938. Time: 1678.9653 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #190: GFLOPs: 64.7178. Time: 11567.7628 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #191: GFLOPs: 113.4215. Time: 6600.5141 us. Best GFLOPs: 709.3590
2024-04-29 09:49:49 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #192: GFLOPs: 85.1133. Time: 8795.8122 us. Best GFLOPs: 709.3590
2024-04-29 10:39:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:39:02 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:39:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:39:04 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:39:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:39:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:39:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:39:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:39:30 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9062  0.9062  0.9062  0.8442  0.8206  0.8206  0.7796  0.7763  0.7763  0.7717  0.7717  0.7114  0.6968  0.6460  0.6260  0.6260
[17 : 32]:	0.6119  0.5767  0.5688  0.5688  0.5599  0.5571  0.5571  0.5571  0.5514  0.5473  0.5403  0.5398  0.5385  0.5290  0.5212  0.5190
[33 : 48]:	0.5190  0.5190  0.5187  0.5179  0.5142  0.5142  0.5059  0.5015  0.4989  0.4971  0.4959  0.4924  0.4923  0.4885  0.4878  0.4875
[49 : 64]:	0.4848  0.4846  0.4831  0.4826  0.4807  0.4760  0.4760  0.4760  0.4760  0.4759  0.4759  0.4750  0.4732  0.4700  0.4699  0.4678
2024-04-29 10:39:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:39:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #193: GFLOPs: 111.5964. Time: 6708.4599 us. Best GFLOPs: 709.3590
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #194: GFLOPs: 632.6736. Time: 1183.2961 us. Best GFLOPs: 709.3590
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #195: GFLOPs: 715.4373. Time: 1046.4093 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #196: GFLOPs: 197.6708. Time: 3787.3086 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #197: GFLOPs: 232.7429. Time: 3216.5972 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #198: GFLOPs: 111.2454. Time: 6729.6294 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #199: GFLOPs: 110.7031. Time: 6762.5954 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #200: GFLOPs: 206.3293. Time: 3628.3750 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #201: GFLOPs: 105.9902. Time: 7063.2964 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #202: GFLOPs: 109.6386. Time: 6828.2567 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #203: GFLOPs: 213.6310. Time: 3504.3621 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #204: GFLOPs: 187.1288. Time: 4000.6682 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #205: GFLOPs: 405.2266. Time: 1847.4607 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #206: GFLOPs: 115.2987. Time: 6493.0528 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #207: GFLOPs: 400.2086. Time: 1870.6250 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #208: GFLOPs: 444.9881. Time: 1682.3826 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #209: GFLOPs: 168.6009. Time: 4440.3105 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #210: GFLOPs: 257.4398. Time: 2908.0209 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #211: GFLOPs: 167.8982. Time: 4458.8944 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #212: GFLOPs: 185.7499. Time: 4030.3664 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #213: GFLOPs: 564.5566. Time: 1326.0678 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #214: GFLOPs: 281.2575. Time: 2661.7610 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #215: GFLOPs: 201.6157. Time: 3713.2037 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #216: GFLOPs: 330.9130. Time: 2262.3478 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #217: GFLOPs: 200.1127. Time: 3741.0935 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #218: GFLOPs: 173.5820. Time: 4312.8922 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #219: GFLOPs: 142.9155. Time: 5238.3427 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #220: GFLOPs: 271.4564. Time: 2757.8660 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #221: GFLOPs: 166.1408. Time: 4506.0588 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #222: GFLOPs: 177.6905. Time: 4213.1688 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #223: GFLOPs: 445.5830. Time: 1680.1363 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #224: GFLOPs: 640.5244. Time: 1168.7927 us. Best GFLOPs: 715.4373
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #225: GFLOPs: 726.9731. Time: 1029.8046 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #226: GFLOPs: 645.1704. Time: 1160.3760 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #227: GFLOPs: 160.2463. Time: 4671.8096 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #228: GFLOPs: 282.2613. Time: 2652.2953 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #229: GFLOPs: 156.9656. Time: 4769.4537 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #230: GFLOPs: 365.6545. Time: 2047.3977 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #231: GFLOPs: 134.8369. Time: 5552.1928 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #232: GFLOPs: 104.5017. Time: 7163.9071 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #233: GFLOPs: 157.3339. Time: 4758.2902 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #234: GFLOPs: 139.2990. Time: 5374.3395 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #235: GFLOPs: 302.8628. Time: 2471.8795 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #236: GFLOPs: 153.7336. Time: 4869.7248 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #237: GFLOPs: 197.3950. Time: 3792.6001 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #238: GFLOPs: 272.4434. Time: 2747.8746 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #239: GFLOPs: 122.0488. Time: 6133.9414 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #240: GFLOPs: 130.1532. Time: 5751.9924 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #241: GFLOPs: 200.9049. Time: 3726.3419 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #242: GFLOPs: 236.5224. Time: 3165.1975 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #243: GFLOPs: 89.6320. Time: 8352.3753 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #244: GFLOPs: 99.4869. Time: 7525.0096 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #245: GFLOPs: 200.8619. Time: 3727.1393 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #246: GFLOPs: 183.5913. Time: 4077.7540 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #247: GFLOPs: 205.4355. Time: 3644.1627 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #248: GFLOPs: 202.8403. Time: 3690.7873 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #249: GFLOPs: 181.0608. Time: 4134.7445 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #250: GFLOPs: 97.7058. Time: 7662.1920 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #251: GFLOPs: 130.5380. Time: 5735.0379 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #252: GFLOPs: 109.3804. Time: 6844.3755 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #253: GFLOPs: 216.6125. Time: 3456.1272 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #254: GFLOPs: 28.6831. Time: 26100.4310 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #255: GFLOPs: 85.3027. Time: 8776.2772 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #256: GFLOPs: 8.4110. Time: 89006.7860 us. Best GFLOPs: 726.9731
2024-04-29 10:40:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:40:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 10:41:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:41:00 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 10:41:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:41:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:41:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:41:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 10:41:26 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9335  0.9210  0.9210  0.9210  0.9210  0.9210  0.9081  0.9081  0.9081  0.9081  0.8700  0.8700  0.8700  0.8700  0.8695  0.8635
[17 : 32]:	0.8316  0.8174  0.7839  0.7839  0.7839  0.7834  0.7834  0.7834  0.7736  0.7736  0.7736  0.7382  0.7382  0.7382  0.7374  0.7374
[33 : 48]:	0.7374  0.7374  0.7374  0.7257  0.7219  0.6933  0.6933  0.6933  0.6933  0.6933  0.6933  0.6906  0.6906  0.6903  0.6532  0.6532
[49 : 64]:	0.6532  0.6532  0.6532  0.6532  0.6532  0.6532  0.6532  0.6532  0.6474  0.6429  0.6429  0.6423  0.6423  0.6423  0.6423  0.6423
2024-04-29 10:41:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:41:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #257: GFLOPs: 125.6160. Time: 5959.7518 us. Best GFLOPs: 726.9731
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #258: GFLOPs: 325.9889. Time: 2296.5208 us. Best GFLOPs: 726.9731
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #259: GFLOPs: 245.9812. Time: 3043.4858 us. Best GFLOPs: 726.9731
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #260: GFLOPs: 221.8292. Time: 3374.8497 us. Best GFLOPs: 726.9731
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #261: GFLOPs: 199.7692. Time: 3747.5259 us. Best GFLOPs: 726.9731
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #262: GFLOPs: 727.8513. Time: 1028.5621 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #263: GFLOPs: 316.0877. Time: 2368.4575 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #264: GFLOPs: 715.9717. Time: 1045.6284 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #265: GFLOPs: 246.5245. Time: 3036.7788 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #266: GFLOPs: 641.1191. Time: 1167.7085 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #267: GFLOPs: 629.4750. Time: 1189.3090 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #268: GFLOPs: 705.8577. Time: 1060.6108 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #269: GFLOPs: 242.1461. Time: 3091.6889 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #270: GFLOPs: 592.0144. Time: 1264.5643 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #271: GFLOPs: 242.1232. Time: 3091.9809 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #272: GFLOPs: 632.4882. Time: 1183.6431 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #273: GFLOPs: 559.5049. Time: 1338.0407 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #274: GFLOPs: 492.6767. Time: 1519.5365 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #275: GFLOPs: 709.6674. Time: 1054.9171 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #276: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(1352), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(338) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(338) // T.int64(13) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(338) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(338) // T.int64(13) * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(338) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(338) // T.int64(13) * T.int64(2) + ow_1)
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 13, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[26, 2, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b67)
l104 = sch.fuse(l102, l103, preserve_unit_iters=True)
sch.vectorize(loop=l104)
b105 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b105)
b125 = sch.decompose_reduction(block=b105, loop=l109)
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #277: GFLOPs: 245.4066. Time: 3050.6123 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #278: GFLOPs: 245.4257. Time: 3050.3738 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #279: GFLOPs: 637.1959. Time: 1174.8981 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #280: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(1352), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(52) // T.int64(13) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(52) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(52) // T.int64(13) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(52) * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(52) // T.int64(13) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(52) * T.int64(2) + ow_1)
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 13, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[26, 2, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b67)
l104 = sch.fuse(l102, l103, preserve_unit_iters=True)
sch.vectorize(loop=l104)
b105 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b105)
b125 = sch.decompose_reduction(block=b105, loop=l109)
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #281: GFLOPs: 232.9535. Time: 3213.6890 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #282: GFLOPs: 581.2504. Time: 1287.9823 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #283: GFLOPs: 582.9708. Time: 1284.1814 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #284: GFLOPs: 257.4611. Time: 2907.7800 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #285: GFLOPs: 568.0928. Time: 1317.8132 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #286: GFLOPs: 648.5773. Time: 1154.2807 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #287: GFLOPs: 331.6728. Time: 2257.1651 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #288: GFLOPs: 132.8515. Time: 5635.1654 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #289: GFLOPs: 344.9547. Time: 2170.2567 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #290: GFLOPs: 132.8046. Time: 5637.1566 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #291: GFLOPs: 343.4639. Time: 2179.6769 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #292: GFLOPs: 133.4818. Time: 5608.5566 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #293: GFLOPs: 331.8759. Time: 2255.7835 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #294: GFLOPs: 233.1127. Time: 3211.4953 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #295: GFLOPs: 211.4495. Time: 3540.5148 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #296: GFLOPs: 234.4054. Time: 3193.7845 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #297: GFLOPs: 209.8818. Time: 3566.9621 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #298: GFLOPs: 205.7945. Time: 3637.8042 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #299: GFLOPs: 223.8249. Time: 3344.7579 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #300: GFLOPs: 204.2049. Time: 3666.1225 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #301: GFLOPs: 230.7548. Time: 3244.3108 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #302: GFLOPs: 421.6414. Time: 1775.5379 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #303: GFLOPs: 248.6212. Time: 3011.1685 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #304: GFLOPs: 213.8536. Time: 3500.7141 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #305: GFLOPs: 227.6788. Time: 3288.1419 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #306: GFLOPs: 582.0849. Time: 1286.1358 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #307: GFLOPs: 220.2629. Time: 3398.8493 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #308: GFLOPs: 209.2168. Time: 3578.2995 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #309: GFLOPs: 119.0439. Time: 6288.7753 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #310: GFLOPs: 197.1104. Time: 3798.0761 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #311: GFLOPs: 232.3337. Time: 3222.2632 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #312: GFLOPs: 233.1029. Time: 3211.6297 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #313: GFLOPs: 210.0249. Time: 3564.5303 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #314: GFLOPs: 204.5669. Time: 3659.6346 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #315: GFLOPs: 203.9674. Time: 3670.3925 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #316: GFLOPs: 247.4422. Time: 3025.5162 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #317: GFLOPs: 223.3670. Time: 3351.6152 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #318: GFLOPs: 64.2714. Time: 11648.1148 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #319: GFLOPs: 111.5696. Time: 6710.0737 us. Best GFLOPs: 727.8513
2024-04-29 10:43:01 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #320: GFLOPs: 107.0053. Time: 6996.2909 us. Best GFLOPs: 727.8513
2024-04-29 11:13:10 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 11:13:11 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 11:13:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 11:13:13 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 11:13:19 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 11:13:25 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 11:13:30 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 11:13:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 11:13:39 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8441  0.8441  0.8316  0.8264  0.8264  0.8074  0.7899  0.7899  0.7873  0.7837  0.7837  0.7811  0.7811  0.7811  0.7811  0.7811
[17 : 32]:	0.7811  0.7797  0.7797  0.7740  0.7709  0.7709  0.7709  0.7639  0.7581  0.7579  0.7579  0.7579  0.7579  0.7535  0.7535  0.7535
[33 : 48]:	0.7519  0.7415  0.7415  0.7346  0.7301  0.7226  0.7226  0.7012  0.6988  0.6988  0.6936  0.6927  0.6927  0.6927  0.6927  0.6927
[49 : 64]:	0.6927  0.6865  0.6852  0.6829  0.6795  0.6795  0.6793  0.6793  0.6790  0.6773  0.6764  0.6764  0.6764  0.6700  0.6700  0.6700
2024-04-29 11:13:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 11:13:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #321: GFLOPs: 717.8046. Time: 1042.9584 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #322: GFLOPs: 241.4734. Time: 3100.3008 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #323: GFLOPs: 206.4065. Time: 3627.0184 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #324: GFLOPs: 185.3819. Time: 4038.3673 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #325: GFLOPs: 716.6684. Time: 1044.6118 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #326: GFLOPs: 204.6062. Time: 3658.9332 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #327: GFLOPs: 727.4234. Time: 1029.1671 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #328: GFLOPs: 242.6883. Time: 3084.7810 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #329: GFLOPs: 716.0534. Time: 1045.5090 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #330: GFLOPs: 642.4086. Time: 1165.3646 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #331: GFLOPs: 247.3051. Time: 3027.1931 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #332: GFLOPs: 454.5142. Time: 1647.1217 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #333: GFLOPs: 721.0187. Time: 1038.3091 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #334: GFLOPs: 428.9170. Time: 1745.4198 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #335: GFLOPs: 716.1363. Time: 1045.3880 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #336: GFLOPs: 246.8033. Time: 3033.3476 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #337: GFLOPs: 605.7196. Time: 1235.9519 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #338: GFLOPs: 246.0846. Time: 3042.2065 us. Best GFLOPs: 727.8513
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #339: GFLOPs: 731.6563. Time: 1023.2131 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #340: GFLOPs: 636.7545. Time: 1175.7125 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #341: GFLOPs: 246.3053. Time: 3039.4813 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #342: GFLOPs: 707.8287. Time: 1057.6575 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #343: GFLOPs: 246.9716. Time: 3031.2804 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #344: GFLOPs: 210.5724. Time: 3555.2629 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #345: GFLOPs: 234.6166. Time: 3190.9089 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #346: GFLOPs: 595.9628. Time: 1256.1863 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #347: GFLOPs: 255.6132. Time: 2928.8010 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #348: GFLOPs: 230.6819. Time: 3245.3365 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #349: GFLOPs: 505.4253. Time: 1481.2084 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #350: GFLOPs: 583.5565. Time: 1282.8925 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #351: GFLOPs: 257.7890. Time: 2904.0815 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #352: GFLOPs: 574.7431. Time: 1302.5650 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #353: GFLOPs: 259.0234. Time: 2890.2415 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #354: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(1352), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(338) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26) // T.int64(2) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(338) // T.int64(26) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(2) * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(338) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26) // T.int64(2) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(338) // T.int64(26) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(2) * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(338) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26) // T.int64(2) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(338) // T.int64(26) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(2) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 13, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[13, 2, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l101, l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122 = sch.get_loops(block=b104)
b123 = sch.decompose_reduction(block=b104, loop=l107)
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #355: GFLOPs: 257.4682. Time: 2907.6998 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #356: GFLOPs: 225.8933. Time: 3314.1321 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #357: GFLOPs: 229.7543. Time: 3258.4392 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #358: GFLOPs: 174.7320. Time: 4284.5052 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #359: GFLOPs: 147.2548. Time: 5083.9802 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #360: GFLOPs: 717.6337. Time: 1043.2067 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #361: GFLOPs: 493.3093. Time: 1517.5881 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #362: GFLOPs: 538.5629. Time: 1390.0702 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #363: GFLOPs: 223.1869. Time: 3354.3204 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #364: GFLOPs: 224.8123. Time: 3330.0679 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #365: GFLOPs: 205.6339. Time: 3640.6466 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #366: GFLOPs: 200.8538. Time: 3727.2894 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #367: GFLOPs: 162.8192. Time: 4597.9842 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #368: GFLOPs: 204.3283. Time: 3663.9088 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #369: GFLOPs: 189.5576. Time: 3949.4083 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #370: GFLOPs: 182.4816. Time: 4102.5530 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #371: GFLOPs: 208.7451. Time: 3586.3854 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #372: GFLOPs: 181.8124. Time: 4117.6514 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #373: GFLOPs: 202.8967. Time: 3689.7602 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #374: GFLOPs: 188.7535. Time: 3966.2318 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #375: GFLOPs: 210.9094. Time: 3549.5829 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #376: GFLOPs: 203.4042. Time: 3680.5538 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #377: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(2704), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(1352) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(26) // T.int64(13) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(1352) // T.int64(26) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(1352) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(26) // T.int64(13) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(1352) // T.int64(26) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(1352) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(26) // T.int64(13) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(1352) // T.int64(26))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 13, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[52, 1, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b67)
l104 = sch.fuse(l102, l103, preserve_unit_iters=True)
sch.vectorize(loop=l104)
b105 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b105)
b125 = sch.decompose_reduction(block=b105, loop=l109)
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #378: GFLOPs: 192.8264. Time: 3882.4578 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #379: GFLOPs: 226.0445. Time: 3311.9147 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #380: GFLOPs: 560.2419. Time: 1336.2804 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #381: GFLOPs: 644.4602. Time: 1161.6547 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #382: GFLOPs: 12.1577. Time: 61577.7057 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #383: GFLOPs: 7.0693. Time: 105900.3520 us. Best GFLOPs: 731.6563
2024-04-29 11:15:22 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #384: GFLOPs: 58.9536. Time: 12698.8105 us. Best GFLOPs: 731.6563
2024-04-29 12:15:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:15:33 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:15:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:15:35 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 12:15:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:15:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:15:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:15:58 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:16:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9361  0.9361  0.8019  0.7955  0.7955  0.7954  0.7954  0.7954  0.7954  0.7954  0.7954  0.7954  0.7954  0.7954  0.7944  0.7944
[17 : 32]:	0.7726  0.7716  0.7435  0.7435  0.7435  0.7435  0.7424  0.7424  0.7424  0.7376  0.7376  0.7314  0.7314  0.7314  0.7314  0.7314
[33 : 48]:	0.7314  0.7131  0.7102  0.7019  0.6923  0.6923  0.6923  0.6923  0.6838  0.6838  0.6838  0.6658  0.6642  0.6523  0.6523  0.6500
[49 : 64]:	0.6450  0.6450  0.6382  0.6369  0.6333  0.6275  0.5887  0.5840  0.5838  0.5838  0.5838  0.5838  0.5838  0.5812  0.5812  0.5812
2024-04-29 12:16:02 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:16:02 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #385: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(1352), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(676) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(26) // T.int64(13) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(676) // T.int64(26) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(676) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(26) // T.int64(13) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(676) // T.int64(26) * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(676) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(26) // T.int64(13) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(13) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(676) // T.int64(26) * T.int64(2) + ow_1)
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 13, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[26, 2, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b67)
l104 = sch.fuse(l102, l103, preserve_unit_iters=True)
sch.vectorize(loop=l104)
b105 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b105)
b125 = sch.decompose_reduction(block=b105, loop=l109)
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #386: GFLOPs: 245.1017. Time: 3054.4063 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #387: GFLOPs: 489.1423. Time: 1530.5162 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #388: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused in T.parallel(T.int64(1352), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(4) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(104) * T.int64(4) + oh_1 * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(104) // T.int64(4) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(4) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(104) * T.int64(4) + oh_1 * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(104) // T.int64(4) * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(4) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(104) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(104) // T.int64(4) * T.int64(2) + ow_1)
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[13, 1, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[26, 2, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b67)
l105 = sch.fuse(l103, l104, preserve_unit_iters=True)
sch.vectorize(loop=l105)
b106 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b106)
b127 = sch.decompose_reduction(block=b106, loop=l111)
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #389: GFLOPs: 246.1111. Time: 3041.8790 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #390: GFLOPs: 246.2940. Time: 3039.6199 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #391: GFLOPs: 608.4533. Time: 1230.3989 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #392: GFLOPs: 606.0636. Time: 1235.2504 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #393: GFLOPs: 245.9601. Time: 3043.7472 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #394: GFLOPs: 607.8571. Time: 1231.6057 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #395: GFLOPs: 246.6177. Time: 3035.6305 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #396: GFLOPs: 721.3326. Time: 1037.8573 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #397: GFLOPs: 718.3638. Time: 1042.1464 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #398: GFLOPs: 246.1091. Time: 3041.9041 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #399: GFLOPs: 222.4863. Time: 3364.8829 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #400: GFLOPs: 725.1047. Time: 1032.4581 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #401: GFLOPs: 713.3189. Time: 1049.5169 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #402: GFLOPs: 596.2654. Time: 1255.5487 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #403: GFLOPs: 250.3239. Time: 2990.6867 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #404: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(2704), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(104) // T.int64(26) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(208) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(208) // T.int64(104) * T.int64(26) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(104) // T.int64(26) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(208) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(208) // T.int64(104) * T.int64(26) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(104) // T.int64(26) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(208) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(208) // T.int64(104) * T.int64(26) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[13, 1, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 26, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l101, l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122 = sch.get_loops(block=b104)
b123 = sch.decompose_reduction(block=b104, loop=l107)
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #405: GFLOPs: 250.2617. Time: 2991.4291 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #406: GFLOPs: 653.6667. Time: 1145.2935 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #407: GFLOPs: 716.2344. Time: 1045.2448 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #408: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(2704), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(676) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(338) // T.int64(26) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(676) // T.int64(338) * T.int64(26) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(676) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(338) // T.int64(26) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(676) // T.int64(338) * T.int64(26) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(676) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(338) // T.int64(26) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(676) // T.int64(338) * T.int64(26) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(26))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 13, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 26, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l101, l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122 = sch.get_loops(block=b104)
b123 = sch.decompose_reduction(block=b104, loop=l107)
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #409: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(2704), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(676) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(52) // T.int64(4) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(676) // T.int64(52) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(4) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(676) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(52) // T.int64(4) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(676) // T.int64(52) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(4) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(676) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(52) // T.int64(4) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(676) // T.int64(52) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(4))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 13, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[13, 4, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l101, l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122 = sch.get_loops(block=b104)
b123 = sch.decompose_reduction(block=b104, loop=l107)
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #410: GFLOPs: 230.3489. Time: 3250.0280 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #411: GFLOPs: 230.3899. Time: 3249.4486 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #412: GFLOPs: 201.0852. Time: 3722.9999 us. Best GFLOPs: 731.6563
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #413: GFLOPs: 740.8144. Time: 1010.5639 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #414: GFLOPs: 230.0654. Time: 3254.0328 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #415: GFLOPs: 739.1709. Time: 1012.8108 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #416: GFLOPs: 641.8452. Time: 1166.3875 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #417: GFLOPs: 230.8418. Time: 3243.0883 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #418: GFLOPs: 721.7008. Time: 1037.3277 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #419: GFLOPs: 197.2394. Time: 3795.5926 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #420: GFLOPs: 538.1285. Time: 1391.1922 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #421: GFLOPs: 246.8349. Time: 3032.9590 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #422: GFLOPs: 727.2233. Time: 1029.4503 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #423: GFLOPs: 246.2528. Time: 3040.1284 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #424: GFLOPs: 643.1344. Time: 1164.0494 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #425: GFLOPs: 590.7574. Time: 1267.2550 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #426: GFLOPs: 571.8458. Time: 1309.1645 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #427: GFLOPs: 250.2421. Time: 2991.6637 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #428: GFLOPs: 225.4209. Time: 3321.0771 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #429: GFLOPs: 575.2676. Time: 1301.3774 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #430: GFLOPs: 502.3726. Time: 1490.2090 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #431: GFLOPs: 478.2177. Time: 1565.4799 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #432: GFLOPs: 501.1549. Time: 1493.8299 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #433: GFLOPs: 191.0619. Time: 3918.3123 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #434: GFLOPs: 193.6427. Time: 3866.0914 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #435: GFLOPs: 425.1264. Time: 1760.9829 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #436: GFLOPs: 456.6103. Time: 1639.5606 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #437: GFLOPs: 179.7389. Time: 4165.1543 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #438: GFLOPs: 178.2585. Time: 4199.7445 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #439: GFLOPs: 109.5466. Time: 6833.9886 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #440: GFLOPs: 192.6300. Time: 3886.4161 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #441: GFLOPs: 228.7322. Time: 3272.9993 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #442: GFLOPs: 168.1742. Time: 4451.5769 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #443: GFLOPs: 229.9830. Time: 3255.1976 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #444: GFLOPs: 181.3517. Time: 4128.1132 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #445: GFLOPs: 178.6440. Time: 4190.6827 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #446: GFLOPs: 131.0458. Time: 5712.8139 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #447: GFLOPs: 36.4892. Time: 20516.7398 us. Best GFLOPs: 740.8144
2024-04-29 12:17:41 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #448: GFLOPs: 117.2367. Time: 6385.7179 us. Best GFLOPs: 740.8144
2024-04-29 12:48:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:48:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 12:48:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:48:26 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 12:48:32 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:48:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:48:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:48:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa45f108)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa4b89c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa24f4e8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xec252b8)]: 0 failure(s)
2024-04-29 12:48:54 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9210  0.9210  0.8406  0.8106  0.8106  0.8106  0.7810  0.7810  0.7810  0.7765  0.7765  0.7734  0.7734  0.7734  0.7727  0.7727
[17 : 32]:	0.7572  0.7572  0.7491  0.7491  0.7486  0.7486  0.7480  0.6881  0.6773  0.6773  0.6743  0.6624  0.6611  0.6588  0.6588  0.6407
[33 : 48]:	0.6374  0.6367  0.6240  0.6240  0.6026  0.5996  0.5952  0.5952  0.5842  0.5842  0.5805  0.5805  0.5805  0.5751  0.5751  0.5703
[49 : 64]:	0.5666  0.5628  0.5628  0.5604  0.5553  0.5472  0.5472  0.5430  0.5329  0.5329  0.5310  0.5308  0.5308  0.5290  0.5286  0.5286
2024-04-29 12:48:54 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:48:54 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #449: GFLOPs: 317.3799. Time: 2358.8146 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #450: GFLOPs: 121.8684. Time: 6143.0203 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #451: GFLOPs: 107.7654. Time: 6946.9433 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #452: GFLOPs: 317.0605. Time: 2361.1906 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #453: GFLOPs: 709.4082. Time: 1055.3026 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #454: GFLOPs: 242.6661. Time: 3085.0632 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #455: GFLOPs: 246.0578. Time: 3042.5380 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #456: GFLOPs: 717.4619. Time: 1043.4565 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #457: GFLOPs: 607.2849. Time: 1232.7662 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #458: GFLOPs: 249.5167. Time: 3000.3617 us. Best GFLOPs: 740.8144
2024-04-29 12:50:33 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #459: GFLOPs: 713.9797. Time: 1048.5456 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #460: GFLOPs: 638.9415. Time: 1171.6882 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #461: GFLOPs: 726.5621. Time: 1030.3871 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #462: GFLOPs: 728.5838. Time: 1027.5280 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #463: GFLOPs: 607.5401. Time: 1232.2484 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #464: GFLOPs: 602.4715. Time: 1242.6151 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #465: GFLOPs: 249.7122. Time: 2998.0126 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #466: GFLOPs: 716.8966. Time: 1044.2793 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #467: GFLOPs: 736.3181. Time: 1016.7348 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #468: GFLOPs: 637.4096. Time: 1174.5041 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #469: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(2704), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(208) // T.int64(52) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(52) // T.int64(4) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(208) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(4) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(208) // T.int64(52) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(52) // T.int64(4) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(208) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(4) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(208) // T.int64(52) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(52) // T.int64(4) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(208) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(4))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 13, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[13, 4, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b67)
l103 = sch.fuse(l101, l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122 = sch.get_loops(block=b104)
b123 = sch.decompose_reduction(block=b104, loop=l107)
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #470: GFLOPs: 250.3146. Time: 2990.7970 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:121] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #471: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(20), T.int64(54), T.int64(54), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(20), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(52), T.int64(52), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused in T.parallel(T.int64(1352), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(338) * T.int64(12) + oc_chunk_1 * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(338) // T.int64(26) * T.int64(4) + oh_1 * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(26) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(10), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(338) * T.int64(12) + oc_chunk_1 * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(338) // T.int64(26) * T.int64(4) + oh_1 * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(26) * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(80), ic_0 * T.int64(10) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_fused // T.int64(338) * T.int64(12) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(338) // T.int64(26) * T.int64(4) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(52), n_0_oc_chunk_0_oh_0_ow_0_fused % T.int64(26) * T.int64(2) + ow_1)
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[13, 1, 1, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[26, 2, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 10])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b67)
l108 = sch.fuse(l106, l107, preserve_unit_iters=True)
sch.vectorize(loop=l108)
b109 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b109)
b133 = sch.decompose_reduction(block=b109, loop=l117)
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #472: GFLOPs: 458.0060. Time: 1634.5643 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #473: GFLOPs: 477.6055. Time: 1567.4868 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #474: GFLOPs: 547.9220. Time: 1366.3264 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #475: GFLOPs: 639.4374. Time: 1170.7796 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #476: GFLOPs: 547.8485. Time: 1366.5095 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #477: GFLOPs: 497.9568. Time: 1503.4240 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #478: GFLOPs: 500.6688. Time: 1495.2804 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #479: GFLOPs: 548.3972. Time: 1365.1424 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #480: GFLOPs: 373.3345. Time: 2005.2799 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #481: GFLOPs: 530.3647. Time: 1411.5575 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #482: GFLOPs: 498.0497. Time: 1503.1438 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #483: GFLOPs: 243.9306. Time: 3069.0708 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #484: GFLOPs: 495.2071. Time: 1511.7720 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #485: GFLOPs: 593.7267. Time: 1260.9173 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #486: GFLOPs: 642.8964. Time: 1164.4804 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #487: GFLOPs: 191.0133. Time: 3919.3091 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #488: GFLOPs: 488.4339. Time: 1532.7360 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #489: GFLOPs: 506.2922. Time: 1478.6722 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #490: GFLOPs: 231.7587. Time: 3230.2569 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #491: GFLOPs: 461.7962. Time: 1621.1485 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #492: GFLOPs: 258.6048. Time: 2894.9205 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #493: GFLOPs: 122.5517. Time: 6108.7705 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #494: GFLOPs: 259.0221. Time: 2890.2567 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #495: GFLOPs: 259.0539. Time: 2889.9013 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #496: GFLOPs: 645.5880. Time: 1159.6254 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #497: GFLOPs: 293.3917. Time: 2551.6747 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #498: GFLOPs: 480.8450. Time: 1556.9264 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #499: GFLOPs: 455.8853. Time: 1642.1679 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #500: GFLOPs: 230.7288. Time: 3244.6759 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #501: GFLOPs: 472.1181. Time: 1585.7054 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #502: GFLOPs: 215.4966. Time: 3474.0229 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #503: GFLOPs: 458.4846. Time: 1632.8580 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #504: GFLOPs: 466.7246. Time: 1604.0299 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #505: GFLOPs: 233.7293. Time: 3203.0231 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #506: GFLOPs: 573.4879. Time: 1305.4160 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #507: GFLOPs: 436.2136. Time: 1716.2238 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #508: GFLOPs: 192.5220. Time: 3888.5956 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #509: GFLOPs: 200.2805. Time: 3737.9580 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #510: GFLOPs: 237.4158. Time: 3153.2870 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #511: GFLOPs: 59.0450. Time: 12679.1408 us. Best GFLOPs: 740.8144
2024-04-29 12:50:34 [INFO] [task_scheduler.cc:131] [Task #49: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_34] Trial #512: GFLOPs: 55.7367. Time: 13431.7280 us. Best GFLOPs: 740.8144
