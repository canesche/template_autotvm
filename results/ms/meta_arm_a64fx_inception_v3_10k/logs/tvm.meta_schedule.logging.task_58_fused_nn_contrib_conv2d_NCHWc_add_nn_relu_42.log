2024-04-29 07:44:34 [INFO] [task_scheduler.cc:160] Initializing Task #58: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42"
2024-04-29 07:44:34 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(512), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4), T.int64(2048), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 07:44:34 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 07:44:34 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(512), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(5), T.int64(1), T.int64(4), T.int64(1), T.int64(5), T.int64(1), T.int64(5), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(5), oh_0 + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(5), ow_0 * T.int64(5) + ow_1 + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(2048), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 5, 4, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 5, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 07:44:34 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(512), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(5), T.int64(1), T.int64(4), T.int64(1), T.int64(5), T.int64(1), T.int64(5), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(5), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(5), ow_0 * T.int64(5) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(2048), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + oc_chunk_1 * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(5), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(5), ow_1 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 5, 4, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 5, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 07:44:34 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(512), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(5), T.int64(1), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(5), T.int64(1), T.int64(5), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(5), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(5), ow_0 * T.int64(5) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(2048), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(40), T.int64(1), T.int64(5), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(5), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(5), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 5, 4, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[5, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 5, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 09:09:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:09:32 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 09:09:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 09:09:34 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 09:09:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 09:09:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 09:09:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 09:09:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 09:09:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9998  0.9997  0.9996  0.9988  0.9988  0.9986  0.9985  0.9983  0.9979  0.9972  0.9960  0.9955  0.9954  0.9951  0.9949  0.9932
[17 : 32]:	0.9926  0.9924  0.9923  0.9907  0.9904  0.9903  0.9901  0.9901  0.9876  0.9870  0.9868  0.9868  0.9865  0.9858  0.9848  0.9848
[33 : 48]:	0.9843  0.9832  0.9827  0.9822  0.9819  0.9819  0.9815  0.9810  0.9805  0.9794  0.9790  0.9771  0.9768  0.9764  0.9748  0.9727
[49 : 64]:	0.9727  0.9725  0.9716  0.9716  0.9713  0.9712  0.9711  0.9707  0.9699  0.9697  0.9696  0.9694  0.9692  0.9689  0.9687  0.9685
2024-04-29 09:09:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:09:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #1: GFLOPs: 1.8557. Time: 17667.0993 us. Best GFLOPs: 1.8557
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #2: GFLOPs: 27.2063. Time: 1205.0169 us. Best GFLOPs: 27.2063
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #3: GFLOPs: 38.0303. Time: 862.0504 us. Best GFLOPs: 38.0303
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #4: GFLOPs: 95.9476. Time: 341.6864 us. Best GFLOPs: 95.9476
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #5: GFLOPs: 17.5668. Time: 1866.2424 us. Best GFLOPs: 95.9476
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #6: GFLOPs: 63.3167. Time: 517.7780 us. Best GFLOPs: 95.9476
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #7: GFLOPs: 182.7593. Time: 179.3835 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #8: GFLOPs: 30.7813. Time: 1065.0609 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #9: GFLOPs: 25.9658. Time: 1262.5856 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #10: GFLOPs: 33.6210. Time: 975.1040 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #11: GFLOPs: 2.0901. Time: 15685.2424 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #12: GFLOPs: 6.1776. Time: 5306.9140 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #13: GFLOPs: 58.4973. Time: 560.4358 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #14: GFLOPs: 3.1747. Time: 10326.6440 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #15: GFLOPs: 46.8351. Time: 699.9884 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #16: GFLOPs: 4.0347. Time: 8125.5502 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #17: GFLOPs: 4.5576. Time: 7193.2169 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #18: GFLOPs: 2.7974. Time: 11719.5680 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #19: GFLOPs: 18.3671. Time: 1784.9303 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #20: GFLOPs: 123.8254. Time: 264.7599 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #21: GFLOPs: 1.9337. Time: 16954.2480 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #22: GFLOPs: 2.8744. Time: 11405.3853 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #23: GFLOPs: 1.2089. Time: 27119.1440 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #24: GFLOPs: 33.1695. Time: 988.3775 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #25: GFLOPs: 0.4695. Time: 69827.5677 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #26: GFLOPs: 54.9731. Time: 596.3645 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #27: GFLOPs: 35.6986. Time: 918.3541 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #28: GFLOPs: 3.6375. Time: 9012.6913 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #29: GFLOPs: 32.4700. Time: 1009.6718 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #30: GFLOPs: 18.8880. Time: 1735.7082 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #31: GFLOPs: 7.2416. Time: 4527.1474 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #32: GFLOPs: 25.2517. Time: 1298.2905 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #33: GFLOPs: 70.3108. Time: 466.2723 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #34: GFLOPs: 63.4195. Time: 516.9387 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #35: GFLOPs: 18.1913. Time: 1802.1801 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #36: GFLOPs: 34.4939. Time: 950.4297 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #37: GFLOPs: 59.5858. Time: 550.1984 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #38: GFLOPs: 70.9358. Time: 462.1641 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #39: GFLOPs: 81.9629. Time: 399.9859 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #40: GFLOPs: 67.8228. Time: 483.3771 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #41: GFLOPs: 30.0537. Time: 1090.8467 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #42: GFLOPs: 4.3304. Time: 7570.6945 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #43: GFLOPs: 119.6060. Time: 274.1000 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #44: GFLOPs: 12.0889. Time: 2711.9075 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #45: GFLOPs: 41.1729. Time: 796.2522 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #46: GFLOPs: 53.6765. Time: 610.7699 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #47: GFLOPs: 0.2868. Time: 114318.2130 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #48: GFLOPs: 5.9605. Time: 5500.1827 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #49: GFLOPs: 21.2178. Time: 1545.1142 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #50: GFLOPs: 4.5512. Time: 7203.3719 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #51: GFLOPs: 26.3152. Time: 1245.8208 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #52: GFLOPs: 9.9492. Time: 3295.1312 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #53: GFLOPs: 90.5896. Time: 361.8959 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #54: GFLOPs: 21.9912. Time: 1490.7805 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #55: GFLOPs: 107.0750. Time: 306.1778 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #56: GFLOPs: 2.2505. Time: 14567.1340 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #57: GFLOPs: 3.2080. Time: 10219.5628 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #58: GFLOPs: 31.0050. Time: 1057.3781 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #59: GFLOPs: 81.3801. Time: 402.8501 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #60: GFLOPs: 60.9737. Time: 537.6741 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:121] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #61: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(5), T.int64(5), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(512), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(5), T.int64(5), T.int64(4)))
        for n_0 in T.serial(T.int64(1), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(5), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(80) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(5), oh_0 * T.int64(5) + oh_1 * T.int64(5) + oh_2_init * T.int64(5) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(5), ow_0 * T.int64(5) + ow_1 * T.int64(5) + ow_2_init * T.int64(5) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(5), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(80) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(5), oh_0 * T.int64(5) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                            v_ow = T.axis.spatial(T.int64(5), ow_0 * T.int64(5) + ow_1 * T.int64(5) + ow_2 * T.int64(5) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(2048), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(80), T.int64(5)):
                    for ax3_ax4_fused in T.vectorized(T.int64(20)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                            v_ax3 = T.axis.spatial(T.int64(5), ax3_ax4_fused // T.int64(4))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 80, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 5])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
sch.annotate(block_or_loop=l68, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l68, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b67)
l104 = sch.fuse(l102, l103, preserve_unit_iters=True)
sch.vectorize(loop=l104)
b105 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131 = sch.get_loops(block=b105)
b132 = sch.decompose_reduction(block=b105, loop=l116)
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #62: GFLOPs: 14.4844. Time: 2263.4039 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #63: GFLOPs: 15.8526. Time: 2068.0465 us. Best GFLOPs: 182.7593
2024-04-29 09:19:49 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #64: GFLOPs: 61.0259. Time: 537.2143 us. Best GFLOPs: 182.7593
2024-04-29 12:11:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:11:34 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 12:11:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 12:11:36 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 12:11:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 12:11:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 12:11:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 12:11:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xc61da38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa5e3238)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x57c45f8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xaf50cb8)]: 0 failure(s)
2024-04-29 12:11:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9660  0.9660  0.9173  0.9173  0.9173  0.9154  0.9108  0.8900  0.8900  0.8768  0.8727  0.8727  0.8522  0.8482  0.8481  0.8472
[17 : 32]:	0.8421  0.8413  0.8368  0.8215  0.8127  0.7946  0.7928  0.7792  0.7626  0.7591  0.7565  0.7508  0.7508  0.7448  0.7406  0.7397
[33 : 48]:	0.7397  0.7382  0.7382  0.7382  0.7382  0.7374  0.7335  0.7289  0.7227  0.7142  0.7091  0.7091  0.7045  0.7017  0.7016  0.6992
[49 : 64]:	0.6966  0.6962  0.6962  0.6933  0.6859  0.6854  0.6845  0.6833  0.6816  0.6779  0.6777  0.6774  0.6764  0.6757  0.6757  0.6746
2024-04-29 12:11:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:11:59 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #65: GFLOPs: 82.0609. Time: 399.5081 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #66: GFLOPs: 165.1158. Time: 198.5516 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #67: GFLOPs: 162.6099. Time: 201.6113 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #68: GFLOPs: 164.5738. Time: 199.2055 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #69: GFLOPs: 164.2828. Time: 199.5583 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #70: GFLOPs: 164.1767. Time: 199.6873 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #71: GFLOPs: 164.5652. Time: 199.2158 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #72: GFLOPs: 162.6494. Time: 201.5624 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #73: GFLOPs: 156.8479. Time: 209.0178 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #74: GFLOPs: 164.4973. Time: 199.2981 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #75: GFLOPs: 132.2838. Time: 247.8307 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #76: GFLOPs: 132.8715. Time: 246.7346 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #77: GFLOPs: 164.4348. Time: 199.3738 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #78: GFLOPs: 163.5114. Time: 200.4998 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #79: GFLOPs: 126.1916. Time: 259.7954 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #80: GFLOPs: 158.3119. Time: 207.0848 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #81: GFLOPs: 162.9786. Time: 201.1553 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #82: GFLOPs: 108.6367. Time: 301.7765 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #83: GFLOPs: 109.7531. Time: 298.7070 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #84: GFLOPs: 126.7304. Time: 258.6910 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #85: GFLOPs: 106.7481. Time: 307.1155 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #86: GFLOPs: 92.3387. Time: 355.0409 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #87: GFLOPs: 164.8616. Time: 198.8578 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #88: GFLOPs: 165.2140. Time: 198.4335 us. Best GFLOPs: 182.7593
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #89: GFLOPs: 203.3915. Time: 161.1867 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #90: GFLOPs: 121.9351. Time: 268.8642 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #91: GFLOPs: 163.1264. Time: 200.9730 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #92: GFLOPs: 165.8154. Time: 197.7138 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #93: GFLOPs: 163.9396. Time: 199.9761 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #94: GFLOPs: 197.9234. Time: 165.6398 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #95: GFLOPs: 161.9430. Time: 202.4416 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #96: GFLOPs: 95.5041. Time: 343.2733 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #97: GFLOPs: 94.1603. Time: 348.1722 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #98: GFLOPs: 100.4288. Time: 326.4402 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #99: GFLOPs: 80.1021. Time: 409.2775 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #100: GFLOPs: 96.4463. Time: 339.9198 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #101: GFLOPs: 125.4517. Time: 261.3277 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #102: GFLOPs: 187.2257. Time: 175.1041 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #103: GFLOPs: 175.6831. Time: 186.6087 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #104: GFLOPs: 184.9206. Time: 177.2869 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #105: GFLOPs: 160.2047. Time: 204.6382 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #106: GFLOPs: 164.9853. Time: 198.7086 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #107: GFLOPs: 116.4555. Time: 281.5153 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #108: GFLOPs: 116.4481. Time: 281.5332 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #109: GFLOPs: 129.8918. Time: 252.3947 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #110: GFLOPs: 157.5900. Time: 208.0334 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #111: GFLOPs: 109.3508. Time: 299.8056 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #112: GFLOPs: 68.8831. Time: 475.9367 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #113: GFLOPs: 191.6841. Time: 171.0314 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #114: GFLOPs: 124.6095. Time: 263.0940 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #115: GFLOPs: 116.0487. Time: 282.5021 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #116: GFLOPs: 125.9466. Time: 260.3007 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #117: GFLOPs: 123.6384. Time: 265.1603 us. Best GFLOPs: 203.3915
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #118: GFLOPs: 216.3573. Time: 151.5271 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #119: GFLOPs: 117.0029. Time: 280.1981 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #120: GFLOPs: 98.6115. Time: 332.4560 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #121: GFLOPs: 211.3792. Time: 155.0957 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #122: GFLOPs: 115.3733. Time: 284.1559 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #123: GFLOPs: 159.7328. Time: 205.2427 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #124: GFLOPs: 108.6252. Time: 301.8085 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #125: GFLOPs: 111.1637. Time: 294.9163 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #126: GFLOPs: 144.6792. Time: 226.5979 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #127: GFLOPs: 7.6504. Time: 4285.2916 us. Best GFLOPs: 216.3573
2024-04-29 12:13:33 [INFO] [task_scheduler.cc:131] [Task #58: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_42] Trial #128: GFLOPs: 38.3861. Time: 854.0595 us. Best GFLOPs: 216.3573
