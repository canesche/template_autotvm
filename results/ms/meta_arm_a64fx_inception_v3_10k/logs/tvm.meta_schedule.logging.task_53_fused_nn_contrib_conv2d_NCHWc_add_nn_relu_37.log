2024-04-29 07:44:14 [INFO] [task_scheduler.cc:160] Initializing Task #53: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37"
2024-04-29 07:44:14 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(25), T.int64(25), T.int64(4)), "float32"), p1: T.Buffer((T.int64(16), T.int64(72), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4), T.int64(288), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 07:44:14 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 07:44:14 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(25), T.int64(25), T.int64(4)), "float32"), p1: T.Buffer((T.int64(16), T.int64(72), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(4), T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(5), T.int64(5), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(25), oh_0 * T.int64(25) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                    v_ow = T.axis.spatial(T.int64(25), ow_0 * T.int64(5) + ow_1 * T.int64(5) + ow_2 * T.int64(5) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(288), ic_0 * T.int64(48) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 5, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 1, 5])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[6, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 07:44:14 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(25), T.int64(25), T.int64(4)), "float32"), p1: T.Buffer((T.int64(16), T.int64(72), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(4)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(5), T.int64(5), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(25), oh_0 * T.int64(25) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                        v_ow = T.axis.spatial(T.int64(25), ow_0 * T.int64(5) + ow_1 * T.int64(5) + ow_2 * T.int64(5) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(288), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(5), T.int64(5), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(25), oh_1 * T.int64(5) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(25), ow_0 * T.int64(5) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 5, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 1, 5])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[6, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 07:44:14 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(25), T.int64(25), T.int64(4)), "float32"), p1: T.Buffer((T.int64(16), T.int64(72), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(4), T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(5), T.int64(5), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(25), oh_0 * T.int64(25) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                        v_ow = T.axis.spatial(T.int64(25), ow_0 * T.int64(5) + ow_1 * T.int64(5) + ow_2 * T.int64(5) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(288), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(25), T.int64(5), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(25), ax2)
                        v_ax3 = T.axis.spatial(T.int64(25), ow_0 * T.int64(5) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 5, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 1, 5])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[6, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 09:01:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:01:41 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 09:01:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 09:01:44 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 09:01:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 09:01:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 09:01:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 09:01:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 09:01:57 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9988  0.9988  0.9987  0.9986  0.9986  0.9982  0.9973  0.9972  0.9970  0.9964  0.9943  0.9940  0.9940  0.9934  0.9933  0.9932
[17 : 32]:	0.9919  0.9917  0.9917  0.9916  0.9908  0.9904  0.9902  0.9898  0.9887  0.9873  0.9873  0.9873  0.9864  0.9862  0.9858  0.9856
[33 : 48]:	0.9854  0.9853  0.9849  0.9844  0.9835  0.9834  0.9824  0.9807  0.9799  0.9797  0.9790  0.9776  0.9770  0.9768  0.9768  0.9737
[49 : 64]:	0.9735  0.9733  0.9731  0.9731  0.9730  0.9728  0.9727  0.9724  0.9719  0.9716  0.9716  0.9708  0.9705  0.9701  0.9693  0.9692
2024-04-29 09:01:57 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:01:57 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #1: GFLOPs: 37.3514. Time: 618.9860 us. Best GFLOPs: 37.3514
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #2: GFLOPs: 22.4737. Time: 1028.7560 us. Best GFLOPs: 37.3514
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #3: GFLOPs: 69.0875. Time: 334.6482 us. Best GFLOPs: 69.0875
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #4: GFLOPs: 49.4913. Time: 467.1524 us. Best GFLOPs: 69.0875
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #5: GFLOPs: 63.0108. Time: 366.9215 us. Best GFLOPs: 69.0875
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #6: GFLOPs: 130.8055. Time: 176.7510 us. Best GFLOPs: 130.8055
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #7: GFLOPs: 62.0893. Time: 372.3671 us. Best GFLOPs: 130.8055
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #8: GFLOPs: 4.7566. Time: 4860.6524 us. Best GFLOPs: 130.8055
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #9: GFLOPs: 8.3123. Time: 2781.4128 us. Best GFLOPs: 130.8055
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #10: GFLOPs: 1.4213. Time: 16266.3764 us. Best GFLOPs: 130.8055
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #11: GFLOPs: 139.2444. Time: 166.0390 us. Best GFLOPs: 139.2444
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #12: GFLOPs: 144.2284. Time: 160.3013 us. Best GFLOPs: 144.2284
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #13: GFLOPs: 18.0177. Time: 1283.1822 us. Best GFLOPs: 144.2284
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #14: GFLOPs: 1.8096. Time: 12776.3962 us. Best GFLOPs: 144.2284
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #15: GFLOPs: 38.4284. Time: 601.6391 us. Best GFLOPs: 144.2284
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #16: GFLOPs: 58.6487. Time: 394.2114 us. Best GFLOPs: 144.2284
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #17: GFLOPs: 1.5734. Time: 14694.4903 us. Best GFLOPs: 144.2284
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #18: GFLOPs: 52.6467. Time: 439.1535 us. Best GFLOPs: 144.2284
2024-04-29 09:19:16 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #19: GFLOPs: 11.5341. Time: 2004.4950 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #20: GFLOPs: 53.5992. Time: 431.3496 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #21: GFLOPs: 4.0943. Time: 5646.8128 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #22: GFLOPs: 5.2147. Time: 4433.6396 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #23: GFLOPs: 32.1306. Time: 719.5640 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #24: GFLOPs: 4.4958. Time: 5142.6261 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #25: GFLOPs: 3.6473. Time: 6338.9669 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #26: GFLOPs: 13.9054. Time: 1662.6623 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #27: GFLOPs: 45.9660. Time: 502.9801 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #28: GFLOPs: 26.8777. Time: 860.1934 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #29: GFLOPs: 55.3114. Time: 417.9969 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #30: GFLOPs: 125.3095. Time: 184.5031 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #31: GFLOPs: 34.2831. Time: 674.3855 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #32: GFLOPs: 100.2941. Time: 230.5220 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #33: GFLOPs: 14.4349. Time: 1601.6757 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #34: GFLOPs: 34.1878. Time: 676.2650 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #35: GFLOPs: 2.7175. Time: 8507.6833 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #36: GFLOPs: 20.8330. Time: 1109.7768 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #37: GFLOPs: 62.4524. Time: 370.2021 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #38: GFLOPs: 37.3126. Time: 619.6307 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #39: GFLOPs: 9.4603. Time: 2443.9097 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #40: GFLOPs: 100.2493. Time: 230.6251 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #41: GFLOPs: 6.3766. Time: 3625.7635 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #42: GFLOPs: 11.4164. Time: 2025.1629 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #43: GFLOPs: 11.3232. Time: 2041.8289 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #44: GFLOPs: 50.1164. Time: 461.3262 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #45: GFLOPs: 37.8828. Time: 610.3029 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:121] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #46: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(25), T.int64(25), T.int64(4)), "float32"), p1: T.Buffer((T.int64(16), T.int64(72), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(40), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(5), T.int64(5), T.int64(2), T.int64(1), T.int64(2), T.int64(5), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(10) * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(25), oh_1 * T.int64(25) + oh_2_init * T.int64(5) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(10) // T.int64(2) * T.int64(5) + ow_1 * T.int64(5) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(5), T.int64(2), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(5), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(10) * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(25), oh_1 * T.int64(25) + oh_2 * T.int64(5) + oh_3)
                        v_ow = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(10) // T.int64(2) * T.int64(5) + ow_1 * T.int64(5) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(288), ic_0 * T.int64(24) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(25), T.int64(5)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(10) * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(25), ax2)
                        v_ax3 = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(10) // T.int64(2) * T.int64(5) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 2, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 5, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 5, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[12, 24])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #47: GFLOPs: 15.9492. Time: 1449.5989 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #48: GFLOPs: 1.7564. Time: 13163.5377 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #49: GFLOPs: 16.7208. Time: 1382.7125 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:121] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #50: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(25), T.int64(25), T.int64(4)), "float32"), p1: T.Buffer((T.int64(16), T.int64(72), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(40), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(5), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(10) * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(25), oh_1 * T.int64(25) + oh_2_init * T.int64(5) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(10) // T.int64(2) * T.int64(5) + ow_1 + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(2), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(5), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(10) * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(25), oh_1 * T.int64(25) + oh_2 * T.int64(5) + oh_3)
                        v_ow = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(10) // T.int64(2) * T.int64(5) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(288), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(25), T.int64(5)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(10) * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(25), ax2)
                        v_ax3 = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(10) // T.int64(2) * T.int64(5) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 2, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 5, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 5, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[6, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #51: GFLOPs: 41.8017. Time: 553.0874 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #52: GFLOPs: 60.3728. Time: 382.9539 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #53: GFLOPs: 39.9643. Time: 578.5169 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #54: GFLOPs: 2.4039. Time: 9617.6413 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #55: GFLOPs: 52.5460. Time: 439.9958 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #56: GFLOPs: 42.5080. Time: 543.8978 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #57: GFLOPs: 76.5725. Time: 301.9361 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #58: GFLOPs: 103.7047. Time: 222.9407 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #59: GFLOPs: 6.0780. Time: 3803.8744 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #60: GFLOPs: 38.6258. Time: 598.5629 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #61: GFLOPs: 59.3756. Time: 389.3856 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #62: GFLOPs: 14.1416. Time: 1634.8890 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #63: GFLOPs: 39.1136. Time: 591.0986 us. Best GFLOPs: 144.2284
2024-04-29 09:19:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #64: GFLOPs: 2.0334. Time: 11370.3609 us. Best GFLOPs: 144.2284
2024-04-29 10:04:52 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 10:04:52 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 10:04:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 10:04:54 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-29 10:05:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 10:05:05 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 10:05:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 10:05:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 10:05:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0001  0.9482  0.9482  0.8987  0.8923  0.8778  0.8743  0.8475  0.8454  0.8439  0.8430  0.8414  0.8359  0.8359  0.8295  0.8285
[17 : 32]:	0.8171  0.8104  0.8104  0.8099  0.8099  0.8086  0.8033  0.8033  0.8030  0.7953  0.7836  0.7782  0.7724  0.7688  0.7543  0.7499
[33 : 48]:	0.7499  0.7473  0.7422  0.7374  0.7301  0.7258  0.7249  0.7220  0.7185  0.7178  0.7157  0.7154  0.7153  0.7139  0.7126  0.7080
[49 : 64]:	0.7054  0.7053  0.7044  0.7039  0.7026  0.7003  0.6996  0.6980  0.6980  0.6978  0.6973  0.6973  0.6971  0.6969  0.6954  0.6936
2024-04-29 10:05:18 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 10:05:18 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #65: GFLOPs: 69.4537. Time: 332.8835 us. Best GFLOPs: 144.2284
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #66: GFLOPs: 141.4875. Time: 163.4067 us. Best GFLOPs: 144.2284
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #67: GFLOPs: 143.3405. Time: 161.2943 us. Best GFLOPs: 144.2284
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #68: GFLOPs: 169.8843. Time: 136.0926 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #69: GFLOPs: 132.3511. Time: 174.6869 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #70: GFLOPs: 85.7420. Time: 269.6461 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #71: GFLOPs: 141.6767. Time: 163.1885 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #72: GFLOPs: 89.3004. Time: 258.9015 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #73: GFLOPs: 136.6105. Time: 169.2403 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #74: GFLOPs: 161.8125. Time: 142.8814 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #75: GFLOPs: 116.6904. Time: 198.1310 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #76: GFLOPs: 123.5612. Time: 187.1138 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #77: GFLOPs: 85.5484. Time: 270.2563 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #78: GFLOPs: 85.8346. Time: 269.3553 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #79: GFLOPs: 124.2161. Time: 186.1273 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #80: GFLOPs: 61.8593. Time: 373.7515 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #81: GFLOPs: 147.9894. Time: 156.2275 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #82: GFLOPs: 148.9475. Time: 155.2225 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #83: GFLOPs: 138.3591. Time: 167.1013 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #84: GFLOPs: 136.6428. Time: 169.2003 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #85: GFLOPs: 127.6363. Time: 181.1397 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #86: GFLOPs: 150.7737. Time: 153.3424 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #87: GFLOPs: 139.1286. Time: 166.1772 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #88: GFLOPs: 145.2909. Time: 159.1290 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #89: GFLOPs: 142.0871. Time: 162.7171 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #90: GFLOPs: 77.4478. Time: 298.5235 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #91: GFLOPs: 161.0738. Time: 143.5367 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #92: GFLOPs: 86.8633. Time: 266.1652 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #93: GFLOPs: 163.6220. Time: 141.3013 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #94: GFLOPs: 112.4991. Time: 205.5127 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #95: GFLOPs: 158.9103. Time: 145.4908 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #96: GFLOPs: 114.4442. Time: 202.0199 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #97: GFLOPs: 100.1387. Time: 230.8798 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #98: GFLOPs: 46.0044. Time: 502.5602 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #99: GFLOPs: 58.1401. Time: 397.6600 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #100: GFLOPs: 33.0211. Time: 700.1593 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #101: GFLOPs: 41.6358. Time: 555.2915 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #102: GFLOPs: 82.6135. Time: 279.8573 us. Best GFLOPs: 169.8843
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #103: GFLOPs: 199.7683. Time: 115.7341 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #104: GFLOPs: 111.9302. Time: 206.5573 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #105: GFLOPs: 143.0885. Time: 161.5783 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #106: GFLOPs: 122.3404. Time: 188.9808 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #107: GFLOPs: 118.7868. Time: 194.6343 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #108: GFLOPs: 138.4111. Time: 167.0386 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #109: GFLOPs: 83.9269. Time: 275.4777 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #110: GFLOPs: 124.7768. Time: 185.2909 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #111: GFLOPs: 153.6420. Time: 150.4797 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #112: GFLOPs: 66.4251. Time: 348.0610 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #113: GFLOPs: 78.4524. Time: 294.7009 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #114: GFLOPs: 118.8037. Time: 194.6067 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #115: GFLOPs: 91.2571. Time: 253.3501 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #116: GFLOPs: 86.7829. Time: 266.4119 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #117: GFLOPs: 41.7846. Time: 553.3139 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #118: GFLOPs: 67.6014. Time: 342.0047 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #119: GFLOPs: 83.2754. Time: 277.6329 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #120: GFLOPs: 122.4681. Time: 188.7839 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #121: GFLOPs: 186.3087. Time: 124.0951 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #122: GFLOPs: 167.1865. Time: 138.2887 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #123: GFLOPs: 111.7474. Time: 206.8952 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #124: GFLOPs: 125.5613. Time: 184.1332 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #125: GFLOPs: 100.0073. Time: 231.1832 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:121] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #126: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(72), T.int64(25), T.int64(25), T.int64(4)), "float32"), p1: T.Buffer((T.int64(16), T.int64(72), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(25), T.int64(25), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(5), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(25), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(4), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(25), oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(5) + ow_1 * T.int64(5) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(144), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(25), oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(5) + ow_1 * T.int64(5) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(288), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(25)):
                for ax3_ax4_fused in T.vectorized(T.int64(20)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(25), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(5) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 25, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 5, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[144, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #127: GFLOPs: 26.1512. Time: 884.0899 us. Best GFLOPs: 199.7683
2024-04-29 10:06:55 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #128: GFLOPs: 130.1392. Time: 177.6559 us. Best GFLOPs: 199.7683
2024-04-29 11:35:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 11:35:26 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 11:35:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 11:35:28 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 11:35:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 11:35:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 11:35:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 11:35:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x366dd48)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xaa85888)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xed0bb68)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x8c5bba8)]: 0 failure(s)
2024-04-29 11:35:52 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9448  0.9000  0.8895  0.8813  0.8579  0.8329  0.8275  0.8220  0.8142  0.8129  0.8115  0.8111  0.8062  0.8058  0.8051  0.7978
[17 : 32]:	0.7885  0.7883  0.7871  0.7802  0.7800  0.7794  0.7793  0.7776  0.7776  0.7741  0.7737  0.7723  0.7699  0.7675  0.7669  0.7534
[33 : 48]:	0.7534  0.7517  0.7512  0.7512  0.7511  0.7462  0.7381  0.7379  0.7379  0.7354  0.7350  0.7343  0.7329  0.7329  0.7317  0.7312
[49 : 64]:	0.7312  0.7299  0.7286  0.7276  0.7274  0.7244  0.7232  0.7221  0.7221  0.7212  0.7197  0.7157  0.7156  0.7156  0.7119  0.7114
2024-04-29 11:35:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 11:35:52 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #129: GFLOPs: 112.6646. Time: 205.2109 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #130: GFLOPs: 151.2048. Time: 152.9051 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #131: GFLOPs: 162.6586. Time: 142.1382 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #132: GFLOPs: 116.4649. Time: 198.5148 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #133: GFLOPs: 195.8861. Time: 118.0278 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #134: GFLOPs: 136.6091. Time: 169.2420 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #135: GFLOPs: 107.0364. Time: 216.0012 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #136: GFLOPs: 182.7683. Time: 126.4990 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #137: GFLOPs: 108.1684. Time: 213.7408 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #138: GFLOPs: 132.5612. Time: 174.4100 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #139: GFLOPs: 175.8419. Time: 131.4818 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #140: GFLOPs: 197.1313. Time: 117.2822 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #141: GFLOPs: 196.5802. Time: 117.6111 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #142: GFLOPs: 107.8283. Time: 214.4150 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #143: GFLOPs: 145.4655. Time: 158.9380 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #144: GFLOPs: 78.6980. Time: 293.7812 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #145: GFLOPs: 188.1124. Time: 122.9053 us. Best GFLOPs: 199.7683
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #146: GFLOPs: 220.4126. Time: 104.8942 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #147: GFLOPs: 108.5669. Time: 212.9563 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #148: GFLOPs: 114.3291. Time: 202.2232 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #149: GFLOPs: 175.1074. Time: 132.0333 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #150: GFLOPs: 220.0345. Time: 105.0744 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #151: GFLOPs: 110.3935. Time: 209.4326 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #152: GFLOPs: 183.7872. Time: 125.7977 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #153: GFLOPs: 80.6241. Time: 286.7630 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #154: GFLOPs: 162.9557. Time: 141.8790 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #155: GFLOPs: 162.6990. Time: 142.1029 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #156: GFLOPs: 193.8192. Time: 119.2865 us. Best GFLOPs: 220.4126
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #157: GFLOPs: 242.7249. Time: 95.2519 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #158: GFLOPs: 182.1597. Time: 126.9216 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #159: GFLOPs: 127.4932. Time: 181.3431 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #160: GFLOPs: 145.4269. Time: 158.9802 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #161: GFLOPs: 150.2941. Time: 153.8317 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #162: GFLOPs: 189.4691. Time: 122.0252 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #163: GFLOPs: 232.1933. Time: 99.5722 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #164: GFLOPs: 149.7730. Time: 154.3670 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #165: GFLOPs: 147.6378. Time: 156.5995 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #166: GFLOPs: 180.3995. Time: 128.1600 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #167: GFLOPs: 188.9629. Time: 122.3521 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #168: GFLOPs: 209.0223. Time: 110.6102 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #169: GFLOPs: 200.3340. Time: 115.4072 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #170: GFLOPs: 193.2519. Time: 119.6366 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #171: GFLOPs: 82.5126. Time: 280.1998 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #172: GFLOPs: 188.2737. Time: 122.8000 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #173: GFLOPs: 167.0107. Time: 138.4342 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #174: GFLOPs: 168.4824. Time: 137.2250 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #175: GFLOPs: 159.6180. Time: 144.8458 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #176: GFLOPs: 154.0574. Time: 150.0739 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #177: GFLOPs: 192.6748. Time: 119.9949 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #178: GFLOPs: 151.3527. Time: 152.7558 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #179: GFLOPs: 170.0516. Time: 135.9588 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #180: GFLOPs: 152.3242. Time: 151.7815 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #181: GFLOPs: 153.9866. Time: 150.1429 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #182: GFLOPs: 55.3219. Time: 417.9176 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #183: GFLOPs: 176.0350. Time: 131.3375 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #184: GFLOPs: 219.7528. Time: 105.2091 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #185: GFLOPs: 220.8100. Time: 104.7054 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #186: GFLOPs: 137.0580. Time: 168.6877 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #187: GFLOPs: 136.5714. Time: 169.2887 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #188: GFLOPs: 160.0864. Time: 144.4220 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #189: GFLOPs: 205.0124. Time: 112.7737 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #190: GFLOPs: 88.5307. Time: 261.1524 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #191: GFLOPs: 30.4951. Time: 758.1546 us. Best GFLOPs: 242.7249
2024-04-29 11:37:17 [INFO] [task_scheduler.cc:131] [Task #53: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_37] Trial #192: GFLOPs: 106.0725. Time: 217.9641 us. Best GFLOPs: 242.7249
