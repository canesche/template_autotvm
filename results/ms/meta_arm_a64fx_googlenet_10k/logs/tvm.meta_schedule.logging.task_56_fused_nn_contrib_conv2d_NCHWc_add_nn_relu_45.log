2024-04-29 13:22:23 [INFO] [task_scheduler.cc:160] Initializing Task #56: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45"
2024-04-29 13:22:23 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(28), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(28), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4), T.int64(512), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 13:22:23 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 13:22:23 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(28), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(28), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(28), oc_chunk_0 * T.int64(7) + oc_chunk_1 * T.int64(7) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 7, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 13:22:23 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(28), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(28), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(28), oc_chunk_0 * T.int64(7) + oc_chunk_1 * T.int64(7) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(28), oc_chunk_0 * T.int64(7) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 7, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 13:22:23 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(28), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(28), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(28), oc_chunk_0 * T.int64(7) + oc_chunk_1 * T.int64(7) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(28), oc_chunk_0 * T.int64(7) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 7, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 14:52:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 14:52:21 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 14:52:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 14:52:23 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 14:52:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 14:52:29 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 14:52:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 14:52:35 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 14:52:36 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9993  0.9990  0.9986  0.9978  0.9976  0.9971  0.9965  0.9965  0.9963  0.9956  0.9955  0.9947  0.9943  0.9937  0.9928  0.9927
[17 : 32]:	0.9920  0.9919  0.9917  0.9916  0.9914  0.9912  0.9897  0.9891  0.9888  0.9861  0.9858  0.9854  0.9852  0.9852  0.9845  0.9842
[33 : 48]:	0.9838  0.9837  0.9834  0.9833  0.9827  0.9826  0.9824  0.9813  0.9810  0.9806  0.9801  0.9797  0.9778  0.9776  0.9768  0.9760
[49 : 64]:	0.9759  0.9756  0.9755  0.9753  0.9748  0.9741  0.9736  0.9736  0.9732  0.9730  0.9729  0.9728  0.9721  0.9708  0.9688  0.9686
2024-04-29 14:52:36 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 14:52:36 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #1: GFLOPs: 22.8984. Time: 983.5939 us. Best GFLOPs: 22.8984
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #2: GFLOPs: 18.5193. Time: 1216.1787 us. Best GFLOPs: 22.8984
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #3: GFLOPs: 0.2866. Time: 78594.7010 us. Best GFLOPs: 22.8984
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #4: GFLOPs: 75.7334. Time: 297.3951 us. Best GFLOPs: 75.7334
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #5: GFLOPs: 7.9389. Time: 2837.0142 us. Best GFLOPs: 75.7334
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #6: GFLOPs: 151.3881. Time: 148.7749 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #7: GFLOPs: 101.5718. Time: 221.7422 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #8: GFLOPs: 58.8034. Time: 383.0178 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #9: GFLOPs: 13.8445. Time: 1626.8338 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:121] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #10: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(28), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(28), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(1372), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(28) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(28) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(343)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(784))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(784) // T.int64(56))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(56) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b66)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #11: GFLOPs: 44.7754. Time: 503.0165 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #12: GFLOPs: 19.2196. Time: 1171.8657 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #13: GFLOPs: 48.4594. Time: 464.7759 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #14: GFLOPs: 0.3084. Time: 73030.1250 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #15: GFLOPs: 95.2944. Time: 236.3493 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #16: GFLOPs: 2.4524. Time: 9183.8241 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #17: GFLOPs: 8.8690. Time: 2539.4789 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #18: GFLOPs: 2.1902. Time: 10283.5807 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #19: GFLOPs: 66.4569. Time: 338.9079 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #20: GFLOPs: 56.6319. Time: 397.7042 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #21: GFLOPs: 43.1811. Time: 521.5886 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #22: GFLOPs: 96.2160. Time: 234.0852 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #23: GFLOPs: 54.6618. Time: 412.0382 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #24: GFLOPs: 2.4530. Time: 9181.8949 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #25: GFLOPs: 95.6069. Time: 235.5766 us. Best GFLOPs: 151.3881
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #26: GFLOPs: 159.8279. Time: 140.9188 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #27: GFLOPs: 6.3076. Time: 3570.7391 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #28: GFLOPs: 21.4428. Time: 1050.3637 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #29: GFLOPs: 17.1430. Time: 1313.8185 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #30: GFLOPs: 35.7108. Time: 630.6990 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #31: GFLOPs: 53.8817. Time: 418.0041 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #32: GFLOPs: 40.0282. Time: 562.6717 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #33: GFLOPs: 59.2803. Time: 379.9367 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:121] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #34: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(28), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(28), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(686), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(343)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(784))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(784) // T.int64(56))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(56) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #35: GFLOPs: 25.7490. Time: 874.7039 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #36: GFLOPs: 14.0016. Time: 1608.5894 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #37: GFLOPs: 0.7380. Time: 30518.3643 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #38: GFLOPs: 22.8195. Time: 986.9978 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #39: GFLOPs: 125.1458. Time: 179.9721 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #40: GFLOPs: 0.2070. Time: 108822.5960 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #41: GFLOPs: 23.7652. Time: 947.7180 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #42: GFLOPs: 7.4682. Time: 3015.8132 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #43: GFLOPs: 83.2016. Time: 270.7008 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #44: GFLOPs: 117.3895. Time: 191.8635 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:121] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #45: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(28), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(28), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(14), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(7), T.int64(7)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + oh_1 * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(7) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(7)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(7) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(4), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #46: GFLOPs: 0.7256. Time: 31038.7322 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #47: GFLOPs: 11.5750. Time: 1945.8151 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #48: GFLOPs: 37.8896. Time: 594.4315 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #49: GFLOPs: 6.4610. Time: 3485.9805 us. Best GFLOPs: 159.8279
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #50: GFLOPs: 172.5455. Time: 130.5322 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #51: GFLOPs: 42.7514. Time: 526.8302 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #52: GFLOPs: 3.1822. Time: 7077.7215 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #53: GFLOPs: 38.1756. Time: 589.9778 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #54: GFLOPs: 0.3810. Time: 59109.9803 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #55: GFLOPs: 25.4408. Time: 885.3005 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #56: GFLOPs: 52.6295. Time: 427.9496 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #57: GFLOPs: 4.6201. Time: 4874.9489 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #58: GFLOPs: 147.1031. Time: 153.1086 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #59: GFLOPs: 19.0251. Time: 1183.8444 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #60: GFLOPs: 9.3530. Time: 2408.0723 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #61: GFLOPs: 34.2403. Time: 657.7856 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #62: GFLOPs: 58.7109. Time: 383.6211 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #63: GFLOPs: 11.7358. Time: 1919.1421 us. Best GFLOPs: 172.5455
2024-04-29 15:08:17 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #64: GFLOPs: 51.3241. Time: 438.8340 us. Best GFLOPs: 172.5455
2024-04-29 15:58:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:58:48 [INFO] [evolutionary_search.cc:715] Picked top 61 candidate(s) from database
2024-04-29 15:58:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 15:58:50 [INFO] [evolutionary_search.cc:723] Sampled 451 candidate(s)
2024-04-29 15:58:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 15:59:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 15:59:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 15:59:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 15:59:14 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9129  0.9118  0.8673  0.8635  0.8617  0.8446  0.8446  0.8446  0.8439  0.8371  0.8292  0.8156  0.8149  0.8144  0.8042  0.8025
[17 : 32]:	0.8010  0.7973  0.7966  0.7943  0.7881  0.7881  0.7879  0.7874  0.7871  0.7863  0.7858  0.7858  0.7858  0.7858  0.7844  0.7836
[33 : 48]:	0.7778  0.7766  0.7730  0.7684  0.7684  0.7663  0.7659  0.7658  0.7654  0.7612  0.7608  0.7530  0.7525  0.7505  0.7496  0.7496
[49 : 64]:	0.7479  0.7478  0.7463  0.7437  0.7431  0.7430  0.7426  0.7398  0.7376  0.7358  0.7357  0.7335  0.7328  0.7328  0.7324  0.7323
2024-04-29 15:59:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:59:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #65: GFLOPs: 17.9750. Time: 1253.0028 us. Best GFLOPs: 172.5455
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #66: GFLOPs: 71.7042. Time: 314.1066 us. Best GFLOPs: 172.5455
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #67: GFLOPs: 176.9813. Time: 127.2606 us. Best GFLOPs: 176.9813
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #68: GFLOPs: 63.4931. Time: 354.7274 us. Best GFLOPs: 176.9813
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #69: GFLOPs: 177.7875. Time: 126.6835 us. Best GFLOPs: 177.7875
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #70: GFLOPs: 111.9974. Time: 201.1007 us. Best GFLOPs: 177.7875
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #71: GFLOPs: 153.5616. Time: 146.6692 us. Best GFLOPs: 177.7875
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #72: GFLOPs: 146.7975. Time: 153.4274 us. Best GFLOPs: 177.7875
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #73: GFLOPs: 125.0316. Time: 180.1365 us. Best GFLOPs: 177.7875
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #74: GFLOPs: 49.7075. Time: 453.1054 us. Best GFLOPs: 177.7875
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #75: GFLOPs: 114.8715. Time: 196.0690 us. Best GFLOPs: 177.7875
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #76: GFLOPs: 196.2792. Time: 114.7485 us. Best GFLOPs: 196.2792
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #77: GFLOPs: 79.0893. Time: 284.7760 us. Best GFLOPs: 196.2792
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #78: GFLOPs: 147.8319. Time: 152.3538 us. Best GFLOPs: 196.2792
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #79: GFLOPs: 196.3933. Time: 114.6819 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #80: GFLOPs: 62.2727. Time: 361.6791 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #81: GFLOPs: 152.2779. Time: 147.9056 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #82: GFLOPs: 105.2093. Time: 214.0758 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #83: GFLOPs: 152.9611. Time: 147.2450 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #84: GFLOPs: 102.4597. Time: 219.8206 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #85: GFLOPs: 77.7948. Time: 289.5148 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #86: GFLOPs: 64.7597. Time: 347.7897 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #87: GFLOPs: 196.0767. Time: 114.8671 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #88: GFLOPs: 193.8255. Time: 116.2012 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #89: GFLOPs: 67.4627. Time: 333.8548 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #90: GFLOPs: 170.0081. Time: 132.4805 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #91: GFLOPs: 148.8663. Time: 151.2952 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #92: GFLOPs: 148.2946. Time: 151.8785 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #93: GFLOPs: 151.3632. Time: 148.7994 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #94: GFLOPs: 68.2707. Time: 329.9035 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #95: GFLOPs: 124.1875. Time: 181.3609 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #96: GFLOPs: 130.5532. Time: 172.5178 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #97: GFLOPs: 152.4567. Time: 147.7321 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #98: GFLOPs: 112.9044. Time: 199.4852 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #99: GFLOPs: 120.0206. Time: 187.6574 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #100: GFLOPs: 60.5040. Time: 372.2522 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #101: GFLOPs: 105.7224. Time: 213.0367 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #102: GFLOPs: 123.9227. Time: 181.7484 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #103: GFLOPs: 90.1253. Time: 249.9048 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #104: GFLOPs: 97.7758. Time: 230.3511 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #105: GFLOPs: 115.3184. Time: 195.3092 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #106: GFLOPs: 120.8771. Time: 186.3276 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #107: GFLOPs: 77.6961. Time: 289.8827 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #108: GFLOPs: 0.5615. Time: 40109.7427 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #109: GFLOPs: 59.4697. Time: 378.7264 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #110: GFLOPs: 57.7972. Time: 389.6861 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #111: GFLOPs: 86.4400. Time: 260.5594 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #112: GFLOPs: 86.1619. Time: 261.4003 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #113: GFLOPs: 141.6649. Time: 158.9861 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #114: GFLOPs: 133.2162. Time: 169.0692 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #115: GFLOPs: 134.1978. Time: 167.8325 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #116: GFLOPs: 114.8945. Time: 196.0298 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #117: GFLOPs: 122.2529. Time: 184.2309 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #118: GFLOPs: 130.3238. Time: 172.8215 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #119: GFLOPs: 100.4431. Time: 224.2339 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #120: GFLOPs: 74.0110. Time: 304.3161 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #121: GFLOPs: 122.0935. Time: 184.4714 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #122: GFLOPs: 147.3188. Time: 152.8844 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #123: GFLOPs: 119.8013. Time: 188.0009 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #124: GFLOPs: 106.3013. Time: 211.8765 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #125: GFLOPs: 94.1641. Time: 239.1862 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #126: GFLOPs: 3.8895. Time: 5790.6559 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #127: GFLOPs: 22.4054. Time: 1005.2371 us. Best GFLOPs: 196.3933
2024-04-29 16:00:41 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #128: GFLOPs: 2.0191. Time: 11154.6823 us. Best GFLOPs: 196.3933
2024-04-29 17:13:44 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:13:45 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:13:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 17:13:47 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:13:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 17:13:57 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 17:14:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 17:14:08 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x334e628)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x74cb2c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x488bd58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x33e9688)]: 0 failure(s)
2024-04-29 17:14:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9897  0.9531  0.9531  0.9531  0.9520  0.8745  0.8397  0.8394  0.8350  0.8350  0.8310  0.8243  0.8127  0.8126  0.8067  0.8061
[17 : 32]:	0.7948  0.7903  0.7891  0.7768  0.7767  0.7744  0.7739  0.7713  0.7652  0.7610  0.7564  0.7564  0.7550  0.7419  0.7419  0.7407
[33 : 48]:	0.7407  0.7389  0.7377  0.7377  0.7361  0.7360  0.7356  0.7343  0.7335  0.7287  0.7269  0.7229  0.7228  0.7170  0.7169  0.7143
[49 : 64]:	0.7143  0.7106  0.7104  0.7104  0.7070  0.7056  0.7039  0.6997  0.6997  0.6997  0.6933  0.6933  0.6895  0.6895  0.6858  0.6810
2024-04-29 17:14:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:14:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #129: GFLOPs: 92.2645. Time: 244.1108 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #130: GFLOPs: 64.4671. Time: 349.3681 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #131: GFLOPs: 124.7565. Time: 180.5337 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #132: GFLOPs: 105.3390. Time: 213.8121 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #133: GFLOPs: 121.0136. Time: 186.1175 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #134: GFLOPs: 73.1918. Time: 307.7222 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #135: GFLOPs: 114.1077. Time: 197.3815 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #136: GFLOPs: 128.7536. Time: 174.9291 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #137: GFLOPs: 181.7495. Time: 123.9220 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #138: GFLOPs: 187.9412. Time: 119.8393 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #139: GFLOPs: 113.4558. Time: 198.5157 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #140: GFLOPs: 84.6667. Time: 266.0167 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #141: GFLOPs: 171.9995. Time: 130.9466 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #142: GFLOPs: 140.0242. Time: 160.8489 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #143: GFLOPs: 91.8612. Time: 245.1824 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #144: GFLOPs: 132.4636. Time: 170.0298 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #145: GFLOPs: 171.5785. Time: 131.2679 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #146: GFLOPs: 195.4151. Time: 115.2560 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #147: GFLOPs: 146.6301. Time: 153.6025 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #148: GFLOPs: 116.6021. Time: 193.1591 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #149: GFLOPs: 107.0345. Time: 210.4253 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #150: GFLOPs: 150.8204. Time: 149.3349 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #151: GFLOPs: 143.0401. Time: 157.4576 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #152: GFLOPs: 171.8801. Time: 131.0376 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #153: GFLOPs: 170.0532. Time: 132.4454 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #154: GFLOPs: 87.0127. Time: 258.8443 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #155: GFLOPs: 145.5111. Time: 154.7837 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #156: GFLOPs: 139.7129. Time: 161.2074 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #157: GFLOPs: 135.4701. Time: 166.2563 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #158: GFLOPs: 32.4416. Time: 694.2559 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #159: GFLOPs: 16.4265. Time: 1371.1269 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #160: GFLOPs: 160.1818. Time: 140.6074 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #161: GFLOPs: 146.5989. Time: 153.6352 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #162: GFLOPs: 128.5229. Time: 175.2432 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #163: GFLOPs: 132.8792. Time: 169.4979 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #164: GFLOPs: 148.1988. Time: 151.9766 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #165: GFLOPs: 103.7346. Time: 217.1191 us. Best GFLOPs: 196.3933
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #166: GFLOPs: 219.7286. Time: 102.5026 us. Best GFLOPs: 219.7286
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #167: GFLOPs: 151.6298. Time: 148.5378 us. Best GFLOPs: 219.7286
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #168: GFLOPs: 102.5739. Time: 219.5758 us. Best GFLOPs: 219.7286
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #169: GFLOPs: 223.6383. Time: 100.7106 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #170: GFLOPs: 128.7802. Time: 174.8929 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #171: GFLOPs: 116.6633. Time: 193.0577 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #172: GFLOPs: 131.9257. Time: 170.7230 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #173: GFLOPs: 156.9177. Time: 143.5323 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #174: GFLOPs: 136.0643. Time: 165.5302 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #175: GFLOPs: 159.7844. Time: 140.9571 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #176: GFLOPs: 159.4446. Time: 141.2576 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #177: GFLOPs: 123.4700. Time: 182.4147 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #178: GFLOPs: 197.2191. Time: 114.2017 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #179: GFLOPs: 147.7939. Time: 152.3930 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #180: GFLOPs: 148.0824. Time: 152.0960 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #181: GFLOPs: 88.0412. Time: 255.8205 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #182: GFLOPs: 156.0774. Time: 144.3050 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #183: GFLOPs: 115.0099. Time: 195.8331 us. Best GFLOPs: 223.6383
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #184: GFLOPs: 257.6121. Time: 87.4289 us. Best GFLOPs: 257.6121
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #185: GFLOPs: 225.9341. Time: 99.6873 us. Best GFLOPs: 257.6121
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #186: GFLOPs: 112.5309. Time: 200.1473 us. Best GFLOPs: 257.6121
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #187: GFLOPs: 104.1474. Time: 216.2584 us. Best GFLOPs: 257.6121
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #188: GFLOPs: 107.4184. Time: 209.6731 us. Best GFLOPs: 257.6121
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #189: GFLOPs: 182.7458. Time: 123.2463 us. Best GFLOPs: 257.6121
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #190: GFLOPs: 47.1029. Time: 478.1609 us. Best GFLOPs: 257.6121
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #191: GFLOPs: 0.5369. Time: 41947.7823 us. Best GFLOPs: 257.6121
2024-04-29 17:15:48 [INFO] [task_scheduler.cc:131] [Task #56: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_45] Trial #192: GFLOPs: 95.0455. Time: 236.9682 us. Best GFLOPs: 257.6121
