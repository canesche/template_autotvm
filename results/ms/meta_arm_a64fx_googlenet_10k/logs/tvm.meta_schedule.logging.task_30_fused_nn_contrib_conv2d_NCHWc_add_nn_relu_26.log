2024-04-29 13:20:43 [INFO] [task_scheduler.cc:160] Initializing Task #30: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26"
2024-04-29 13:20:43 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(120), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(120), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4), T.int64(480), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 13:20:43 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 13:20:43 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(120), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(120), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1), T.int64(120), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(12) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(480), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 12, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[120, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 13:20:43 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(120), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(120), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(120), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(12) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(480), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(12), T.int64(2), T.int64(2), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), oc_chunk_1 * T.int64(12) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 12, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[120, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 13:20:43 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(120), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(120), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1), T.int64(120), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(12) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(480), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(2), T.int64(14), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 12, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[120, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 14:11:19 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 14:11:19 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 14:11:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 14:11:22 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 14:11:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 14:11:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 14:11:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 14:11:34 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 14:11:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9990  0.9989  0.9988  0.9981  0.9974  0.9967  0.9960  0.9959  0.9957  0.9956  0.9955  0.9954  0.9947  0.9947  0.9939
[17 : 32]:	0.9936  0.9928  0.9928  0.9926  0.9926  0.9914  0.9912  0.9897  0.9897  0.9894  0.9884  0.9883  0.9879  0.9873  0.9868  0.9867
[33 : 48]:	0.9862  0.9860  0.9854  0.9850  0.9847  0.9846  0.9839  0.9834  0.9833  0.9815  0.9814  0.9811  0.9811  0.9809  0.9802  0.9796
[49 : 64]:	0.9795  0.9790  0.9783  0.9782  0.9779  0.9772  0.9772  0.9759  0.9757  0.9757  0.9757  0.9750  0.9741  0.9740  0.9739  0.9737
2024-04-29 14:11:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 14:11:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #1: GFLOPs: 89.8192. Time: 201.5269 us. Best GFLOPs: 89.8192
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #2: GFLOPs: 35.8153. Time: 505.3986 us. Best GFLOPs: 89.8192
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #3: GFLOPs: 38.3950. Time: 471.4411 us. Best GFLOPs: 89.8192
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #4: GFLOPs: 133.5801. Time: 135.5067 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #5: GFLOPs: 41.5170. Time: 435.9902 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #6: GFLOPs: 6.8578. Time: 2639.4840 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #7: GFLOPs: 16.7819. Time: 1078.6019 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #8: GFLOPs: 38.7976. Time: 466.5489 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #9: GFLOPs: 44.7166. Time: 404.7940 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #10: GFLOPs: 103.7937. Time: 174.3939 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #11: GFLOPs: 76.1263. Time: 237.7758 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #12: GFLOPs: 21.8348. Time: 828.9970 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #13: GFLOPs: 55.9363. Time: 323.6001 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #14: GFLOPs: 79.7603. Time: 226.9424 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #15: GFLOPs: 93.1256. Time: 194.3718 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #16: GFLOPs: 6.8217. Time: 2653.4416 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #17: GFLOPs: 79.3174. Time: 228.2096 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #18: GFLOPs: 21.0175. Time: 861.2354 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #19: GFLOPs: 77.9497. Time: 232.2137 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #20: GFLOPs: 15.3554. Time: 1178.8037 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #21: GFLOPs: 28.4113. Time: 637.1054 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #22: GFLOPs: 2.3154. Time: 7817.6910 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #23: GFLOPs: 54.0108. Time: 335.1367 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #24: GFLOPs: 35.7333. Time: 506.5578 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #25: GFLOPs: 44.6866. Time: 405.0656 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #26: GFLOPs: 1.2502. Time: 14478.4089 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #27: GFLOPs: 42.5795. Time: 425.1109 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #28: GFLOPs: 25.5278. Time: 709.0695 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #29: GFLOPs: 33.8531. Time: 534.6921 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #30: GFLOPs: 90.1875. Time: 200.7040 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #31: GFLOPs: 36.4713. Time: 496.3083 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #32: GFLOPs: 2.7823. Time: 6505.6560 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #33: GFLOPs: 50.0840. Time: 361.4130 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #34: GFLOPs: 60.5618. Time: 298.8844 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #35: GFLOPs: 13.7042. Time: 1320.8402 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #36: GFLOPs: 24.9116. Time: 726.6099 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #37: GFLOPs: 24.6546. Time: 734.1841 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #38: GFLOPs: 63.4642. Time: 285.2158 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #39: GFLOPs: 99.4717. Time: 181.9713 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #40: GFLOPs: 119.9827. Time: 150.8633 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #41: GFLOPs: 8.0288. Time: 2254.5043 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #42: GFLOPs: 10.2147. Time: 1772.0584 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #43: GFLOPs: 100.4643. Time: 180.1734 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #44: GFLOPs: 17.3173. Time: 1045.2527 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #45: GFLOPs: 20.2205. Time: 895.1824 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #46: GFLOPs: 47.2325. Time: 383.2319 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #47: GFLOPs: 51.3155. Time: 352.7394 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #48: GFLOPs: 119.5933. Time: 151.3546 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #49: GFLOPs: 81.8048. Time: 221.2704 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #50: GFLOPs: 4.5586. Time: 3970.6933 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #51: GFLOPs: 51.1240. Time: 354.0605 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #52: GFLOPs: 76.0366. Time: 238.0564 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #53: GFLOPs: 37.3120. Time: 485.1250 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #54: GFLOPs: 77.7811. Time: 232.7171 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #55: GFLOPs: 98.4277. Time: 183.9014 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #56: GFLOPs: 2.5401. Time: 7125.9625 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #57: GFLOPs: 21.4070. Time: 845.5660 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #58: GFLOPs: 29.7763. Time: 607.8986 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #59: GFLOPs: 3.6250. Time: 4993.3651 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #60: GFLOPs: 122.9122. Time: 147.2676 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #61: GFLOPs: 14.2720. Time: 1268.2908 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #62: GFLOPs: 1.3182. Time: 13731.5443 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #63: GFLOPs: 102.7084. Time: 176.2367 us. Best GFLOPs: 133.5801
2024-04-29 15:05:41 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #64: GFLOPs: 135.8347. Time: 133.2575 us. Best GFLOPs: 135.8347
2024-04-29 16:55:35 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:55:35 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 16:55:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 16:55:37 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2024-04-29 16:55:43 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 16:55:48 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 16:55:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 16:55:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x75f0208)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5bb4d28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x68fbb48)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57ea8d8)]: 0 failure(s)
2024-04-29 16:56:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0070  0.9588  0.9534  0.9331  0.9105  0.9105  0.8824  0.8803  0.8742  0.8736  0.8726  0.8720  0.8563  0.8523  0.8516  0.8516
[17 : 32]:	0.8512  0.8478  0.8464  0.8464  0.8428  0.8354  0.8302  0.8299  0.8285  0.8266  0.8219  0.8213  0.8180  0.8169  0.8124  0.8123
[33 : 48]:	0.8054  0.8050  0.8047  0.8025  0.8013  0.7891  0.7862  0.7851  0.7759  0.7740  0.7733  0.7714  0.7712  0.7641  0.7633  0.7590
[49 : 64]:	0.7586  0.7583  0.7581  0.7581  0.7550  0.7527  0.7526  0.7506  0.7484  0.7480  0.7460  0.7459  0.7441  0.7421  0.7406  0.7405
2024-04-29 16:56:02 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:56:02 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #65: GFLOPs: 69.6258. Time: 259.9755 us. Best GFLOPs: 135.8347
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #66: GFLOPs: 137.1040. Time: 132.0238 us. Best GFLOPs: 137.1040
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #67: GFLOPs: 135.2960. Time: 133.7880 us. Best GFLOPs: 137.1040
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #68: GFLOPs: 64.2534. Time: 281.7125 us. Best GFLOPs: 137.1040
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #69: GFLOPs: 123.8683. Time: 146.1309 us. Best GFLOPs: 137.1040
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #70: GFLOPs: 74.8697. Time: 241.7665 us. Best GFLOPs: 137.1040
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #71: GFLOPs: 119.5600. Time: 151.3967 us. Best GFLOPs: 137.1040
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #72: GFLOPs: 118.3841. Time: 152.9006 us. Best GFLOPs: 137.1040
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #73: GFLOPs: 144.6868. Time: 125.1046 us. Best GFLOPs: 144.6868
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #74: GFLOPs: 91.9510. Time: 196.8548 us. Best GFLOPs: 144.6868
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #75: GFLOPs: 119.1941. Time: 151.8615 us. Best GFLOPs: 144.6868
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #76: GFLOPs: 125.0571. Time: 144.7418 us. Best GFLOPs: 144.6868
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #77: GFLOPs: 96.3164. Time: 187.9327 us. Best GFLOPs: 144.6868
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #78: GFLOPs: 256.1807. Time: 70.6571 us. Best GFLOPs: 256.1807
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #79: GFLOPs: 258.5803. Time: 70.0014 us. Best GFLOPs: 258.5803
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #80: GFLOPs: 320.3050. Time: 56.5117 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #81: GFLOPs: 95.9782. Time: 188.5949 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #82: GFLOPs: 124.3534. Time: 145.5609 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #83: GFLOPs: 155.9403. Time: 116.0764 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #84: GFLOPs: 154.9267. Time: 116.8359 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #85: GFLOPs: 135.8158. Time: 133.2760 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #86: GFLOPs: 119.9692. Time: 150.8803 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #87: GFLOPs: 152.3683. Time: 118.7976 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #88: GFLOPs: 84.4492. Time: 214.3418 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #89: GFLOPs: 153.8347. Time: 117.6652 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #90: GFLOPs: 89.5058. Time: 202.2327 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #91: GFLOPs: 61.4430. Time: 294.5979 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #92: GFLOPs: 86.8237. Time: 208.4797 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #93: GFLOPs: 78.9084. Time: 229.3924 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #94: GFLOPs: 72.6641. Time: 249.1051 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #95: GFLOPs: 160.0108. Time: 113.1236 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #96: GFLOPs: 161.8590. Time: 111.8319 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #97: GFLOPs: 91.2263. Time: 198.4186 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #98: GFLOPs: 151.1206. Time: 119.7785 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #99: GFLOPs: 173.9884. Time: 104.0356 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #100: GFLOPs: 49.0295. Time: 369.1861 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #101: GFLOPs: 75.7257. Time: 239.0337 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #102: GFLOPs: 85.8840. Time: 210.7609 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #103: GFLOPs: 125.6692. Time: 144.0368 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #104: GFLOPs: 178.6089. Time: 101.3443 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #105: GFLOPs: 276.9975. Time: 65.3471 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #106: GFLOPs: 75.2546. Time: 240.5301 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #107: GFLOPs: 56.0848. Time: 322.7431 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #108: GFLOPs: 85.7259. Time: 211.1495 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #109: GFLOPs: 278.3724. Time: 65.0244 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #110: GFLOPs: 128.6747. Time: 140.6725 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #111: GFLOPs: 139.4252. Time: 129.8258 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #112: GFLOPs: 140.6582. Time: 128.6877 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #113: GFLOPs: 77.6908. Time: 232.9874 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #114: GFLOPs: 128.3015. Time: 141.0817 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #115: GFLOPs: 158.0740. Time: 114.5096 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #116: GFLOPs: 49.1876. Time: 367.9994 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #117: GFLOPs: 61.2607. Time: 295.4749 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #118: GFLOPs: 49.8264. Time: 363.2809 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #119: GFLOPs: 122.3360. Time: 147.9613 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #120: GFLOPs: 288.4121. Time: 62.7609 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #121: GFLOPs: 76.1467. Time: 237.7122 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #122: GFLOPs: 94.4420. Time: 191.6625 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #123: GFLOPs: 113.7246. Time: 159.1652 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #124: GFLOPs: 83.5727. Time: 216.5898 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #125: GFLOPs: 99.1822. Time: 182.5025 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #126: GFLOPs: 35.3415. Time: 512.1744 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #127: GFLOPs: 84.1126. Time: 215.1994 us. Best GFLOPs: 320.3050
2024-04-29 16:57:31 [INFO] [task_scheduler.cc:131] [Task #30: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_26] Trial #128: GFLOPs: 9.1188. Time: 1985.0258 us. Best GFLOPs: 320.3050
