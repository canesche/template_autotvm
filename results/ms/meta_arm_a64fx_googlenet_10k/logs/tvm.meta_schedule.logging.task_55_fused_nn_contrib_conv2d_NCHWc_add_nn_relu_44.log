2024-04-29 13:22:19 [INFO] [task_scheduler.cc:160] Initializing Task #55: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44"
2024-04-29 13:22:19 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4), T.int64(512), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 13:22:19 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 13:22:19 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 16, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 13:22:19 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(7), T.int64(2), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 16, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 13:22:19 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(2), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 16, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 14:50:19 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 14:50:19 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 14:50:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 14:50:21 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 14:50:24 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 14:50:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 14:50:30 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 14:50:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 14:50:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9989  0.9983  0.9979  0.9978  0.9974  0.9974  0.9968  0.9965  0.9960  0.9959  0.9953  0.9951  0.9938  0.9928  0.9926  0.9925
[17 : 32]:	0.9924  0.9921  0.9919  0.9914  0.9908  0.9901  0.9898  0.9896  0.9895  0.9889  0.9886  0.9885  0.9872  0.9872  0.9869  0.9867
[33 : 48]:	0.9866  0.9865  0.9863  0.9863  0.9858  0.9855  0.9852  0.9844  0.9837  0.9823  0.9821  0.9814  0.9813  0.9813  0.9811  0.9810
[49 : 64]:	0.9800  0.9800  0.9799  0.9795  0.9794  0.9792  0.9790  0.9787  0.9762  0.9760  0.9758  0.9758  0.9757  0.9754  0.9749  0.9748
2024-04-29 14:50:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 14:50:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #1: GFLOPs: 67.1598. Time: 383.2691 us. Best GFLOPs: 67.1598
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #2: GFLOPs: 87.2706. Time: 294.9479 us. Best GFLOPs: 87.2706
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #3: GFLOPs: 47.9469. Time: 536.8502 us. Best GFLOPs: 87.2706
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:121] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #4: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(14)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(8) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(14)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #5: GFLOPs: 60.8900. Time: 422.7341 us. Best GFLOPs: 87.2706
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:121] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #6: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(7), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(16) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(14) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(14) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(392)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(784))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(784) // T.int64(56))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(56) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 4, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b66)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #7: GFLOPs: 4.1224. Time: 6243.9872 us. Best GFLOPs: 87.2706
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #8: GFLOPs: 27.4567. Time: 937.4882 us. Best GFLOPs: 87.2706
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #9: GFLOPs: 125.6368. Time: 204.8786 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #10: GFLOPs: 55.5307. Time: 463.5322 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #11: GFLOPs: 7.6631. Time: 3359.0005 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #12: GFLOPs: 85.7042. Time: 300.3386 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #13: GFLOPs: 6.2507. Time: 4117.9935 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #14: GFLOPs: 53.0690. Time: 485.0346 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #15: GFLOPs: 44.5175. Time: 578.2063 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #16: GFLOPs: 82.5105. Time: 311.9636 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:121] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #17: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(2), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(2)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #18: GFLOPs: 23.6674. Time: 1087.5857 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #19: GFLOPs: 75.2697. Time: 341.9739 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #20: GFLOPs: 10.2077. Time: 2521.6523 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #21: GFLOPs: 37.4512. Time: 687.3028 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #22: GFLOPs: 27.8557. Time: 924.0586 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #23: GFLOPs: 66.8283. Time: 385.1703 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #24: GFLOPs: 62.8100. Time: 409.8117 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:121] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #25: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(392), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(49) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(49) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(2), T.int64(2), T.int64(1)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), ax0)
                    v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(16) + ax1)
                    v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax2)
                    v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax3)
                    v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(49) + ax4)
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #26: GFLOPs: 116.3230. Time: 221.2828 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #27: GFLOPs: 21.3443. Time: 1205.9584 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #28: GFLOPs: 61.5523. Time: 418.1854 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #29: GFLOPs: 1.2248. Time: 21015.2099 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #30: GFLOPs: 42.1703. Time: 610.3895 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #31: GFLOPs: 43.3788. Time: 593.3834 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #32: GFLOPs: 21.1145. Time: 1219.0820 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #33: GFLOPs: 65.3604. Time: 393.8208 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #34: GFLOPs: 33.1996. Time: 775.3200 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #35: GFLOPs: 45.0200. Time: 571.7518 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #36: GFLOPs: 34.9446. Time: 736.6029 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #37: GFLOPs: 26.3035. Time: 978.5867 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #38: GFLOPs: 13.8801. Time: 1854.4717 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #39: GFLOPs: 10.7774. Time: 2388.3642 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #40: GFLOPs: 70.8570. Time: 363.2710 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #41: GFLOPs: 7.6650. Time: 3358.1402 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #42: GFLOPs: 56.0110. Time: 459.5580 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #43: GFLOPs: 25.4138. Time: 1012.8484 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #44: GFLOPs: 23.6762. Time: 1087.1820 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #45: GFLOPs: 26.8905. Time: 957.2264 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #46: GFLOPs: 57.8042. Time: 445.3010 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #47: GFLOPs: 33.1900. Time: 775.5440 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #48: GFLOPs: 1.7538. Time: 14676.5299 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #49: GFLOPs: 55.7490. Time: 461.7175 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #50: GFLOPs: 61.9343. Time: 415.6064 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #51: GFLOPs: 9.8894. Time: 2602.8189 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #52: GFLOPs: 55.2926. Time: 465.5283 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #53: GFLOPs: 1.5281. Time: 16844.8610 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #54: GFLOPs: 36.2616. Time: 709.8488 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #55: GFLOPs: 56.9250. Time: 452.1786 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #56: GFLOPs: 2.1660. Time: 11883.5572 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #57: GFLOPs: 11.6394. Time: 2211.4884 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #58: GFLOPs: 9.6094. Time: 2678.6591 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #59: GFLOPs: 44.7801. Time: 574.8157 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #60: GFLOPs: 55.8946. Time: 460.5148 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #61: GFLOPs: 11.2859. Time: 2280.7544 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #62: GFLOPs: 14.4860. Time: 1776.9129 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #63: GFLOPs: 89.8882. Time: 286.3588 us. Best GFLOPs: 125.6368
2024-04-29 15:08:09 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #64: GFLOPs: 68.1982. Time: 377.4334 us. Best GFLOPs: 125.6368
2024-04-29 15:38:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:38:27 [INFO] [evolutionary_search.cc:715] Picked top 60 candidate(s) from database
2024-04-29 15:38:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 15:38:29 [INFO] [evolutionary_search.cc:723] Sampled 452 candidate(s)
2024-04-29 15:38:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 15:38:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 15:38:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 15:38:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 15:38:53 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9119  0.9038  0.8835  0.8747  0.8659  0.8595  0.8567  0.8546  0.8389  0.8372  0.8353  0.8345  0.8337  0.8328  0.8319  0.8315
[17 : 32]:	0.8282  0.8276  0.8257  0.8193  0.8173  0.8130  0.8062  0.8043  0.8000  0.7978  0.7957  0.7939  0.7934  0.7927  0.7916  0.7916
[33 : 48]:	0.7886  0.7882  0.7870  0.7864  0.7861  0.7855  0.7855  0.7845  0.7837  0.7828  0.7821  0.7821  0.7812  0.7803  0.7764  0.7764
[49 : 64]:	0.7764  0.7754  0.7746  0.7697  0.7683  0.7631  0.7613  0.7610  0.7598  0.7585  0.7551  0.7551  0.7508  0.7495  0.7491  0.7486
2024-04-29 15:38:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:38:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #65: GFLOPs: 64.8752. Time: 396.7660 us. Best GFLOPs: 125.6368
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #66: GFLOPs: 131.7751. Time: 195.3350 us. Best GFLOPs: 131.7751
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #67: GFLOPs: 109.5946. Time: 234.8683 us. Best GFLOPs: 131.7751
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #68: GFLOPs: 86.9630. Time: 295.9912 us. Best GFLOPs: 131.7751
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #69: GFLOPs: 116.4550. Time: 221.0320 us. Best GFLOPs: 131.7751
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #70: GFLOPs: 116.1613. Time: 221.5910 us. Best GFLOPs: 131.7751
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #71: GFLOPs: 118.6350. Time: 216.9704 us. Best GFLOPs: 131.7751
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #72: GFLOPs: 145.1509. Time: 177.3347 us. Best GFLOPs: 145.1509
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #73: GFLOPs: 44.5661. Time: 577.5751 us. Best GFLOPs: 145.1509
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #74: GFLOPs: 105.4566. Time: 244.0842 us. Best GFLOPs: 145.1509
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #75: GFLOPs: 143.4885. Time: 179.3892 us. Best GFLOPs: 145.1509
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #76: GFLOPs: 108.0749. Time: 238.1708 us. Best GFLOPs: 145.1509
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #77: GFLOPs: 172.6514. Time: 149.0883 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #78: GFLOPs: 104.4762. Time: 246.3746 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #79: GFLOPs: 82.7334. Time: 311.1231 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #80: GFLOPs: 143.7493. Time: 179.0638 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #81: GFLOPs: 66.6174. Time: 386.3897 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #82: GFLOPs: 158.1776. Time: 162.7303 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #83: GFLOPs: 147.4511. Time: 174.5683 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #84: GFLOPs: 109.6253. Time: 234.8025 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #85: GFLOPs: 153.5935. Time: 167.5871 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #86: GFLOPs: 100.8315. Time: 255.2801 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #87: GFLOPs: 102.7815. Time: 250.4371 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #88: GFLOPs: 46.3896. Time: 554.8718 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #89: GFLOPs: 129.0926. Time: 199.3940 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #90: GFLOPs: 120.7496. Time: 213.1707 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #91: GFLOPs: 87.4272. Time: 294.4197 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #92: GFLOPs: 125.8615. Time: 204.5128 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #93: GFLOPs: 128.2727. Time: 200.6685 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #94: GFLOPs: 103.1688. Time: 249.4969 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #95: GFLOPs: 98.7149. Time: 260.7538 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #96: GFLOPs: 108.2845. Time: 237.7097 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #97: GFLOPs: 88.0949. Time: 292.1882 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #98: GFLOPs: 70.7739. Time: 363.6973 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #99: GFLOPs: 74.1720. Time: 347.0350 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #100: GFLOPs: 100.7033. Time: 255.6051 us. Best GFLOPs: 172.6514
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #101: GFLOPs: 175.3951. Time: 146.7560 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #102: GFLOPs: 125.4887. Time: 205.1204 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #103: GFLOPs: 124.7314. Time: 206.3658 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #104: GFLOPs: 69.9904. Time: 367.7690 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #105: GFLOPs: 144.1124. Time: 178.6125 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #106: GFLOPs: 89.8316. Time: 286.5395 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #107: GFLOPs: 143.4223. Time: 179.4721 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #108: GFLOPs: 146.7181. Time: 175.4404 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #109: GFLOPs: 140.3361. Time: 183.4189 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #110: GFLOPs: 162.0639. Time: 158.8280 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #111: GFLOPs: 112.1139. Time: 229.5905 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #112: GFLOPs: 139.0399. Time: 185.1288 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #113: GFLOPs: 139.3142. Time: 184.7643 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #114: GFLOPs: 55.1969. Time: 466.3357 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #115: GFLOPs: 69.7589. Time: 368.9893 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #116: GFLOPs: 130.0069. Time: 197.9916 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #117: GFLOPs: 132.0583. Time: 194.9160 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #118: GFLOPs: 149.9811. Time: 171.6235 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #119: GFLOPs: 141.7019. Time: 181.6509 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #120: GFLOPs: 93.8571. Time: 274.2499 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #121: GFLOPs: 169.8924. Time: 151.5094 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #122: GFLOPs: 81.8909. Time: 314.3242 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #123: GFLOPs: 158.5751. Time: 162.3223 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #124: GFLOPs: 156.9006. Time: 164.0548 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #125: GFLOPs: 75.6505. Time: 340.2526 us. Best GFLOPs: 175.3951
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:121] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #126: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n_0 in T.serial(T.int64(1), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 + ow_2_init + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(14), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                                v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(14)):
                    for ax3_ax4_fused in T.vectorized(T.int64(56)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                            v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 8, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l68, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l68, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b67)
l105 = sch.fuse(l103, l104, preserve_unit_iters=True)
sch.vectorize(loop=l105)
b106 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b106)
b133 = sch.decompose_reduction(block=b106, loop=l117)
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:121] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #127: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(32) + oc_chunk_2_init * T.int64(16) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(32) + oc_chunk_2 * T.int64(16) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 16])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 15:40:29 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #128: GFLOPs: 61.0910. Time: 421.3433 us. Best GFLOPs: 175.3951
2024-04-29 16:45:53 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:45:53 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 16:45:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 16:45:55 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 16:46:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 16:46:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 16:46:11 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 16:46:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 16:46:19 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9132  0.8854  0.8854  0.8722  0.8518  0.8405  0.8290  0.8220  0.8219  0.8196  0.8196  0.8196  0.8168  0.8069  0.8054  0.8025
[17 : 32]:	0.7997  0.7994  0.7991  0.7959  0.7952  0.7952  0.7903  0.7763  0.7737  0.7728  0.7728  0.7713  0.7699  0.7668  0.7643  0.7620
[33 : 48]:	0.7620  0.7607  0.7589  0.7574  0.7570  0.7565  0.7558  0.7486  0.7486  0.7484  0.7484  0.7482  0.7475  0.7467  0.7461  0.7441
[49 : 64]:	0.7435  0.7434  0.7434  0.7420  0.7420  0.7409  0.7392  0.7318  0.7311  0.7252  0.7248  0.7214  0.7213  0.7208  0.7207  0.7182
2024-04-29 16:46:19 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:46:19 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #129: GFLOPs: 151.1556. Time: 170.2900 us. Best GFLOPs: 175.3951
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #130: GFLOPs: 187.9656. Time: 136.9415 us. Best GFLOPs: 187.9656
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #131: GFLOPs: 196.7075. Time: 130.8556 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #132: GFLOPs: 159.1878. Time: 161.6976 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #133: GFLOPs: 126.5276. Time: 203.4362 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #134: GFLOPs: 63.0758. Time: 408.0851 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #135: GFLOPs: 166.1899. Time: 154.8848 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #136: GFLOPs: 140.0824. Time: 183.7510 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #137: GFLOPs: 196.6328. Time: 130.9054 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #138: GFLOPs: 95.0024. Time: 270.9435 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #139: GFLOPs: 98.7111. Time: 260.7638 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #140: GFLOPs: 121.5409. Time: 211.7830 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #141: GFLOPs: 124.2988. Time: 207.0840 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #142: GFLOPs: 175.0972. Time: 147.0057 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #143: GFLOPs: 137.9804. Time: 186.5503 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #144: GFLOPs: 173.0526. Time: 148.7425 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #145: GFLOPs: 142.4250. Time: 180.7287 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #146: GFLOPs: 174.6518. Time: 147.3806 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #147: GFLOPs: 162.5544. Time: 158.3487 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #148: GFLOPs: 126.6464. Time: 203.2454 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #149: GFLOPs: 128.8297. Time: 199.8009 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #150: GFLOPs: 128.5164. Time: 200.2880 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #151: GFLOPs: 171.4119. Time: 150.1663 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #152: GFLOPs: 94.2058. Time: 273.2346 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #153: GFLOPs: 140.2993. Time: 183.4670 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #154: GFLOPs: 103.8035. Time: 247.9713 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #155: GFLOPs: 112.9019. Time: 227.9880 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #156: GFLOPs: 144.3522. Time: 178.3159 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #157: GFLOPs: 172.9896. Time: 148.7968 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #158: GFLOPs: 49.8221. Time: 516.6441 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #159: GFLOPs: 172.1868. Time: 149.4905 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #160: GFLOPs: 135.7387. Time: 189.6312 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #161: GFLOPs: 107.0535. Time: 240.4433 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #162: GFLOPs: 100.0560. Time: 257.2588 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #163: GFLOPs: 137.1816. Time: 187.6366 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #164: GFLOPs: 142.2294. Time: 180.9772 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #165: GFLOPs: 184.2166. Time: 139.7283 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #166: GFLOPs: 153.7738. Time: 167.3906 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #167: GFLOPs: 51.9250. Time: 495.7201 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #168: GFLOPs: 96.8145. Time: 265.8721 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #169: GFLOPs: 98.1014. Time: 262.3846 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #170: GFLOPs: 104.7522. Time: 245.7255 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #171: GFLOPs: 114.2696. Time: 225.2593 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #172: GFLOPs: 183.1015. Time: 140.5794 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #173: GFLOPs: 189.8595. Time: 135.5755 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #174: GFLOPs: 145.8646. Time: 176.4670 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #175: GFLOPs: 170.8756. Time: 150.6376 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #176: GFLOPs: 121.4277. Time: 211.9804 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #177: GFLOPs: 127.4110. Time: 202.0257 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #178: GFLOPs: 137.1251. Time: 187.7139 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #179: GFLOPs: 123.3175. Time: 208.7318 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #180: GFLOPs: 172.8005. Time: 148.9596 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #181: GFLOPs: 173.3218. Time: 148.5116 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #182: GFLOPs: 132.8559. Time: 193.7460 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #183: GFLOPs: 157.8365. Time: 163.0819 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #184: GFLOPs: 122.4545. Time: 210.2029 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #185: GFLOPs: 51.9086. Time: 495.8768 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #186: GFLOPs: 121.6035. Time: 211.6739 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #187: GFLOPs: 130.4836. Time: 197.2683 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #188: GFLOPs: 132.6344. Time: 194.0695 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #189: GFLOPs: 76.5442. Time: 336.2802 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #190: GFLOPs: 42.6945. Time: 602.8952 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #191: GFLOPs: 99.0580. Time: 259.8507 us. Best GFLOPs: 196.7075
2024-04-29 16:47:33 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #192: GFLOPs: 12.9012. Time: 1995.1797 us. Best GFLOPs: 196.7075
2024-04-29 17:56:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:56:40 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:56:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 17:56:42 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:56:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 17:56:53 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 17:56:58 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 17:57:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 17:57:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9354  0.8909  0.8844  0.8842  0.8842  0.8664  0.8636  0.8427  0.8427  0.8427  0.8345  0.8338  0.8334  0.8310  0.8301  0.8260
[17 : 32]:	0.8251  0.8251  0.8093  0.8085  0.8068  0.8029  0.7992  0.7984  0.7943  0.7929  0.7921  0.7914  0.7914  0.7910  0.7902  0.7897
[33 : 48]:	0.7875  0.7875  0.7862  0.7854  0.7850  0.7840  0.7839  0.7826  0.7824  0.7812  0.7812  0.7802  0.7792  0.7779  0.7766  0.7710
[49 : 64]:	0.7675  0.7674  0.7674  0.7641  0.7624  0.7577  0.7554  0.7516  0.7485  0.7476  0.7448  0.7430  0.7422  0.7401  0.7361  0.7349
2024-04-29 17:57:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:57:07 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #193: GFLOPs: 184.5025. Time: 139.5119 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #194: GFLOPs: 183.8171. Time: 140.0321 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #195: GFLOPs: 168.5964. Time: 152.6740 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #196: GFLOPs: 120.8475. Time: 212.9980 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #197: GFLOPs: 108.4581. Time: 237.3294 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #198: GFLOPs: 172.8156. Time: 148.9466 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #199: GFLOPs: 150.1786. Time: 171.3978 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #200: GFLOPs: 157.3983. Time: 163.5360 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #201: GFLOPs: 180.7115. Time: 142.4386 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #202: GFLOPs: 146.5897. Time: 175.5941 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #203: GFLOPs: 77.7087. Time: 331.2406 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #204: GFLOPs: 142.2971. Time: 180.8911 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #205: GFLOPs: 174.0589. Time: 147.8826 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #206: GFLOPs: 141.1334. Time: 182.3827 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #207: GFLOPs: 129.2700. Time: 199.1204 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #208: GFLOPs: 137.9253. Time: 186.6248 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #209: GFLOPs: 123.7175. Time: 208.0569 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #210: GFLOPs: 139.0049. Time: 185.1754 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #211: GFLOPs: 148.4621. Time: 173.3795 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #212: GFLOPs: 136.9880. Time: 187.9018 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #213: GFLOPs: 98.1513. Time: 262.2511 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #214: GFLOPs: 158.3200. Time: 162.5840 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #215: GFLOPs: 192.9496. Time: 133.4042 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #216: GFLOPs: 139.9005. Time: 183.9900 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #217: GFLOPs: 187.5574. Time: 137.2395 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #218: GFLOPs: 190.9946. Time: 134.7697 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #219: GFLOPs: 143.6083. Time: 179.2396 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #220: GFLOPs: 139.2243. Time: 184.8836 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #221: GFLOPs: 130.4459. Time: 197.3253 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #222: GFLOPs: 174.3904. Time: 147.6015 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #223: GFLOPs: 117.0335. Time: 219.9395 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #224: GFLOPs: 177.4209. Time: 145.0803 us. Best GFLOPs: 196.7075
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #225: GFLOPs: 222.5192. Time: 115.6767 us. Best GFLOPs: 222.5192
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #226: GFLOPs: 225.9333. Time: 113.9287 us. Best GFLOPs: 225.9333
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #227: GFLOPs: 146.1589. Time: 176.1117 us. Best GFLOPs: 225.9333
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #228: GFLOPs: 158.1481. Time: 162.7607 us. Best GFLOPs: 225.9333
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #229: GFLOPs: 186.1911. Time: 138.2466 us. Best GFLOPs: 225.9333
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #230: GFLOPs: 138.9593. Time: 185.2361 us. Best GFLOPs: 225.9333
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #231: GFLOPs: 161.4758. Time: 159.4065 us. Best GFLOPs: 225.9333
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #232: GFLOPs: 161.0262. Time: 159.8515 us. Best GFLOPs: 225.9333
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #233: GFLOPs: 229.9021. Time: 111.9619 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #234: GFLOPs: 155.3222. Time: 165.7218 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #235: GFLOPs: 173.6969. Time: 148.1908 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #236: GFLOPs: 133.7116. Time: 192.5060 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #237: GFLOPs: 226.8574. Time: 113.4646 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #238: GFLOPs: 156.0000. Time: 165.0019 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #239: GFLOPs: 160.7403. Time: 160.1358 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #240: GFLOPs: 131.6685. Time: 195.4932 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #241: GFLOPs: 129.9939. Time: 198.0115 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #242: GFLOPs: 81.6696. Time: 315.1759 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #243: GFLOPs: 90.9597. Time: 282.9856 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #244: GFLOPs: 176.9279. Time: 145.4847 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #245: GFLOPs: 171.7532. Time: 149.8679 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #246: GFLOPs: 174.9062. Time: 147.1663 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #247: GFLOPs: 168.6198. Time: 152.6528 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #248: GFLOPs: 119.3846. Time: 215.6082 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #249: GFLOPs: 129.1458. Time: 199.3118 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #250: GFLOPs: 118.9636. Time: 216.3711 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #251: GFLOPs: 119.8679. Time: 214.7388 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #252: GFLOPs: 131.2393. Time: 196.1324 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #253: GFLOPs: 169.1013. Time: 152.2182 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #254: GFLOPs: 29.0402. Time: 886.3663 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #255: GFLOPs: 56.4980. Time: 455.5962 us. Best GFLOPs: 229.9021
2024-04-29 17:58:31 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #256: GFLOPs: 64.0490. Time: 401.8844 us. Best GFLOPs: 229.9021
2024-04-29 18:45:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:45:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 18:45:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 18:45:03 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 18:45:08 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 18:45:13 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 18:45:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 18:45:24 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5ac8aa8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x52c3a88)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x75d4c88)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4d37538)]: 0 failure(s)
2024-04-29 18:45:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.7956  0.7771  0.7679  0.7677  0.7635  0.7565  0.7565  0.7520  0.7505  0.7417  0.7305  0.7299  0.7289  0.7281  0.7278  0.7269
[17 : 32]:	0.7247  0.7241  0.7241  0.7241  0.7231  0.7143  0.7143  0.7127  0.7094  0.7071  0.7066  0.7059  0.7058  0.7022  0.7022  0.7019
[33 : 48]:	0.7019  0.7004  0.6992  0.6989  0.6989  0.6982  0.6946  0.6943  0.6918  0.6908  0.6887  0.6881  0.6869  0.6860  0.6860  0.6858
[49 : 64]:	0.6836  0.6790  0.6769  0.6767  0.6747  0.6746  0.6738  0.6736  0.6724  0.6675  0.6671  0.6665  0.6661  0.6640  0.6637  0.6629
2024-04-29 18:45:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:45:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #257: GFLOPs: 219.2552. Time: 117.3987 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #258: GFLOPs: 140.1933. Time: 183.6057 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #259: GFLOPs: 137.9595. Time: 186.5786 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #260: GFLOPs: 174.2971. Time: 147.6806 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #261: GFLOPs: 140.2032. Time: 183.5927 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #262: GFLOPs: 164.7622. Time: 156.2269 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #263: GFLOPs: 161.3001. Time: 159.5801 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #264: GFLOPs: 174.2994. Time: 147.6786 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #265: GFLOPs: 194.0721. Time: 132.6326 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #266: GFLOPs: 140.4301. Time: 183.2962 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #267: GFLOPs: 115.3411. Time: 223.1666 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #268: GFLOPs: 186.5726. Time: 137.9639 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #269: GFLOPs: 167.0926. Time: 154.0481 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #270: GFLOPs: 116.2277. Time: 221.4643 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #271: GFLOPs: 192.4176. Time: 133.7730 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #272: GFLOPs: 152.1097. Time: 169.2219 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #273: GFLOPs: 137.7772. Time: 186.8255 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #274: GFLOPs: 134.4144. Time: 191.4994 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #275: GFLOPs: 69.6152. Time: 369.7508 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #276: GFLOPs: 97.8477. Time: 263.0649 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #277: GFLOPs: 100.8938. Time: 255.1226 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #278: GFLOPs: 131.7653. Time: 195.3495 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #279: GFLOPs: 117.5080. Time: 219.0513 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #280: GFLOPs: 69.0616. Time: 372.7150 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #281: GFLOPs: 170.2728. Time: 151.1709 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #282: GFLOPs: 82.2288. Time: 313.0326 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #283: GFLOPs: 179.2425. Time: 143.6060 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #284: GFLOPs: 142.4021. Time: 180.7577 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #285: GFLOPs: 162.0214. Time: 158.8697 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #286: GFLOPs: 87.6826. Time: 293.5623 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #287: GFLOPs: 85.7241. Time: 300.2691 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #288: GFLOPs: 191.3841. Time: 134.4955 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #289: GFLOPs: 91.6970. Time: 280.7103 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #290: GFLOPs: 71.8733. Time: 358.1340 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #291: GFLOPs: 141.6218. Time: 181.7537 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #292: GFLOPs: 138.9439. Time: 185.2567 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #293: GFLOPs: 126.3542. Time: 203.7153 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #294: GFLOPs: 180.5041. Time: 142.6022 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #295: GFLOPs: 171.0657. Time: 150.4702 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #296: GFLOPs: 156.2445. Time: 164.7436 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #297: GFLOPs: 167.8178. Time: 153.3823 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #298: GFLOPs: 159.5796. Time: 161.3006 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #299: GFLOPs: 144.4694. Time: 178.1713 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #300: GFLOPs: 49.8420. Time: 516.4377 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #301: GFLOPs: 159.4097. Time: 161.4726 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #302: GFLOPs: 131.8463. Time: 195.2295 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #303: GFLOPs: 101.5125. Time: 253.5677 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #304: GFLOPs: 140.2373. Time: 183.5480 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #305: GFLOPs: 134.4569. Time: 191.4389 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #306: GFLOPs: 173.7557. Time: 148.1407 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #307: GFLOPs: 105.1393. Time: 244.8209 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #308: GFLOPs: 114.1060. Time: 225.5822 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #309: GFLOPs: 186.6909. Time: 137.8765 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #310: GFLOPs: 122.2492. Time: 210.5558 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #311: GFLOPs: 102.1925. Time: 251.8804 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #312: GFLOPs: 156.2223. Time: 164.7671 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #313: GFLOPs: 160.7934. Time: 160.0830 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #314: GFLOPs: 81.0868. Time: 317.4411 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #315: GFLOPs: 148.8646. Time: 172.9107 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #316: GFLOPs: 173.6642. Time: 148.2187 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #317: GFLOPs: 189.3275. Time: 135.9564 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #318: GFLOPs: 107.7783. Time: 238.8263 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #319: GFLOPs: 67.0725. Time: 383.7681 us. Best GFLOPs: 229.9021
2024-04-29 18:46:49 [INFO] [task_scheduler.cc:131] [Task #55: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_44] Trial #320: GFLOPs: 0.8288. Time: 31058.8260 us. Best GFLOPs: 229.9021
