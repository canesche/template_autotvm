2024-04-29 13:18:56 [INFO] [task_scheduler.cc:160] Initializing Task #5: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4"
2024-04-29 13:18:56 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(208), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(208), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4), T.int64(832), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 13:18:56 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 13:18:56 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(208), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(208), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(4), T.int64(7), T.int64(7), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(13), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(832), ic_0 * T.int64(13) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 13])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 13:18:56 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(208), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(208), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(4), T.int64(7), T.int64(7), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(13), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(832), ic_0 * T.int64(13) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), oh_1 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), ow_1 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 13])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 13:18:56 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(208), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(208), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(7), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(13), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(832), ic_0 * T.int64(13) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(7), T.int64(7), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 13])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 13:30:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 13:30:58 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 13:31:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 13:31:01 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 13:31:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 13:31:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 13:31:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 13:31:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 13:31:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9991  0.9975  0.9975  0.9973  0.9964  0.9963  0.9954  0.9950  0.9935  0.9934  0.9927  0.9923  0.9904  0.9902  0.9899
[17 : 32]:	0.9887  0.9884  0.9882  0.9877  0.9876  0.9876  0.9870  0.9851  0.9845  0.9830  0.9827  0.9823  0.9819  0.9816  0.9812  0.9808
[33 : 48]:	0.9807  0.9807  0.9806  0.9800  0.9794  0.9791  0.9790  0.9789  0.9776  0.9776  0.9774  0.9773  0.9772  0.9771  0.9768  0.9767
[49 : 64]:	0.9760  0.9753  0.9742  0.9742  0.9738  0.9736  0.9735  0.9734  0.9730  0.9724  0.9723  0.9721  0.9718  0.9711  0.9707  0.9706
2024-04-29 13:31:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 13:31:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #1: GFLOPs: 43.1070. Time: 242.4005 us. Best GFLOPs: 43.1070
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #2: GFLOPs: 77.9993. Time: 133.9646 us. Best GFLOPs: 77.9993
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #3: GFLOPs: 44.7464. Time: 233.5196 us. Best GFLOPs: 77.9993
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #4: GFLOPs: 93.2723. Time: 112.0285 us. Best GFLOPs: 93.2723
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #5: GFLOPs: 48.3643. Time: 216.0510 us. Best GFLOPs: 93.2723
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #6: GFLOPs: 36.6639. Time: 284.9986 us. Best GFLOPs: 93.2723
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #7: GFLOPs: 37.3666. Time: 279.6391 us. Best GFLOPs: 93.2723
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #8: GFLOPs: 87.2225. Time: 119.7988 us. Best GFLOPs: 93.2723
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #9: GFLOPs: 75.6558. Time: 138.1143 us. Best GFLOPs: 93.2723
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #10: GFLOPs: 27.2735. Time: 383.1249 us. Best GFLOPs: 93.2723
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #11: GFLOPs: 71.3764. Time: 146.3950 us. Best GFLOPs: 93.2723
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #12: GFLOPs: 97.3774. Time: 107.3058 us. Best GFLOPs: 97.3774
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #13: GFLOPs: 3.8472. Time: 2716.0244 us. Best GFLOPs: 97.3774
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #14: GFLOPs: 126.0351. Time: 82.9067 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #15: GFLOPs: 77.8904. Time: 134.1520 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #16: GFLOPs: 8.9100. Time: 1172.7426 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #17: GFLOPs: 1.0224. Time: 10220.2799 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #18: GFLOPs: 2.1753. Time: 4803.6310 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #19: GFLOPs: 16.7954. Time: 622.1425 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #20: GFLOPs: 27.9227. Time: 374.2172 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #21: GFLOPs: 31.4033. Time: 332.7406 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #22: GFLOPs: 11.1098. Time: 940.5381 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #23: GFLOPs: 4.3456. Time: 2404.5377 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #24: GFLOPs: 17.2089. Time: 607.1941 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #25: GFLOPs: 69.6062. Time: 150.1181 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #26: GFLOPs: 4.1039. Time: 2546.1608 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #27: GFLOPs: 26.8242. Time: 389.5419 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:121] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #28: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(208), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(208), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(4)))
        for n_0 in T.serial(T.int64(1), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(1), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(832), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                        for oc_block_3_fused in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(832), ic_0 + ic_1)
                                v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(7)):
                    for ax3_ax4_fused in T.vectorized(T.int64(28)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                            v_ax3 = T.axis.spatial(T.int64(7), ax3_ax4_fused // T.int64(4))
                            v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 32, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[832, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l68, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l68, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b67)
l105 = sch.fuse(l103, l104, preserve_unit_iters=True)
sch.vectorize(loop=l105)
b106 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b106)
b133 = sch.decompose_reduction(block=b106, loop=l117)
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #29: GFLOPs: 92.8294. Time: 112.5629 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #30: GFLOPs: 5.4190. Time: 1928.2610 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #31: GFLOPs: 42.3120. Time: 246.9546 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #32: GFLOPs: 55.6107. Time: 187.8982 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #33: GFLOPs: 32.1753. Time: 324.7572 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #34: GFLOPs: 15.4702. Time: 675.4376 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #35: GFLOPs: 43.6525. Time: 239.3711 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #36: GFLOPs: 103.9303. Time: 100.5400 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #37: GFLOPs: 80.2102. Time: 130.2721 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #38: GFLOPs: 46.0828. Time: 226.7471 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #39: GFLOPs: 75.3123. Time: 138.7443 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #40: GFLOPs: 11.0540. Time: 945.2855 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #41: GFLOPs: 26.3686. Time: 396.2725 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #42: GFLOPs: 5.2505. Time: 1990.1401 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #43: GFLOPs: 53.0410. Time: 197.0015 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #44: GFLOPs: 84.6357. Time: 123.4603 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #45: GFLOPs: 38.3674. Time: 272.3448 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #46: GFLOPs: 33.7424. Time: 309.6746 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #47: GFLOPs: 104.3245. Time: 100.1601 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #48: GFLOPs: 9.2672. Time: 1127.5441 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #49: GFLOPs: 97.0847. Time: 107.6292 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #50: GFLOPs: 6.9418. Time: 1505.2477 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #51: GFLOPs: 62.4214. Time: 167.3968 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #52: GFLOPs: 24.1170. Time: 433.2686 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #53: GFLOPs: 4.1483. Time: 2518.8953 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #54: GFLOPs: 4.3389. Time: 2408.2736 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #55: GFLOPs: 2.8703. Time: 3640.4276 us. Best GFLOPs: 126.0351
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #56: GFLOPs: 138.1803. Time: 75.6197 us. Best GFLOPs: 138.1803
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #57: GFLOPs: 79.5553. Time: 131.3445 us. Best GFLOPs: 138.1803
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #58: GFLOPs: 24.0861. Time: 433.8253 us. Best GFLOPs: 138.1803
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #59: GFLOPs: 3.2873. Time: 3178.6156 us. Best GFLOPs: 138.1803
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #60: GFLOPs: 64.6171. Time: 161.7088 us. Best GFLOPs: 138.1803
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #61: GFLOPs: 20.2537. Time: 515.9134 us. Best GFLOPs: 138.1803
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #62: GFLOPs: 16.6659. Time: 626.9795 us. Best GFLOPs: 138.1803
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #63: GFLOPs: 58.5291. Time: 178.5292 us. Best GFLOPs: 138.1803
2024-04-29 15:04:01 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #64: GFLOPs: 99.6683. Time: 104.8392 us. Best GFLOPs: 138.1803
2024-04-29 16:36:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:36:43 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 16:36:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 16:36:45 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 16:36:50 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 16:36:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 16:37:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 16:37:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6e263a8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x623a958)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3329448)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5cde468)]: 0 failure(s)
2024-04-29 16:37:08 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9786  0.9243  0.9058  0.9023  0.9017  0.9005  0.8977  0.8933  0.8909  0.8759  0.8734  0.8634  0.8634  0.8598  0.8143  0.8130
[17 : 32]:	0.8130  0.8092  0.8007  0.8001  0.7985  0.7973  0.7873  0.7777  0.7768  0.7700  0.7640  0.7611  0.7611  0.7587  0.7583  0.7579
[33 : 48]:	0.7549  0.7541  0.7537  0.7511  0.7511  0.7493  0.7491  0.7475  0.7466  0.7461  0.7444  0.7439  0.7436  0.7388  0.7385  0.7373
[49 : 64]:	0.7367  0.7351  0.7345  0.7344  0.7343  0.7333  0.7330  0.7305  0.7284  0.7274  0.7273  0.7269  0.7269  0.7259  0.7240  0.7234
2024-04-29 16:37:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:37:09 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #65: GFLOPs: 84.5904. Time: 123.5264 us. Best GFLOPs: 138.1803
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #66: GFLOPs: 25.9988. Time: 401.9089 us. Best GFLOPs: 138.1803
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #67: GFLOPs: 49.1695. Time: 212.5128 us. Best GFLOPs: 138.1803
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #68: GFLOPs: 49.7412. Time: 210.0702 us. Best GFLOPs: 138.1803
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #69: GFLOPs: 172.2769. Time: 60.6532 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #70: GFLOPs: 137.5206. Time: 75.9825 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #71: GFLOPs: 49.7426. Time: 210.0643 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #72: GFLOPs: 134.6312. Time: 77.6132 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #73: GFLOPs: 133.8282. Time: 78.0788 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #74: GFLOPs: 59.5520. Time: 175.4627 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #75: GFLOPs: 55.8184. Time: 187.1991 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #76: GFLOPs: 90.8393. Time: 115.0290 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #77: GFLOPs: 37.4585. Time: 278.9525 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #78: GFLOPs: 102.8323. Time: 101.6135 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #79: GFLOPs: 78.1964. Time: 133.6270 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #80: GFLOPs: 55.7142. Time: 187.5493 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #81: GFLOPs: 56.3976. Time: 185.2765 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #82: GFLOPs: 115.9499. Time: 90.1178 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #83: GFLOPs: 156.0514. Time: 66.9597 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #84: GFLOPs: 54.0863. Time: 193.1939 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #85: GFLOPs: 74.1364. Time: 140.9449 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #86: GFLOPs: 121.6033. Time: 85.9282 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #87: GFLOPs: 125.7289. Time: 83.1086 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #88: GFLOPs: 63.2093. Time: 165.3102 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #89: GFLOPs: 156.8630. Time: 66.6132 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #90: GFLOPs: 40.6395. Time: 257.1182 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #91: GFLOPs: 105.3113. Time: 99.2216 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #92: GFLOPs: 171.5537. Time: 60.9089 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #93: GFLOPs: 135.3423. Time: 77.2053 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #94: GFLOPs: 111.7855. Time: 93.4750 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #95: GFLOPs: 143.9614. Time: 72.5830 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #96: GFLOPs: 116.6356. Time: 89.5880 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #97: GFLOPs: 101.8523. Time: 102.5912 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #98: GFLOPs: 90.2122. Time: 115.8286 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #99: GFLOPs: 101.9508. Time: 102.4921 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #100: GFLOPs: 105.5989. Time: 98.9513 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #101: GFLOPs: 149.5419. Time: 69.8744 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #102: GFLOPs: 57.8371. Time: 180.6653 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #103: GFLOPs: 113.7339. Time: 91.8737 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #104: GFLOPs: 108.0982. Time: 96.6635 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #105: GFLOPs: 67.7638. Time: 154.1997 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #106: GFLOPs: 91.7998. Time: 113.8255 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #107: GFLOPs: 64.8376. Time: 161.1589 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #108: GFLOPs: 91.6981. Time: 113.9517 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #109: GFLOPs: 96.7302. Time: 108.0237 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #110: GFLOPs: 124.7389. Time: 83.7682 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #111: GFLOPs: 89.4913. Time: 116.7616 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #112: GFLOPs: 17.1863. Time: 607.9922 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #113: GFLOPs: 44.2645. Time: 236.0618 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #114: GFLOPs: 83.1017. Time: 125.7393 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #115: GFLOPs: 112.5200. Time: 92.8649 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #116: GFLOPs: 127.3640. Time: 82.0417 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #117: GFLOPs: 92.5288. Time: 112.9286 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #118: GFLOPs: 154.3221. Time: 67.7100 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #119: GFLOPs: 100.2645. Time: 104.2158 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #120: GFLOPs: 113.8150. Time: 91.8082 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #121: GFLOPs: 94.2286. Time: 110.8915 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #122: GFLOPs: 87.4676. Time: 119.4631 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #123: GFLOPs: 92.8344. Time: 112.5569 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #124: GFLOPs: 122.6487. Time: 85.1958 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #125: GFLOPs: 101.0450. Time: 103.4109 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #126: GFLOPs: 5.5083. Time: 1896.9892 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #127: GFLOPs: 46.9684. Time: 222.4719 us. Best GFLOPs: 172.2769
2024-04-29 16:38:48 [INFO] [task_scheduler.cc:131] [Task #5: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_4] Trial #128: GFLOPs: 88.3285. Time: 118.2987 us. Best GFLOPs: 172.2769
