2024-04-29 13:21:08 [INFO] [task_scheduler.cc:160] Initializing Task #36: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31"
2024-04-29 13:21:08 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4), T.int64(128), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 13:21:08 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 13:21:08 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0 in T.grid(T.int64(1), T.int64(2), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(16), T.int64(30), T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), oh_0 * T.int64(14) + ax2)
                        v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(4), T.int64(14), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(24) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 6, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=2)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-29 13:21:08 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(16), T.int64(6), T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), oh_0 * T.int64(14) + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ow_0 * T.int64(4) + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(4), T.int64(14), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(24) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(2) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(2), T.int64(1)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(28), oh_0 * T.int64(14) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 6, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 13:21:08 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
            for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(4), T.int64(14), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + oc_chunk_1 * T.int64(24) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(4), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(48), oc_chunk_0 * T.int64(24) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), oh_0 * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 6, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 14:21:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 14:21:45 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 14:21:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 14:21:51 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 14:21:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 14:22:03 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 14:22:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 14:22:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 14:22:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9989  0.9982  0.9980  0.9980  0.9979  0.9972  0.9969  0.9953  0.9949  0.9947  0.9941  0.9919  0.9915  0.9915  0.9911
[17 : 32]:	0.9909  0.9907  0.9906  0.9900  0.9887  0.9884  0.9882  0.9880  0.9877  0.9872  0.9864  0.9864  0.9851  0.9849  0.9848  0.9848
[33 : 48]:	0.9844  0.9842  0.9828  0.9820  0.9818  0.9817  0.9815  0.9814  0.9803  0.9797  0.9794  0.9791  0.9788  0.9784  0.9784  0.9777
[49 : 64]:	0.9775  0.9775  0.9770  0.9769  0.9768  0.9757  0.9753  0.9752  0.9750  0.9742  0.9741  0.9736  0.9706  0.9706  0.9702  0.9699
2024-04-29 14:22:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 14:22:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #1: GFLOPs: 22.4142. Time: 15486.5340 us. Best GFLOPs: 22.4142
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #2: GFLOPs: 19.1882. Time: 18090.1247 us. Best GFLOPs: 22.4142
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #3: GFLOPs: 18.9080. Time: 18358.2283 us. Best GFLOPs: 22.4142
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #4: GFLOPs: 129.7912. Time: 2674.4297 us. Best GFLOPs: 129.7912
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #5: GFLOPs: 48.8729. Time: 7102.4503 us. Best GFLOPs: 129.7912
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #6: GFLOPs: 39.2404. Time: 8845.9345 us. Best GFLOPs: 129.7912
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #7: GFLOPs: 27.5740. Time: 12588.5937 us. Best GFLOPs: 129.7912
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #8: GFLOPs: 26.6299. Time: 13034.8602 us. Best GFLOPs: 129.7912
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #9: GFLOPs: 1.7184. Time: 201997.5093 us. Best GFLOPs: 129.7912
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #10: GFLOPs: 165.8705. Time: 2092.7028 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #11: GFLOPs: 50.8095. Time: 6831.7486 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #12: GFLOPs: 4.7066. Time: 73751.2073 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #13: GFLOPs: 9.4266. Time: 36823.1103 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #14: GFLOPs: 1.6844. Time: 206075.7523 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #15: GFLOPs: 26.3746. Time: 13161.0305 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #16: GFLOPs: 2.1018. Time: 165153.7710 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:121] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #17: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
        for i0_i1_i2_fused in T.parallel(T.int64(960)):
            for i3 in range(T.int64(30)):
                for i4_fused in T.vectorized(T.int64(4)):
                    with T.block("data_pad"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(32), i0_i1_i2_fused // T.int64(30))
                        v_i2 = T.axis.spatial(T.int64(30), i0_i1_i2_fused % T.int64(30))
                        v_i3, v_i4 = T.axis.remap("SS", [i3, i4_fused])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(21), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(7) * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(4) + ow_1 * T.int64(4) + ow_2_init * T.int64(4) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(7) * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(2) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(28)):
                for ax3_ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(7) * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(4) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[3, 4, 2, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 4])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[2, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75 = sch.get_loops(block=b68)
l76 = sch.fuse(l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l76)
l77 = sch.fuse(l75, preserve_unit_iters=True)
sch.vectorize(loop=l77)
l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l78, l79, l80, l81, l82, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b70)
l112 = sch.fuse(l110, l111, preserve_unit_iters=True)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b113)
b136 = sch.decompose_reduction(block=b113, loop=l120)
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #18: GFLOPs: 160.8360. Time: 2158.2080 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #19: GFLOPs: 79.1390. Time: 4386.1747 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #20: GFLOPs: 22.5433. Time: 15397.8011 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #21: GFLOPs: 120.9440. Time: 2870.0687 us. Best GFLOPs: 165.8705
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #22: GFLOPs: 406.4485. Time: 854.0259 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #23: GFLOPs: 70.4100. Time: 4929.9449 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #24: GFLOPs: 76.0436. Time: 4564.7175 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #25: GFLOPs: 34.8476. Time: 9961.0292 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #26: GFLOPs: 9.0237. Time: 38467.3400 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #27: GFLOPs: 3.6119. Time: 96102.7100 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #28: GFLOPs: 47.9164. Time: 7244.2270 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #29: GFLOPs: 18.6186. Time: 18643.6173 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #30: GFLOPs: 8.3422. Time: 41609.7717 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #31: GFLOPs: 36.8565. Time: 9418.0775 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #32: GFLOPs: 87.8502. Time: 3951.2450 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #33: GFLOPs: 30.5160. Time: 11374.9489 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #34: GFLOPs: 6.1893. Time: 56083.5443 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #35: GFLOPs: 145.5163. Time: 2385.4199 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #36: GFLOPs: 58.8614. Time: 5897.1998 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:121] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #37: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_1 * T.int64(48) + oc_chunk_2_init * T.int64(16) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(4) * T.int64(4) + oh_1 * T.int64(4) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(7) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0 in range(T.int64(4)):
                    for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(6)):
                        for ax3_ax4_fused in T.vectorized(T.int64(12)):
                            with T.block("data_pad"):
                                v_i0 = T.axis.spatial(T.int64(1), ax0)
                                v_i1 = T.axis.spatial(T.int64(32), ic_0 * T.int64(8) + ax1)
                                v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(4) * T.int64(4) + ax2)
                                v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(7) + ow_1 + ax3_ax4_fused // T.int64(4))
                                v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1), T.int64(32), T.int64(3), T.int64(3), T.int64(1), T.int64(16), T.int64(2), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_1 * T.int64(48) + oc_chunk_2 * T.int64(16) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(4) * T.int64(4) + oh_1 * T.int64(4) + oh_2 * T.int64(2) + oh_3)
                                v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(7) + ow_1 + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(32) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(48), T.int64(4)):
                for ax3_ax4_fused in T.vectorized(T.int64(28)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(4) * T.int64(4) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(7) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 3, 16])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l85, l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b69)
l111 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l111)
l112 = sch.fuse(l110, preserve_unit_iters=True)
sch.vectorize(loop=l112)
sch.annotate(block_or_loop=l111, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l111, ann_key="pragma_unroll_explicit", ann_val=1)
l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b70)
l119 = sch.fuse(l117, l118, preserve_unit_iters=True)
sch.vectorize(loop=l119)
b120 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142 = sch.get_loops(block=b120)
b143 = sch.decompose_reduction(block=b120, loop=l127)
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #38: GFLOPs: 59.7998. Time: 5804.6624 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #39: GFLOPs: 78.1447. Time: 4441.9860 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #40: GFLOPs: 60.3027. Time: 5756.2518 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #41: GFLOPs: 48.8283. Time: 7108.9477 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #42: GFLOPs: 41.6767. Time: 8328.8146 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #43: GFLOPs: 16.3311. Time: 21255.0232 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #44: GFLOPs: 78.2703. Time: 4434.8547 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #45: GFLOPs: 99.4235. Time: 3491.3018 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #46: GFLOPs: 75.9227. Time: 4571.9854 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #47: GFLOPs: 10.8161. Time: 32092.7025 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #48: GFLOPs: 64.9302. Time: 5346.0074 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #49: GFLOPs: 29.0759. Time: 11938.3253 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #50: GFLOPs: 118.5875. Time: 2927.1000 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #51: GFLOPs: 20.3830. Time: 17029.7282 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #52: GFLOPs: 4.9983. Time: 69447.2283 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #53: GFLOPs: 119.1394. Time: 2913.5408 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #54: GFLOPs: 179.3779. Time: 1935.1184 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #55: GFLOPs: 76.4343. Time: 4541.3840 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #56: GFLOPs: 2.7679. Time: 125408.8623 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #57: GFLOPs: 6.8078. Time: 50988.2163 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:121] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #58: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(7), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(4), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_1 * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(28) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(4) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0 in range(T.int64(8)):
                    for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(4), T.int64(30)):
                        for ax3_ax4_fused in T.vectorized(T.int64(12)):
                            with T.block("data_pad"):
                                v_i0 = T.axis.spatial(T.int64(1), ax0)
                                v_i1 = T.axis.spatial(T.int64(32), ic_0 * T.int64(4) + ax1)
                                v_i2 = T.axis.spatial(T.int64(30), ax2)
                                v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(4) + ow_1 + ax3_ax4_fused // T.int64(4))
                                v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(3), T.int64(14), T.int64(1), T.int64(1), T.int64(16), T.int64(3), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(48), oc_chunk_1 * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(28) + oh_2 * T.int64(2) + oh_3)
                                v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(4) + ow_1 + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(16) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(48), T.int64(28)):
                for ax3_ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(4) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 3, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 14, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 4, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l85, l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b69)
l111 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l111)
l112 = sch.fuse(l110, preserve_unit_iters=True)
sch.vectorize(loop=l112)
sch.annotate(block_or_loop=l111, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l111, ann_key="pragma_unroll_explicit", ann_val=1)
l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b70)
l119 = sch.fuse(l117, l118, preserve_unit_iters=True)
sch.vectorize(loop=l119)
b120 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142 = sch.get_loops(block=b120)
b143 = sch.decompose_reduction(block=b120, loop=l127)
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #59: GFLOPs: 2.7005. Time: 128535.9473 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:121] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #60: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(32), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(28), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(12) + oc_chunk_2_init * T.int64(3) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(28) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(8) * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(128), T.int64(3), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(28), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) * T.int64(24) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(12) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(28) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(8) * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(128), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(29) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(29), p0[v_n, v_ic // T.int64(4), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(4)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(2352)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(48), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(112))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(112) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 4, 3])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 28])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[128, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68 = sch.get_child_blocks(b66)
l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94 = sch.get_loops(block=b67)
l95 = sch.fuse(l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, preserve_unit_iters=True)
sch.parallel(loop=l95)
sch.annotate(block_or_loop=l95, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l95, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100 = sch.get_loops(block=b68)
l101 = sch.fuse(l96, l97, l98, l99, l100, preserve_unit_iters=True)
l102, l103 = sch.split(loop=l101, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l102)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b104)
b122 = sch.decompose_reduction(block=b104, loop=l106)
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #61: GFLOPs: 6.8995. Time: 50310.2587 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #62: GFLOPs: 74.7314. Time: 4644.8714 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #63: GFLOPs: 168.4525. Time: 2060.6257 us. Best GFLOPs: 406.4485
2024-04-29 15:06:12 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #64: GFLOPs: 12.0795. Time: 28736.0372 us. Best GFLOPs: 406.4485
2024-04-29 15:16:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:16:56 [INFO] [evolutionary_search.cc:715] Picked top 60 candidate(s) from database
2024-04-29 15:17:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:17:01 [INFO] [evolutionary_search.cc:723] Sampled 452 candidate(s)
2024-04-29 15:17:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:17:26 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:17:38 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:17:51 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:17:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9916  0.9167  0.8767  0.8728  0.8531  0.8507  0.8490  0.8467  0.8410  0.8270  0.8149  0.8039  0.8033  0.7911  0.7844  0.6886
[17 : 32]:	0.6685  0.6232  0.6177  0.6118  0.5978  0.5957  0.5890  0.5880  0.5829  0.5829  0.5785  0.5774  0.5774  0.5758  0.5758  0.5733
[33 : 48]:	0.5733  0.5730  0.5710  0.5706  0.5703  0.5698  0.5672  0.5646  0.5646  0.5534  0.5532  0.5486  0.5461  0.5450  0.5443  0.5443
[49 : 64]:	0.5399  0.5398  0.5338  0.5337  0.5333  0.5293  0.5293  0.5280  0.5276  0.5259  0.5257  0.5249  0.5239  0.5231  0.5219  0.5208
2024-04-29 15:17:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:17:59 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #65: GFLOPs: 191.4063. Time: 1813.5115 us. Best GFLOPs: 406.4485
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #66: GFLOPs: 393.5923. Time: 881.9217 us. Best GFLOPs: 406.4485
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #67: GFLOPs: 444.0748. Time: 781.6646 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #68: GFLOPs: 235.2596. Time: 1475.4661 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #69: GFLOPs: 109.2070. Time: 3178.5276 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #70: GFLOPs: 167.5838. Time: 2071.3069 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #71: GFLOPs: 174.3644. Time: 1990.7593 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #72: GFLOPs: 174.7970. Time: 1985.8325 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #73: GFLOPs: 174.6185. Time: 1987.8627 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #74: GFLOPs: 235.9841. Time: 1470.9363 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #75: GFLOPs: 193.2307. Time: 1796.3892 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #76: GFLOPs: 297.5086. Time: 1166.7482 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #77: GFLOPs: 125.4524. Time: 2766.9266 us. Best GFLOPs: 444.0748
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #78: GFLOPs: 625.6878. Time: 554.7776 us. Best GFLOPs: 625.6878
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #79: GFLOPs: 629.3314. Time: 551.5656 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #80: GFLOPs: 111.8765. Time: 3102.6847 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #81: GFLOPs: 298.4562. Time: 1163.0434 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #82: GFLOPs: 58.8606. Time: 5897.2773 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #83: GFLOPs: 128.1620. Time: 2708.4288 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #84: GFLOPs: 79.6373. Time: 4358.7333 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #85: GFLOPs: 100.7080. Time: 3446.7714 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:121] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #86: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(384), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(96) * T.int64(12) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(12) // T.int64(4) * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(14) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(96) // T.int64(48) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(48) // T.int64(12) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0 in T.grid(T.int64(16), T.int64(1), T.int64(3)):
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(16)):
                    for ax3_ax4_fused in T.vectorized(T.int64(28)):
                        with T.block("data_pad"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_i1 = T.axis.spatial(T.int64(32), ic_0 * T.int64(2) + ax1)
                            v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(14) + ax2)
                            v_i3 = T.axis.spatial(T.int64(30), kw_0 + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(96) // T.int64(48) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(7) + ax3_ax4_fused // T.int64(4))
                            v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(96) * T.int64(12) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(12) // T.int64(4) * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(96) // T.int64(48) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(48) // T.int64(12) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(1)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), ax0)
                    v_ax1 = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(96) * T.int64(12) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(12) // T.int64(4) * T.int64(4) + ax1)
                    v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(14) + ax2)
                    v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(96) // T.int64(48) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(7) + ax3)
                    v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(48) // T.int64(12) + ax4)
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 3, 2, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 14, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=12)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88 = sch.get_loops(block=b68)
l89 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l89)
l90 = sch.fuse(l87, l88, preserve_unit_iters=True)
sch.vectorize(loop=l90)
l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b69)
l108 = sch.fuse(l91, preserve_unit_iters=True)
sch.parallel(loop=l108)
sch.annotate(block_or_loop=l108, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l108, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b115)
b133 = sch.decompose_reduction(block=b115, loop=l117)
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #87: GFLOPs: 116.5442. Time: 2978.4210 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #88: GFLOPs: 138.6208. Time: 2504.0804 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #89: GFLOPs: 168.9935. Time: 2054.0297 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #90: GFLOPs: 171.7511. Time: 2021.0499 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #91: GFLOPs: 140.0431. Time: 2478.6480 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #92: GFLOPs: 128.2784. Time: 2705.9704 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #93: GFLOPs: 92.4796. Time: 3753.4499 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #94: GFLOPs: 149.9806. Time: 2314.4158 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #95: GFLOPs: 150.4479. Time: 2307.2281 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #96: GFLOPs: 452.6526. Time: 766.8520 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #97: GFLOPs: 428.9192. Time: 809.2843 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #98: GFLOPs: 111.5976. Time: 3110.4390 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #99: GFLOPs: 138.1519. Time: 2512.5796 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #100: GFLOPs: 143.0203. Time: 2427.0518 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #101: GFLOPs: 118.7201. Time: 2923.8324 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #102: GFLOPs: 107.7231. Time: 3222.3141 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #103: GFLOPs: 307.9123. Time: 1127.3260 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #104: GFLOPs: 119.3167. Time: 2909.2110 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #105: GFLOPs: 292.7830. Time: 1185.5795 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #106: GFLOPs: 84.7896. Time: 4093.8675 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #107: GFLOPs: 230.1300. Time: 1508.3541 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #108: GFLOPs: 200.1468. Time: 1734.3146 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #109: GFLOPs: 79.0382. Time: 4391.7707 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #110: GFLOPs: 131.6893. Time: 2635.8838 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #111: GFLOPs: 91.3963. Time: 3797.9399 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #112: GFLOPs: 97.7192. Time: 3552.1954 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #113: GFLOPs: 124.7309. Time: 2782.9318 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #114: GFLOPs: 203.1675. Time: 1708.5291 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #115: GFLOPs: 137.3208. Time: 2527.7851 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #116: GFLOPs: 277.0310. Time: 1252.9918 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #117: GFLOPs: 94.3607. Time: 3678.6224 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #118: GFLOPs: 56.5921. Time: 6133.6752 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #119: GFLOPs: 56.6756. Time: 6124.6411 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #120: GFLOPs: 185.7158. Time: 1869.0797 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #121: GFLOPs: 163.3903. Time: 2124.4691 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #122: GFLOPs: 149.3176. Time: 2324.6932 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #123: GFLOPs: 174.5022. Time: 1989.1875 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #124: GFLOPs: 98.4360. Time: 3526.3278 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #125: GFLOPs: 99.5298. Time: 3487.5739 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #126: GFLOPs: 89.3966. Time: 3882.8928 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #127: GFLOPs: 6.3911. Time: 54313.0293 us. Best GFLOPs: 629.3314
2024-04-29 15:19:26 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #128: GFLOPs: 85.5637. Time: 4056.8306 us. Best GFLOPs: 629.3314
2024-04-29 15:56:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:56:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 15:56:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:56:13 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 15:56:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:56:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:56:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:57:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 15:57:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9717  0.9443  0.9397  0.9382  0.9375  0.9055  0.8845  0.8656  0.8599  0.8535  0.8502  0.8123  0.7994  0.7931  0.7931  0.7888
[17 : 32]:	0.7847  0.7741  0.7741  0.7574  0.7561  0.7524  0.7451  0.7337  0.7123  0.7123  0.7014  0.6969  0.6969  0.6905  0.6759  0.6759
[33 : 48]:	0.6749  0.6712  0.6649  0.6610  0.6585  0.6580  0.6572  0.6539  0.6494  0.6492  0.6425  0.6420  0.6420  0.6402  0.6383  0.6363
[49 : 64]:	0.6325  0.6275  0.6244  0.6175  0.6171  0.6130  0.6128  0.6128  0.6122  0.6086  0.6049  0.6045  0.6036  0.5971  0.5954  0.5954
2024-04-29 15:57:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:57:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #129: GFLOPs: 635.6570. Time: 546.0768 us. Best GFLOPs: 635.6570
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #130: GFLOPs: 626.0973. Time: 554.4147 us. Best GFLOPs: 635.6570
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #131: GFLOPs: 627.3824. Time: 553.2791 us. Best GFLOPs: 635.6570
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #132: GFLOPs: 628.9904. Time: 551.8647 us. Best GFLOPs: 635.6570
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #133: GFLOPs: 627.8580. Time: 552.8600 us. Best GFLOPs: 635.6570
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #134: GFLOPs: 355.5354. Time: 976.3235 us. Best GFLOPs: 635.6570
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #135: GFLOPs: 637.0369. Time: 544.8940 us. Best GFLOPs: 637.0369
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #136: GFLOPs: 621.9453. Time: 558.1159 us. Best GFLOPs: 637.0369
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #137: GFLOPs: 637.8781. Time: 544.1754 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #138: GFLOPs: 587.1914. Time: 591.1490 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #139: GFLOPs: 631.4207. Time: 549.7405 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #140: GFLOPs: 439.0320. Time: 790.6429 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #141: GFLOPs: 606.4908. Time: 572.3377 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #142: GFLOPs: 439.7049. Time: 789.4330 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #143: GFLOPs: 448.4057. Time: 774.1150 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #144: GFLOPs: 425.9898. Time: 814.8496 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #145: GFLOPs: 439.9820. Time: 788.9358 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #146: GFLOPs: 634.7900. Time: 546.8227 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #147: GFLOPs: 620.7332. Time: 559.2058 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #148: GFLOPs: 43.1169. Time: 8050.6139 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #149: GFLOPs: 222.3576. Time: 1561.0783 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #150: GFLOPs: 438.5668. Time: 791.4816 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #151: GFLOPs: 617.5393. Time: 562.0979 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #152: GFLOPs: 426.0064. Time: 814.8176 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #153: GFLOPs: 188.9750. Time: 1836.8437 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #154: GFLOPs: 262.8719. Time: 1320.4818 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #155: GFLOPs: 459.3332. Time: 755.6989 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #156: GFLOPs: 163.3225. Time: 2125.3505 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #157: GFLOPs: 266.0087. Time: 1304.9108 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #158: GFLOPs: 605.0730. Time: 573.6788 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #159: GFLOPs: 186.9041. Time: 1857.1956 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #160: GFLOPs: 98.3974. Time: 3527.7107 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #161: GFLOPs: 91.1686. Time: 3807.4229 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #162: GFLOPs: 155.5195. Time: 2231.9876 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #163: GFLOPs: 216.8076. Time: 1601.0400 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #164: GFLOPs: 50.3247. Time: 6897.5599 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #165: GFLOPs: 56.6860. Time: 6123.5154 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #166: GFLOPs: 562.2649. Time: 617.3559 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #167: GFLOPs: 371.0118. Time: 935.5972 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #168: GFLOPs: 182.3887. Time: 1903.1752 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #169: GFLOPs: 180.8903. Time: 1918.9394 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #170: GFLOPs: 113.4162. Time: 3060.5629 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #171: GFLOPs: 96.8618. Time: 3583.6386 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #172: GFLOPs: 279.8802. Time: 1240.2361 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #173: GFLOPs: 375.7442. Time: 923.8135 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #174: GFLOPs: 407.1130. Time: 852.6321 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #175: GFLOPs: 185.6353. Time: 1869.8903 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #176: GFLOPs: 91.5622. Time: 3791.0581 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #177: GFLOPs: 94.4424. Time: 3675.4425 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #178: GFLOPs: 258.5989. Time: 1342.3011 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #179: GFLOPs: 209.3515. Time: 1658.0611 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #180: GFLOPs: 382.4495. Time: 907.6166 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #181: GFLOPs: 400.8383. Time: 865.9790 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #182: GFLOPs: 142.5458. Time: 2435.1309 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #183: GFLOPs: 100.6027. Time: 3450.3803 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #184: GFLOPs: 94.3033. Time: 3680.8617 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #185: GFLOPs: 196.1365. Time: 1769.7755 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #186: GFLOPs: 398.5254. Time: 871.0049 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #187: GFLOPs: 257.4695. Time: 1348.1890 us. Best GFLOPs: 637.8781
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #188: GFLOPs: 789.0129. Time: 439.9390 us. Best GFLOPs: 789.0129
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #189: GFLOPs: 197.6278. Time: 1756.4211 us. Best GFLOPs: 789.0129
2024-04-29 15:58:47 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #190: GFLOPs: 1.1608. Time: 299027.9140 us. Best GFLOPs: 789.0129
2024-04-29 15:58:48 [INFO] [task_scheduler.cc:121] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #191: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(48), T.int64(32), T.int64(3), T.int64(3), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(30), T.int64(30), T.int64(4)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(48), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(32), T.int64(16), T.int64(30)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) // T.int64(2) * T.int64(14) + ax2)
                        v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(14)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(4) * T.int64(24) + oc_chunk_1 * T.int64(12) + oc_chunk_2_init * T.int64(3) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) // T.int64(2) * T.int64(14) + oh_1 * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(28) + ow_2_init * T.int64(14) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(3), T.int64(3), T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(14)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(48), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(4) * T.int64(24) + oc_chunk_1 * T.int64(12) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) // T.int64(2) * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(28) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(2352)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(48), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(112))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(112) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 4, 3])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[128, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b67)
l80 = sch.fuse(l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81 = sch.fuse(l79, preserve_unit_iters=True)
sch.vectorize(loop=l81)
l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b68)
l104 = sch.fuse(l82, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110 = sch.get_loops(block=b69)
l111 = sch.fuse(l106, l107, l108, l109, l110, preserve_unit_iters=True)
l112, l113 = sch.split(loop=l111, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l112)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136 = sch.get_loops(block=b114)
b137 = sch.decompose_reduction(block=b114, loop=l121)
2024-04-29 15:58:48 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #192: GFLOPs: 186.9854. Time: 1856.3891 us. Best GFLOPs: 789.0129
2024-04-29 16:47:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:47:34 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 16:47:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:47:38 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 16:47:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:48:03 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:48:16 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:48:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:48:36 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9513  0.9496  0.8051  0.7971  0.7969  0.7963  0.7956  0.7911  0.7861  0.7828  0.7828  0.7797  0.7768  0.7750  0.7750  0.7683
[17 : 32]:	0.7680  0.7677  0.7667  0.7655  0.7635  0.7620  0.7614  0.7583  0.7468  0.7435  0.7410  0.7363  0.7272  0.7234  0.7067  0.6997
[33 : 48]:	0.6990  0.6990  0.6957  0.6924  0.6896  0.6803  0.6697  0.6692  0.6692  0.6677  0.6671  0.6526  0.6517  0.6447  0.6403  0.6281
[49 : 64]:	0.6280  0.6199  0.6199  0.6173  0.6163  0.6084  0.6000  0.5928  0.5895  0.5861  0.5837  0.5826  0.5788  0.5690  0.5659  0.5636
2024-04-29 16:48:36 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:48:36 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #193: GFLOPs: 797.5890. Time: 435.2085 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #194: GFLOPs: 789.7555. Time: 439.5254 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #195: GFLOPs: 624.2763. Time: 556.0320 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #196: GFLOPs: 633.8293. Time: 547.6515 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #197: GFLOPs: 623.9100. Time: 556.3584 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #198: GFLOPs: 639.8240. Time: 542.5204 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #199: GFLOPs: 620.9915. Time: 558.9731 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #200: GFLOPs: 630.4727. Time: 550.5672 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #201: GFLOPs: 778.3616. Time: 445.9593 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #202: GFLOPs: 637.2248. Time: 544.7333 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #203: GFLOPs: 630.8828. Time: 550.2093 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #204: GFLOPs: 632.8200. Time: 548.5250 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #205: GFLOPs: 614.6742. Time: 564.7180 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #206: GFLOPs: 632.0774. Time: 549.1694 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #207: GFLOPs: 625.5487. Time: 554.9009 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #208: GFLOPs: 595.2278. Time: 583.1676 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #209: GFLOPs: 199.5509. Time: 1739.4943 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #210: GFLOPs: 785.8343. Time: 441.7185 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #211: GFLOPs: 602.6438. Time: 575.9913 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #212: GFLOPs: 626.6747. Time: 553.9039 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #213: GFLOPs: 604.2382. Time: 574.4714 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #214: GFLOPs: 609.8353. Time: 569.1988 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #215: GFLOPs: 649.4588. Time: 534.4721 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #216: GFLOPs: 456.9424. Time: 759.6528 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #217: GFLOPs: 612.6616. Time: 566.5731 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #218: GFLOPs: 616.7876. Time: 562.7830 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #219: GFLOPs: 609.8328. Time: 569.2012 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #220: GFLOPs: 620.9998. Time: 558.9656 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #221: GFLOPs: 610.0232. Time: 569.0236 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #222: GFLOPs: 138.3003. Time: 2509.8833 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #223: GFLOPs: 587.0092. Time: 591.3325 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #224: GFLOPs: 587.9526. Time: 590.3836 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #225: GFLOPs: 564.3800. Time: 615.0423 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #226: GFLOPs: 564.3734. Time: 615.0495 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #227: GFLOPs: 586.9153. Time: 591.4270 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #228: GFLOPs: 611.5554. Time: 567.5980 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #229: GFLOPs: 587.4782. Time: 590.8604 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #230: GFLOPs: 584.5573. Time: 593.8127 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #231: GFLOPs: 565.3611. Time: 613.9750 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #232: GFLOPs: 613.9510. Time: 565.3832 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #233: GFLOPs: 608.0202. Time: 570.8981 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #234: GFLOPs: 611.7671. Time: 567.4015 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #235: GFLOPs: 558.7807. Time: 621.2054 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #236: GFLOPs: 123.0989. Time: 2819.8272 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #237: GFLOPs: 452.2243. Time: 767.5782 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #238: GFLOPs: 553.7497. Time: 626.8493 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #239: GFLOPs: 612.7309. Time: 566.5090 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #240: GFLOPs: 118.6161. Time: 2926.3943 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #241: GFLOPs: 211.6855. Time: 1639.7797 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #242: GFLOPs: 74.6596. Time: 4649.3373 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #243: GFLOPs: 74.6554. Time: 4649.5983 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #244: GFLOPs: 599.1291. Time: 579.3702 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #245: GFLOPs: 633.5622. Time: 547.8824 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #246: GFLOPs: 329.0156. Time: 1055.0186 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #247: GFLOPs: 117.2375. Time: 2960.8064 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #248: GFLOPs: 125.6676. Time: 2762.1876 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #249: GFLOPs: 92.0496. Time: 3770.9834 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #250: GFLOPs: 137.2359. Time: 2529.3488 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #251: GFLOPs: 290.6884. Time: 1194.1225 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #252: GFLOPs: 320.7172. Time: 1082.3165 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #253: GFLOPs: 160.8662. Time: 2157.8032 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #254: GFLOPs: 75.6100. Time: 4590.8950 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #255: GFLOPs: 61.0419. Time: 5686.5490 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #256: GFLOPs: 87.0183. Time: 3989.0182 us. Best GFLOPs: 797.5890
2024-04-29 16:50:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:50:10 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 16:50:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:50:14 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 16:50:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:50:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:50:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:51:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 16:51:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9944  0.9944  0.9815  0.9747  0.9729  0.9729  0.9718  0.9535  0.9494  0.9188  0.9033  0.8900  0.8054  0.8054  0.8052  0.7982
[17 : 32]:	0.7965  0.7958  0.7952  0.7923  0.7904  0.7873  0.7871  0.7867  0.7853  0.7842  0.7836  0.7834  0.7834  0.7831  0.7793  0.7789
[33 : 48]:	0.7781  0.7757  0.7738  0.7738  0.7702  0.7677  0.7619  0.7618  0.7614  0.7614  0.7614  0.7614  0.7582  0.7568  0.7552  0.7537
[49 : 64]:	0.7529  0.7511  0.7484  0.7483  0.7453  0.7450  0.7435  0.7429  0.7407  0.7388  0.7377  0.7338  0.7302  0.7293  0.7293  0.7274
2024-04-29 16:51:13 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:51:13 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #257: GFLOPs: 789.4121. Time: 439.7166 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #258: GFLOPs: 784.3395. Time: 442.5603 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #259: GFLOPs: 783.7429. Time: 442.8973 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #260: GFLOPs: 781.2319. Time: 444.3208 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #261: GFLOPs: 779.5469. Time: 445.2812 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #262: GFLOPs: 777.2920. Time: 446.5729 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #263: GFLOPs: 779.8707. Time: 445.0963 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #264: GFLOPs: 712.3457. Time: 487.2881 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #265: GFLOPs: 790.6324. Time: 439.0378 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #266: GFLOPs: 751.0717. Time: 462.1631 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #267: GFLOPs: 604.9887. Time: 573.7588 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #268: GFLOPs: 603.1326. Time: 575.5245 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #269: GFLOPs: 641.3790. Time: 541.2051 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #270: GFLOPs: 626.7898. Time: 553.8022 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #271: GFLOPs: 638.8518. Time: 543.3460 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #272: GFLOPs: 620.3803. Time: 559.5238 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #273: GFLOPs: 635.7550. Time: 545.9926 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #274: GFLOPs: 614.6041. Time: 564.7824 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #275: GFLOPs: 622.7509. Time: 557.3939 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #276: GFLOPs: 635.8044. Time: 545.9503 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #277: GFLOPs: 613.0068. Time: 566.2540 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #278: GFLOPs: 621.0154. Time: 558.9516 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #279: GFLOPs: 632.3928. Time: 548.8955 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #280: GFLOPs: 615.3203. Time: 564.1250 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #281: GFLOPs: 626.7310. Time: 553.8541 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #282: GFLOPs: 626.0557. Time: 554.4516 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #283: GFLOPs: 314.1224. Time: 1105.0393 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #284: GFLOPs: 637.8121. Time: 544.2317 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #285: GFLOPs: 635.2562. Time: 546.4214 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #286: GFLOPs: 635.3422. Time: 546.3474 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #287: GFLOPs: 624.6094. Time: 555.7354 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #288: GFLOPs: 622.1750. Time: 557.9098 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #289: GFLOPs: 626.5744. Time: 553.9926 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #290: GFLOPs: 552.1210. Time: 628.6984 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #291: GFLOPs: 478.3374. Time: 725.6752 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #292: GFLOPs: 628.1304. Time: 552.6202 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #293: GFLOPs: 619.3888. Time: 560.4195 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #294: GFLOPs: 609.0776. Time: 569.9070 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #295: GFLOPs: 587.3099. Time: 591.0297 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #296: GFLOPs: 606.8212. Time: 572.0261 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #297: GFLOPs: 648.1171. Time: 535.5785 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #298: GFLOPs: 623.9889. Time: 556.2880 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #299: GFLOPs: 628.0647. Time: 552.6781 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #300: GFLOPs: 620.5794. Time: 559.3443 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #301: GFLOPs: 631.3264. Time: 549.8227 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #302: GFLOPs: 606.4366. Time: 572.3889 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #303: GFLOPs: 611.0772. Time: 568.0421 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #304: GFLOPs: 605.6394. Time: 573.1423 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #305: GFLOPs: 639.5454. Time: 542.7568 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #306: GFLOPs: 589.9444. Time: 588.3904 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #307: GFLOPs: 611.7892. Time: 567.3810 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #308: GFLOPs: 604.4547. Time: 574.2657 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #309: GFLOPs: 605.3923. Time: 573.3762 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #310: GFLOPs: 617.0201. Time: 562.5709 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #311: GFLOPs: 553.6013. Time: 627.0173 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #312: GFLOPs: 634.1245. Time: 547.3966 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #313: GFLOPs: 568.5648. Time: 610.5154 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #314: GFLOPs: 622.1094. Time: 557.9687 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #315: GFLOPs: 605.9926. Time: 572.8083 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #316: GFLOPs: 553.0023. Time: 627.6964 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #317: GFLOPs: 617.4958. Time: 562.1376 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #318: GFLOPs: 55.8731. Time: 6212.6011 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #319: GFLOPs: 18.0954. Time: 19182.6785 us. Best GFLOPs: 797.5890
2024-04-29 16:52:41 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #320: GFLOPs: 2.5422. Time: 136542.6037 us. Best GFLOPs: 797.5890
2024-04-29 17:39:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:39:25 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:39:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 17:39:30 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:39:42 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 17:39:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 17:40:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 17:40:21 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 17:40:28 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9929  0.9901  0.9893  0.9877  0.9800  0.9754  0.9742  0.9738  0.9704  0.9704  0.9704  0.9603  0.9530  0.9439  0.9346  0.9149
[17 : 32]:	0.8114  0.8051  0.8030  0.7988  0.7988  0.7978  0.7919  0.7919  0.7893  0.7882  0.7832  0.7832  0.7828  0.7797  0.7788  0.7783
[33 : 48]:	0.7771  0.7770  0.7770  0.7762  0.7752  0.7730  0.7727  0.7726  0.7722  0.7718  0.7717  0.7709  0.7688  0.7673  0.7673  0.7662
[49 : 64]:	0.7654  0.7653  0.7625  0.7625  0.7625  0.7625  0.7623  0.7600  0.7600  0.7582  0.7576  0.7536  0.7534  0.7534  0.7519  0.7505
2024-04-29 17:40:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:40:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #321: GFLOPs: 791.1385. Time: 438.7570 us. Best GFLOPs: 797.5890
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #322: GFLOPs: 795.7571. Time: 436.2105 us. Best GFLOPs: 797.5890
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #323: GFLOPs: 790.9397. Time: 438.8673 us. Best GFLOPs: 797.5890
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #324: GFLOPs: 799.2498. Time: 434.3042 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #325: GFLOPs: 784.6240. Time: 442.3999 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #326: GFLOPs: 789.6005. Time: 439.6117 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #327: GFLOPs: 790.6522. Time: 439.0269 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #328: GFLOPs: 795.9751. Time: 436.0910 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #329: GFLOPs: 793.2244. Time: 437.6032 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #330: GFLOPs: 788.2435. Time: 440.3685 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #331: GFLOPs: 795.0202. Time: 436.6148 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #332: GFLOPs: 788.1720. Time: 440.4084 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #333: GFLOPs: 791.6680. Time: 438.4636 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #334: GFLOPs: 786.3429. Time: 441.4328 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #335: GFLOPs: 779.7982. Time: 445.1377 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #336: GFLOPs: 363.9979. Time: 953.6251 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #337: GFLOPs: 386.6793. Time: 897.6885 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #338: GFLOPs: 158.4832. Time: 2190.2487 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #339: GFLOPs: 158.6402. Time: 2188.0802 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #340: GFLOPs: 639.0103. Time: 543.2112 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #341: GFLOPs: 631.8350. Time: 549.3800 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #342: GFLOPs: 631.7017. Time: 549.4960 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #343: GFLOPs: 621.6364. Time: 558.3933 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #344: GFLOPs: 639.0739. Time: 543.1571 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #345: GFLOPs: 630.2041. Time: 550.8018 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #346: GFLOPs: 619.9834. Time: 559.8820 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #347: GFLOPs: 626.8702. Time: 553.7312 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #348: GFLOPs: 628.4493. Time: 552.3398 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #349: GFLOPs: 635.9339. Time: 545.8391 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #350: GFLOPs: 623.0879. Time: 557.0925 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #351: GFLOPs: 615.6169. Time: 563.8532 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #352: GFLOPs: 615.8382. Time: 563.6506 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #353: GFLOPs: 623.0377. Time: 557.1373 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #354: GFLOPs: 625.6512. Time: 554.8100 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #355: GFLOPs: 635.1353. Time: 546.5254 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #356: GFLOPs: 599.9076. Time: 578.6184 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #357: GFLOPs: 614.0841. Time: 565.2606 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #358: GFLOPs: 619.3893. Time: 560.4190 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #359: GFLOPs: 744.3854. Time: 466.3143 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #360: GFLOPs: 747.0364. Time: 464.6595 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #361: GFLOPs: 609.6234. Time: 569.3967 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #362: GFLOPs: 618.1390. Time: 561.5526 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #363: GFLOPs: 638.0547. Time: 544.0248 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #364: GFLOPs: 623.3055. Time: 556.8980 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #365: GFLOPs: 609.0903. Time: 569.8951 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #366: GFLOPs: 609.3544. Time: 569.6481 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #367: GFLOPs: 596.4703. Time: 581.9528 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #368: GFLOPs: 614.8685. Time: 564.5395 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #369: GFLOPs: 624.4747. Time: 555.8553 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #370: GFLOPs: 631.2007. Time: 549.9322 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #371: GFLOPs: 607.6029. Time: 571.2902 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #372: GFLOPs: 604.2986. Time: 574.4140 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #373: GFLOPs: 608.7681. Time: 570.1968 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #374: GFLOPs: 597.2068. Time: 581.2351 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #375: GFLOPs: 612.9890. Time: 566.2705 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #376: GFLOPs: 641.5247. Time: 541.0821 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #377: GFLOPs: 639.0155. Time: 543.2068 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #378: GFLOPs: 593.0343. Time: 585.3246 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #379: GFLOPs: 141.4821. Time: 2453.4375 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #380: GFLOPs: 606.1597. Time: 572.6504 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #381: GFLOPs: 629.6442. Time: 551.2916 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #382: GFLOPs: 81.4879. Time: 4259.7421 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #383: GFLOPs: 20.3732. Time: 17037.9203 us. Best GFLOPs: 799.2498
2024-04-29 17:41:59 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #384: GFLOPs: 10.1776. Time: 34105.9937 us. Best GFLOPs: 799.2498
2024-04-29 18:34:20 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:34:22 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 18:34:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 18:34:26 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 18:34:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 18:34:51 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 18:35:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 18:35:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x658fec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x62cad68)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x78faff8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x7a40228)]: 0 failure(s)
2024-04-29 18:35:25 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9985  0.9985  0.9952  0.9915  0.9915  0.9908  0.9908  0.9905  0.9905  0.9905  0.9905  0.9879  0.9879  0.9875  0.9875  0.9875
[17 : 32]:	0.9838  0.9838  0.9838  0.9816  0.9801  0.9773  0.9766  0.9671  0.9655  0.9589  0.9562  0.9492  0.9479  0.9476  0.9430  0.9172
[33 : 48]:	0.9025  0.9025  0.8999  0.8999  0.8963  0.8963  0.8953  0.8953  0.8948  0.8948  0.8948  0.8948  0.8922  0.8922  0.8892  0.8892
[49 : 64]:	0.8474  0.8451  0.8370  0.8072  0.8072  0.8012  0.7993  0.7945  0.7932  0.7929  0.7897  0.7868  0.7868  0.7830  0.7817  0.7812
2024-04-29 18:35:25 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:35:25 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #385: GFLOPs: 793.2262. Time: 437.6023 us. Best GFLOPs: 799.2498
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #386: GFLOPs: 798.2856. Time: 434.8288 us. Best GFLOPs: 799.2498
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #387: GFLOPs: 794.2834. Time: 437.0198 us. Best GFLOPs: 799.2498
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #388: GFLOPs: 577.5019. Time: 601.0674 us. Best GFLOPs: 799.2498
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #389: GFLOPs: 792.7146. Time: 437.8847 us. Best GFLOPs: 799.2498
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #390: GFLOPs: 796.9039. Time: 435.5827 us. Best GFLOPs: 799.2498
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #391: GFLOPs: 801.7419. Time: 432.9543 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #392: GFLOPs: 785.8324. Time: 441.7196 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #393: GFLOPs: 794.5963. Time: 436.8477 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #394: GFLOPs: 793.3741. Time: 437.5207 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #395: GFLOPs: 797.2388. Time: 435.3997 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #396: GFLOPs: 788.3160. Time: 440.3280 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #397: GFLOPs: 799.5004. Time: 434.1681 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #398: GFLOPs: 796.6117. Time: 435.7425 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #399: GFLOPs: 796.8683. Time: 435.6022 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #400: GFLOPs: 795.2023. Time: 436.5148 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #401: GFLOPs: 786.9803. Time: 441.0753 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #402: GFLOPs: 791.8309. Time: 438.3734 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #403: GFLOPs: 797.0719. Time: 435.4909 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #404: GFLOPs: 785.4725. Time: 441.9220 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #405: GFLOPs: 392.1322. Time: 885.2054 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #406: GFLOPs: 412.8772. Time: 840.7283 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #407: GFLOPs: 415.9055. Time: 834.6068 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #408: GFLOPs: 779.0700. Time: 445.5538 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #409: GFLOPs: 789.1937. Time: 439.8382 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #410: GFLOPs: 789.7468. Time: 439.5302 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #411: GFLOPs: 778.3570. Time: 445.9619 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #412: GFLOPs: 778.2868. Time: 446.0021 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #413: GFLOPs: 783.6455. Time: 442.9523 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #414: GFLOPs: 786.1923. Time: 441.5174 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #415: GFLOPs: 792.5660. Time: 437.9668 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #416: GFLOPs: 741.2304. Time: 468.2991 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #417: GFLOPs: 554.6877. Time: 625.7892 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #418: GFLOPs: 556.3327. Time: 623.9388 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #419: GFLOPs: 561.0305. Time: 618.7142 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #420: GFLOPs: 560.2923. Time: 619.5294 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #421: GFLOPs: 555.2441. Time: 625.1621 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #422: GFLOPs: 549.5143. Time: 631.6807 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #423: GFLOPs: 558.0581. Time: 622.0097 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #424: GFLOPs: 558.0865. Time: 621.9781 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #425: GFLOPs: 561.4572. Time: 618.2440 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #426: GFLOPs: 556.8487. Time: 623.3607 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #427: GFLOPs: 557.7813. Time: 622.3184 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #428: GFLOPs: 561.4605. Time: 618.2404 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #429: GFLOPs: 560.3025. Time: 619.5181 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #430: GFLOPs: 287.7951. Time: 1206.1274 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #431: GFLOPs: 557.2588. Time: 622.9019 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #432: GFLOPs: 558.3314. Time: 621.7052 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #433: GFLOPs: 770.4832. Time: 450.5193 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #434: GFLOPs: 553.0780. Time: 627.6105 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #435: GFLOPs: 557.6441. Time: 622.4716 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #436: GFLOPs: 557.3309. Time: 622.8213 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #437: GFLOPs: 559.9199. Time: 619.9415 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #438: GFLOPs: 523.2927. Time: 663.3335 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #439: GFLOPs: 562.7742. Time: 616.7973 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #440: GFLOPs: 633.2382. Time: 548.1627 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #441: GFLOPs: 522.4460. Time: 664.4085 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #442: GFLOPs: 634.6671. Time: 546.9286 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #443: GFLOPs: 640.2932. Time: 542.1228 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #444: GFLOPs: 636.4027. Time: 545.4370 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #445: GFLOPs: 629.7052. Time: 551.2382 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #446: GFLOPs: 6.4930. Time: 53459.9573 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #447: GFLOPs: 12.5243. Time: 27715.4952 us. Best GFLOPs: 801.7419
2024-04-29 18:36:56 [INFO] [task_scheduler.cc:131] [Task #36: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_31] Trial #448: GFLOPs: 194.2561. Time: 1786.9071 us. Best GFLOPs: 801.7419
