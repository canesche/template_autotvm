2024-04-29 19:38:21 [INFO] [task_scheduler.cc:160] Initializing Task #28: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8"
2024-04-29 19:38:21 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4), T.int64(512), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 19:38:21 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 19:38:21 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(4) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 8, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 19:38:21 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(2), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(4) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), oh_0 * T.int64(4) + oh_1 * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 8, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 19:38:21 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(4) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(4), T.int64(4), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), oh_0 * T.int64(4) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 8, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 20:07:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:07:14 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 20:07:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 20:07:16 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 20:07:19 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 20:07:22 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 20:07:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 20:07:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 20:07:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9998  0.9996  0.9981  0.9974  0.9968  0.9964  0.9963  0.9961  0.9957  0.9950  0.9950  0.9948  0.9938  0.9929  0.9928  0.9918
[17 : 32]:	0.9913  0.9911  0.9911  0.9909  0.9901  0.9896  0.9895  0.9890  0.9888  0.9870  0.9864  0.9862  0.9856  0.9855  0.9846  0.9843
[33 : 48]:	0.9842  0.9840  0.9830  0.9830  0.9824  0.9819  0.9804  0.9804  0.9793  0.9784  0.9784  0.9783  0.9783  0.9782  0.9778  0.9773
[49 : 64]:	0.9773  0.9770  0.9765  0.9762  0.9761  0.9757  0.9755  0.9747  0.9743  0.9737  0.9735  0.9734  0.9729  0.9718  0.9716  0.9711
2024-04-29 20:07:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:07:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1: GFLOPs: 67.1168. Time: 3068.1192 us. Best GFLOPs: 67.1168
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #2: GFLOPs: 39.4667. Time: 5217.6159 us. Best GFLOPs: 67.1168
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #3: GFLOPs: 81.5085. Time: 2526.3901 us. Best GFLOPs: 81.5085
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #4: GFLOPs: 56.3630. Time: 3653.5047 us. Best GFLOPs: 81.5085
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #5: GFLOPs: 24.4880. Time: 8409.1170 us. Best GFLOPs: 81.5085
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #6: GFLOPs: 103.9682. Time: 1980.6274 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #7: GFLOPs: 50.7184. Time: 4060.1110 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #8: GFLOPs: 10.6708. Time: 19297.6568 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #9: GFLOPs: 7.5937. Time: 27117.6270 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #10: GFLOPs: 3.5083. Time: 58695.8817 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #11: GFLOPs: 63.0451. Time: 3266.2676 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #12: GFLOPs: 43.8670. Time: 4694.2367 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #13: GFLOPs: 26.6628. Time: 7723.1932 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #14: GFLOPs: 4.9389. Time: 41693.7250 us. Best GFLOPs: 103.9682
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #15: GFLOPs: 104.1954. Time: 1976.3093 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #16: GFLOPs: 41.9952. Time: 4903.4703 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #17: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(4) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(8) * T.int64(4) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(4), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(4) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(8) * T.int64(4) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(3136)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(112))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(112) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 8, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 4])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 4, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #18: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(896), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(56) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(8) // T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(56) // T.int64(8) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(2) * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(56) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(8) // T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(56) // T.int64(8) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(2) * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(3136)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(112))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(112) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[16, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[256, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b66)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b102)
b121 = sch.decompose_reduction(block=b102, loop=l105)
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #19: GFLOPs: 7.8993. Time: 26068.3107 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #20: GFLOPs: 93.0208. Time: 2213.7243 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #21: GFLOPs: 14.1533. Time: 14549.4640 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #22: GFLOPs: 40.7645. Time: 5051.5132 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #23: GFLOPs: 97.5822. Time: 2110.2447 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #24: GFLOPs: 38.1504. Time: 5397.6417 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #25: GFLOPs: 97.6094. Time: 2109.6562 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #26: GFLOPs: 31.3508. Time: 6568.3261 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #27: GFLOPs: 4.9231. Time: 41827.7427 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #28: GFLOPs: 34.2348. Time: 6015.0001 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #29: GFLOPs: 3.6854. Time: 55875.3653 us. Best GFLOPs: 104.1954
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #30: GFLOPs: 134.2031. Time: 1534.4080 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #31: GFLOPs: 28.0540. Time: 7340.2031 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #32: GFLOPs: 45.2832. Time: 4547.4324 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #33: GFLOPs: 15.1544. Time: 13588.3211 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #34: GFLOPs: 70.9827. Time: 2901.0199 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #35: GFLOPs: 84.9902. Time: 2422.8960 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #36: GFLOPs: 45.2674. Time: 4549.0249 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #37: GFLOPs: 58.3613. Time: 3528.4059 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #38: GFLOPs: 47.1080. Time: 4371.2800 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #39: GFLOPs: 85.1226. Time: 2419.1254 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #40: GFLOPs: 118.7600. Time: 1733.9358 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #41: GFLOPs: 7.8210. Time: 26329.2673 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #42: GFLOPs: 103.4273. Time: 1990.9860 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #43: GFLOPs: 106.6666. Time: 1930.5229 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #44: GFLOPs: 55.8512. Time: 3686.9817 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #45: GFLOPs: 21.3250. Time: 9656.3595 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #46: GFLOPs: 56.7554. Time: 3628.2399 us. Best GFLOPs: 134.2031
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #47: GFLOPs: 153.3258. Time: 1343.0372 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #48: GFLOPs: 65.6137. Time: 3138.4025 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #49: GFLOPs: 30.2267. Time: 6812.6014 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #50: GFLOPs: 147.2002. Time: 1398.9270 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #51: GFLOPs: 30.1531. Time: 6829.2195 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #52: GFLOPs: 11.8781. Time: 17336.3702 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #53: GFLOPs: 0.7668. Time: 268562.1590 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #54: GFLOPs: 100.0053. Time: 2059.1136 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #55: GFLOPs: 87.6519. Time: 2349.3189 us. Best GFLOPs: 153.3258
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #56: GFLOPs: 172.4736. Time: 1193.9353 us. Best GFLOPs: 172.4736
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #57: GFLOPs: 96.5263. Time: 2133.3285 us. Best GFLOPs: 172.4736
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #58: GFLOPs: 50.8622. Time: 4048.6330 us. Best GFLOPs: 172.4736
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #59: GFLOPs: 157.6795. Time: 1305.9547 us. Best GFLOPs: 172.4736
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #60: GFLOPs: 134.7407. Time: 1528.2853 us. Best GFLOPs: 172.4736
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #61: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(32) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + oh_2_init * T.int64(14) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(512), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(32) + oc_chunk_1 * T.int64(8) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(28), T.int64(28), T.int64(1)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), ax0)
                    v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(32) + ax1)
                    v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                    v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) + ax4)
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 8, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 14])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[512, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b101)
b124 = sch.decompose_reduction(block=b101, loop=l108)
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #62: GFLOPs: 140.6162. Time: 1464.4285 us. Best GFLOPs: 172.4736
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #63: GFLOPs: 15.5632. Time: 13231.3390 us. Best GFLOPs: 172.4736
2024-04-29 20:33:01 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #64: GFLOPs: 5.3938. Time: 38177.5647 us. Best GFLOPs: 172.4736
2024-04-29 21:08:39 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:08:40 [INFO] [evolutionary_search.cc:715] Picked top 61 candidate(s) from database
2024-04-29 21:08:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 21:08:42 [INFO] [evolutionary_search.cc:723] Sampled 451 candidate(s)
2024-04-29 21:08:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 21:08:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 21:08:58 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 21:09:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 21:09:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9727  0.9092  0.9092  0.8823  0.8497  0.8304  0.8163  0.8046  0.8016  0.7708  0.7552  0.7548  0.7545  0.7514  0.7493  0.7493
[17 : 32]:	0.7486  0.7475  0.7411  0.7411  0.7409  0.7409  0.7401  0.7396  0.7396  0.7396  0.7373  0.7349  0.7349  0.7340  0.7299  0.7296
[33 : 48]:	0.7296  0.7274  0.7270  0.7268  0.7247  0.7203  0.7147  0.7145  0.7135  0.7130  0.7128  0.7128  0.7108  0.7108  0.7101  0.7099
[49 : 64]:	0.7046  0.7044  0.7043  0.7026  0.7010  0.7003  0.6981  0.6971  0.6971  0.6970  0.6954  0.6954  0.6951  0.6947  0.6938  0.6937
2024-04-29 21:09:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:09:07 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #65: GFLOPs: 87.5225. Time: 2352.7920 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #66: GFLOPs: 143.5699. Time: 1434.3003 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #67: GFLOPs: 80.3293. Time: 2563.4760 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #68: GFLOPs: 161.5451. Time: 1274.7049 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #69: GFLOPs: 141.8851. Time: 1451.3314 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #70: GFLOPs: 167.1992. Time: 1231.5983 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #71: GFLOPs: 150.1474. Time: 1371.4677 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #72: GFLOPs: 137.8399. Time: 1493.9238 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #73: GFLOPs: 99.6522. Time: 2066.4093 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #74: GFLOPs: 56.7833. Time: 3626.4560 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #75: GFLOPs: 144.0863. Time: 1429.1590 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #76: GFLOPs: 115.2768. Time: 1786.3293 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #77: GFLOPs: 79.4155. Time: 2592.9740 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #78: GFLOPs: 71.5376. Time: 2878.5186 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #79: GFLOPs: 93.5114. Time: 2202.1095 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #80: GFLOPs: 82.4035. Time: 2498.9520 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #81: GFLOPs: 123.9436. Time: 1661.4190 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #82: GFLOPs: 64.0430. Time: 3215.3757 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #83: GFLOPs: 166.3392. Time: 1237.9664 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #84: GFLOPs: 120.3809. Time: 1710.5897 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #85: GFLOPs: 106.2666. Time: 1937.7891 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #86: GFLOPs: 82.5785. Time: 2493.6544 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #87: GFLOPs: 116.1530. Time: 1772.8545 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #88: GFLOPs: 89.3820. Time: 2303.8465 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #89: GFLOPs: 84.8977. Time: 2425.5338 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #90: GFLOPs: 91.6523. Time: 2246.7761 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #91: GFLOPs: 123.5181. Time: 1667.1432 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #92: GFLOPs: 75.0832. Time: 2742.5878 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #93: GFLOPs: 80.4442. Time: 2559.8160 us. Best GFLOPs: 172.4736
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #94: GFLOPs: 182.7650. Time: 1126.7054 us. Best GFLOPs: 182.7650
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #95: GFLOPs: 129.1205. Time: 1594.8067 us. Best GFLOPs: 182.7650
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #96: GFLOPs: 51.0384. Time: 4034.6517 us. Best GFLOPs: 182.7650
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #97: GFLOPs: 49.8163. Time: 4133.6303 us. Best GFLOPs: 182.7650
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #98: GFLOPs: 78.5989. Time: 2619.9149 us. Best GFLOPs: 182.7650
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #99: GFLOPs: 79.5140. Time: 2589.7611 us. Best GFLOPs: 182.7650
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #100: GFLOPs: 72.1439. Time: 2854.3286 us. Best GFLOPs: 182.7650
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #101: GFLOPs: 64.8988. Time: 3172.9739 us. Best GFLOPs: 182.7650
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #102: GFLOPs: 221.4679. Time: 929.8064 us. Best GFLOPs: 221.4679
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #103: GFLOPs: 71.5546. Time: 2877.8358 us. Best GFLOPs: 221.4679
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #104: GFLOPs: 83.6579. Time: 2461.4808 us. Best GFLOPs: 221.4679
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #105: GFLOPs: 134.2172. Time: 1534.2472 us. Best GFLOPs: 221.4679
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #106: GFLOPs: 87.1655. Time: 2362.4281 us. Best GFLOPs: 221.4679
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #107: GFLOPs: 340.0749. Time: 605.5205 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #108: GFLOPs: 339.7749. Time: 606.0550 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #109: GFLOPs: 79.4658. Time: 2591.3324 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #110: GFLOPs: 134.9892. Time: 1525.4723 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #111: GFLOPs: 178.8168. Time: 1151.5824 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #112: GFLOPs: 75.3424. Time: 2733.1520 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #113: GFLOPs: 87.5158. Time: 2352.9717 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #114: GFLOPs: 118.3154. Time: 1740.4521 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #115: GFLOPs: 199.3712. Time: 1032.8587 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #116: GFLOPs: 167.8859. Time: 1226.5610 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #117: GFLOPs: 61.6061. Time: 3342.5637 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #118: GFLOPs: 179.7204. Time: 1145.7925 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #119: GFLOPs: 86.1361. Time: 2390.6624 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #120: GFLOPs: 165.0279. Time: 1247.8029 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #121: GFLOPs: 88.3156. Time: 2331.6636 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #122: GFLOPs: 155.6625. Time: 1322.8769 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #123: GFLOPs: 162.5626. Time: 1266.7262 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #124: GFLOPs: 99.2043. Time: 2075.7404 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #125: GFLOPs: 61.6473. Time: 3340.3303 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #126: GFLOPs: 41.0701. Time: 5013.9205 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #127: GFLOPs: 151.5630. Time: 1358.6580 us. Best GFLOPs: 340.0749
2024-04-29 21:10:28 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #128: GFLOPs: 66.2338. Time: 3109.0207 us. Best GFLOPs: 340.0749
2024-04-29 22:28:38 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 22:28:39 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 22:28:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 22:28:41 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 22:28:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 22:28:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 22:28:57 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 22:29:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 22:29:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9798  0.9638  0.9448  0.9366  0.9282  0.9144  0.9038  0.8997  0.8997  0.8995  0.8950  0.8944  0.8921  0.8910  0.8890  0.8832
[17 : 32]:	0.8832  0.8808  0.8788  0.8704  0.8701  0.8701  0.8643  0.8535  0.7686  0.7681  0.7591  0.7517  0.7229  0.7130  0.7120  0.6974
[33 : 48]:	0.6951  0.6941  0.6874  0.6857  0.6857  0.6838  0.6816  0.6809  0.6701  0.6658  0.6590  0.6502  0.6502  0.6492  0.6447  0.6400
[49 : 64]:	0.6334  0.6306  0.6279  0.6279  0.6241  0.6228  0.6184  0.6183  0.6064  0.6043  0.5939  0.5895  0.5824  0.5784  0.5753  0.5698
2024-04-29 22:29:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 22:29:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #129: GFLOPs: 344.9117. Time: 597.0291 us. Best GFLOPs: 344.9117
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #130: GFLOPs: 120.2199. Time: 1712.8799 us. Best GFLOPs: 344.9117
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #131: GFLOPs: 343.1778. Time: 600.0454 us. Best GFLOPs: 344.9117
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #132: GFLOPs: 341.2976. Time: 603.3512 us. Best GFLOPs: 344.9117
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #133: GFLOPs: 336.7408. Time: 611.5157 us. Best GFLOPs: 344.9117
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #134: GFLOPs: 115.0074. Time: 1790.5133 us. Best GFLOPs: 344.9117
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #135: GFLOPs: 372.3271. Time: 553.0683 us. Best GFLOPs: 372.3271
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #136: GFLOPs: 119.9272. Time: 1717.0609 us. Best GFLOPs: 372.3271
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #137: GFLOPs: 120.5857. Time: 1707.6849 us. Best GFLOPs: 372.3271
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #138: GFLOPs: 168.0686. Time: 1225.2278 us. Best GFLOPs: 372.3271
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #139: GFLOPs: 120.0444. Time: 1715.3842 us. Best GFLOPs: 372.3271
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #140: GFLOPs: 173.9926. Time: 1183.5119 us. Best GFLOPs: 372.3271
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #141: GFLOPs: 119.4525. Time: 1723.8851 us. Best GFLOPs: 372.3271
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #142: GFLOPs: 373.3780. Time: 551.5117 us. Best GFLOPs: 373.3780
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #143: GFLOPs: 163.4603. Time: 1259.7694 us. Best GFLOPs: 373.3780
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #144: GFLOPs: 117.2039. Time: 1756.9578 us. Best GFLOPs: 373.3780
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #145: GFLOPs: 117.6141. Time: 1750.8298 us. Best GFLOPs: 373.3780
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #146: GFLOPs: 416.6653. Time: 494.2152 us. Best GFLOPs: 416.6653
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #147: GFLOPs: 170.6758. Time: 1206.5114 us. Best GFLOPs: 416.6653
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #148: GFLOPs: 122.5564. Time: 1680.2247 us. Best GFLOPs: 416.6653
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #149: GFLOPs: 120.3980. Time: 1710.3467 us. Best GFLOPs: 416.6653
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #150: GFLOPs: 116.5994. Time: 1766.0658 us. Best GFLOPs: 416.6653
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #151: GFLOPs: 417.2661. Time: 493.5035 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #152: GFLOPs: 116.1632. Time: 1772.6982 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #153: GFLOPs: 240.8763. Time: 854.8881 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #154: GFLOPs: 73.0425. Time: 2819.2136 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #155: GFLOPs: 103.7809. Time: 1984.2021 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #156: GFLOPs: 126.4981. Time: 1627.8689 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #157: GFLOPs: 75.0079. Time: 2745.3426 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #158: GFLOPs: 151.6079. Time: 1358.2557 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #159: GFLOPs: 36.4082. Time: 5655.9322 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #160: GFLOPs: 152.9814. Time: 1346.0614 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #161: GFLOPs: 124.9012. Time: 1648.6815 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #162: GFLOPs: 130.0009. Time: 1584.0073 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #163: GFLOPs: 96.8051. Time: 2127.1836 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #164: GFLOPs: 294.5859. Time: 699.0230 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #165: GFLOPs: 291.5596. Time: 706.2785 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #166: GFLOPs: 124.3886. Time: 1655.4754 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #167: GFLOPs: 223.6962. Time: 920.5444 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #168: GFLOPs: 129.6515. Time: 1588.2757 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #169: GFLOPs: 134.1924. Time: 1534.5308 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #170: GFLOPs: 77.8402. Time: 2645.4484 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #171: GFLOPs: 189.9464. Time: 1084.1074 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #172: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(4) * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(14) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(14), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(4) * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(14) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(1)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(4) * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(14) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 8, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 2, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 14, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #173: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(28) * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(14) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(14), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(28) * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(14) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(1)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(28) * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(14) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 8, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 14, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #174: GFLOPs: 63.7424. Time: 3230.5384 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #175: GFLOPs: 158.0520. Time: 1302.8768 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #176: GFLOPs: 142.7128. Time: 1442.9145 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #177: GFLOPs: 293.4117. Time: 701.8203 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #178: GFLOPs: 243.8820. Time: 844.3521 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #179: GFLOPs: 191.0048. Time: 1078.1003 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #180: GFLOPs: 191.5618. Time: 1074.9655 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #181: GFLOPs: 133.0768. Time: 1547.3946 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #182: GFLOPs: 206.6189. Time: 996.6285 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #183: GFLOPs: 74.0471. Time: 2780.9634 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #184: GFLOPs: 301.3087. Time: 683.4263 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #185: GFLOPs: 147.3198. Time: 1397.7907 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #186: GFLOPs: 77.7161. Time: 2649.6740 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #187: GFLOPs: 62.2877. Time: 3305.9875 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #188: GFLOPs: 35.7443. Time: 5760.9811 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #189: GFLOPs: 104.2638. Time: 1975.0130 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #190: GFLOPs: 58.7131. Time: 3507.2606 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #191: GFLOPs: 11.0319. Time: 18666.1433 us. Best GFLOPs: 417.2661
2024-04-29 22:30:34 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #192: GFLOPs: 6.9205. Time: 29755.4180 us. Best GFLOPs: 417.2661
2024-04-29 23:45:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 23:45:34 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 23:45:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:45:36 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 23:45:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:45:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:45:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:45:57 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:46:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9965  0.8936  0.8541  0.8326  0.8188  0.8174  0.8158  0.7984  0.7926  0.7926  0.7926  0.7909  0.7871  0.7871  0.7781  0.7752
[17 : 32]:	0.7752  0.7752  0.7530  0.7483  0.7340  0.7312  0.7306  0.7306  0.7267  0.7233  0.7233  0.7233  0.7232  0.7232  0.7041  0.6981
[33 : 48]:	0.6981  0.6974  0.6898  0.6842  0.6828  0.6826  0.6797  0.6768  0.6724  0.6717  0.6665  0.6548  0.6525  0.6437  0.6216  0.6205
[49 : 64]:	0.6203  0.6138  0.6063  0.6038  0.6026  0.6025  0.6002  0.5980  0.5973  0.5971  0.5970  0.5911  0.5898  0.5878  0.5826  0.5802
2024-04-29 23:46:01 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 23:46:01 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #193: GFLOPs: 419.4258. Time: 490.9624 us. Best GFLOPs: 419.4258
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #194: GFLOPs: 422.2128. Time: 487.7216 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #195: GFLOPs: 371.8519. Time: 553.7751 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #196: GFLOPs: 406.4680. Time: 506.6138 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #197: GFLOPs: 343.4388. Time: 599.5896 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #198: GFLOPs: 396.5400. Time: 519.2976 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #199: GFLOPs: 342.6794. Time: 600.9182 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #200: GFLOPs: 358.3062. Time: 574.7104 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #201: GFLOPs: 342.0600. Time: 602.0064 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #202: GFLOPs: 343.2767. Time: 599.8727 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #203: GFLOPs: 341.8087. Time: 602.4490 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #204: GFLOPs: 417.6713. Time: 493.0248 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #205: GFLOPs: 417.4453. Time: 493.2917 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #206: GFLOPs: 415.5015. Time: 495.5994 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #207: GFLOPs: 392.3558. Time: 524.8356 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #208: GFLOPs: 412.6693. Time: 499.0008 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #209: GFLOPs: 411.6293. Time: 500.2615 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #210: GFLOPs: 414.0297. Time: 497.3612 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #211: GFLOPs: 139.6825. Time: 1474.2173 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #212: GFLOPs: 131.2029. Time: 1569.4954 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #213: GFLOPs: 345.4536. Time: 596.0925 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #214: GFLOPs: 392.9657. Time: 524.0211 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #215: GFLOPs: 416.2838. Time: 494.6681 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #216: GFLOPs: 417.4478. Time: 493.2888 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #217: GFLOPs: 417.6019. Time: 493.1067 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #218: GFLOPs: 343.7816. Time: 598.9916 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #219: GFLOPs: 343.1242. Time: 600.1392 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #220: GFLOPs: 343.3238. Time: 599.7903 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #221: GFLOPs: 344.2646. Time: 598.1512 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #222: GFLOPs: 345.6968. Time: 595.6732 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #223: GFLOPs: 304.2966. Time: 676.7159 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #224: GFLOPs: 343.8106. Time: 598.9411 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #225: GFLOPs: 337.4497. Time: 610.2311 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #226: GFLOPs: 294.4379. Time: 699.3744 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #227: GFLOPs: 345.1403. Time: 596.6337 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #228: GFLOPs: 417.2032. Time: 493.5779 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #229: GFLOPs: 341.7290. Time: 602.5896 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #230: GFLOPs: 179.4336. Time: 1147.6238 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #231: GFLOPs: 227.8056. Time: 903.9388 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #232: GFLOPs: 354.8840. Time: 580.2525 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #233: GFLOPs: 404.2495. Time: 509.3941 us. Best GFLOPs: 422.2128
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #234: GFLOPs: 451.6747. Time: 455.9084 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #235: GFLOPs: 73.6003. Time: 2797.8464 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #236: GFLOPs: 344.8207. Time: 597.1865 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #237: GFLOPs: 247.0809. Time: 833.4207 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #238: GFLOPs: 303.8413. Time: 677.7299 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #239: GFLOPs: 437.2751. Time: 470.9217 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #240: GFLOPs: 144.7404. Time: 1422.7013 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #241: GFLOPs: 119.9332. Time: 1716.9745 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #242: GFLOPs: 81.5531. Time: 2525.0091 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #243: GFLOPs: 321.4234. Time: 640.6575 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #244: GFLOPs: 155.5308. Time: 1323.9974 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #245: GFLOPs: 337.3389. Time: 610.4315 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #246: GFLOPs: 169.0031. Time: 1218.4529 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #247: GFLOPs: 157.5726. Time: 1306.8408 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #248: GFLOPs: 126.2401. Time: 1631.1952 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #249: GFLOPs: 135.6953. Time: 1517.5343 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #250: GFLOPs: 138.9587. Time: 1481.8959 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #251: GFLOPs: 137.6917. Time: 1495.5313 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #252: GFLOPs: 240.5080. Time: 856.1972 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #253: GFLOPs: 167.8944. Time: 1226.4986 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #254: GFLOPs: 39.6090. Time: 5198.8754 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #255: GFLOPs: 42.1661. Time: 4883.5981 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #256: GFLOPs: 72.6825. Time: 2833.1774 us. Best GFLOPs: 451.6747
2024-04-29 23:47:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 23:47:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 23:47:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:47:34 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 23:47:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:47:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:47:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:47:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-29 23:47:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9432  0.9432  0.9349  0.9246  0.9246  0.9144  0.9115  0.9115  0.9083  0.9053  0.9053  0.9053  0.9034  0.8994  0.8950  0.8950
[17 : 32]:	0.8950  0.8950  0.8950  0.8945  0.8932  0.8911  0.8823  0.8792  0.8782  0.8782  0.8763  0.8752  0.8738  0.8588  0.8536  0.8533
[33 : 48]:	0.8483  0.8482  0.8482  0.8448  0.8408  0.8342  0.8311  0.8301  0.8262  0.8253  0.8236  0.8164  0.8133  0.8133  0.7998  0.7998
[49 : 64]:	0.7998  0.7998  0.7975  0.7920  0.7904  0.7855  0.7849  0.7848  0.7759  0.7744  0.7743  0.7740  0.7729  0.7699  0.7683  0.7683
2024-04-29 23:47:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 23:47:59 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #257: GFLOPs: 211.3640. Time: 974.2546 us. Best GFLOPs: 451.6747
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #258: GFLOPs: 416.3467. Time: 494.5934 us. Best GFLOPs: 451.6747
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #259: GFLOPs: 418.7683. Time: 491.7333 us. Best GFLOPs: 451.6747
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #260: GFLOPs: 417.4338. Time: 493.3053 us. Best GFLOPs: 451.6747
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #261: GFLOPs: 414.2379. Time: 497.1112 us. Best GFLOPs: 451.6747
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #262: GFLOPs: 410.2963. Time: 501.8869 us. Best GFLOPs: 451.6747
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #263: GFLOPs: 413.4946. Time: 498.0048 us. Best GFLOPs: 451.6747
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #264: GFLOPs: 411.9786. Time: 499.8374 us. Best GFLOPs: 451.6747
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #265: GFLOPs: 455.5408. Time: 452.0392 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #266: GFLOPs: 417.5067. Time: 493.2191 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #267: GFLOPs: 414.6555. Time: 496.6105 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #268: GFLOPs: 409.8276. Time: 502.4608 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #269: GFLOPs: 404.3928. Time: 509.2135 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #270: GFLOPs: 410.5896. Time: 501.5283 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #271: GFLOPs: 413.6662. Time: 497.7982 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #272: GFLOPs: 419.8759. Time: 490.4361 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #273: GFLOPs: 416.8025. Time: 494.0525 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #274: GFLOPs: 411.7286. Time: 500.1409 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #275: GFLOPs: 417.0396. Time: 493.7716 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #276: GFLOPs: 414.6545. Time: 496.6118 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #277: GFLOPs: 407.1769. Time: 505.7318 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #278: GFLOPs: 414.0441. Time: 497.3439 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #279: GFLOPs: 417.2197. Time: 493.5585 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #280: GFLOPs: 414.1116. Time: 497.2628 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #281: GFLOPs: 412.9816. Time: 498.6234 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #282: GFLOPs: 412.3929. Time: 499.3352 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #283: GFLOPs: 411.2091. Time: 500.7727 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #284: GFLOPs: 416.9141. Time: 493.9202 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #285: GFLOPs: 420.4633. Time: 489.7510 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #286: GFLOPs: 412.9321. Time: 498.6832 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #287: GFLOPs: 413.4235. Time: 498.0905 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #288: GFLOPs: 419.6028. Time: 490.7554 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #289: GFLOPs: 406.0338. Time: 507.1556 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #290: GFLOPs: 113.8629. Time: 1808.5114 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #291: GFLOPs: 114.3843. Time: 1800.2676 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #292: GFLOPs: 394.7239. Time: 521.6870 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #293: GFLOPs: 370.9390. Time: 555.1380 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #294: GFLOPs: 416.1408. Time: 494.8381 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #295: GFLOPs: 408.3264. Time: 504.3080 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #296: GFLOPs: 410.6201. Time: 501.4911 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #297: GFLOPs: 331.6800. Time: 620.8463 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #298: GFLOPs: 369.2830. Time: 557.6274 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #299: GFLOPs: 411.2577. Time: 500.7135 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #300: GFLOPs: 282.0237. Time: 730.1596 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #301: GFLOPs: 363.3466. Time: 566.7380 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #302: GFLOPs: 364.0643. Time: 565.6207 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #303: GFLOPs: 366.5859. Time: 561.7300 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #304: GFLOPs: 367.4374. Time: 560.4283 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #305: GFLOPs: 368.0776. Time: 559.4535 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #306: GFLOPs: 369.4778. Time: 557.3333 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #307: GFLOPs: 279.4581. Time: 736.8630 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #308: GFLOPs: 340.4099. Time: 604.9245 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #309: GFLOPs: 410.3812. Time: 501.7829 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #310: GFLOPs: 369.0817. Time: 557.9316 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #311: GFLOPs: 369.7327. Time: 556.9491 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #312: GFLOPs: 370.8091. Time: 555.3324 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #313: GFLOPs: 340.2250. Time: 605.2532 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #314: GFLOPs: 345.2956. Time: 596.3653 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #315: GFLOPs: 337.4126. Time: 610.2982 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #316: GFLOPs: 341.3671. Time: 603.2284 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #317: GFLOPs: 335.1069. Time: 614.4973 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #318: GFLOPs: 39.2717. Time: 5243.5286 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #319: GFLOPs: 3.3687. Time: 61128.6297 us. Best GFLOPs: 455.5408
2024-04-29 23:49:31 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #320: GFLOPs: 3.0751. Time: 66964.5057 us. Best GFLOPs: 455.5408
2024-04-30 01:09:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 01:09:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 01:09:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-30 01:09:48 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 01:09:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-30 01:09:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-30 01:10:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-30 01:10:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa74c848)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xcf3e8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5a58308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xa7ba078)]: 0 failure(s)
2024-04-30 01:10:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9290  0.9290  0.9203  0.9167  0.9154  0.9146  0.9146  0.9088  0.9088  0.9080  0.9080  0.9080  0.9080  0.9080  0.9050  0.9041
[17 : 32]:	0.9033  0.9015  0.9015  0.9015  0.9015  0.9015  0.9015  0.8933  0.8917  0.8901  0.8901  0.8896  0.8896  0.8896  0.8896  0.8869
[33 : 48]:	0.8864  0.8853  0.8820  0.8814  0.8766  0.8733  0.8733  0.8733  0.8730  0.8730  0.8714  0.8684  0.8668  0.8609  0.8538  0.8538
[49 : 64]:	0.8538  0.8521  0.8521  0.8503  0.8489  0.8483  0.8419  0.8314  0.8150  0.8067  0.8067  0.8009  0.7969  0.7921  0.7921  0.7674
2024-04-30 01:10:13 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 01:10:13 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #321: GFLOPs: 229.9030. Time: 895.6921 us. Best GFLOPs: 455.5408
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #322: GFLOPs: 455.4132. Time: 452.1659 us. Best GFLOPs: 455.5408
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #323: GFLOPs: 460.3748. Time: 447.2928 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #324: GFLOPs: 413.1342. Time: 498.4392 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #325: GFLOPs: 457.8646. Time: 449.7449 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #326: GFLOPs: 414.9480. Time: 496.2605 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #327: GFLOPs: 410.4281. Time: 501.7256 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #328: GFLOPs: 448.7326. Time: 458.8976 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #329: GFLOPs: 296.7429. Time: 693.9419 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #330: GFLOPs: 409.0228. Time: 503.4494 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #331: GFLOPs: 412.9684. Time: 498.6394 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #332: GFLOPs: 408.2068. Time: 504.4558 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #333: GFLOPs: 408.9128. Time: 503.5849 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #334: GFLOPs: 409.8106. Time: 502.4817 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #335: GFLOPs: 416.1203. Time: 494.8624 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #336: GFLOPs: 417.2954. Time: 493.4689 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #337: GFLOPs: 406.7262. Time: 506.2922 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #338: GFLOPs: 415.4662. Time: 495.6416 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #339: GFLOPs: 420.5627. Time: 489.6352 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #340: GFLOPs: 421.0271. Time: 489.0951 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #341: GFLOPs: 416.1181. Time: 494.8651 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #342: GFLOPs: 413.9159. Time: 497.4979 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #343: GFLOPs: 415.5904. Time: 495.4934 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #344: GFLOPs: 414.9384. Time: 496.2720 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #345: GFLOPs: 414.1494. Time: 497.2174 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #346: GFLOPs: 413.5302. Time: 497.9620 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #347: GFLOPs: 413.9433. Time: 497.4650 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #348: GFLOPs: 410.2820. Time: 501.9043 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #349: GFLOPs: 410.6801. Time: 501.4178 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #350: GFLOPs: 405.6862. Time: 507.5901 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #351: GFLOPs: 406.8952. Time: 506.0820 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #352: GFLOPs: 406.7660. Time: 506.2426 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #353: GFLOPs: 225.1542. Time: 914.5833 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #354: GFLOPs: 409.3030. Time: 503.1048 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #355: GFLOPs: 446.2165. Time: 461.4852 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #356: GFLOPs: 408.6231. Time: 503.9420 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #357: GFLOPs: 112.3549. Time: 1832.7841 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #358: GFLOPs: 395.4985. Time: 520.6652 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #359: GFLOPs: 393.8978. Time: 522.7810 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #360: GFLOPs: 392.7537. Time: 524.3039 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #361: GFLOPs: 88.8937. Time: 2316.5000 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #362: GFLOPs: 89.0914. Time: 2311.3592 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #363: GFLOPs: 412.2872. Time: 499.4632 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #364: GFLOPs: 392.1205. Time: 525.1505 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #365: GFLOPs: 407.1848. Time: 505.7220 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #366: GFLOPs: 415.4664. Time: 495.6412 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #367: GFLOPs: 420.6090. Time: 489.5813 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #368: GFLOPs: 415.6078. Time: 495.4727 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #369: GFLOPs: 414.7139. Time: 496.5406 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #370: GFLOPs: 408.4546. Time: 504.1499 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #371: GFLOPs: 415.4951. Time: 495.6071 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #372: GFLOPs: 397.6955. Time: 517.7889 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #373: GFLOPs: 443.2807. Time: 464.5415 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #374: GFLOPs: 407.5879. Time: 505.2218 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #375: GFLOPs: 446.7215. Time: 460.9635 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #376: GFLOPs: 90.0227. Time: 2287.4496 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #377: GFLOPs: 368.8252. Time: 558.3196 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #378: GFLOPs: 369.8964. Time: 556.7026 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #379: GFLOPs: 366.5799. Time: 561.7393 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #380: GFLOPs: 372.3226. Time: 553.0750 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #381: GFLOPs: 201.3378. Time: 1022.7704 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #382: GFLOPs: 13.7307. Time: 14997.2070 us. Best GFLOPs: 460.3748
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:121] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #383: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(896), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(64) // T.int64(2) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(64) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(2) * T.int64(14) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(64) // T.int64(2) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(64) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(2) * T.int64(14) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(3136)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(112))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(112) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 32, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 14, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b103)
b122 = sch.decompose_reduction(block=b103, loop=l106)
2024-04-30 01:11:55 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #384: GFLOPs: 67.4094. Time: 3054.8028 us. Best GFLOPs: 460.3748
