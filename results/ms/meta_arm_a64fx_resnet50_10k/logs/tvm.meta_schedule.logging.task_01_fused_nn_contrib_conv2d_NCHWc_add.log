2024-04-29 19:37:00 [INFO] [task_scheduler.cc:160] Initializing Task #1: "fused_nn_contrib_conv2d_NCHWc_add"
2024-04-29 19:37:00 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1024), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32), T.int64(1024), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)], p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)] * p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
2024-04-29 19:37:01 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 19:37:01 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1024), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(7), T.int64(7), T.int64(2), T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)], p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)] * p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)):
                with T.block("T_add"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 2, 1, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-29 19:37:01 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1024), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(7), T.int64(7), T.int64(2)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)], p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)] * p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), oh_1 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), ow_1 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 2, 1, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 19:37:01 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1024), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(7), T.int64(2), T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)], p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)] * p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(8)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 2, 1, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 2, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 19:39:35 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:39:35 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 19:39:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 19:39:37 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 19:39:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 19:39:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 19:39:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 19:39:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 19:39:50 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9994  0.9982  0.9980  0.9976  0.9970  0.9969  0.9967  0.9962  0.9959  0.9948  0.9947  0.9937  0.9936  0.9927  0.9917
[17 : 32]:	0.9910  0.9907  0.9902  0.9898  0.9895  0.9891  0.9891  0.9884  0.9882  0.9879  0.9872  0.9872  0.9869  0.9865  0.9857  0.9845
[33 : 48]:	0.9844  0.9842  0.9841  0.9839  0.9839  0.9824  0.9820  0.9811  0.9809  0.9804  0.9803  0.9803  0.9801  0.9797  0.9786  0.9782
[49 : 64]:	0.9780  0.9777  0.9770  0.9767  0.9764  0.9750  0.9747  0.9744  0.9737  0.9729  0.9727  0.9722  0.9720  0.9719  0.9717  0.9713
2024-04-29 19:39:50 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 19:39:51 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #1: GFLOPs: 21.8259. Time: 9420.9819 us. Best GFLOPs: 21.8259
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #2: GFLOPs: 79.4758. Time: 2587.2171 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #3: GFLOPs: 3.2136. Time: 63984.1570 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #4: GFLOPs: 12.2082. Time: 16842.8643 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #5: GFLOPs: 13.0831. Time: 15716.5713 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #6: GFLOPs: 56.6468. Time: 3629.8853 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #7: GFLOPs: 48.3953. Time: 4248.7888 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #8: GFLOPs: 3.1707. Time: 64850.1257 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #9: GFLOPs: 11.8706. Time: 17321.8255 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #10: GFLOPs: 3.1856. Time: 64547.3570 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #11: GFLOPs: 5.7396. Time: 35824.8983 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #12: GFLOPs: 0.7929. Time: 259340.1850 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #13: GFLOPs: 20.0567. Time: 10251.9955 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #14: GFLOPs: 77.3081. Time: 2659.7638 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:121] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #15: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1024), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(7), oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(7), ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(512), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(7), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)], p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)] * p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_add"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(1568))
                    v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(1568) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 8, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 2, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[512, 2])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, b65 = sch.get_child_blocks(b63)
l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91 = sch.get_loops(block=b64)
l92 = sch.fuse(l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l92)
l93 = sch.fuse(l91, preserve_unit_iters=True)
sch.vectorize(loop=l93)
sch.annotate(block_or_loop=l92, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l92, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b65)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #16: GFLOPs: 46.2727. Time: 4443.6875 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #17: GFLOPs: 47.4775. Time: 4330.9156 us. Best GFLOPs: 79.4758
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #18: GFLOPs: 204.1564. Time: 1007.1752 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #19: GFLOPs: 72.6097. Time: 2831.8710 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #20: GFLOPs: 13.6501. Time: 15063.7590 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #21: GFLOPs: 33.5947. Time: 6120.6449 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #22: GFLOPs: 44.3174. Time: 4639.7451 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #23: GFLOPs: 16.9586. Time: 12124.9217 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #24: GFLOPs: 7.3367. Time: 28026.5808 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #25: GFLOPs: 17.4661. Time: 11772.5751 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #26: GFLOPs: 26.8153. Time: 7668.0489 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #27: GFLOPs: 42.8742. Time: 4795.9192 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #28: GFLOPs: 53.6817. Time: 3830.3773 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #29: GFLOPs: 66.1966. Time: 3106.2228 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #30: GFLOPs: 7.3574. Time: 27947.4015 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #31: GFLOPs: 104.9899. Time: 1958.4857 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #32: GFLOPs: 18.3488. Time: 11206.2470 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #33: GFLOPs: 7.2734. Time: 28270.4208 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #34: GFLOPs: 77.0482. Time: 2668.7367 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #35: GFLOPs: 5.9595. Time: 34503.1393 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #36: GFLOPs: 14.6502. Time: 14035.3849 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #37: GFLOPs: 82.9184. Time: 2479.8017 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #38: GFLOPs: 20.2302. Time: 10164.0758 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #39: GFLOPs: 83.7194. Time: 2456.0771 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #40: GFLOPs: 21.7548. Time: 9451.7455 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #41: GFLOPs: 82.5675. Time: 2490.3420 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #42: GFLOPs: 46.4250. Time: 4429.1047 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #43: GFLOPs: 3.7062. Time: 55480.9290 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #44: GFLOPs: 14.1464. Time: 14535.1884 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #45: GFLOPs: 5.3170. Time: 38672.3167 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #46: GFLOPs: 8.6203. Time: 23853.2136 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #47: GFLOPs: 10.0290. Time: 20502.7366 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #48: GFLOPs: 37.9046. Time: 5424.7051 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #49: GFLOPs: 36.8587. Time: 5578.6278 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #50: GFLOPs: 24.5536. Time: 8374.3951 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #51: GFLOPs: 103.1283. Time: 1993.8398 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #52: GFLOPs: 58.2481. Time: 3530.0967 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #53: GFLOPs: 130.5878. Time: 1574.5821 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #54: GFLOPs: 27.3497. Time: 7518.2392 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #55: GFLOPs: 23.7176. Time: 8669.5510 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:121] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #56: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1024), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(32), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(32), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(32) + oc_chunk_2_init * T.int64(32) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(7), ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(32) + oc_chunk_2 * T.int64(32) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)], p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)] * p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_add"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(1568))
                    v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(1568) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 2, 1, 32])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[16, 1, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1024, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, b65 = sch.get_child_blocks(b63)
l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91 = sch.get_loops(block=b64)
l92 = sch.fuse(l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l92)
sch.annotate(block_or_loop=l92, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l92, ann_key="pragma_unroll_explicit", ann_val=1)
l93, l94, l95, l96, l97 = sch.get_loops(block=b65)
l98 = sch.fuse(l93, l94, l95, l96, l97, preserve_unit_iters=True)
l99, l100 = sch.split(loop=l98, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l99)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #57: GFLOPs: 161.1975. Time: 1275.5860 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #58: GFLOPs: 199.1539. Time: 1032.4743 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #59: GFLOPs: 19.2702. Time: 10670.4047 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #60: GFLOPs: 8.9065. Time: 23086.7014 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #61: GFLOPs: 95.0278. Time: 2163.8000 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #62: GFLOPs: 31.0453. Time: 6623.2639 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #63: GFLOPs: 1.9501. Time: 105438.8393 us. Best GFLOPs: 204.1564
2024-04-29 20:31:58 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #64: GFLOPs: 22.9501. Time: 8959.4793 us. Best GFLOPs: 204.1564
2024-04-29 21:14:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:14:36 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 21:14:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 21:14:39 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-29 21:14:44 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 21:14:49 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 21:14:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 21:14:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 21:15:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9216  0.9032  0.8595  0.8335  0.8328  0.8328  0.7977  0.7777  0.7710  0.7611  0.7599  0.7587  0.7585  0.7490  0.7468  0.7437
[17 : 32]:	0.7407  0.7405  0.7405  0.7405  0.7375  0.7291  0.7252  0.7156  0.7154  0.7151  0.7123  0.7122  0.7122  0.7117  0.7038  0.7033
[33 : 48]:	0.7033  0.7017  0.7000  0.6940  0.6938  0.6929  0.6923  0.6919  0.6849  0.6840  0.6825  0.6822  0.6769  0.6745  0.6725  0.6704
[49 : 64]:	0.6680  0.6608  0.6608  0.6607  0.6560  0.6542  0.6542  0.6525  0.6511  0.6489  0.6484  0.6475  0.6475  0.6464  0.6462  0.6462
2024-04-29 21:15:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:15:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #65: GFLOPs: 148.0463. Time: 1388.8987 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #66: GFLOPs: 7.5039. Time: 27401.8935 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #67: GFLOPs: 70.5167. Time: 2915.9220 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #68: GFLOPs: 80.6224. Time: 2550.4223 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #69: GFLOPs: 80.5548. Time: 2552.5630 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #70: GFLOPs: 80.5185. Time: 2553.7130 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #71: GFLOPs: 19.6255. Time: 10477.2426 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #72: GFLOPs: 189.5531. Time: 1084.7688 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #73: GFLOPs: 13.5475. Time: 15177.8007 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #74: GFLOPs: 109.6957. Time: 1874.4688 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #75: GFLOPs: 91.7053. Time: 2242.1952 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:121] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #76: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(1024)), "float32"), p1: T.Buffer((T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1024), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(7), T.int64(7), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(128), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(64) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(4) * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(7), ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(64) // T.int64(32) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(64) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(4) * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(64) // T.int64(32) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)], p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(1024), v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_ic % T.int64(1024)] * p1[v_oc_chunk, v_ic // T.int64(1024), v_kh, v_kw, v_ic % T.int64(1024), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_add"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(1568))
                    v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(1568) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 8, 2, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, b65 = sch.get_child_blocks(b63)
l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91 = sch.get_loops(block=b64)
l92 = sch.fuse(l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l92)
l93 = sch.fuse(l91, preserve_unit_iters=True)
sch.vectorize(loop=l93)
sch.annotate(block_or_loop=l92, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l92, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b65)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #77: GFLOPs: 15.4600. Time: 13300.1844 us. Best GFLOPs: 204.1564
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #78: GFLOPs: 211.9710. Time: 970.0442 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #79: GFLOPs: 166.5359. Time: 1234.6964 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #80: GFLOPs: 163.4348. Time: 1258.1236 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #81: GFLOPs: 141.1158. Time: 1457.1103 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #82: GFLOPs: 28.9932. Time: 7092.0510 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #83: GFLOPs: 12.2750. Time: 16751.1656 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #84: GFLOPs: 28.0967. Time: 7318.3373 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #85: GFLOPs: 132.0126. Time: 1557.5878 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #86: GFLOPs: 95.4598. Time: 2154.0093 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #87: GFLOPs: 111.7701. Time: 1839.6801 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #88: GFLOPs: 178.8243. Time: 1149.8507 us. Best GFLOPs: 211.9710
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #89: GFLOPs: 232.8032. Time: 883.2407 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #90: GFLOPs: 183.5483. Time: 1120.2568 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #91: GFLOPs: 202.3226. Time: 1016.3041 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #92: GFLOPs: 7.3887. Time: 27829.2710 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #93: GFLOPs: 4.9195. Time: 41797.2123 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #94: GFLOPs: 108.7382. Time: 1890.9760 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #95: GFLOPs: 76.5824. Time: 2684.9671 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #96: GFLOPs: 59.8907. Time: 3433.2755 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #97: GFLOPs: 121.0625. Time: 1698.4723 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #98: GFLOPs: 107.4059. Time: 1914.4318 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #99: GFLOPs: 129.3695. Time: 1589.4100 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #100: GFLOPs: 198.1978. Time: 1037.4545 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #101: GFLOPs: 110.4467. Time: 1861.7234 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #102: GFLOPs: 183.5289. Time: 1120.3754 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #103: GFLOPs: 17.9158. Time: 11477.0924 us. Best GFLOPs: 232.8032
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #104: GFLOPs: 425.6388. Time: 483.0886 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #105: GFLOPs: 203.7349. Time: 1009.2587 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #106: GFLOPs: 16.0113. Time: 12842.2417 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #107: GFLOPs: 169.0040. Time: 1216.6652 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #108: GFLOPs: 133.2746. Time: 1542.8389 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #109: GFLOPs: 123.8654. Time: 1660.0378 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #110: GFLOPs: 15.1797. Time: 13545.8371 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #111: GFLOPs: 175.6422. Time: 1170.6825 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #112: GFLOPs: 352.1015. Time: 583.9830 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #113: GFLOPs: 79.1948. Time: 2596.3981 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #114: GFLOPs: 164.0304. Time: 1253.5554 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #115: GFLOPs: 43.4813. Time: 4728.9528 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #116: GFLOPs: 49.8893. Time: 4121.5522 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #117: GFLOPs: 192.3339. Time: 1069.0847 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #118: GFLOPs: 150.5691. Time: 1365.6268 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #119: GFLOPs: 201.4095. Time: 1020.9114 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #120: GFLOPs: 7.0039. Time: 29358.1053 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #121: GFLOPs: 12.3196. Time: 16690.5767 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #122: GFLOPs: 20.1075. Time: 10226.0801 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #123: GFLOPs: 128.7891. Time: 1596.5733 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #124: GFLOPs: 3.1874. Time: 64510.2093 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #125: GFLOPs: 74.6558. Time: 2754.2562 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #126: GFLOPs: 87.1302. Time: 2359.9313 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #127: GFLOPs: 54.1683. Time: 3795.9705 us. Best GFLOPs: 425.6388
2024-04-29 21:16:46 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #128: GFLOPs: 51.9621. Time: 3957.1386 us. Best GFLOPs: 425.6388
2024-04-29 22:49:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 22:49:08 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 22:49:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 22:49:10 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 22:49:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 22:49:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 22:49:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 22:49:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5a57ec8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x6bb58f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9274978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x64e3f28)]: 0 failure(s)
2024-04-29 22:49:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9633  0.9522  0.9522  0.8900  0.8270  0.8193  0.8193  0.8193  0.8020  0.7586  0.7360  0.7360  0.7139  0.7115  0.7017  0.6958
[17 : 32]:	0.6543  0.6543  0.6336  0.5860  0.5593  0.5515  0.5515  0.5464  0.5464  0.5227  0.5204  0.5117  0.5093  0.5080  0.5037  0.5037
[33 : 48]:	0.5018  0.4990  0.4904  0.4811  0.4797  0.4789  0.4745  0.4739  0.4739  0.4720  0.4690  0.4676  0.4646  0.4630  0.4630  0.4621
[49 : 64]:	0.4594  0.4543  0.4524  0.4507  0.4493  0.4476  0.4469  0.4469  0.4453  0.4447  0.4425  0.4420  0.4412  0.4403  0.4402  0.4396
2024-04-29 22:49:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 22:49:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #129: GFLOPs: 243.4709. Time: 844.5415 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #130: GFLOPs: 424.9128. Time: 483.9140 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #131: GFLOPs: 323.8361. Time: 634.9547 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #132: GFLOPs: 398.3227. Time: 516.2178 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #133: GFLOPs: 242.0542. Time: 849.4845 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #134: GFLOPs: 370.5554. Time: 554.9001 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #135: GFLOPs: 331.1963. Time: 620.8441 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #136: GFLOPs: 242.3794. Time: 848.3444 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #137: GFLOPs: 56.1924. Time: 3659.2369 us. Best GFLOPs: 425.6388
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #138: GFLOPs: 664.0467. Time: 309.6488 us. Best GFLOPs: 664.0467
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #139: GFLOPs: 618.6467. Time: 332.3726 us. Best GFLOPs: 664.0467
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #140: GFLOPs: 691.1913. Time: 297.4882 us. Best GFLOPs: 691.1913
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #141: GFLOPs: 675.8665. Time: 304.2335 us. Best GFLOPs: 691.1913
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #142: GFLOPs: 27.8971. Time: 7370.6985 us. Best GFLOPs: 691.1913
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #143: GFLOPs: 44.4931. Time: 4621.4176 us. Best GFLOPs: 691.1913
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #144: GFLOPs: 282.7156. Time: 727.3078 us. Best GFLOPs: 691.1913
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #145: GFLOPs: 864.0966. Time: 237.9609 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #146: GFLOPs: 158.4361. Time: 1297.8178 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #147: GFLOPs: 294.9103. Time: 697.2332 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #148: GFLOPs: 72.9612. Time: 2818.2284 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #149: GFLOPs: 420.1431. Time: 489.4076 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #150: GFLOPs: 126.1481. Time: 1629.9985 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #151: GFLOPs: 199.9949. Time: 1028.1322 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #152: GFLOPs: 170.1014. Time: 1208.8156 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #153: GFLOPs: 162.3218. Time: 1266.7507 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #154: GFLOPs: 88.0065. Time: 2336.4324 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #155: GFLOPs: 3.0938. Time: 66462.9873 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #156: GFLOPs: 1.0635. Time: 193341.5120 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #157: GFLOPs: 184.5803. Time: 1113.9935 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #158: GFLOPs: 155.7572. Time: 1320.1395 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #159: GFLOPs: 233.8581. Time: 879.2564 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #160: GFLOPs: 233.9205. Time: 879.0218 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #161: GFLOPs: 237.8979. Time: 864.3256 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #162: GFLOPs: 387.1279. Time: 531.1455 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #163: GFLOPs: 184.0981. Time: 1116.9112 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #164: GFLOPs: 217.5705. Time: 945.0785 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #165: GFLOPs: 770.6409. Time: 266.8185 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #166: GFLOPs: 178.5041. Time: 1151.9131 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #167: GFLOPs: 183.7227. Time: 1119.1935 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #168: GFLOPs: 2.6848. Time: 76588.0007 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #169: GFLOPs: 2.7827. Time: 73891.8813 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #170: GFLOPs: 122.5656. Time: 1677.6428 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #171: GFLOPs: 239.6113. Time: 858.1451 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #172: GFLOPs: 201.1323. Time: 1022.3184 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #173: GFLOPs: 176.0966. Time: 1167.6618 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #174: GFLOPs: 583.3628. Time: 352.4757 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #175: GFLOPs: 230.3087. Time: 892.8072 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #176: GFLOPs: 110.2186. Time: 1865.5768 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #177: GFLOPs: 35.8221. Time: 5740.0740 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #178: GFLOPs: 236.3935. Time: 869.8262 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #179: GFLOPs: 202.5533. Time: 1015.1462 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #180: GFLOPs: 378.5210. Time: 543.2228 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #181: GFLOPs: 234.9262. Time: 875.2589 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #182: GFLOPs: 236.7452. Time: 868.5338 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #183: GFLOPs: 0.9596. Time: 214286.3097 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #184: GFLOPs: 0.7124. Time: 288648.0703 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #185: GFLOPs: 466.6358. Time: 440.6461 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #186: GFLOPs: 0.6925. Time: 296927.9830 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #187: GFLOPs: 21.2711. Time: 9666.7091 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #188: GFLOPs: 122.8220. Time: 1674.1399 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #189: GFLOPs: 303.7643. Time: 676.9106 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #190: GFLOPs: 49.6177. Time: 4144.1082 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #191: GFLOPs: 16.2479. Time: 12655.2636 us. Best GFLOPs: 864.0966
2024-04-29 22:51:26 [INFO] [task_scheduler.cc:131] [Task #1: fused_nn_contrib_conv2d_NCHWc_add] Trial #192: GFLOPs: 57.4322. Time: 3580.2455 us. Best GFLOPs: 864.0966
