2024-04-29 08:20:57 [INFO] [task_scheduler.cc:160] Initializing Task #33: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32"
2024-04-29 08:20:57 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(312), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(312), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4), T.int64(1248), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 08:20:57 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 08:20:57 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(312), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(312), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(104), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1248), ic_0 * T.int64(12) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 8, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[104, 12])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 08:20:57 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(312), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(312), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(104), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1248), ic_0 * T.int64(12) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 8, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[104, 12])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 08:20:57 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(312), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(312), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(104), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1248), ic_0 * T.int64(12) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(7), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 8, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[104, 12])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 09:14:55 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:14:55 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 09:14:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 09:14:57 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 09:15:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 09:15:03 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 09:15:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 09:15:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 09:15:10 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9997  0.9996  0.9993  0.9981  0.9978  0.9970  0.9969  0.9965  0.9964  0.9963  0.9960  0.9959  0.9957  0.9953  0.9933
[17 : 32]:	0.9932  0.9929  0.9929  0.9928  0.9920  0.9918  0.9917  0.9913  0.9905  0.9896  0.9894  0.9887  0.9884  0.9880  0.9879  0.9879
[33 : 48]:	0.9872  0.9869  0.9862  0.9855  0.9847  0.9835  0.9834  0.9826  0.9825  0.9825  0.9822  0.9821  0.9821  0.9820  0.9819  0.9817
[49 : 64]:	0.9806  0.9805  0.9803  0.9803  0.9794  0.9791  0.9776  0.9770  0.9763  0.9759  0.9757  0.9756  0.9755  0.9754  0.9753  0.9742
2024-04-29 09:15:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:15:11 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #1: GFLOPs: 3.1764. Time: 19729.7589 us. Best GFLOPs: 3.1764
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #2: GFLOPs: 27.0463. Time: 2317.1353 us. Best GFLOPs: 27.0463
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #3: GFLOPs: 7.0093. Time: 8941.0092 us. Best GFLOPs: 27.0463
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #4: GFLOPs: 19.3160. Time: 3244.4556 us. Best GFLOPs: 27.0463
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #5: GFLOPs: 119.7416. Time: 523.3756 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #6: GFLOPs: 19.9845. Time: 3135.9225 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #7: GFLOPs: 81.0459. Time: 773.2630 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #8: GFLOPs: 77.5450. Time: 808.1741 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #9: GFLOPs: 16.4902. Time: 3800.4285 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #10: GFLOPs: 103.5557. Time: 605.1801 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #11: GFLOPs: 78.6782. Time: 796.5334 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #12: GFLOPs: 62.4592. Time: 1003.3718 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #13: GFLOPs: 26.9290. Time: 2327.2218 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #14: GFLOPs: 14.6925. Time: 4265.4359 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #15: GFLOPs: 39.1105. Time: 1602.3775 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #16: GFLOPs: 112.9923. Time: 554.6379 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #17: GFLOPs: 82.3920. Time: 760.6298 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #18: GFLOPs: 37.1644. Time: 1686.2885 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #19: GFLOPs: 16.8347. Time: 3722.6561 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #20: GFLOPs: 9.3866. Time: 6676.5071 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #21: GFLOPs: 87.5442. Time: 715.8653 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #22: GFLOPs: 60.3566. Time: 1038.3259 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #23: GFLOPs: 42.5452. Time: 1473.0180 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #24: GFLOPs: 14.5426. Time: 4309.3850 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #25: GFLOPs: 31.2967. Time: 2002.4389 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #26: GFLOPs: 78.1779. Time: 801.6306 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #27: GFLOPs: 41.5015. Time: 1510.0630 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #28: GFLOPs: 92.6040. Time: 676.7506 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #29: GFLOPs: 4.6331. Time: 13526.5644 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #30: GFLOPs: 95.6468. Time: 655.2216 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #31: GFLOPs: 18.2085. Time: 3441.7896 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #32: GFLOPs: 54.5547. Time: 1148.7511 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #33: GFLOPs: 0.6267. Time: 100002.8327 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #34: GFLOPs: 45.4952. Time: 1377.5029 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #35: GFLOPs: 95.2791. Time: 657.7497 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #36: GFLOPs: 49.3920. Time: 1268.8250 us. Best GFLOPs: 119.7416
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #37: GFLOPs: 121.2498. Time: 516.8652 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #38: GFLOPs: 5.1324. Time: 12210.5401 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #39: GFLOPs: 18.1905. Time: 3445.1988 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #40: GFLOPs: 56.3925. Time: 1111.3146 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #41: GFLOPs: 5.7430. Time: 10912.3594 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #42: GFLOPs: 20.1084. Time: 3116.6065 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #43: GFLOPs: 101.6314. Time: 616.6384 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #44: GFLOPs: 11.1914. Time: 5599.8404 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #45: GFLOPs: 59.3058. Time: 1056.7230 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #46: GFLOPs: 110.4159. Time: 567.5797 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #47: GFLOPs: 42.8314. Time: 1463.1749 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #48: GFLOPs: 17.2884. Time: 3624.9651 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #49: GFLOPs: 86.2313. Time: 726.7640 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #50: GFLOPs: 4.6256. Time: 13548.5934 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #51: GFLOPs: 29.0716. Time: 2155.7084 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #52: GFLOPs: 119.3117. Time: 525.2613 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #53: GFLOPs: 29.1038. Time: 2153.3196 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #54: GFLOPs: 6.9599. Time: 9004.4420 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #55: GFLOPs: 31.3722. Time: 1997.6214 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #56: GFLOPs: 4.2606. Time: 14709.3094 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #57: GFLOPs: 43.8615. Time: 1428.8129 us. Best GFLOPs: 121.2498
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #58: GFLOPs: 121.9043. Time: 514.0902 us. Best GFLOPs: 121.9043
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #59: GFLOPs: 18.4777. Time: 3391.6468 us. Best GFLOPs: 121.9043
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #60: GFLOPs: 7.3230. Time: 8557.9620 us. Best GFLOPs: 121.9043
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #61: GFLOPs: 29.5466. Time: 2121.0529 us. Best GFLOPs: 121.9043
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #62: GFLOPs: 51.6221. Time: 1214.0118 us. Best GFLOPs: 121.9043
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #63: GFLOPs: 4.2054. Time: 14902.2171 us. Best GFLOPs: 121.9043
2024-04-29 10:58:26 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #64: GFLOPs: 84.0842. Time: 745.3219 us. Best GFLOPs: 121.9043
2024-04-29 12:05:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 12:05:49 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 12:05:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 12:05:51 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2024-04-29 12:05:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 12:06:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 12:06:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 12:06:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa92d0e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x8dbc968)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x46d7528)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x9a4c0a8)]: 0 failure(s)
2024-04-29 12:06:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9901  0.9790  0.9707  0.9707  0.9577  0.9438  0.9384  0.9141  0.9105  0.8785  0.8774  0.8699  0.8668  0.8655  0.8617  0.8617
[17 : 32]:	0.8488  0.8442  0.8356  0.8348  0.8346  0.8334  0.8283  0.8273  0.8273  0.8250  0.8239  0.8228  0.8222  0.8203  0.8170  0.8111
[33 : 48]:	0.8111  0.8070  0.8056  0.8038  0.8037  0.8037  0.7984  0.7974  0.7953  0.7942  0.7887  0.7839  0.7837  0.7837  0.7837  0.7831
[49 : 64]:	0.7823  0.7750  0.7727  0.7721  0.7721  0.7713  0.7710  0.7702  0.7695  0.7686  0.7682  0.7651  0.7651  0.7647  0.7644  0.7634
2024-04-29 12:06:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 12:06:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #65: GFLOPs: 121.9166. Time: 514.0386 us. Best GFLOPs: 121.9166
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #66: GFLOPs: 106.4579. Time: 588.6815 us. Best GFLOPs: 121.9166
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #67: GFLOPs: 129.6227. Time: 483.4789 us. Best GFLOPs: 129.6227
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #68: GFLOPs: 128.6517. Time: 487.1278 us. Best GFLOPs: 129.6227
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #69: GFLOPs: 128.4389. Time: 487.9347 us. Best GFLOPs: 129.6227
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #70: GFLOPs: 105.8795. Time: 591.8975 us. Best GFLOPs: 129.6227
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #71: GFLOPs: 138.1056. Time: 453.7818 us. Best GFLOPs: 138.1056
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #72: GFLOPs: 122.8416. Time: 510.1676 us. Best GFLOPs: 138.1056
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #73: GFLOPs: 124.5415. Time: 503.2043 us. Best GFLOPs: 138.1056
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #74: GFLOPs: 142.7632. Time: 438.9774 us. Best GFLOPs: 142.7632
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #75: GFLOPs: 142.9547. Time: 438.3893 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #76: GFLOPs: 110.6488. Time: 566.3848 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #77: GFLOPs: 88.0783. Time: 711.5244 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #78: GFLOPs: 92.4729. Time: 677.7104 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #79: GFLOPs: 109.3602. Time: 573.0587 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #80: GFLOPs: 99.3427. Time: 630.8449 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #81: GFLOPs: 133.8862. Time: 468.0828 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #82: GFLOPs: 51.0022. Time: 1228.7674 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #83: GFLOPs: 93.0156. Time: 673.7557 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #84: GFLOPs: 122.6420. Time: 510.9981 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #85: GFLOPs: 123.3747. Time: 507.9632 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #86: GFLOPs: 106.3008. Time: 589.5516 us. Best GFLOPs: 142.9547
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #87: GFLOPs: 144.6414. Time: 433.2772 us. Best GFLOPs: 144.6414
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #88: GFLOPs: 127.2064. Time: 492.6626 us. Best GFLOPs: 144.6414
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #89: GFLOPs: 127.5014. Time: 491.5225 us. Best GFLOPs: 144.6414
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #90: GFLOPs: 118.7774. Time: 527.6240 us. Best GFLOPs: 144.6414
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #91: GFLOPs: 71.5568. Time: 875.8057 us. Best GFLOPs: 144.6414
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #92: GFLOPs: 64.4011. Time: 973.1180 us. Best GFLOPs: 144.6414
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #93: GFLOPs: 153.2451. Time: 408.9515 us. Best GFLOPs: 153.2451
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #94: GFLOPs: 97.2400. Time: 644.4863 us. Best GFLOPs: 153.2451
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #95: GFLOPs: 106.6773. Time: 587.4708 us. Best GFLOPs: 153.2451
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #96: GFLOPs: 139.9107. Time: 447.9273 us. Best GFLOPs: 153.2451
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #97: GFLOPs: 95.6372. Time: 655.2872 us. Best GFLOPs: 153.2451
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #98: GFLOPs: 199.8121. Time: 313.6437 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #99: GFLOPs: 92.9987. Time: 673.8785 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #100: GFLOPs: 111.9056. Time: 560.0239 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #101: GFLOPs: 129.6471. Time: 483.3876 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #102: GFLOPs: 121.7121. Time: 514.9022 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #103: GFLOPs: 100.9827. Time: 620.5997 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #104: GFLOPs: 112.5040. Time: 557.0454 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #105: GFLOPs: 102.3978. Time: 612.0231 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #106: GFLOPs: 132.2469. Time: 473.8850 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #107: GFLOPs: 103.5118. Time: 605.4364 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #108: GFLOPs: 71.4248. Time: 877.4240 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #109: GFLOPs: 120.7891. Time: 518.8370 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #110: GFLOPs: 120.5074. Time: 520.0497 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #111: GFLOPs: 120.9040. Time: 518.3435 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #112: GFLOPs: 80.4681. Time: 778.8158 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #113: GFLOPs: 101.3145. Time: 618.5674 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #114: GFLOPs: 71.9946. Time: 870.4792 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #115: GFLOPs: 83.5574. Time: 750.0214 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #116: GFLOPs: 91.8624. Time: 682.2138 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #117: GFLOPs: 94.5189. Time: 663.0399 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #118: GFLOPs: 110.8378. Time: 565.4193 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #119: GFLOPs: 108.2339. Time: 579.0220 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #120: GFLOPs: 79.1055. Time: 792.2311 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #121: GFLOPs: 104.8936. Time: 597.4608 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #122: GFLOPs: 51.9934. Time: 1205.3430 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #123: GFLOPs: 39.4194. Time: 1589.8215 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #124: GFLOPs: 43.0241. Time: 1456.6215 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #125: GFLOPs: 87.1733. Time: 718.9108 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #126: GFLOPs: 60.9492. Time: 1028.2301 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #127: GFLOPs: 5.8277. Time: 10753.8372 us. Best GFLOPs: 199.8121
2024-04-29 12:07:47 [INFO] [task_scheduler.cc:131] [Task #33: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_32] Trial #128: GFLOPs: 17.7651. Time: 3527.6905 us. Best GFLOPs: 199.8121
