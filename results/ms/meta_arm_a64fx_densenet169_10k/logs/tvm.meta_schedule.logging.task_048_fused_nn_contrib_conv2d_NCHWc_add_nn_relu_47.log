2024-04-29 08:21:57 [INFO] [task_scheduler.cc:160] Initializing Task #48: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47"
2024-04-29 08:21:57 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4), T.int64(768), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 08:21:57 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 08:21:57 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(14), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(48) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 08:21:57 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(14), T.int64(7), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), oh_1 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 08:21:57 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(768), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(14), T.int64(1)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[16, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 09:38:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:38:09 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 09:38:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 09:38:11 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 09:38:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 09:38:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 09:38:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 09:38:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 09:38:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9997  0.9994  0.9988  0.9985  0.9981  0.9981  0.9977  0.9976  0.9972  0.9972  0.9970  0.9963  0.9957  0.9952  0.9946
[17 : 32]:	0.9946  0.9945  0.9941  0.9931  0.9927  0.9925  0.9917  0.9913  0.9912  0.9912  0.9912  0.9911  0.9911  0.9905  0.9901  0.9900
[33 : 48]:	0.9877  0.9874  0.9869  0.9869  0.9865  0.9862  0.9859  0.9859  0.9855  0.9844  0.9840  0.9837  0.9837  0.9835  0.9831  0.9824
[49 : 64]:	0.9815  0.9814  0.9805  0.9802  0.9799  0.9797  0.9796  0.9795  0.9792  0.9792  0.9789  0.9787  0.9785  0.9785  0.9785  0.9780
2024-04-29 09:38:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:38:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #1: GFLOPs: 30.0690. Time: 1283.2256 us. Best GFLOPs: 30.0690
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #2: GFLOPs: 22.3483. Time: 1726.5428 us. Best GFLOPs: 30.0690
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #3: GFLOPs: 127.2229. Time: 303.2893 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #4: GFLOPs: 10.6046. Time: 3638.5546 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #5: GFLOPs: 27.2609. Time: 1415.4077 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #6: GFLOPs: 13.5280. Time: 2852.2542 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #7: GFLOPs: 69.5510. Time: 554.7776 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #8: GFLOPs: 96.0071. Time: 401.9007 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #9: GFLOPs: 1.9719. Time: 19567.7373 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #10: GFLOPs: 71.1233. Time: 542.5135 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #11: GFLOPs: 1.8105. Time: 21311.8644 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #12: GFLOPs: 39.9111. Time: 966.7811 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #13: GFLOPs: 1.6664. Time: 23155.4252 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #14: GFLOPs: 3.0671. Time: 12580.4892 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #15: GFLOPs: 22.5721. Time: 1709.4297 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #16: GFLOPs: 14.6849. Time: 2627.5563 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #17: GFLOPs: 3.2529. Time: 11861.7014 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #18: GFLOPs: 62.3751. Time: 618.6018 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #19: GFLOPs: 87.1681. Time: 442.6547 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #20: GFLOPs: 22.1152. Time: 1744.7454 us. Best GFLOPs: 127.2229
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #21: GFLOPs: 135.1200. Time: 285.5636 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #22: GFLOPs: 95.7835. Time: 402.8393 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #23: GFLOPs: 49.2337. Time: 783.7186 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #24: GFLOPs: 106.3843. Time: 362.6977 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #25: GFLOPs: 4.7034. Time: 8203.6306 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #26: GFLOPs: 1.9857. Time: 19431.8472 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #27: GFLOPs: 62.3590. Time: 618.7618 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #28: GFLOPs: 15.1029. Time: 2554.8368 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #29: GFLOPs: 62.7055. Time: 615.3420 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #30: GFLOPs: 70.9088. Time: 544.1548 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #31: GFLOPs: 2.6850. Time: 14370.4711 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #32: GFLOPs: 72.7198. Time: 530.6029 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #33: GFLOPs: 82.3765. Time: 468.4025 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #34: GFLOPs: 40.9486. Time: 942.2863 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #35: GFLOPs: 80.9674. Time: 476.5538 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #36: GFLOPs: 57.6383. Time: 669.4388 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #37: GFLOPs: 53.9403. Time: 715.3348 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #38: GFLOPs: 74.0877. Time: 520.8063 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #39: GFLOPs: 49.1626. Time: 784.8515 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #40: GFLOPs: 37.7992. Time: 1020.7990 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #41: GFLOPs: 1.3040. Time: 29590.3223 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #42: GFLOPs: 13.5729. Time: 2842.8131 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #43: GFLOPs: 82.3267. Time: 468.6855 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #44: GFLOPs: 48.1736. Time: 800.9639 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:121] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #45: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(192), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(192), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(64), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(768), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(768), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(392)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(784))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(784) // T.int64(56))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(56) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[768, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b66)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #46: GFLOPs: 56.5571. Time: 682.2368 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #47: GFLOPs: 114.1348. Time: 338.0683 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #48: GFLOPs: 118.2527. Time: 326.2957 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #49: GFLOPs: 75.6622. Time: 509.9683 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #50: GFLOPs: 111.5023. Time: 346.0497 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #51: GFLOPs: 84.4913. Time: 456.6785 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #52: GFLOPs: 59.6684. Time: 646.6633 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #53: GFLOPs: 69.8833. Time: 552.1398 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #54: GFLOPs: 21.7278. Time: 1775.8498 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #55: GFLOPs: 0.1796. Time: 214898.0867 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #56: GFLOPs: 27.3456. Time: 1411.0232 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #57: GFLOPs: 10.9916. Time: 3510.4476 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #58: GFLOPs: 72.1397. Time: 534.8700 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #59: GFLOPs: 32.1928. Time: 1198.5691 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #60: GFLOPs: 4.4807. Time: 8611.5494 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #61: GFLOPs: 14.7621. Time: 2613.8196 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #62: GFLOPs: 7.8042. Time: 4944.1918 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #63: GFLOPs: 68.6110. Time: 562.3783 us. Best GFLOPs: 135.1200
2024-04-29 11:00:14 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #64: GFLOPs: 44.5263. Time: 866.5741 us. Best GFLOPs: 135.1200
2024-04-29 13:18:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 13:18:32 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 13:18:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 13:18:34 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 13:18:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 13:18:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 13:18:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 13:18:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeb8cc38)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x89a5928)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xc311f18)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc7dea98)]: 0 failure(s)
2024-04-29 13:18:58 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8616  0.8610  0.8576  0.8395  0.8390  0.8389  0.8336  0.8215  0.8157  0.8142  0.8140  0.8133  0.8089  0.8079  0.8067  0.8033
[17 : 32]:	0.8020  0.8003  0.8002  0.7988  0.7927  0.7927  0.7833  0.7823  0.7823  0.7821  0.7820  0.7818  0.7813  0.7801  0.7782  0.7750
[33 : 48]:	0.7728  0.7728  0.7694  0.7660  0.7641  0.7587  0.7550  0.7547  0.7539  0.7537  0.7519  0.7514  0.7514  0.7511  0.7508  0.7508
[49 : 64]:	0.7497  0.7489  0.7486  0.7476  0.7469  0.7465  0.7451  0.7431  0.7427  0.7414  0.7412  0.7411  0.7409  0.7405  0.7392  0.7392
2024-04-29 13:18:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 13:18:59 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #65: GFLOPs: 138.3961. Time: 278.8037 us. Best GFLOPs: 138.3961
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #66: GFLOPs: 96.7687. Time: 398.7378 us. Best GFLOPs: 138.3961
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #67: GFLOPs: 149.4175. Time: 258.2385 us. Best GFLOPs: 149.4175
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #68: GFLOPs: 158.5724. Time: 243.3295 us. Best GFLOPs: 158.5724
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #69: GFLOPs: 175.6660. Time: 219.6518 us. Best GFLOPs: 175.6660
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #70: GFLOPs: 132.8572. Time: 290.4272 us. Best GFLOPs: 175.6660
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #71: GFLOPs: 226.7662. Time: 170.1547 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #72: GFLOPs: 154.6451. Time: 249.5090 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #73: GFLOPs: 158.1341. Time: 244.0040 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #74: GFLOPs: 92.2642. Time: 418.2050 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #75: GFLOPs: 154.0700. Time: 250.4404 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #76: GFLOPs: 161.0715. Time: 239.5541 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #77: GFLOPs: 140.0176. Time: 275.5750 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #78: GFLOPs: 215.3867. Time: 179.1445 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #79: GFLOPs: 115.2026. Time: 334.9346 us. Best GFLOPs: 226.7662
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #80: GFLOPs: 353.6093. Time: 109.1186 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #81: GFLOPs: 107.3727. Time: 359.3591 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #82: GFLOPs: 112.1978. Time: 343.9045 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #83: GFLOPs: 173.3964. Time: 222.5268 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #84: GFLOPs: 153.7805. Time: 250.9118 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #85: GFLOPs: 113.9568. Time: 338.5962 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #86: GFLOPs: 187.9285. Time: 205.3193 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #87: GFLOPs: 183.8080. Time: 209.9220 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #88: GFLOPs: 130.9109. Time: 294.7451 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #89: GFLOPs: 106.9633. Time: 360.7345 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #90: GFLOPs: 72.2097. Time: 534.3514 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #91: GFLOPs: 165.9952. Time: 232.4485 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #92: GFLOPs: 190.4774. Time: 202.5718 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #93: GFLOPs: 125.6069. Time: 307.1914 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #94: GFLOPs: 128.4144. Time: 300.4752 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #95: GFLOPs: 106.6521. Time: 361.7871 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #96: GFLOPs: 139.3834. Time: 276.8288 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #97: GFLOPs: 134.8746. Time: 286.0831 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #98: GFLOPs: 133.5316. Time: 288.9603 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #99: GFLOPs: 117.8330. Time: 327.4578 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #100: GFLOPs: 78.1702. Time: 493.6070 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #101: GFLOPs: 138.3775. Time: 278.8412 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #102: GFLOPs: 198.9548. Time: 193.9402 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #103: GFLOPs: 128.8421. Time: 299.4778 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #104: GFLOPs: 85.0988. Time: 453.4181 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #105: GFLOPs: 108.3998. Time: 355.9541 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #106: GFLOPs: 151.6092. Time: 254.5053 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #107: GFLOPs: 149.2148. Time: 258.5892 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #108: GFLOPs: 123.0410. Time: 313.5975 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #109: GFLOPs: 129.3127. Time: 298.3878 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #110: GFLOPs: 182.1832. Time: 211.7942 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #111: GFLOPs: 121.1925. Time: 318.3806 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #112: GFLOPs: 158.5377. Time: 243.3827 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #113: GFLOPs: 138.2179. Time: 279.1632 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #114: GFLOPs: 148.2031. Time: 260.3544 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #115: GFLOPs: 66.3461. Time: 581.5767 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #116: GFLOPs: 164.0717. Time: 235.1737 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #117: GFLOPs: 124.3382. Time: 310.3257 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #118: GFLOPs: 75.8972. Time: 508.3897 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #119: GFLOPs: 74.2361. Time: 519.7650 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #120: GFLOPs: 183.9162. Time: 209.7985 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #121: GFLOPs: 139.2513. Time: 277.0915 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #122: GFLOPs: 159.1837. Time: 242.3950 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #123: GFLOPs: 173.8925. Time: 221.8919 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #124: GFLOPs: 111.7870. Time: 345.1685 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #125: GFLOPs: 181.5286. Time: 212.5580 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #126: GFLOPs: 18.1071. Time: 2130.9455 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #127: GFLOPs: 40.0571. Time: 963.2596 us. Best GFLOPs: 353.6093
2024-04-29 13:20:33 [INFO] [task_scheduler.cc:131] [Task #48: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_47] Trial #128: GFLOPs: 7.8633. Time: 4907.0283 us. Best GFLOPs: 353.6093
