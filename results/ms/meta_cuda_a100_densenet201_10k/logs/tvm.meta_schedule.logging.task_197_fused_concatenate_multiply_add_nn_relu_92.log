2024-04-29 16:32:32 [INFO] [task_scheduler.cc:160] Initializing Task #197: "fused_concatenate_multiply_add_nn_relu_92"
2024-04-29 16:32:32 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_concat = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)))
        T_multiply = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(56), T.int64(56)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = p0[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(56), T.int64(56)):
            with T.block("T_multiply"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_concat[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3])
                T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] = T_concat[v_ax0, v_ax1, v_ax2, v_ax3] * p1[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(56), T.int64(56)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(56), T.int64(56)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 16:32:32 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-29 16:32:32 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                with T.block("T_concat"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) % T.int64(3136) // T.int64(56))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) % T.int64(56))
                    T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(p0[v_ax0, v_ax1, v_ax2, v_ax3] * p1[v_ax0, v_ax1, T.int64(0), T.int64(0)] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="T_concat", func_name="main")
b1 = sch.get_block(name="T_multiply", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.reverse_compute_inline(block=b1)
l4, l5, l6, l7 = sch.get_loops(block=b0)
l8 = sch.fuse(l4, l5, l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
2024-04-29 19:49:19 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:49:19 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 19:49:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeca9528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x12b2cd28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12b2d198)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1425c518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x357ef18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe382878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b2d168)]: 0 failure(s)
2024-04-29 19:49:20 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 19:49:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeca9528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x12b2cd28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12b2d198)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1425c518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x357ef18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe382878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b2d168)]: 0 failure(s)
2024-04-29 19:49:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeca9528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x12b2cd28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12b2d198)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1425c518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x357ef18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe382878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b2d168)]: 0 failure(s)
2024-04-29 19:49:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeca9528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x12b2cd28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12b2d198)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1425c518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x357ef18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe382878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b2d168)]: 0 failure(s)
2024-04-29 19:49:21 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xeca9528)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x12b2cd28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12b2d198)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x1425c518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x357ef18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe382878)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b2d168)]: 0 failure(s)
2024-04-29 19:49:21 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.6083  0.5118  0.3731  0.3190  0.2587  0.0380
2024-04-29 19:49:21 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-04-29 19:49:21 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-04-29 20:34:01 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #1: GFLOPs: 188.8322. Time: 3.1886 us. Best GFLOPs: 188.8322
2024-04-29 20:34:01 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #2: GFLOPs: 158.3602. Time: 3.8022 us. Best GFLOPs: 188.8322
2024-04-29 20:34:01 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #3: GFLOPs: 187.2792. Time: 3.2151 us. Best GFLOPs: 188.8322
2024-04-29 20:34:01 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #4: GFLOPs: 81.8982. Time: 7.3520 us. Best GFLOPs: 188.8322
2024-04-29 20:34:01 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #5: GFLOPs: 185.6297. Time: 3.2436 us. Best GFLOPs: 188.8322
2024-04-29 20:34:01 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #6: GFLOPs: 122.1834. Time: 4.9279 us. Best GFLOPs: 188.8322
2024-05-01 15:06:13 [INFO] [task_scheduler.cc:160] Initializing Task #197: "fused_concatenate_multiply_add_nn_relu_92"
2024-05-01 15:06:13 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_concat = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)))
        T_multiply = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(56), T.int64(56)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = p0[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(56), T.int64(56)):
            with T.block("T_multiply"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_concat[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3])
                T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] = T_concat[v_ax0, v_ax1, v_ax2, v_ax3] * p1[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(56), T.int64(56)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(56), T.int64(56)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-05-01 15:06:13 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-05-01 15:06:13 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(64), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(392), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                with T.block("T_concat"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(64), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) % T.int64(3136) // T.int64(56))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) % T.int64(56))
                    T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(p0[v_ax0, v_ax1, v_ax2, v_ax3] * p1[v_ax0, v_ax1, T.int64(0), T.int64(0)] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="T_concat", func_name="main")
b1 = sch.get_block(name="T_multiply", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.reverse_compute_inline(block=b1)
l4, l5, l6, l7 = sch.get_loops(block=b0)
l8 = sch.fuse(l4, l5, l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
2024-05-01 18:09:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 18:09:34 [INFO] [evolutionary_search.cc:715] Picked top 6 candidate(s) from database
2024-05-01 18:09:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x79328c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bbab08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xe0a3698)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xd774b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x10d40d98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe0a1808)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14fe8648)]: 0 failure(s)
2024-05-01 18:09:34 [INFO] [evolutionary_search.cc:723] Sampled 506 candidate(s)
2024-05-01 18:09:35 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x79328c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bbab08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xe0a3698)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xd774b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x10d40d98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe0a1808)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14fe8648)]: 0 failure(s)
2024-05-01 18:09:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x79328c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bbab08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xe0a3698)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xd774b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x10d40d98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe0a1808)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14fe8648)]: 0 failure(s)
2024-05-01 18:09:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x79328c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bbab08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xe0a3698)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xd774b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x10d40d98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe0a1808)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14fe8648)]: 0 failure(s)
2024-05-01 18:09:35 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x79328c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bbab08)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xe0a3698)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xd774b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x10d40d98)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xe0a1808)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x14fe8648)]: 0 failure(s)
2024-05-01 18:09:35 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.8416  0.4495  0.3652  0.3282  0.2832  0.0363
2024-05-01 18:09:35 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-05-01 18:09:35 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-05-01 18:40:49 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #1: GFLOPs: 187.1331. Time: 3.2176 us. Best GFLOPs: 187.1331
2024-05-01 18:40:49 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #2: GFLOPs: 181.2043. Time: 3.3228 us. Best GFLOPs: 187.1331
2024-05-01 18:40:49 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #3: GFLOPs: 150.7895. Time: 3.9931 us. Best GFLOPs: 187.1331
2024-05-01 18:40:49 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #4: GFLOPs: 120.8435. Time: 4.9826 us. Best GFLOPs: 187.1331
2024-05-01 18:40:49 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #5: GFLOPs: 186.6321. Time: 3.2262 us. Best GFLOPs: 187.1331
2024-05-01 18:40:49 [INFO] [task_scheduler.cc:131] [Task #197: fused_concatenate_multiply_add_nn_relu_92] Trial #6: GFLOPs: 79.9868. Time: 7.5276 us. Best GFLOPs: 187.1331
