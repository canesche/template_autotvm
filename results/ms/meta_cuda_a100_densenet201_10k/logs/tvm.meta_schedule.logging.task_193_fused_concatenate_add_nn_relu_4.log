2024-04-29 16:32:31 [INFO] [task_scheduler.cc:160] Initializing Task #193: "fused_concatenate_add_nn_relu_4"
2024-04-29 16:32:31 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56)), "float32"), p3: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_concat = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p2[v_ax0, v_ax1 - T.int64(96), v_ax2, v_ax3], p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(96) <= v_ax1, p2[v_ax0, v_ax1 - T.int64(96), v_ax2, v_ax3], T.if_then_else(T.int64(64) <= v_ax1, p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3]))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_concat[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = T_concat[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 16:32:31 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-29 16:32:31 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56)), "float32"), p3: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_2 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                    with T.block("T_concat"):
                        v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_ax1 = T.axis.spatial(T.int64(128), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) // T.int64(3136))
                        v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) % T.int64(3136) // T.int64(56))
                        v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56))
                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2 < T.int64(401408))
                        T.reads(p2[v_ax0, v_ax1 - T.int64(96), v_ax2, v_ax3], p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T.if_then_else(T.int64(96) <= v_ax1, p2[v_ax0, v_ax1 - T.int64(96), v_ax2, v_ax3], T.if_then_else(T.int64(64) <= v_ax1, p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])) + p3[v_ax0, v_ax1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="T_concat", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="T_relu", func_name="main")
sch.reverse_compute_inline(block=b2)
sch.reverse_compute_inline(block=b1)
l3, l4, l5, l6 = sch.get_loops(block=b0)
l7 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
l8, l9, l10 = sch.split(loop=l7, factors=[None, 256, 1024], preserve_unit_iters=True)
sch.reorder(l9, l10, l8)
sch.bind(loop=l9, thread_axis="blockIdx.x")
sch.bind(loop=l10, thread_axis="threadIdx.x")
2024-04-29 19:44:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:44:43 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 19:44:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf17a928)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10555738)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x150421a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x143dc518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4208e08)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd304d08)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x15090378)]: 0 failure(s)
2024-04-29 19:44:45 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 19:44:45 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf17a928)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10555738)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x150421a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x143dc518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4208e08)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd304d08)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x15090378)]: 0 failure(s)
2024-04-29 19:44:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf17a928)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10555738)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x150421a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x143dc518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4208e08)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd304d08)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x15090378)]: 0 failure(s)
2024-04-29 19:44:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf17a928)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10555738)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x150421a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x143dc518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4208e08)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd304d08)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x15090378)]: 0 failure(s)
2024-04-29 19:44:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf17a928)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10555738)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x150421a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x143dc518)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4208e08)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd304d08)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x15090378)]: 0 failure(s)
2024-04-29 19:44:46 [INFO] [evolutionary_search.cc:649] Scores of the best 1 candidates:
[1 : 1]:	0.6432
2024-04-29 19:44:46 [INFO] [evolutionary_search.cc:727] Got 1 candidate(s) with evolutionary search
2024-04-29 19:44:46 [INFO] [evolutionary_search.cc:730] Sending 1 candidates(s) for measurement
2024-04-29 20:33:37 [INFO] [task_scheduler.cc:131] [Task #193: fused_concatenate_add_nn_relu_4] Trial #1: GFLOPs: 221.8054. Time: 3.6195 us. Best GFLOPs: 221.8054
2024-05-01 15:06:12 [INFO] [task_scheduler.cc:160] Initializing Task #193: "fused_concatenate_add_nn_relu_4"
2024-05-01 15:06:12 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56)), "float32"), p3: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_concat = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p2[v_ax0, v_ax1 - T.int64(96), v_ax2, v_ax3], p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = T.if_then_else(T.int64(96) <= v_ax1, p2[v_ax0, v_ax1 - T.int64(96), v_ax2, v_ax3], T.if_then_else(T.int64(64) <= v_ax1, p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3]))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_concat[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = T_concat[v_ax0, v_ax1, v_ax2, v_ax3] + p3[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(56), T.int64(56)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-05-01 15:06:12 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-05-01 15:06:12 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56)), "float32"), p1: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56)), "float32"), p3: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(56), T.int64(56)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_2 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(2)):
                    with T.block("T_concat"):
                        v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_ax1 = T.axis.spatial(T.int64(128), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) // T.int64(3136))
                        v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) % T.int64(3136) // T.int64(56))
                        v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_fused_0 * T.int64(262144) + ax0_ax1_ax2_ax3_fused_1 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56))
                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) * T.int64(1024) + ax0_ax1_ax2_ax3_fused_2 < T.int64(401408))
                        T.reads(p2[v_ax0, v_ax1 - T.int64(96), v_ax2, v_ax3], p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3], p3[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T.if_then_else(T.int64(96) <= v_ax1, p2[v_ax0, v_ax1 - T.int64(96), v_ax2, v_ax3], T.if_then_else(T.int64(64) <= v_ax1, p1[v_ax0, v_ax1 - T.int64(64), v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2, v_ax3])) + p3[v_ax0, v_ax1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="T_concat", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="T_relu", func_name="main")
sch.reverse_compute_inline(block=b2)
sch.reverse_compute_inline(block=b1)
l3, l4, l5, l6 = sch.get_loops(block=b0)
l7 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
l8, l9, l10 = sch.split(loop=l7, factors=[None, 256, 1024], preserve_unit_iters=True)
sch.reorder(l9, l10, l8)
sch.bind(loop=l9, thread_axis="blockIdx.x")
sch.bind(loop=l10, thread_axis="threadIdx.x")
2024-05-01 18:06:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 18:06:00 [INFO] [evolutionary_search.cc:715] Picked top 1 candidate(s) from database
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xe5bde08)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x126d1528)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x126d1428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xe236948)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x13e5d0a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd64ec18)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd529ae8)]: 0 failure(s)
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:723] Sampled 511 candidate(s)
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xe5bde08)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x126d1528)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x126d1428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xe236948)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x13e5d0a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd64ec18)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd529ae8)]: 0 failure(s)
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xe5bde08)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x126d1528)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x126d1428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xe236948)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x13e5d0a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd64ec18)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd529ae8)]: 0 failure(s)
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xe5bde08)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x126d1528)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x126d1428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xe236948)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x13e5d0a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd64ec18)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd529ae8)]: 0 failure(s)
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xe5bde08)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x126d1528)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x126d1428)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0xe236948)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x13e5d0a8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xd64ec18)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xd529ae8)]: 0 failure(s)
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:649] Scores of the best 1 candidates:
[1 : 1]:	0.3886
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:727] Got 1 candidate(s) with evolutionary search
2024-05-01 18:06:02 [INFO] [evolutionary_search.cc:730] Sending 1 candidates(s) for measurement
2024-05-01 18:40:34 [INFO] [task_scheduler.cc:131] [Task #193: fused_concatenate_add_nn_relu_4] Trial #1: GFLOPs: 219.5173. Time: 3.6572 us. Best GFLOPs: 219.5173
