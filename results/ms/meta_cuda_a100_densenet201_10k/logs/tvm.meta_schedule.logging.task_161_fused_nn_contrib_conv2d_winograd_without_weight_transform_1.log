2024-04-29 16:32:20 [INFO] [task_scheduler.cc:160] Initializing Task #161: "fused_nn_contrib_conv2d_winograd_without_weight_transform_1"
2024-04-29 16:32:20 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(16), T.int64(16)))
        input_tile = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)))
        B = T.alloc_buffer((T.int64(4), T.int64(4)))
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
        A = T.alloc_buffer((T.int64(4), T.int64(2)))
        inverse = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(128), T.int64(16), T.int64(16)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(128), T.int64(49), T.int64(4), T.int64(4)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps, v_p % T.int64(7) * T.int64(2) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps, v_p % T.int64(7) * T.int64(2) + v_nu]
        for i, j in T.grid(T.int64(4), T.int64(4)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(4), T.int64(4), T.int64(128), T.int64(49), T.int64(4), T.int64(4)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(4), T.int64(4), T.int64(32), T.int64(49), T.int64(128)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(4), T.int64(2)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(32), T.int64(49), T.int64(2), T.int64(2), T.int64(4), T.int64(4)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
2024-04-29 16:32:20 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 16:32:20 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(392), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(100352)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(25088))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(25088) // T.int64(6272))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(6272) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(49), ax0_ax1_ax2_ax3_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(16384)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(4096))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(16), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + eps_1_nu_1_co_1_p_1_fused // T.int64(49) + co_3 + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(49) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_0 * T.int64(128) + ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + eps_1_nu_1_co_1_p_1_fused // T.int64(49) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(13), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[1, 1, 2, 2, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[4, 8, 1, 1, 1])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 49, 1, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[1, 16, 8])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
v117 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v117)
l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b3)
l124 = sch.fuse(l118, l119, l120, l121, preserve_unit_iters=True)
v125 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l126, l127 = sch.split(loop=l124, factors=[None, v125], preserve_unit_iters=True)
sch.bind(loop=l126, thread_axis="blockIdx.x")
sch.bind(loop=l127, thread_axis="threadIdx.x")
2024-04-29 16:32:20 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(392), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(100352)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(25088))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(25088) // T.int64(6272))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(6272) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(49), ax0_ax1_ax2_ax3_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(16384)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(4096))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(16), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + eps_1_nu_1_co_1_p_1_fused // T.int64(49) + co_3 + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(49) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + eps_1_nu_1_co_1_p_1_fused // T.int64(49) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(7), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[1, 1, 2, 2, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[4, 8, 1, 1, 1])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 49, 1, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[1, 16, 8])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
2024-04-29 16:32:20 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(392), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(8), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(1), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(100352)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(25088))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(25088) // T.int64(6272))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(6272) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(49), ax0_ax1_ax2_ax3_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(16384)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused // T.int64(4096))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(8))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + ax0_ax1_ax2_ax3_fused % T.int64(8))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(16), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + eps_1_nu_1_co_1_p_1_fused // T.int64(49) + co_3 + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(49) + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_1 * T.int64(8) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(4) * T.int64(2) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused % T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused * T.int64(8) + eps_1_nu_1_co_1_p_1_fused // T.int64(49) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_1_nu_1_co_1_p_1_fused % T.int64(49) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(13), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[1, 1, 2, 2, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[4, 8, 1, 1, 1])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 49, 1, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[1, 16, 8])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
2024-04-29 19:01:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:01:58 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 19:02:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 492 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 19:02:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 976 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 19:02:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1462 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 19:02:11 [INFO] [evolutionary_search.cc:723] Sampled 74 candidate(s)
2024-04-29 19:02:22 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 130 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 19:02:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 122 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 19:02:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 141 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 19:02:52 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 19:02:53 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9982  0.9982  0.9970  0.9957  0.9953  0.9949  0.9948  0.9932  0.9913  0.9912  0.9895  0.9894  0.9880  0.9877  0.9863  0.9848
[17 : 32]:	0.9826  0.9825  0.9818  0.9816  0.9816  0.9807  0.9793  0.9790  0.9770  0.9769  0.9761  0.9760  0.9753  0.9740  0.9727  0.9726
[33 : 48]:	0.9722  0.9721  0.9715  0.9713  0.9713  0.9708  0.9698  0.9694  0.9689  0.9683  0.9682  0.9675  0.9670  0.9667  0.9663  0.9663
[49 : 64]:	0.9656  0.9649  0.9645  0.9643  0.9641  0.9640  0.9630  0.9628  0.9624  0.9612  0.9612  0.9600  0.9589  0.9580  0.9575  0.9571
2024-04-29 19:02:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 19:02:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #1: GFLOPs: 111.8265. Time: 103.1998 us. Best GFLOPs: 111.8265
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #2: GFLOPs: 272.0711. Time: 42.4172 us. Best GFLOPs: 272.0711
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #3: GFLOPs: 163.5203. Time: 70.5752 us. Best GFLOPs: 272.0711
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #4: GFLOPs: 467.3771. Time: 24.6920 us. Best GFLOPs: 467.3771
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #5: GFLOPs: 47.3438. Time: 243.7590 us. Best GFLOPs: 467.3771
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #6: GFLOPs: 331.3347. Time: 34.8303 us. Best GFLOPs: 467.3771
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #7: GFLOPs: 200.9386. Time: 57.4329 us. Best GFLOPs: 467.3771
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #8: GFLOPs: 551.7909. Time: 20.9146 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #9: GFLOPs: 122.6379. Time: 94.1021 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #10: GFLOPs: 55.0186. Time: 209.7559 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #11: GFLOPs: 202.7306. Time: 56.9252 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #12: GFLOPs: 79.5993. Time: 144.9822 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #13: GFLOPs: 262.1708. Time: 44.0189 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #14: GFLOPs: 84.4937. Time: 136.5838 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #15: GFLOPs: 203.3586. Time: 56.7494 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #16: GFLOPs: 276.3539. Time: 41.7598 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #17: GFLOPs: 535.0387. Time: 21.5694 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #18: GFLOPs: 8.0307. Time: 1437.0378 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #19: GFLOPs: 162.8571. Time: 70.8626 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #20: GFLOPs: 204.3031. Time: 56.4871 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #21: GFLOPs: 105.4832. Time: 109.4059 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #22: GFLOPs: 466.0863. Time: 24.7604 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #23: GFLOPs: 397.3564. Time: 29.0431 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #24: GFLOPs: 183.0329. Time: 63.0514 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #25: GFLOPs: 244.7223. Time: 47.1574 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #26: GFLOPs: 61.3250. Time: 188.1857 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #27: GFLOPs: 172.7816. Time: 66.7923 us. Best GFLOPs: 551.7909
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #28: GFLOPs: 710.2914. Time: 16.2475 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #29: GFLOPs: 129.9602. Time: 88.8001 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #30: GFLOPs: 695.0434. Time: 16.6040 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #31: GFLOPs: 16.5957. Time: 695.3891 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #32: GFLOPs: 372.7701. Time: 30.9587 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #33: GFLOPs: 19.2195. Time: 600.4575 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #34: GFLOPs: 118.8737. Time: 97.0819 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #35: GFLOPs: 351.3084. Time: 32.8500 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #36: GFLOPs: 129.1304. Time: 89.3707 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #37: GFLOPs: 397.4133. Time: 29.0390 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #38: GFLOPs: 204.3507. Time: 56.4739 us. Best GFLOPs: 710.2914
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #39: GFLOPs: 840.3512. Time: 13.7329 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #40: GFLOPs: 205.6802. Time: 56.1089 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #41: GFLOPs: 139.7366. Time: 82.5874 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #42: GFLOPs: 483.7568. Time: 23.8560 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #43: GFLOPs: 396.8058. Time: 29.0834 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #44: GFLOPs: 109.1224. Time: 105.7572 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #45: GFLOPs: 399.4320. Time: 28.8922 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #46: GFLOPs: 381.6587. Time: 30.2377 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #47: GFLOPs: 93.9644. Time: 122.8175 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #48: GFLOPs: 189.1943. Time: 60.9980 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #49: GFLOPs: 137.1765. Time: 84.1287 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #50: GFLOPs: 468.4926. Time: 24.6332 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #51: GFLOPs: 312.0110. Time: 36.9874 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #52: GFLOPs: 227.4058. Time: 50.7484 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #53: GFLOPs: 91.4835. Time: 126.1483 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #54: GFLOPs: 296.4177. Time: 38.9332 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #55: GFLOPs: 230.4964. Time: 50.0679 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #56: GFLOPs: 19.3617. Time: 596.0482 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #57: GFLOPs: 265.9206. Time: 43.3982 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #58: GFLOPs: 93.6933. Time: 123.1729 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #59: GFLOPs: 190.8033. Time: 60.4837 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #60: GFLOPs: 188.3473. Time: 61.2724 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #61: GFLOPs: 275.3332. Time: 41.9146 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #62: GFLOPs: 79.2504. Time: 145.6204 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #63: GFLOPs: 162.8648. Time: 70.8593 us. Best GFLOPs: 840.3512
2024-04-29 20:30:29 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #64: GFLOPs: 20.6166. Time: 559.7664 us. Best GFLOPs: 840.3512
2024-04-29 20:36:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:36:20 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 20:36:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 430 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:36:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 851 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:36:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1273 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:36:32 [INFO] [evolutionary_search.cc:723] Sampled 71 candidate(s)
2024-04-29 20:36:43 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 141 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:36:57 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:37:11 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:37:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:37:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2907  1.2347  1.2014  1.1937  1.1890  1.1790  1.1744  1.1544  1.1301  1.1279  1.1173  1.1052  1.0925  1.0919  1.0799  1.0735
[17 : 32]:	1.0734  1.0647  1.0606  1.0604  1.0568  1.0525  1.0426  1.0371  1.0344  1.0303  1.0242  1.0241  1.0179  1.0147  1.0140  1.0101
[33 : 48]:	1.0100  1.0098  1.0066  1.0058  1.0055  1.0046  1.0045  1.0041  1.0026  1.0015  0.9987  0.9972  0.9957  0.9957  0.9955  0.9943
[49 : 64]:	0.9942  0.9930  0.9923  0.9920  0.9919  0.9913  0.9898  0.9807  0.9798  0.9798  0.9798  0.9778  0.9778  0.9742  0.9740  0.9740
2024-04-29 20:37:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:37:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #65: GFLOPs: 140.3003. Time: 82.2556 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #66: GFLOPs: 451.1083. Time: 25.5825 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #67: GFLOPs: 255.9685. Time: 45.0855 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #68: GFLOPs: 258.3311. Time: 44.6732 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #69: GFLOPs: 131.4363. Time: 87.8028 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #70: GFLOPs: 350.8782. Time: 32.8903 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #71: GFLOPs: 447.7332. Time: 25.7754 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #72: GFLOPs: 792.3961. Time: 14.5640 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #73: GFLOPs: 143.8530. Time: 80.2241 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #74: GFLOPs: 682.0918. Time: 16.9192 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #75: GFLOPs: 337.3085. Time: 34.2134 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #76: GFLOPs: 27.0048. Time: 427.3493 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #77: GFLOPs: 28.6373. Time: 402.9880 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #78: GFLOPs: 368.9581. Time: 31.2786 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #79: GFLOPs: 454.0706. Time: 25.4156 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #80: GFLOPs: 536.1779. Time: 21.5236 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #81: GFLOPs: 535.1508. Time: 21.5649 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #82: GFLOPs: 284.6694. Time: 40.5399 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #83: GFLOPs: 826.8242. Time: 13.9576 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #84: GFLOPs: 211.6571. Time: 54.5244 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #85: GFLOPs: 361.7239. Time: 31.9041 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #86: GFLOPs: 471.8094. Time: 24.4600 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #87: GFLOPs: 337.3904. Time: 34.2051 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #88: GFLOPs: 315.6354. Time: 36.5627 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #89: GFLOPs: 181.6314. Time: 63.5379 us. Best GFLOPs: 840.3512
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #90: GFLOPs: 861.7430. Time: 13.3920 us. Best GFLOPs: 861.7430
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #91: GFLOPs: 859.3137. Time: 13.4299 us. Best GFLOPs: 861.7430
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #92: GFLOPs: 290.3729. Time: 39.7437 us. Best GFLOPs: 861.7430
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #93: GFLOPs: 859.4972. Time: 13.4270 us. Best GFLOPs: 861.7430
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #94: GFLOPs: 838.4807. Time: 13.7636 us. Best GFLOPs: 861.7430
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #95: GFLOPs: 110.6212. Time: 104.3243 us. Best GFLOPs: 861.7430
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #96: GFLOPs: 858.2003. Time: 13.4473 us. Best GFLOPs: 861.7430
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #97: GFLOPs: 485.7961. Time: 23.7558 us. Best GFLOPs: 861.7430
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #98: GFLOPs: 864.4680. Time: 13.3498 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #99: GFLOPs: 836.5978. Time: 13.7945 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #100: GFLOPs: 807.2340. Time: 14.2963 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #101: GFLOPs: 781.1246. Time: 14.7742 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #102: GFLOPs: 859.3010. Time: 13.4301 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #103: GFLOPs: 624.4674. Time: 18.4805 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #104: GFLOPs: 446.9111. Time: 25.8228 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #105: GFLOPs: 553.9569. Time: 20.8328 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #106: GFLOPs: 790.8532. Time: 14.5924 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #107: GFLOPs: 807.6053. Time: 14.2898 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #108: GFLOPs: 807.3072. Time: 14.2950 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #109: GFLOPs: 737.7005. Time: 15.6439 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #110: GFLOPs: 272.8252. Time: 42.2999 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #111: GFLOPs: 738.8560. Time: 15.6194 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #112: GFLOPs: 767.9426. Time: 15.0278 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #113: GFLOPs: 839.9369. Time: 13.7397 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #114: GFLOPs: 482.4700. Time: 23.9196 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #115: GFLOPs: 145.0561. Time: 79.5588 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #116: GFLOPs: 703.7654. Time: 16.3982 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #117: GFLOPs: 701.3650. Time: 16.4543 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #118: GFLOPs: 486.2660. Time: 23.7329 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #119: GFLOPs: 46.7827. Time: 246.6824 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #120: GFLOPs: 356.1642. Time: 32.4021 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #121: GFLOPs: 374.5137. Time: 30.8146 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #122: GFLOPs: 284.7724. Time: 40.5253 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #123: GFLOPs: 284.7358. Time: 40.5305 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #124: GFLOPs: 466.2834. Time: 24.7499 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #125: GFLOPs: 466.3002. Time: 24.7490 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #126: GFLOPs: 204.2178. Time: 56.5106 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #127: GFLOPs: 590.7624. Time: 19.5349 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #128: GFLOPs: 219.7038. Time: 52.5275 us. Best GFLOPs: 864.4680
2024-04-29 20:39:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:39:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:39:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 391 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:39:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 787 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:39:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1183 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:39:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1570 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:39:52 [INFO] [evolutionary_search.cc:723] Sampled 70 candidate(s)
2024-04-29 20:40:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:40:18 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:40:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 162 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:40:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 158 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:40:51 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.1082  1.9066  1.9064  1.9011  1.8974  1.8812  1.8795  1.8780  1.8616  1.8572  1.8532  1.8289  1.7512  1.7361  1.7337  1.6600
[17 : 32]:	1.6362  1.6350  1.5402  1.4608  1.4056  1.3972  1.3915  1.3887  1.3863  1.3834  1.3809  1.3756  1.1998  1.1876  1.1827  1.1760
[33 : 48]:	1.1760  1.1595  1.1545  1.1545  1.1391  1.1296  1.1249  1.1206  1.1181  1.1126  1.1109  1.1070  1.1070  1.1015  1.0991  1.0986
[49 : 64]:	1.0983  1.0966  1.0963  1.0932  1.0932  1.0929  1.0928  1.0897  1.0885  1.0882  1.0870  1.0838  1.0834  1.0821  1.0821  1.0744
2024-04-29 20:40:51 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:40:51 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #129: GFLOPs: 517.9808. Time: 22.2797 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #130: GFLOPs: 387.8053. Time: 29.7584 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #131: GFLOPs: 379.3524. Time: 30.4215 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #132: GFLOPs: 510.7296. Time: 22.5961 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #133: GFLOPs: 527.1215. Time: 21.8934 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #134: GFLOPs: 512.2290. Time: 22.5299 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #135: GFLOPs: 374.1662. Time: 30.8432 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #136: GFLOPs: 510.4746. Time: 22.6074 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #137: GFLOPs: 530.6453. Time: 21.7480 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #138: GFLOPs: 528.8516. Time: 21.8218 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #139: GFLOPs: 333.9473. Time: 34.5578 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #140: GFLOPs: 388.3790. Time: 29.7145 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #141: GFLOPs: 509.7584. Time: 22.6391 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #142: GFLOPs: 365.3859. Time: 31.5844 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #143: GFLOPs: 509.7915. Time: 22.6376 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #144: GFLOPs: 307.7955. Time: 37.4940 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #145: GFLOPs: 488.1808. Time: 23.6398 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #146: GFLOPs: 512.5065. Time: 22.5177 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #147: GFLOPs: 379.3326. Time: 30.4231 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #148: GFLOPs: 509.7774. Time: 22.6383 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #149: GFLOPs: 508.6533. Time: 22.6883 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #150: GFLOPs: 467.4659. Time: 24.6873 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #151: GFLOPs: 350.0596. Time: 32.9672 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #152: GFLOPs: 361.8708. Time: 31.8912 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #153: GFLOPs: 510.5903. Time: 22.6022 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #154: GFLOPs: 358.3611. Time: 32.2035 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #155: GFLOPs: 508.7086. Time: 22.6858 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #156: GFLOPs: 512.4420. Time: 22.5206 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #157: GFLOPs: 493.8811. Time: 23.3669 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #158: GFLOPs: 762.9526. Time: 15.1261 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #159: GFLOPs: 504.4511. Time: 22.8773 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #160: GFLOPs: 309.2072. Time: 37.3228 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #161: GFLOPs: 178.8010. Time: 64.5437 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #162: GFLOPs: 196.1164. Time: 58.8451 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #163: GFLOPs: 178.9023. Time: 64.5072 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #164: GFLOPs: 309.1981. Time: 37.3239 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #165: GFLOPs: 610.8212. Time: 18.8934 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #166: GFLOPs: 805.8542. Time: 14.3208 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #167: GFLOPs: 791.0963. Time: 14.5880 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #168: GFLOPs: 646.2593. Time: 17.8574 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #169: GFLOPs: 305.2303. Time: 37.8091 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #170: GFLOPs: 305.2633. Time: 37.8050 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #171: GFLOPs: 389.0830. Time: 29.6607 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #172: GFLOPs: 216.1602. Time: 53.3885 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #173: GFLOPs: 216.1596. Time: 53.3887 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #174: GFLOPs: 216.1402. Time: 53.3935 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #175: GFLOPs: 821.1475. Time: 14.0541 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #176: GFLOPs: 791.0608. Time: 14.5886 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #177: GFLOPs: 788.6337. Time: 14.6335 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #178: GFLOPs: 765.3320. Time: 15.0790 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #179: GFLOPs: 388.5020. Time: 29.7051 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #180: GFLOPs: 705.8015. Time: 16.3509 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #181: GFLOPs: 764.9346. Time: 15.0869 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #182: GFLOPs: 837.1089. Time: 13.7861 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #183: GFLOPs: 717.2367. Time: 16.0902 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #184: GFLOPs: 390.2646. Time: 29.5709 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #185: GFLOPs: 386.9606. Time: 29.8234 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #186: GFLOPs: 376.4253. Time: 30.6581 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #187: GFLOPs: 373.5876. Time: 30.8910 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #188: GFLOPs: 837.5756. Time: 13.7784 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #189: GFLOPs: 833.8075. Time: 13.8407 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #190: GFLOPs: 181.7238. Time: 63.5056 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #191: GFLOPs: 388.4878. Time: 29.7062 us. Best GFLOPs: 864.4680
2024-04-29 20:42:43 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #192: GFLOPs: 172.9158. Time: 66.7405 us. Best GFLOPs: 864.4680
2024-04-29 20:46:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:46:37 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:46:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 393 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:46:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 784 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:46:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1174 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:46:48 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-29 20:47:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 161 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:47:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 158 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:47:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:47:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 165 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:47:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.4122  2.3737  2.2777  2.2770  2.2722  2.2706  2.2686  2.2586  2.1547  2.1434  2.1211  2.1191  2.1157  2.0212  2.0089  2.0048
[17 : 32]:	1.9844  1.9780  1.9756  1.9637  1.9637  1.9605  1.9447  1.9439  1.8573  1.8345  1.7617  1.7522  1.7334  1.7270  1.6948  1.6923
[33 : 48]:	1.6888  1.6801  1.6753  1.6474  1.6188  1.6188  1.6105  1.6085  1.6074  1.5786  1.5732  1.5639  1.5607  1.5543  1.5529  1.5199
[49 : 64]:	1.5193  1.5101  1.5084  1.5071  1.4977  1.4851  1.4714  1.4453  1.4108  1.4035  1.3988  1.3738  1.3514  1.3339  1.3289  1.3206
2024-04-29 20:47:46 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:47:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #193: GFLOPs: 825.5179. Time: 13.9797 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #194: GFLOPs: 728.3177. Time: 15.8454 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #195: GFLOPs: 603.4237. Time: 19.1250 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #196: GFLOPs: 611.6481. Time: 18.8678 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #197: GFLOPs: 603.4612. Time: 19.1238 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #198: GFLOPs: 600.3631. Time: 19.2225 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #199: GFLOPs: 832.3719. Time: 13.8646 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #200: GFLOPs: 603.2490. Time: 19.1305 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #201: GFLOPs: 793.9301. Time: 14.5359 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #202: GFLOPs: 630.3421. Time: 18.3083 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #203: GFLOPs: 791.5578. Time: 14.5795 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #204: GFLOPs: 828.2436. Time: 13.9337 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #205: GFLOPs: 793.5518. Time: 14.5428 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #206: GFLOPs: 821.4669. Time: 14.0486 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #207: GFLOPs: 821.5271. Time: 14.0476 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #208: GFLOPs: 812.0064. Time: 14.2123 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #209: GFLOPs: 675.7561. Time: 17.0779 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #210: GFLOPs: 635.7436. Time: 18.1527 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #211: GFLOPs: 819.4687. Time: 14.0829 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #212: GFLOPs: 602.5984. Time: 19.1512 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #213: GFLOPs: 614.9057. Time: 18.7679 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #214: GFLOPs: 856.8310. Time: 13.4688 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #215: GFLOPs: 615.0351. Time: 18.7639 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #216: GFLOPs: 609.7424. Time: 18.9268 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #217: GFLOPs: 619.4865. Time: 18.6291 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #218: GFLOPs: 598.9147. Time: 19.2690 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #219: GFLOPs: 654.2663. Time: 17.6388 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #220: GFLOPs: 819.5144. Time: 14.0821 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #221: GFLOPs: 644.5174. Time: 17.9056 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #222: GFLOPs: 647.3769. Time: 17.8265 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #223: GFLOPs: 651.5246. Time: 17.7130 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #224: GFLOPs: 654.4598. Time: 17.6336 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #225: GFLOPs: 644.6069. Time: 17.9031 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #226: GFLOPs: 651.9141. Time: 17.7025 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #227: GFLOPs: 702.3884. Time: 16.4303 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #228: GFLOPs: 609.7974. Time: 18.9251 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #229: GFLOPs: 697.0709. Time: 16.5557 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #230: GFLOPs: 697.0222. Time: 16.5568 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #231: GFLOPs: 600.0240. Time: 19.2334 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #232: GFLOPs: 600.7623. Time: 19.2097 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #233: GFLOPs: 671.1141. Time: 17.1960 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #234: GFLOPs: 601.1364. Time: 19.1978 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #235: GFLOPs: 604.2772. Time: 19.0980 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #236: GFLOPs: 600.0988. Time: 19.2310 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #237: GFLOPs: 611.3426. Time: 18.8773 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #238: GFLOPs: 610.8701. Time: 18.8919 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #239: GFLOPs: 619.5659. Time: 18.6267 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #240: GFLOPs: 611.2670. Time: 18.8796 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #241: GFLOPs: 600.0687. Time: 19.2319 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #242: GFLOPs: 595.3340. Time: 19.3849 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #243: GFLOPs: 600.0689. Time: 19.2319 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #244: GFLOPs: 604.2416. Time: 19.0991 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #245: GFLOPs: 431.3631. Time: 26.7535 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #246: GFLOPs: 625.5727. Time: 18.4479 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #247: GFLOPs: 702.2427. Time: 16.4337 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #248: GFLOPs: 581.3243. Time: 19.8521 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #249: GFLOPs: 710.8484. Time: 16.2348 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #250: GFLOPs: 604.7644. Time: 19.0826 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #251: GFLOPs: 585.8168. Time: 19.6998 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #252: GFLOPs: 611.0864. Time: 18.8852 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #253: GFLOPs: 656.2653. Time: 17.5851 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #254: GFLOPs: 130.0951. Time: 88.7080 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #255: GFLOPs: 77.9288. Time: 148.0901 us. Best GFLOPs: 864.4680
2024-04-29 20:49:35 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #256: GFLOPs: 63.5539. Time: 181.5858 us. Best GFLOPs: 864.4680
2024-04-29 20:53:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:53:05 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:53:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 390 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:53:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 778 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:53:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:53:16 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2024-04-29 20:53:28 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 168 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:53:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 187 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:53:58 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 160 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:54:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:54:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.5312  1.4988  1.4617  1.4523  1.4512  1.4260  1.4221  1.4129  1.4073  1.4034  1.4026  1.3968  1.3915  1.3904  1.3794  1.3725
[17 : 32]:	1.3725  1.3709  1.3672  1.3635  1.3623  1.3576  1.3523  1.3511  1.3494  1.3476  1.3474  1.3441  1.3388  1.3353  1.3311  1.3304
[33 : 48]:	1.3255  1.3255  1.3252  1.3240  1.3205  1.3192  1.3131  1.3116  1.3105  1.3074  1.3010  1.2992  1.2962  1.2961  1.2961  1.2959
[49 : 64]:	1.2959  1.2959  1.2927  1.2891  1.2848  1.2839  1.2813  1.2702  1.2682  1.2668  1.2652  1.2633  1.2506  1.2469  1.2416  1.2413
2024-04-29 20:54:18 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:54:18 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #257: GFLOPs: 753.3417. Time: 15.3191 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #258: GFLOPs: 661.2534. Time: 17.4524 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #259: GFLOPs: 796.3665. Time: 14.4914 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #260: GFLOPs: 807.6238. Time: 14.2894 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #261: GFLOPs: 796.3360. Time: 14.4920 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #262: GFLOPs: 784.6423. Time: 14.7080 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #263: GFLOPs: 778.1006. Time: 14.8316 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #264: GFLOPs: 741.1582. Time: 15.5709 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #265: GFLOPs: 739.7592. Time: 15.6003 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #266: GFLOPs: 738.2425. Time: 15.6324 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #267: GFLOPs: 255.4838. Time: 45.1711 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #268: GFLOPs: 211.3601. Time: 54.6010 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #269: GFLOPs: 722.5535. Time: 15.9718 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #270: GFLOPs: 532.4523. Time: 21.6742 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #271: GFLOPs: 740.0066. Time: 15.5951 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #272: GFLOPs: 708.5000. Time: 16.2886 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #273: GFLOPs: 719.9443. Time: 16.0297 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #274: GFLOPs: 677.2976. Time: 17.0390 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #275: GFLOPs: 662.3740. Time: 17.4229 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #276: GFLOPs: 628.2387. Time: 18.3696 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #277: GFLOPs: 704.4686. Time: 16.3818 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #278: GFLOPs: 671.4235. Time: 17.1881 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #279: GFLOPs: 374.5228. Time: 30.8138 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #280: GFLOPs: 374.5248. Time: 30.8137 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #281: GFLOPs: 717.7995. Time: 16.0776 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #282: GFLOPs: 635.8082. Time: 18.1509 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #283: GFLOPs: 751.0331. Time: 15.3661 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #284: GFLOPs: 635.7713. Time: 18.1519 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #285: GFLOPs: 399.0275. Time: 28.9215 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #286: GFLOPs: 399.7159. Time: 28.8717 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #287: GFLOPs: 689.5695. Time: 16.7358 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #288: GFLOPs: 166.4625. Time: 69.3278 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #289: GFLOPs: 181.5115. Time: 63.5799 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #290: GFLOPs: 183.0356. Time: 63.0505 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #291: GFLOPs: 767.2745. Time: 15.0409 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #292: GFLOPs: 175.0772. Time: 65.9165 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #293: GFLOPs: 663.5843. Time: 17.3911 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #294: GFLOPs: 173.6748. Time: 66.4488 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #295: GFLOPs: 707.7204. Time: 16.3066 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #296: GFLOPs: 765.5700. Time: 15.0744 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #297: GFLOPs: 757.8840. Time: 15.2272 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #298: GFLOPs: 751.2741. Time: 15.3612 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #299: GFLOPs: 166.4522. Time: 69.3321 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #300: GFLOPs: 723.8177. Time: 15.9439 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #301: GFLOPs: 181.4908. Time: 63.5871 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #302: GFLOPs: 183.0200. Time: 63.0558 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #303: GFLOPs: 685.5451. Time: 16.8340 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:121] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #304: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  275: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  274: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  273: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  272: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  271: tvm::transform::Pass::operator()(tvm::IRModule) const
  270: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  269: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  268: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  267: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  266: _ZN3tvm7runtime13PackedFun
  265: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  264: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  263: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  262: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  261: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  260: _ZZN3tvm3tir11StmtFunctorI
  259: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  258: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  257: _ZZN3tvm3tir11StmtFunctorI
  256: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  255: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  254: _ZZN3tvm3tir11StmtFunctorI
  253: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  252: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  251: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  250: _ZZN3tvm3tir11StmtFunctorI
  249: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  248: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  247: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  246: _ZZN3tvm3tir11StmtFunctorI
  245: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  244: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  243: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  242: _ZZN3tvm3tir11StmtFunctorI
  241: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  240: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  239: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  238: _ZZN3tvm3tir11StmtFunctorI
  237: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  236: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  235: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  234: _ZZN3tvm3tir11StmtFunctorI
  233: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  232: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  231: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  230: _ZZN3tvm3tir11StmtFunctorI
  229: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  228: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  227: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  226: _ZZN3tvm3tir11StmtFunctorI
  225: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  224: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  223: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  222: _ZZN3tvm3tir11StmtFunctorI
  221: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  220: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  219: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  218: _ZZN3tvm3tir11StmtFunctorI
  217: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  216: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  215: _ZZN3tvm3tir11StmtFunctorI
  214: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  213: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  212: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  211: _ZZN3tvm3tir11StmtFunctorI
  210: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  209: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  208: _ZZN3tvm3tir11StmtFunctorI
  207: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  206: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  205: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  204: _ZZN3tvm3tir11StmtFunctorI
  203: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  202: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  201: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  200: _ZZN3tvm3tir11StmtFunctorI
  199: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  198: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  197: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  196: _ZZN3tvm3tir11StmtFunctorI
  195: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorI
  188: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  187: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  186: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  185: _ZZN3tvm3tir11StmtFunctorI
  184: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  183: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  182: _ZZN3tvm3tir11StmtFunctorI
  181: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  180: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  179: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  178: _ZZN3tvm3tir11StmtFunctorI
  177: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  176: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  175: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  174: _ZZN3tvm3tir11StmtFunctorI
  173: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  172: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  171: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  170: _ZZN3tvm3tir11StmtFunctorI
  169: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  168: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  167: _ZZN3tvm3tir11StmtFunctorI
  166: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorI
  156: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  155: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  154: _ZZN3tvm3tir11StmtFunctorI
  153: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  152: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  151: _ZZN3tvm3tir11StmtFunctorI
  150: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  149: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  148: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  147: _ZZN3tvm3tir11StmtFunctorI
  146: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorIFNS
  121: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  120: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  119: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  118: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  117: _ZZN3tvm3tir11StmtFunctorI
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorIFNS
  89: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  88: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  87: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  86: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  85: _ZZN3tvm3tir11StmtFunctorI
  84: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  83: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  82: _ZZN3tvm3tir11StmtFunctorI
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorIFNS
  54: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  53: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  52: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  51: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  50: _ZZN3tvm3tir11StmtFunctorI
  49: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  48: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  47: _ZZN3tvm3tir11StmtFunctorI
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorIFNS
  31: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  30: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  29: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  28: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  27: _ZZN3tvm3tir11StmtFunctorI
  26: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorI
  22: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  21: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  20: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  19: _ZZN3tvm3tir11StmtFunctorI
  18: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AllocateNode const*)
  17: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  16: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  15: _ZZN3tvm3tir11StmtFunctorI
  14: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AllocateNode const*)
  13: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  12: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  11: _ZZN3tvm3tir11StmtFunctorIFNS
  10: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  9: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(224), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + nu_3_init + nu_4_init)
                            v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) // T.int64(448))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(448) // T.int64(224))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(224) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(128))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128) // T.int64(64))
                                        v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(64) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(512))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(32), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + nu_3 + nu_4)
                                v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(128), ci_0_fused * T.int64(32) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(13), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                        T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                        conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[2, 1, 1, 2, 1])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[16, 1, 2, 1, 1])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[7, 1, 7, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[4, 32, 1])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch")
l129, l130, l131, l132, l133 = sch.get_loops(block=b95)
l134, l135 = sch.split(loop=l133, factors=[None, 56], preserve_unit_iters=True)
sch.bind(loop=l135, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch")
l136, l137, l138, l139, l140 = sch.get_loops(block=b106)
l141, l142, l143 = sch.split(loop=l140, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l143)
sch.bind(loop=l142, thread_axis="threadIdx.x")
b144 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b144, ann_key="meta_schedule.unroll_explicit")
b145, b146, b147, b148, b149, b150, b151, b152, b153 = sch.get_child_blocks(b144)
l154, l155, l156, l157, l158, l159 = sch.get_loops(block=b145)
l160, l161, l162, l163, l164, l165 = sch.get_loops(block=b146)
sch.annotate(block_or_loop=l160, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l160, ann_key="pragma_unroll_explicit", ann_val=1)
l166, l167, l168, l169, l170, l171 = sch.get_loops(block=b147)
l172, l173, l174, l175, l176, l177 = sch.get_loops(block=b148)
l178, l179, l180, l181, l182, l183, l184 = sch.get_loops(block=b149)
l185, l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198 = sch.get_loops(block=b150)
sch.annotate(block_or_loop=l185, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l185, ann_key="pragma_unroll_explicit", ann_val=1)
l199, l200, l201, l202, l203, l204, l205 = sch.get_loops(block=b151)
l206, l207, l208, l209, l210, l211, l212, l213 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l206, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l206, ann_key="pragma_unroll_explicit", ann_val=1)
l214, l215, l216, l217 = sch.get_loops(block=b153)
b218 = sch.get_block(name="data_pack", func_name="main")
l219, l220, l221, l222, l223, l224 = sch.get_loops(block=b218)
b225 = sch.decompose_reduction(block=b218, loop=l223)
b226 = sch.get_block(name="bgemm", func_name="main")
l227, l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240 = sch.get_loops(block=b226)
b241 = sch.decompose_reduction(block=b226, loop=l230)
b242 = sch.get_block(name="inverse", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b242)
b251 = sch.decompose_reduction(block=b242, loop=l249)
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #305: GFLOPs: 428.0464. Time: 26.9608 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:121] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #306: Error in building:
LocalBuilder: An exception occurred
Traceback (most recent call last):
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/exec/popen_worker.py", line 87, in main
    result = fn(*args, **kwargs)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 165, in <lambda>
    lambda x: _worker_func(*x),
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 231, in _worker_func
    rt_mod: Module = f_build(mod, target, _deserialize_params(params))
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
  File "Objects/call.c", line 200, in PyVectorcall_Call
  File "Python/ceval.c", line 4963, in call_function
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/meta_schedule/builder/local_builder.py", line 261, in default_build
    return tvm_build(mod, target=target)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/driver/build_module.py", line 281, in build
    rt_mod_host = _driver_ffi.tir_to_runtime(annotated_mods, target_host)
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 239, in __call__
    raise_last_ffi_error()
  File "/mnt/home/gverma/ceph/opt/tvm/python/tvm/_ffi/base.py", line 481, in raise_last_ffi_error
    raise py_err
tvm.error.InternalError: Traceback (most recent call last):
  275: tvm::runtime::PackedFuncObj::Extractor<tvm::runtime::PackedFuncSubObj<tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)>::AssignTypedLambda<tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}>(tvm::__mk_TVM22::{lambda(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}> >::Call(tvm::runtime::PackedFuncObj const*, std::allocator<char>, tvm::runtime::TVMArgs const&)
  274: tvm::TIRToRuntime(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  273: tvm::SplitMixedModule(tvm::IRModule, tvm::Target const&, tvm::Target const&)
  272: tvm::ApplyPasses(tvm::IRModule, tvm::transform::Sequential)
  271: tvm::transform::Pass::operator()(tvm::IRModule) const
  270: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  269: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  268: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  267: tvm::tir::transform::PrimFuncPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  266: _ZN3tvm7runtime13PackedFun
  265: tvm::runtime::TypedPackedFunc<tvm::tir::PrimFunc (tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::tir::transform::LowerTVMBuiltin()::{lambda(tvm::tir::PrimFunc, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const, tvm::runtime::TVMRetValue) const
  264: tvm::tir::BuiltinLower::VisitBodyAndRealizeAlloca(tvm::tir::Stmt)
  263: tvm::tir::BuiltinLower::GetMaxStack(tvm::tir::Stmt)
  262: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  261: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  260: _ZZN3tvm3tir11StmtFunctorI
  259: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  258: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  257: _ZZN3tvm3tir11StmtFunctorI
  256: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  255: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  254: _ZZN3tvm3tir11StmtFunctorI
  253: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  252: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  251: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  250: _ZZN3tvm3tir11StmtFunctorI
  249: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  248: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  247: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  246: _ZZN3tvm3tir11StmtFunctorI
  245: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  244: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  243: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  242: _ZZN3tvm3tir11StmtFunctorI
  241: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  240: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  239: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  238: _ZZN3tvm3tir11StmtFunctorI
  237: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  236: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  235: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  234: _ZZN3tvm3tir11StmtFunctorI
  233: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  232: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  231: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  230: _ZZN3tvm3tir11StmtFunctorI
  229: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  228: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  227: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  226: _ZZN3tvm3tir11StmtFunctorI
  225: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  224: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  223: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  222: _ZZN3tvm3tir11StmtFunctorI
  221: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  220: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  219: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  218: _ZZN3tvm3tir11StmtFunctorI
  217: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  216: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  215: _ZZN3tvm3tir11StmtFunctorI
  214: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  213: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  212: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  211: _ZZN3tvm3tir11StmtFunctorI
  210: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  209: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  208: _ZZN3tvm3tir11StmtFunctorI
  207: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  206: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  205: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  204: _ZZN3tvm3tir11StmtFunctorI
  203: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  202: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  201: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  200: _ZZN3tvm3tir11StmtFunctorI
  199: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  198: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  197: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  196: _ZZN3tvm3tir11StmtFunctorI
  195: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  194: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  193: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  192: _ZZN3tvm3tir11StmtFunctorI
  191: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  190: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  189: _ZZN3tvm3tir11StmtFunctorI
  188: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  187: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  186: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  185: _ZZN3tvm3tir11StmtFunctorI
  184: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  183: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  182: _ZZN3tvm3tir11StmtFunctorI
  181: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  180: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  179: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  178: _ZZN3tvm3tir11StmtFunctorI
  177: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  176: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  175: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  174: _ZZN3tvm3tir11StmtFunctorI
  173: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  172: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  171: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  170: _ZZN3tvm3tir11StmtFunctorI
  169: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  168: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  167: _ZZN3tvm3tir11StmtFunctorI
  166: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  165: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  164: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  163: _ZZN3tvm3tir11StmtFunctorI
  162: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  161: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  160: _ZZN3tvm3tir11StmtFunctorI
  159: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  158: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  157: _ZZN3tvm3tir11StmtFunctorI
  156: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  155: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  154: _ZZN3tvm3tir11StmtFunctorI
  153: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  152: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  151: _ZZN3tvm3tir11StmtFunctorI
  150: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  149: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  148: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  147: _ZZN3tvm3tir11StmtFunctorI
  146: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  145: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  144: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  143: _ZZN3tvm3tir11StmtFunctorI
  142: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  141: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  140: _ZZN3tvm3tir11StmtFunctorI
  139: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  138: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  137: _ZZN3tvm3tir11StmtFunctorI
  136: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  135: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  134: _ZZN3tvm3tir11StmtFunctorI
  133: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  132: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  131: _ZZN3tvm3tir11StmtFunctorI
  130: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  129: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  128: _ZZN3tvm3tir11StmtFunctorI
  127: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  126: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  125: _ZZN3tvm3tir11StmtFunctorI
  124: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  123: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  122: _ZZN3tvm3tir11StmtFunctorIFNS
  121: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  120: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  119: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  118: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  117: _ZZN3tvm3tir11StmtFunctorI
  116: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  115: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  114: _ZZN3tvm3tir11StmtFunctorI
  113: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  112: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  111: _ZZN3tvm3tir11StmtFunctorI
  110: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  109: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  108: _ZZN3tvm3tir11StmtFunctorI
  107: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  106: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  105: _ZZN3tvm3tir11StmtFunctorI
  104: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  103: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  102: _ZZN3tvm3tir11StmtFunctorI
  101: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  100: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  99: _ZZN3tvm3tir11StmtFunctorI
  98: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  97: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  96: _ZZN3tvm3tir11StmtFunctorI
  95: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  94: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  93: _ZZN3tvm3tir11StmtFunctorI
  92: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  91: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  90: _ZZN3tvm3tir11StmtFunctorIFNS
  89: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  88: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  87: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  86: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  85: _ZZN3tvm3tir11StmtFunctorI
  84: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  83: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  82: _ZZN3tvm3tir11StmtFunctorI
  81: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  80: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  79: _ZZN3tvm3tir11StmtFunctorI
  78: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  77: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  76: _ZZN3tvm3tir11StmtFunctorI
  75: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  74: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  73: _ZZN3tvm3tir11StmtFunctorI
  72: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  71: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  70: _ZZN3tvm3tir11StmtFunctorI
  69: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  68: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  67: _ZZN3tvm3tir11StmtFunctorI
  66: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  65: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  64: _ZZN3tvm3tir11StmtFunctorI
  63: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  62: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  61: _ZZN3tvm3tir11StmtFunctorI
  60: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  59: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  58: _ZZN3tvm3tir11StmtFunctorI
  57: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  56: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  55: _ZZN3tvm3tir11StmtFunctorIFNS
  54: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  53: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  52: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  51: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  50: _ZZN3tvm3tir11StmtFunctorI
  49: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  48: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  47: _ZZN3tvm3tir11StmtFunctorI
  46: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  45: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  44: _ZZN3tvm3tir11StmtFunctorI
  43: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  42: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  41: _ZZN3tvm3tir11StmtFunctorI
  40: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  39: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  38: _ZZN3tvm3tir11StmtFunctorI
  37: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  36: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  35: _ZZN3tvm3tir11StmtFunctorI
  34: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  33: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  32: _ZZN3tvm3tir11StmtFunctorIFNS
  31: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  30: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  29: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  28: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  27: _ZZN3tvm3tir11StmtFunctorI
  26: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AttrStmtNode const*)
  25: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  24: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  23: _ZZN3tvm3tir11StmtFunctorI
  22: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::LetStmtNode const*)
  21: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  20: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  19: _ZZN3tvm3tir11StmtFunctorI
  18: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AllocateNode const*)
  17: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  16: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  15: _ZZN3tvm3tir11StmtFunctorI
  14: tvm::tir::BuiltinLower::VisitStmt_(tvm::tir::AllocateNode const*)
  13: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  12: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  11: _ZZN3tvm3tir11StmtFunctorIFNS
  10: tvm::runtime::Array<tvm::tir::Stmt, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type> tvm::tir::StmtMutator::Internal::MutateArray<tvm::tir::Stmt, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>(tvm::tir::StmtMutator*, std::enable_if<std::is_base_of<tvm::runtime::ObjectRef, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}>::value, void>::type const&, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  9: tvm::runtime::ObjectPtr<tvm::runtime::Object> tvm::runtime::Array<tvm::tir::Stmt, void>::MapHelper<tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1}, tvm::tir::Stmt>(tvm::runtime::Object, tvm::tir::StmtMutator::Internal::Mutate(tvm::tir::StmtMutator*, tvm::runtime::Array<tvm::tir::Stmt, void> const&)::{lambda(tvm::tir::Stmt const&)#1})
  8: tvm::tir::BuiltinLower::VisitStmt(tvm::tir::Stmt const&)
  7: tvm::tir::StmtFunctor<tvm::tir::Stmt (tvm::tir::Stmt const&)>::VisitStmt(tvm::tir::Stmt const&)
  6: _ZZN3tvm3tir11StmtFunctorIFNS
  5: tvm::tir::StmtExprMutator::VisitExpr(tvm::PrimExpr const&)
  4: _ZZN3tvm3tir11ExprFunctorI
  3: tvm::tir::BuiltinLower::VisitExpr_(tvm::tir::CallNode const*)
  2: tvm::tir::BuiltinLower::MakeCallPacked(tvm::tir::CallNode const*, bool)
  1: tvm::tir::APIType(tvm::runtime::DataType)
  0: _ZN3tvm7runtime6deta
  File "/mnt/home/gverma/ceph/opt/tvm/src/tir/transforms/ir_utils.h", line 157
InternalError: Check failed: t.lanes() == 1 (4 vs. 1) : Cannot pass vector type through packed API.

# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
        inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(49) + ax0)
                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(49) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(4)):
                    for nu in T.unroll(T.int64(4)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(49))
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(49))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(4)):
                            for r_b in T.unroll(T.int64(4)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(49))
                                    v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(49))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(49) + ax2)
                        v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(49) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(224), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(1), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) + co_3_init + co_4_init)
                            v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3_init + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(32)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) // T.int64(448))
                                    v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(448) // T.int64(224))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(224) // T.int64(7))
                                    v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(3)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(56), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("p1_shared"):
                                        v0 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(128))
                                        v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(128) // T.int64(64))
                                        v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(32) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(64) // T.int64(2))
                                        v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(2) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(224) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(2))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(56) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(512))
                                        T.reads(p1[v0, v1, v2, v3])
                                        T.writes(p1_shared[v0, v1, v2, v3])
                                        p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) + co_3 + co_4)
                                v_p = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + p_3 + p_4)
                                v_ci = T.axis.reduce(T.int64(128), ci_0_fused * T.int64(32) + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(4), eps_2_nu_2_co_2_p_2_fused // T.int64(14) + ax0)
                            v1 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(112) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(112) // T.int64(7) * T.int64(2) + eps_2_nu_2_co_2_p_2_fused % T.int64(14) // T.int64(7) + ax2)
                            v3 = T.axis.spatial(T.int64(49), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(7) + eps_2_nu_2_co_2_p_2_fused % T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(13), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 64, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(2)):
                        for ax3 in T.unroll(T.int64(2)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(4)):
                                for ax5 in T.unroll(T.int64(4)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                        v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(49))
                        v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                        v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                        T.where(n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                        T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                        T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                        conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[1, 1, 4, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[2, 1, 1, 1, 2])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[16, 1, 2, 1, 1])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[7, 1, 7, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[4, 32, 1])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch")
l129, l130, l131, l132, l133 = sch.get_loops(block=b95)
l134, l135 = sch.split(loop=l133, factors=[None, 56], preserve_unit_iters=True)
sch.bind(loop=l135, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch")
l136, l137, l138, l139, l140 = sch.get_loops(block=b106)
l141, l142, l143 = sch.split(loop=l140, factors=[None, 56, 4], preserve_unit_iters=True)
sch.vectorize(loop=l143)
sch.bind(loop=l142, thread_axis="threadIdx.x")
b144 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b144, ann_key="meta_schedule.unroll_explicit")
b145, b146, b147, b148, b149, b150, b151, b152, b153 = sch.get_child_blocks(b144)
l154, l155, l156, l157, l158, l159 = sch.get_loops(block=b145)
l160, l161, l162, l163, l164, l165 = sch.get_loops(block=b146)
sch.annotate(block_or_loop=l160, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l160, ann_key="pragma_unroll_explicit", ann_val=1)
l166, l167, l168, l169, l170, l171 = sch.get_loops(block=b147)
l172, l173, l174, l175, l176, l177 = sch.get_loops(block=b148)
l178, l179, l180, l181, l182, l183, l184 = sch.get_loops(block=b149)
l185, l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198 = sch.get_loops(block=b150)
sch.annotate(block_or_loop=l185, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l185, ann_key="pragma_unroll_explicit", ann_val=1)
l199, l200, l201, l202, l203, l204, l205 = sch.get_loops(block=b151)
l206, l207, l208, l209, l210, l211, l212, l213 = sch.get_loops(block=b152)
sch.annotate(block_or_loop=l206, ann_key="pragma_auto_unroll_max_step", ann_val=64)
sch.annotate(block_or_loop=l206, ann_key="pragma_unroll_explicit", ann_val=1)
l214, l215, l216, l217 = sch.get_loops(block=b153)
b218 = sch.get_block(name="data_pack", func_name="main")
l219, l220, l221, l222, l223, l224 = sch.get_loops(block=b218)
b225 = sch.decompose_reduction(block=b218, loop=l223)
b226 = sch.get_block(name="bgemm", func_name="main")
l227, l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240 = sch.get_loops(block=b226)
b241 = sch.decompose_reduction(block=b226, loop=l230)
b242 = sch.get_block(name="inverse", func_name="main")
l243, l244, l245, l246, l247, l248, l249, l250 = sch.get_loops(block=b242)
b251 = sch.decompose_reduction(block=b242, loop=l249)
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #307: GFLOPs: 177.1386. Time: 65.1494 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #308: GFLOPs: 708.2380. Time: 16.2946 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #309: GFLOPs: 739.7254. Time: 15.6010 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #310: GFLOPs: 823.6569. Time: 14.0113 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #311: GFLOPs: 687.7592. Time: 16.7798 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #312: GFLOPs: 632.2236. Time: 18.2538 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #313: GFLOPs: 181.5321. Time: 63.5727 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #314: GFLOPs: 714.6443. Time: 16.1486 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #315: GFLOPs: 604.1205. Time: 19.1029 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #316: GFLOPs: 177.1474. Time: 65.1462 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #317: GFLOPs: 629.5635. Time: 18.3309 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #318: GFLOPs: 35.4014. Time: 325.9894 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #319: GFLOPs: 256.1116. Time: 45.0604 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #320: GFLOPs: 300.1929. Time: 38.4436 us. Best GFLOPs: 864.4680
2024-04-29 20:56:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:56:11 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:56:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 395 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:56:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 791 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:56:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1183 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:56:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1575 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:56:25 [INFO] [evolutionary_search.cc:723] Sampled 65 candidate(s)
2024-04-29 20:56:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 153 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:56:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 151 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:57:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 176 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:57:20 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 135 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 20:57:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.7067  1.6313  1.6183  1.6106  1.5673  1.5655  1.5583  1.5483  1.5394  1.5314  1.5225  1.5172  1.4949  1.4874  1.4677  1.4608
[17 : 32]:	1.4588  1.4491  1.4463  1.4455  1.4182  1.4113  1.3812  1.3456  1.3363  1.3333  1.3290  1.3273  1.3254  1.3190  1.3189  1.2964
[33 : 48]:	1.2821  1.2734  1.2706  1.2646  1.2523  1.2422  1.2415  1.2358  1.2333  1.2331  1.2328  1.2327  1.2322  1.2321  1.2286  1.2277
[49 : 64]:	1.2273  1.2262  1.2240  1.2193  1.2193  1.2165  1.2158  1.2114  1.2027  1.2021  1.2009  1.2002  1.2002  1.1998  1.1992  1.1980
2024-04-29 20:57:25 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:57:25 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #321: GFLOPs: 724.4721. Time: 15.9295 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #322: GFLOPs: 689.9808. Time: 16.7258 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #323: GFLOPs: 355.3027. Time: 32.4807 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #324: GFLOPs: 567.9434. Time: 20.3198 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #325: GFLOPs: 662.8451. Time: 17.4105 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #326: GFLOPs: 583.9902. Time: 19.7614 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #327: GFLOPs: 686.7925. Time: 16.8034 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #328: GFLOPs: 678.6352. Time: 17.0054 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #329: GFLOPs: 663.1299. Time: 17.4030 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #330: GFLOPs: 619.5668. Time: 18.6267 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #331: GFLOPs: 563.9793. Time: 20.4626 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #332: GFLOPs: 663.2611. Time: 17.3996 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #333: GFLOPs: 630.6549. Time: 18.2992 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #334: GFLOPs: 726.8890. Time: 15.8765 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #335: GFLOPs: 725.6450. Time: 15.9038 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #336: GFLOPs: 554.7048. Time: 20.8047 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #337: GFLOPs: 725.6216. Time: 15.9043 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #338: GFLOPs: 331.9717. Time: 34.7634 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #339: GFLOPs: 725.5140. Time: 15.9066 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #340: GFLOPs: 628.9424. Time: 18.3490 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #341: GFLOPs: 611.7552. Time: 18.8645 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #342: GFLOPs: 618.8538. Time: 18.6482 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #343: GFLOPs: 686.7987. Time: 16.8033 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #344: GFLOPs: 719.1696. Time: 16.0470 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #345: GFLOPs: 725.7299. Time: 15.9019 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #346: GFLOPs: 852.7170. Time: 13.5338 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #347: GFLOPs: 685.9471. Time: 16.8242 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #348: GFLOPs: 643.5346. Time: 17.9330 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #349: GFLOPs: 685.8538. Time: 16.8264 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #350: GFLOPs: 766.1310. Time: 15.0633 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #351: GFLOPs: 719.2571. Time: 16.0450 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #352: GFLOPs: 593.5626. Time: 19.4427 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #353: GFLOPs: 672.0057. Time: 17.1732 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #354: GFLOPs: 680.6716. Time: 16.9545 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #355: GFLOPs: 771.8485. Time: 14.9517 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #356: GFLOPs: 702.9997. Time: 16.4161 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #357: GFLOPs: 766.5973. Time: 15.0542 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #358: GFLOPs: 118.5041. Time: 97.3847 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #359: GFLOPs: 726.9669. Time: 15.8748 us. Best GFLOPs: 864.4680
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #360: GFLOPs: 889.0987. Time: 12.9800 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #361: GFLOPs: 711.3903. Time: 16.2224 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #362: GFLOPs: 745.9727. Time: 15.4704 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #363: GFLOPs: 726.7070. Time: 15.8805 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #364: GFLOPs: 670.7720. Time: 17.2048 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #365: GFLOPs: 704.9522. Time: 16.3706 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #366: GFLOPs: 727.4306. Time: 15.8647 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #367: GFLOPs: 620.7370. Time: 18.5916 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #368: GFLOPs: 849.4259. Time: 13.5862 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #369: GFLOPs: 715.8572. Time: 16.1212 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #370: GFLOPs: 727.4814. Time: 15.8636 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #371: GFLOPs: 751.2240. Time: 15.3622 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #372: GFLOPs: 650.5343. Time: 17.7400 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #373: GFLOPs: 663.9316. Time: 17.3820 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #374: GFLOPs: 821.3746. Time: 14.0502 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #375: GFLOPs: 538.8790. Time: 21.4157 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #376: GFLOPs: 738.2801. Time: 15.6316 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #377: GFLOPs: 765.4165. Time: 15.0774 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #378: GFLOPs: 511.0752. Time: 22.5808 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #379: GFLOPs: 639.7666. Time: 18.0386 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #380: GFLOPs: 90.6063. Time: 127.3695 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #381: GFLOPs: 90.4143. Time: 127.6400 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #382: GFLOPs: 230.6432. Time: 50.0361 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #383: GFLOPs: 244.4348. Time: 47.2129 us. Best GFLOPs: 889.0987
2024-04-29 20:59:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #384: GFLOPs: 15.3134. Time: 753.6178 us. Best GFLOPs: 889.0987
2024-04-29 21:05:28 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:05:31 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 21:05:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 394 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:05:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 785 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:05:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1178 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:05:42 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-29 21:05:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:06:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 146 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:06:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 142 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:06:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:06:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.8073  1.8073  1.8023  1.8003  1.7907  1.7050  1.6751  1.6479  1.6392  1.6368  1.6342  1.6064  1.6058  1.5900  1.5801  1.5679
[17 : 32]:	1.5585  1.5557  1.5320  1.5301  1.5244  1.5225  1.4955  1.4955  1.4917  1.4909  1.4904  1.4896  1.4824  1.4738  1.4540  1.4466
[33 : 48]:	1.4364  1.4356  1.4329  1.4209  1.4201  1.4107  1.4101  1.4061  1.3950  1.3950  1.3948  1.3831  1.3825  1.3818  1.3786  1.3770
[49 : 64]:	1.3647  1.3569  1.3468  1.3457  1.3454  1.3426  1.3426  1.3426  1.3403  1.3365  1.3356  1.3327  1.3318  1.3281  1.3261  1.3224
2024-04-29 21:06:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:06:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #385: GFLOPs: 748.4497. Time: 15.4192 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #386: GFLOPs: 756.5879. Time: 15.2533 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #387: GFLOPs: 761.5647. Time: 15.1536 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #388: GFLOPs: 679.7080. Time: 16.9786 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #389: GFLOPs: 705.1622. Time: 16.3657 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #390: GFLOPs: 684.3850. Time: 16.8626 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #391: GFLOPs: 734.0490. Time: 15.7217 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #392: GFLOPs: 739.8546. Time: 15.5983 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #393: GFLOPs: 830.0040. Time: 13.9041 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #394: GFLOPs: 46.0279. Time: 250.7282 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #395: GFLOPs: 780.5526. Time: 14.7850 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #396: GFLOPs: 770.2678. Time: 14.9824 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #397: GFLOPs: 636.5074. Time: 18.1309 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #398: GFLOPs: 781.1196. Time: 14.7743 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #399: GFLOPs: 807.0466. Time: 14.2996 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #400: GFLOPs: 83.8042. Time: 137.7077 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #401: GFLOPs: 797.3487. Time: 14.4736 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #402: GFLOPs: 687.8129. Time: 16.7785 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #403: GFLOPs: 680.0151. Time: 16.9709 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #404: GFLOPs: 636.7054. Time: 18.1253 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #405: GFLOPs: 822.1252. Time: 14.0374 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #406: GFLOPs: 822.2084. Time: 14.0360 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #407: GFLOPs: 781.4353. Time: 14.7683 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #408: GFLOPs: 781.2101. Time: 14.7726 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #409: GFLOPs: 555.8343. Time: 20.7624 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #410: GFLOPs: 573.9315. Time: 20.1078 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #411: GFLOPs: 561.3616. Time: 20.5580 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #412: GFLOPs: 555.9710. Time: 20.7573 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #413: GFLOPs: 789.4942. Time: 14.6176 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #414: GFLOPs: 840.0333. Time: 13.7381 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #415: GFLOPs: 846.6552. Time: 13.6307 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #416: GFLOPs: 746.6146. Time: 15.4571 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #417: GFLOPs: 561.5161. Time: 20.5524 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #418: GFLOPs: 555.6651. Time: 20.7688 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #419: GFLOPs: 682.0985. Time: 16.9191 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #420: GFLOPs: 846.7485. Time: 13.6292 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #421: GFLOPs: 670.4571. Time: 17.2129 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #422: GFLOPs: 735.1420. Time: 15.6983 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #423: GFLOPs: 840.1056. Time: 13.7369 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #424: GFLOPs: 79.8678. Time: 144.4947 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #425: GFLOPs: 81.3862. Time: 141.7990 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #426: GFLOPs: 80.2943. Time: 143.7273 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #427: GFLOPs: 626.1164. Time: 18.4318 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #428: GFLOPs: 69.8976. Time: 165.1055 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #429: GFLOPs: 79.9443. Time: 144.3565 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #430: GFLOPs: 730.0597. Time: 15.8076 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #431: GFLOPs: 707.0687. Time: 16.3216 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #432: GFLOPs: 781.8565. Time: 14.7604 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #433: GFLOPs: 839.7701. Time: 13.7424 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #434: GFLOPs: 873.6464. Time: 13.2096 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #435: GFLOPs: 44.2266. Time: 260.9401 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #436: GFLOPs: 17.2714. Time: 668.1834 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #437: GFLOPs: 504.3957. Time: 22.8798 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #438: GFLOPs: 44.1756. Time: 261.2411 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #439: GFLOPs: 42.1121. Time: 274.0418 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #440: GFLOPs: 42.1152. Time: 274.0221 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #441: GFLOPs: 619.3976. Time: 18.6318 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #442: GFLOPs: 608.3587. Time: 18.9699 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #443: GFLOPs: 664.8917. Time: 17.3569 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #444: GFLOPs: 81.8541. Time: 140.9885 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #445: GFLOPs: 745.0075. Time: 15.4904 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #446: GFLOPs: 14.1592. Time: 815.0540 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #447: GFLOPs: 134.1810. Time: 86.0068 us. Best GFLOPs: 889.0987
2024-04-29 21:08:34 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #448: GFLOPs: 425.0421. Time: 27.1514 us. Best GFLOPs: 889.0987
2024-04-29 21:14:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:14:12 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 21:14:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 394 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:14:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 786 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:14:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1174 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:14:23 [INFO] [evolutionary_search.cc:723] Sampled 56 candidate(s)
2024-04-29 21:14:35 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:14:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 139 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:15:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:15:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 165 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:15:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.0915  2.0839  2.0812  2.0579  2.0503  2.0355  2.0345  2.0086  1.9608  1.9481  1.9424  1.9240  1.9078  1.8941  1.8907  1.8634
[17 : 32]:	1.8249  1.8215  1.7890  1.7890  1.7890  1.7856  1.7094  1.7009  1.6671  1.6532  1.6518  1.6442  1.5824  1.5299  1.5250  1.5223
[33 : 48]:	1.5087  1.5087  1.5087  1.5057  1.4970  1.4889  1.4741  1.4707  1.4656  1.4592  1.4474  1.4385  1.4075  1.4005  1.3929  1.3868
[49 : 64]:	1.3759  1.3649  1.3615  1.3593  1.3417  1.3381  1.3317  1.3277  1.3113  1.3091  1.3063  1.3044  1.2885  1.2766  1.2746  1.2723
2024-04-29 21:15:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:15:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #449: GFLOPs: 599.7169. Time: 19.2432 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #450: GFLOPs: 591.5496. Time: 19.5089 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #451: GFLOPs: 619.2860. Time: 18.6351 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #452: GFLOPs: 525.9624. Time: 21.9416 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #453: GFLOPs: 518.7672. Time: 22.2460 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #454: GFLOPs: 542.8248. Time: 21.2600 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #455: GFLOPs: 505.0992. Time: 22.8479 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #456: GFLOPs: 115.2375. Time: 100.1452 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #457: GFLOPs: 113.7046. Time: 101.4952 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #458: GFLOPs: 516.0569. Time: 22.3628 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #459: GFLOPs: 520.7220. Time: 22.1625 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #460: GFLOPs: 530.9496. Time: 21.7355 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #461: GFLOPs: 421.1378. Time: 27.4031 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #462: GFLOPs: 130.4227. Time: 88.4852 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #463: GFLOPs: 128.7832. Time: 89.6117 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #464: GFLOPs: 474.3233. Time: 24.3304 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #465: GFLOPs: 91.2962. Time: 126.4070 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #466: GFLOPs: 91.1106. Time: 126.6645 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #467: GFLOPs: 128.2982. Time: 89.9504 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #468: GFLOPs: 135.3616. Time: 85.2567 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #469: GFLOPs: 128.3171. Time: 89.9372 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #470: GFLOPs: 126.7249. Time: 91.0672 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #471: GFLOPs: 448.9320. Time: 25.7065 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #472: GFLOPs: 448.8717. Time: 25.7100 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #473: GFLOPs: 87.1336. Time: 132.4458 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #474: GFLOPs: 414.6390. Time: 27.8326 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #475: GFLOPs: 362.8151. Time: 31.8082 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #476: GFLOPs: 362.7508. Time: 31.8138 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #477: GFLOPs: 352.8122. Time: 32.7100 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #478: GFLOPs: 615.6560. Time: 18.7450 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #479: GFLOPs: 636.4917. Time: 18.1314 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #480: GFLOPs: 125.7278. Time: 91.7894 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #481: GFLOPs: 126.5283. Time: 91.2087 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #482: GFLOPs: 126.5749. Time: 91.1751 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #483: GFLOPs: 131.4110. Time: 87.8197 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #484: GFLOPs: 350.6392. Time: 32.9127 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #485: GFLOPs: 716.4311. Time: 16.1083 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #486: GFLOPs: 185.9879. Time: 62.0496 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #487: GFLOPs: 490.9990. Time: 23.5041 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #488: GFLOPs: 705.3710. Time: 16.3609 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #489: GFLOPs: 725.6036. Time: 15.9047 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #490: GFLOPs: 353.9772. Time: 32.6023 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #491: GFLOPs: 716.8602. Time: 16.0986 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #492: GFLOPs: 625.4904. Time: 18.4503 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #493: GFLOPs: 72.3385. Time: 159.5344 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #494: GFLOPs: 86.7105. Time: 133.0921 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #495: GFLOPs: 480.3235. Time: 24.0265 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #496: GFLOPs: 87.1283. Time: 132.4539 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #497: GFLOPs: 741.2841. Time: 15.5682 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #498: GFLOPs: 742.3939. Time: 15.5450 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #499: GFLOPs: 705.8841. Time: 16.3490 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #500: GFLOPs: 733.4716. Time: 15.7341 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #501: GFLOPs: 477.5513. Time: 24.1659 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #502: GFLOPs: 715.8897. Time: 16.1205 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #503: GFLOPs: 365.9479. Time: 31.5359 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #504: GFLOPs: 605.6543. Time: 19.0546 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #505: GFLOPs: 426.0274. Time: 27.0886 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #506: GFLOPs: 639.5934. Time: 18.0435 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #507: GFLOPs: 629.8927. Time: 18.3213 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #508: GFLOPs: 446.0495. Time: 25.8726 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #509: GFLOPs: 624.5616. Time: 18.4777 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #510: GFLOPs: 348.0053. Time: 33.1618 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #511: GFLOPs: 156.5055. Time: 73.7385 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #512: GFLOPs: 263.4841. Time: 43.7995 us. Best GFLOPs: 889.0987
2024-04-29 21:17:13 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:17:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 21:17:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 391 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:17:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 786 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:17:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1180 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:17:28 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-29 21:17:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 123 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:17:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 130 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:18:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:18:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 147 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:18:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6621  1.6552  1.4643  1.3299  1.3299  1.3279  1.3245  1.3202  1.3188  1.3175  1.3173  1.3067  1.3062  1.2455  1.2424  1.2349
[17 : 32]:	1.2104  1.1946  1.1922  1.1573  1.1274  1.1039  1.0948  1.0795  1.0761  1.0743  1.0738  1.0691  1.0689  1.0684  1.0655  1.0655
[33 : 48]:	1.0649  1.0633  1.0505  1.0464  1.0436  1.0408  1.0408  1.0365  1.0358  1.0293  1.0236  1.0163  1.0115  1.0066  1.0063  1.0056
[49 : 64]:	1.0053  1.0052  1.0033  1.0028  1.0012  0.9996  0.9983  0.9890  0.9882  0.9877  0.9822  0.9750  0.9746  0.9715  0.9709  0.9708
2024-04-29 21:18:28 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:18:28 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #513: GFLOPs: 508.5183. Time: 22.6943 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #514: GFLOPs: 514.7335. Time: 22.4203 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #515: GFLOPs: 397.8393. Time: 29.0079 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #516: GFLOPs: 606.7498. Time: 19.0202 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #517: GFLOPs: 608.1776. Time: 18.9755 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #518: GFLOPs: 584.0942. Time: 19.7579 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #519: GFLOPs: 591.6609. Time: 19.5052 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #520: GFLOPs: 591.2975. Time: 19.5172 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #521: GFLOPs: 538.5101. Time: 21.4304 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #522: GFLOPs: 590.8524. Time: 19.5319 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #523: GFLOPs: 584.1934. Time: 19.7546 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #524: GFLOPs: 588.9824. Time: 19.5939 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #525: GFLOPs: 538.7486. Time: 21.4209 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #526: GFLOPs: 433.2707. Time: 26.6357 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #527: GFLOPs: 554.7873. Time: 20.8016 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #528: GFLOPs: 576.8279. Time: 20.0068 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #529: GFLOPs: 654.8327. Time: 17.6236 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #530: GFLOPs: 767.8628. Time: 15.0294 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #531: GFLOPs: 727.9012. Time: 15.8545 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #532: GFLOPs: 634.5085. Time: 18.1881 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #533: GFLOPs: 618.3579. Time: 18.6631 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #534: GFLOPs: 677.0575. Time: 17.0451 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #535: GFLOPs: 715.2573. Time: 16.1347 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #536: GFLOPs: 779.1125. Time: 14.8123 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #537: GFLOPs: 768.1745. Time: 15.0233 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #538: GFLOPs: 417.5500. Time: 27.6386 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #539: GFLOPs: 793.9498. Time: 14.5355 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #540: GFLOPs: 780.4045. Time: 14.7878 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #541: GFLOPs: 792.4300. Time: 14.5634 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #542: GFLOPs: 766.0311. Time: 15.0653 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #543: GFLOPs: 762.9826. Time: 15.1255 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #544: GFLOPs: 774.3421. Time: 14.9036 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #545: GFLOPs: 741.3196. Time: 15.5675 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #546: GFLOPs: 763.7557. Time: 15.1102 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #547: GFLOPs: 568.6007. Time: 20.2963 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #548: GFLOPs: 504.1010. Time: 22.8932 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #549: GFLOPs: 635.2161. Time: 18.1678 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #550: GFLOPs: 611.4565. Time: 18.8738 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #551: GFLOPs: 608.0644. Time: 18.9790 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #552: GFLOPs: 584.2171. Time: 19.7538 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #553: GFLOPs: 571.0691. Time: 20.2086 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #554: GFLOPs: 547.8523. Time: 21.0649 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #555: GFLOPs: 616.4241. Time: 18.7217 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #556: GFLOPs: 656.0861. Time: 17.5899 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #557: GFLOPs: 539.3116. Time: 21.3985 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #558: GFLOPs: 860.0648. Time: 13.4182 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #559: GFLOPs: 683.0059. Time: 16.8966 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #560: GFLOPs: 860.0694. Time: 13.4181 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #561: GFLOPs: 707.4343. Time: 16.3131 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #562: GFLOPs: 281.5055. Time: 40.9956 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #563: GFLOPs: 417.5686. Time: 27.6373 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #564: GFLOPs: 851.5094. Time: 13.5530 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #565: GFLOPs: 851.5832. Time: 13.5518 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #566: GFLOPs: 564.2011. Time: 20.4546 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #567: GFLOPs: 626.0372. Time: 18.4342 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #568: GFLOPs: 839.2213. Time: 13.7514 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #569: GFLOPs: 561.8201. Time: 20.5412 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #570: GFLOPs: 697.9592. Time: 16.5346 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #571: GFLOPs: 808.3754. Time: 14.2761 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #572: GFLOPs: 790.7215. Time: 14.5949 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #573: GFLOPs: 839.9540. Time: 13.7394 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #574: GFLOPs: 9.9603. Time: 1158.6523 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #575: GFLOPs: 51.2453. Time: 225.2008 us. Best GFLOPs: 889.0987
2024-04-29 21:20:25 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #576: GFLOPs: 216.9349. Time: 53.1979 us. Best GFLOPs: 889.0987
2024-04-29 21:31:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:31:04 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 21:31:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 393 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:31:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 784 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:31:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1176 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:31:14 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 21:31:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 136 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:31:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 148 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:31:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:32:08 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 186 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:32:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.4757  1.4541  1.4391  1.4377  1.4363  1.4303  1.4125  1.2566  1.1909  1.1881  1.1830  1.1817  1.1734  1.1347  1.0656  1.0266
[17 : 32]:	1.0126  1.0038  0.9991  0.9924  0.9919  0.9866  0.9805  0.9804  0.9780  0.9779  0.9764  0.9764  0.9754  0.9752  0.9736  0.9716
[33 : 48]:	0.9713  0.9709  0.9707  0.9698  0.9671  0.9669  0.9658  0.9631  0.9611  0.9606  0.9602  0.9591  0.9583  0.9583  0.9570  0.9568
[49 : 64]:	0.9561  0.9556  0.9550  0.9544  0.9541  0.9536  0.9534  0.9531  0.9531  0.9531  0.9520  0.9516  0.9498  0.9498  0.9496  0.9493
2024-04-29 21:32:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:32:12 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #577: GFLOPs: 686.9936. Time: 16.7985 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #578: GFLOPs: 762.8916. Time: 15.1273 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #579: GFLOPs: 780.5795. Time: 14.7845 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #580: GFLOPs: 741.5599. Time: 15.5624 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #581: GFLOPs: 697.4999. Time: 16.5455 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #582: GFLOPs: 780.2514. Time: 14.7907 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #583: GFLOPs: 780.6372. Time: 14.7834 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #584: GFLOPs: 359.4426. Time: 32.1066 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #585: GFLOPs: 399.3756. Time: 28.8963 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #586: GFLOPs: 843.0572. Time: 13.6888 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #587: GFLOPs: 456.2101. Time: 25.2964 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #588: GFLOPs: 841.3147. Time: 13.7172 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #589: GFLOPs: 843.1379. Time: 13.6875 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #590: GFLOPs: 414.9652. Time: 27.8107 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #591: GFLOPs: 596.5441. Time: 19.3456 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #592: GFLOPs: 751.1263. Time: 15.3642 us. Best GFLOPs: 889.0987
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #593: GFLOPs: 896.3663. Time: 12.8747 us. Best GFLOPs: 896.3663
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #594: GFLOPs: 514.6444. Time: 22.4242 us. Best GFLOPs: 896.3663
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #595: GFLOPs: 767.9835. Time: 15.0270 us. Best GFLOPs: 896.3663
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #596: GFLOPs: 360.7201. Time: 31.9929 us. Best GFLOPs: 896.3663
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #597: GFLOPs: 899.2303. Time: 12.8337 us. Best GFLOPs: 899.2303
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #598: GFLOPs: 606.7296. Time: 19.0208 us. Best GFLOPs: 899.2303
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #599: GFLOPs: 841.6971. Time: 13.7110 us. Best GFLOPs: 899.2303
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #600: GFLOPs: 899.6361. Time: 12.8279 us. Best GFLOPs: 899.6361
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #601: GFLOPs: 844.0784. Time: 13.6723 us. Best GFLOPs: 899.6361
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #602: GFLOPs: 927.5882. Time: 12.4414 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #603: GFLOPs: 603.7965. Time: 19.1132 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #604: GFLOPs: 603.7965. Time: 19.1132 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #605: GFLOPs: 858.7371. Time: 13.4389 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #606: GFLOPs: 900.2407. Time: 12.8193 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #607: GFLOPs: 841.8051. Time: 13.7092 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #608: GFLOPs: 896.5100. Time: 12.8727 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #609: GFLOPs: 911.4536. Time: 12.6616 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #610: GFLOPs: 901.3157. Time: 12.8040 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #611: GFLOPs: 882.8497. Time: 13.0719 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #612: GFLOPs: 901.7521. Time: 12.7978 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #613: GFLOPs: 516.7830. Time: 22.3314 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #614: GFLOPs: 898.5047. Time: 12.8441 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #615: GFLOPs: 901.0462. Time: 12.8079 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #616: GFLOPs: 884.8829. Time: 13.0418 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #617: GFLOPs: 906.9484. Time: 12.7245 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #618: GFLOPs: 833.3187. Time: 13.8488 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #619: GFLOPs: 885.0281. Time: 13.0397 us. Best GFLOPs: 927.5882
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #620: GFLOPs: 930.1644. Time: 12.4069 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #621: GFLOPs: 899.7961. Time: 12.8257 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #622: GFLOPs: 899.7471. Time: 12.8264 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #623: GFLOPs: 844.0824. Time: 13.6722 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #624: GFLOPs: 862.6498. Time: 13.3779 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #625: GFLOPs: 546.7895. Time: 21.1059 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #626: GFLOPs: 838.9296. Time: 13.7562 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #627: GFLOPs: 868.0983. Time: 13.2940 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #628: GFLOPs: 849.5441. Time: 13.5843 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #629: GFLOPs: 841.9728. Time: 13.7065 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #630: GFLOPs: 883.1224. Time: 13.0678 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #631: GFLOPs: 900.6302. Time: 12.8138 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #632: GFLOPs: 900.8412. Time: 12.8108 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #633: GFLOPs: 900.9373. Time: 12.8094 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #634: GFLOPs: 900.1845. Time: 12.8201 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #635: GFLOPs: 883.0886. Time: 13.0683 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #636: GFLOPs: 839.0010. Time: 13.7550 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #637: GFLOPs: 908.1265. Time: 12.7080 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #638: GFLOPs: 412.0065. Time: 28.0104 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #639: GFLOPs: 121.4516. Time: 95.0213 us. Best GFLOPs: 930.1644
2024-04-29 21:34:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #640: GFLOPs: 164.0376. Time: 70.3527 us. Best GFLOPs: 930.1644
2024-04-29 21:46:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:46:10 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 21:46:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 388 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:46:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 777 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:46:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1163 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:46:21 [INFO] [evolutionary_search.cc:723] Sampled 67 candidate(s)
2024-04-29 21:46:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:46:47 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:47:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 153 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:47:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 164 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 21:47:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.5137  1.3855  1.3690  1.3667  1.3480  1.3455  1.3455  1.3375  1.3367  1.3323  1.3288  1.3279  1.3213  1.2579  1.1986  1.1917
[17 : 32]:	1.1824  1.1695  1.1691  1.1598  1.1575  1.1574  1.1559  1.1432  1.1385  1.1168  1.0218  1.0096  1.0095  1.0091  1.0048  0.9995
[33 : 48]:	0.9987  0.9980  0.9980  0.9946  0.9930  0.9930  0.9927  0.9922  0.9922  0.9840  0.9790  0.9790  0.9782  0.9763  0.9731  0.9694
[49 : 64]:	0.9684  0.9679  0.9675  0.9632  0.9628  0.9626  0.9624  0.9619  0.9609  0.9609  0.9603  0.9603  0.9589  0.9573  0.9570  0.9561
2024-04-29 21:47:19 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:47:19 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #641: GFLOPs: 351.3906. Time: 32.8423 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #642: GFLOPs: 170.0912. Time: 67.8488 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #643: GFLOPs: 577.3862. Time: 19.9875 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #644: GFLOPs: 203.0414. Time: 56.8381 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #645: GFLOPs: 566.0097. Time: 20.3892 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #646: GFLOPs: 652.2358. Time: 17.6937 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #647: GFLOPs: 657.2969. Time: 17.5575 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #648: GFLOPs: 582.2213. Time: 19.8215 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #649: GFLOPs: 431.6413. Time: 26.7363 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #650: GFLOPs: 582.5928. Time: 19.8088 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #651: GFLOPs: 435.5132. Time: 26.4986 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #652: GFLOPs: 425.8788. Time: 27.0980 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #653: GFLOPs: 434.1583. Time: 26.5813 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #654: GFLOPs: 151.4982. Time: 76.1757 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #655: GFLOPs: 530.4435. Time: 21.7563 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #656: GFLOPs: 290.3031. Time: 39.7532 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #657: GFLOPs: 289.2699. Time: 39.8952 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #658: GFLOPs: 293.2977. Time: 39.3473 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #659: GFLOPs: 271.5585. Time: 42.4972 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #660: GFLOPs: 274.3171. Time: 42.0699 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #661: GFLOPs: 271.3477. Time: 42.5302 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #662: GFLOPs: 293.5162. Time: 39.3180 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #663: GFLOPs: 291.0086. Time: 39.6568 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #664: GFLOPs: 268.7578. Time: 42.9401 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #665: GFLOPs: 290.2328. Time: 39.7628 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #666: GFLOPs: 818.6358. Time: 14.0972 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #667: GFLOPs: 151.4443. Time: 76.2028 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #668: GFLOPs: 475.2746. Time: 24.2817 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #669: GFLOPs: 815.8500. Time: 14.1453 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #670: GFLOPs: 776.9916. Time: 14.8528 us. Best GFLOPs: 930.1644
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #671: GFLOPs: 934.0887. Time: 12.3548 us. Best GFLOPs: 934.0887
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #672: GFLOPs: 897.7737. Time: 12.8546 us. Best GFLOPs: 934.0887
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #673: GFLOPs: 936.2873. Time: 12.3258 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #674: GFLOPs: 933.1345. Time: 12.3674 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #675: GFLOPs: 933.1571. Time: 12.3671 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #676: GFLOPs: 932.3359. Time: 12.3780 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #677: GFLOPs: 899.1640. Time: 12.8347 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #678: GFLOPs: 899.0600. Time: 12.8362 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #679: GFLOPs: 816.0859. Time: 14.1413 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #680: GFLOPs: 935.4742. Time: 12.3365 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #681: GFLOPs: 935.5045. Time: 12.3361 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #682: GFLOPs: 899.3965. Time: 12.8314 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #683: GFLOPs: 891.9125. Time: 12.9390 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #684: GFLOPs: 892.0423. Time: 12.9371 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #685: GFLOPs: 897.7722. Time: 12.8546 us. Best GFLOPs: 936.2873
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #686: GFLOPs: 986.3154. Time: 11.7006 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #687: GFLOPs: 555.7823. Time: 20.7644 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #688: GFLOPs: 923.2399. Time: 12.5000 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #689: GFLOPs: 877.6889. Time: 13.1487 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #690: GFLOPs: 881.2066. Time: 13.0962 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #691: GFLOPs: 920.2898. Time: 12.5400 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #692: GFLOPs: 824.1080. Time: 14.0036 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #693: GFLOPs: 742.0417. Time: 15.5523 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #694: GFLOPs: 870.2859. Time: 13.2606 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #695: GFLOPs: 889.6998. Time: 12.9712 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #696: GFLOPs: 876.0308. Time: 13.1736 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #697: GFLOPs: 888.2421. Time: 12.9925 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #698: GFLOPs: 888.4523. Time: 12.9894 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #699: GFLOPs: 899.2808. Time: 12.8330 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #700: GFLOPs: 899.3085. Time: 12.8326 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #701: GFLOPs: 898.7431. Time: 12.8407 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #702: GFLOPs: 16.5285. Time: 698.2173 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #703: GFLOPs: 89.8108. Time: 128.4976 us. Best GFLOPs: 986.3154
2024-04-29 21:49:07 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #704: GFLOPs: 499.4953. Time: 23.1043 us. Best GFLOPs: 986.3154
2024-04-29 22:01:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 22:01:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 22:01:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 389 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 22:01:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 778 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 22:01:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 1173 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 22:01:48 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-04-29 22:02:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 129 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 22:02:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 163 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 22:02:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 175 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 22:02:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xed670c8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x11bc1ee8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13ed30a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9cf5b18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x62cf2e8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x116275a8)]: 159 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x38a1ca8)]: 0 failure(s)
2024-04-29 22:02:50 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.2611  1.2563  1.2406  1.2395  1.2362  1.2212  1.2137  1.1534  1.1428  1.1300  1.1239  1.1134  1.0919  1.0865  1.0187  1.0187
[17 : 32]:	1.0075  1.0041  1.0039  1.0037  0.9875  0.9873  0.9855  0.9840  0.9840  0.9821  0.9799  0.9763  0.9757  0.9717  0.9708  0.9707
[33 : 48]:	0.9681  0.9679  0.9678  0.9678  0.9676  0.9672  0.9660  0.9647  0.9645  0.9645  0.9622  0.9609  0.9598  0.9568  0.9553  0.9550
[49 : 64]:	0.9543  0.9537  0.9497  0.9494  0.9491  0.9487  0.9486  0.9470  0.9456  0.9449  0.9446  0.9438  0.9438  0.9438  0.9432  0.9425
2024-04-29 22:02:50 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 22:02:50 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #705: GFLOPs: 801.2677. Time: 14.4028 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #706: GFLOPs: 114.4715. Time: 100.8153 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #707: GFLOPs: 114.7417. Time: 100.5779 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #708: GFLOPs: 110.7347. Time: 104.2174 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #709: GFLOPs: 818.2663. Time: 14.1036 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #710: GFLOPs: 764.9513. Time: 15.0866 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #711: GFLOPs: 356.3630. Time: 32.3841 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #712: GFLOPs: 35.6794. Time: 323.4495 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #713: GFLOPs: 380.9047. Time: 30.2975 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #714: GFLOPs: 68.7101. Time: 167.9591 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #715: GFLOPs: 183.5999. Time: 62.8567 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #716: GFLOPs: 181.1455. Time: 63.7084 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #717: GFLOPs: 186.8020. Time: 61.7792 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #718: GFLOPs: 183.2969. Time: 62.9606 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #719: GFLOPs: 13.3808. Time: 862.4640 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #720: GFLOPs: 12.7881. Time: 902.4392 us. Best GFLOPs: 986.3154
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #721: GFLOPs: 989.8561. Time: 11.6587 us. Best GFLOPs: 989.8561
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #722: GFLOPs: 14.9134. Time: 773.8339 us. Best GFLOPs: 989.8561
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #723: GFLOPs: 986.0362. Time: 11.7039 us. Best GFLOPs: 989.8561
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #724: GFLOPs: 937.7654. Time: 12.3064 us. Best GFLOPs: 989.8561
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #725: GFLOPs: 962.2945. Time: 11.9927 us. Best GFLOPs: 989.8561
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #726: GFLOPs: 934.6353. Time: 12.3476 us. Best GFLOPs: 989.8561
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #727: GFLOPs: 950.2095. Time: 12.1452 us. Best GFLOPs: 989.8561
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #728: GFLOPs: 16.5685. Time: 696.5328 us. Best GFLOPs: 989.8561
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #729: GFLOPs: 993.2166. Time: 11.6193 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #730: GFLOPs: 960.8695. Time: 12.0105 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #731: GFLOPs: 858.0948. Time: 13.4490 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #732: GFLOPs: 965.6155. Time: 11.9514 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #733: GFLOPs: 965.5792. Time: 11.9519 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #734: GFLOPs: 913.5921. Time: 12.6320 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #735: GFLOPs: 977.7989. Time: 11.8025 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #736: GFLOPs: 969.0569. Time: 11.9090 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #737: GFLOPs: 948.3151. Time: 12.1695 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #738: GFLOPs: 921.2636. Time: 12.5268 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #739: GFLOPs: 967.4412. Time: 11.9289 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #740: GFLOPs: 967.5479. Time: 11.9276 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #741: GFLOPs: 919.2929. Time: 12.5536 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #742: GFLOPs: 958.0416. Time: 12.0459 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #743: GFLOPs: 967.6048. Time: 11.9269 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #744: GFLOPs: 922.3859. Time: 12.5116 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #745: GFLOPs: 929.3691. Time: 12.4175 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #746: GFLOPs: 929.3371. Time: 12.4180 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #747: GFLOPs: 926.1075. Time: 12.4613 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #748: GFLOPs: 935.1327. Time: 12.3410 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #749: GFLOPs: 907.7666. Time: 12.7130 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #750: GFLOPs: 908.7425. Time: 12.6994 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #751: GFLOPs: 102.2965. Time: 112.8140 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #752: GFLOPs: 897.8829. Time: 12.8530 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #753: GFLOPs: 941.5542. Time: 12.2568 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #754: GFLOPs: 891.4067. Time: 12.9464 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #755: GFLOPs: 934.1877. Time: 12.3535 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #756: GFLOPs: 939.6166. Time: 12.2821 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #757: GFLOPs: 938.7472. Time: 12.2935 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #758: GFLOPs: 915.8016. Time: 12.6015 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #759: GFLOPs: 876.1790. Time: 13.1714 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #760: GFLOPs: 930.7910. Time: 12.3986 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #761: GFLOPs: 901.0232. Time: 12.8082 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #762: GFLOPs: 897.8201. Time: 12.8539 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #763: GFLOPs: 938.8995. Time: 12.2915 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #764: GFLOPs: 907.4229. Time: 12.7179 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #765: GFLOPs: 906.0227. Time: 12.7375 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #766: GFLOPs: 119.8192. Time: 96.3158 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #767: GFLOPs: 32.6147. Time: 353.8431 us. Best GFLOPs: 993.2166
2024-04-29 22:04:44 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #768: GFLOPs: 146.8554. Time: 78.5840 us. Best GFLOPs: 993.2166
2024-05-01 15:06:00 [INFO] [task_scheduler.cc:160] Initializing Task #161: "fused_nn_contrib_conv2d_winograd_without_weight_transform_1"
2024-05-01 15:06:00 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(16), T.int64(16)))
        input_tile = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)))
        B = T.alloc_buffer((T.int64(4), T.int64(4)))
        data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
        bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
        A = T.alloc_buffer((T.int64(4), T.int64(2)))
        inverse = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(128), T.int64(16), T.int64(16)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(128), T.int64(49), T.int64(4), T.int64(4)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps, v_p % T.int64(7) * T.int64(2) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps, v_p % T.int64(7) * T.int64(2) + v_nu]
        for i, j in T.grid(T.int64(4), T.int64(4)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(4), T.int64(4), T.int64(128), T.int64(49), T.int64(4), T.int64(4)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(4), T.int64(4), T.int64(32), T.int64(49), T.int64(128)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(4), T.int64(2)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(3) and v_j % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(2) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(4) == T.int64(1) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(4) == T.int64(0) and v_j % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(32), T.int64(49), T.int64(2), T.int64(2), T.int64(4), T.int64(4)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
2024-05-01 15:06:00 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-05-01 15:06:00 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(2)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(25088)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(12544))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(12544) // T.int64(3136))
                                    v2 = T.axis.spatial(T.int64(128), ci_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(3136) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(49), ax0_ax1_ax2_ax3_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(8192)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(4096))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ci_0 * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(16))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(8) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(4) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(4) + co_3 * T.int64(4) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_0 * T.int64(64) + ci_1 * T.int64(32) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(8) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(4) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(7), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(256) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[2, 2, 1, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 4, 1, 1, 4])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 49, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[2, 2, 32])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
v117 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v117)
l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b3)
l124 = sch.fuse(l118, l119, l120, l121, preserve_unit_iters=True)
v125 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l126, l127 = sch.split(loop=l124, factors=[None, v125], preserve_unit_iters=True)
sch.bind(loop=l126, thread_axis="blockIdx.x")
sch.bind(loop=l127, thread_axis="threadIdx.x")
2024-05-01 15:06:00 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(25088)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(12544))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(12544) // T.int64(3136))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(3136) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(49), ax0_ax1_ax2_ax3_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(8192)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(4096))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(16))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(8) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(4) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(4) + co_3 * T.int64(4) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_0_fused * T.int64(64) + ci_1 * T.int64(32) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(8) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(4) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[2, 2, 1, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 4, 1, 1, 4])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 49, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[2, 2, 32])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
2024-05-01 15:06:00 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), "float32"), conv2d_winograd: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            input_tile_local = T.alloc_buffer((T.int64(128), T.int64(49), T.int64(4), T.int64(4)), scope="local")
            data_pack = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)))
            bgemm = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)))
            inverse_local = T.alloc_buffer((T.int64(32), T.int64(49), T.int64(2), T.int64(2)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(32), T.int64(49)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(49)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(4), T.int64(4), T.int64(128), T.int64(32)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax0)
                            v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps and v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps < T.int64(15) and T.int64(1) <= v_p % T.int64(7) * T.int64(2) + v_nu and v_p % T.int64(7) * T.int64(2) + v_nu < T.int64(15), p0[v_p // T.int64(49), v_ci, v_p % T.int64(49) // T.int64(7) * T.int64(2) + v_eps - T.int64(1), v_p % T.int64(7) * T.int64(2) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(4)):
                        for nu in T.unroll(T.int64(4)):
                            for r_a in T.unroll(T.int64(4)):
                                for r_b in T.unroll(T.int64(4)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49))
                                        v_p = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) % T.int64(49))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_eps % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_eps % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_eps % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_nu % T.int64(4) == T.int64(0), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_nu % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_nu % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(4), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(128), (ci_p_fused_0 * T.int64(256) + ci_p_fused_1) // T.int64(49) + ax2)
                            v3 = T.axis.spatial(T.int64(49), (ci_p_fused_0 * T.int64(11) + ci_p_fused_1) % T.int64(49) + ax3)
                            T.where(ci_p_fused_0 * T.int64(256) + ci_p_fused_1 < T.int64(6272))
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(49), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(2), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(25088)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(12544))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(12544) // T.int64(3136))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(3136) // T.int64(49))
                                    v3 = T.axis.spatial(T.int64(49), ax0_ax1_ax2_ax3_fused % T.int64(49))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(8192)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + ax0_ax1_ax2_ax3_fused // T.int64(4096))
                                    v1 = T.axis.spatial(T.int64(4), ax0_ax1_ax2_ax3_fused % T.int64(4096) // T.int64(1024))
                                    v2 = T.axis.spatial(T.int64(128), ci_0_fused * T.int64(64) + ax0_ax1_ax2_ax3_fused % T.int64(1024) // T.int64(16))
                                    v3 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(16))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 2})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(8) + eps_3 + eps_4)
                                    v_nu = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(4) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                    v_co = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(4) + co_3 * T.int64(4) + co_4)
                                    v_p = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + p_3 + p_4)
                                    v_ci = T.axis.reduce(T.int64(128), ci_0_fused * T.int64(64) + ci_1 * T.int64(32) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(4), eps_0_nu_0_co_0_p_0_fused // T.int64(2) * T.int64(2) + eps_1_nu_1_co_1_p_1_fused // T.int64(8) + ax0)
                                v1 = T.axis.spatial(T.int64(4), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(4) * T.int64(2) + ax1)
                                v2 = T.axis.spatial(T.int64(32), eps_0_nu_0_co_0_p_0_fused % T.int64(2) * T.int64(16) + eps_1_nu_1_co_1_p_1_fused % T.int64(4) * T.int64(4) + ax2)
                                v3 = T.axis.spatial(T.int64(49), eps_2_nu_2_co_2_p_2_fused + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(4), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(2)):
                            for ax3 in T.unroll(T.int64(2)):
                                for ax4 in T.unroll(T.int64(4)):
                                    for ax5 in T.unroll(T.int64(4)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49) + ax0)
                                            v_p = T.axis.spatial(T.int64(49), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.where(n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(3) and v_vh % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(2) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(4) == T.int64(1) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(4) == T.int64(0) and v_vh % T.int64(2) == T.int64(0), T.float32(1), T.float32(0))))))))) * T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(3) and v_vw % T.int64(2) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(2) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(4) == T.int64(1) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(4) == T.int64(0) and v_vw % T.int64(2) == T.int64(0), T.float32(1), T.float32(0)))))))))
                    for h_1, w_1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(32), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(49))
                            v_h = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(49) // T.int64(7) * T.int64(2) + h_1)
                            v_w = T.axis.spatial(T.int64(14), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(7) * T.int64(2) + w_1)
                            T.where(n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1 < T.int64(1568))
                            T.reads(inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)])
                            T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                            conv2d_winograd[v_n, v_co, v_h, v_w] = inverse_local[v_co, v_n * T.int64(49) + v_h // T.int64(2) * T.int64(7) + v_w // T.int64(2), v_h % T.int64(2), v_w % T.int64(2)]
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
b5, b6 = sch.get_producers(block=b2)
sch.compute_inline(block=b6)
b7, = sch.get_consumers(block=b2)
l8, l9, l10, l11 = sch.get_loops(block=b7)
l12, l13 = sch.split(loop=l10, factors=[None, 2], preserve_unit_iters=True)
l14, l15 = sch.split(loop=l11, factors=[None, 2], preserve_unit_iters=True)
sch.reorder(l12, l14, l13, l15)
sch.compute_at(block=b2, loop=l14, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l16, l17, l18, l19, l20, l21, l22, l23, l24, l25 = sch.get_loops(block=b2)
sch.unroll(loop=l22)
sch.unroll(loop=l23)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
b26, b27 = sch.get_producers(block=b0)
sch.compute_inline(block=b27)
b28, = sch.get_producers(block=b26)
l29, l30, l31, l32, l33, l34 = sch.get_loops(block=b0)
sch.reorder(l31, l32, l29, l30, l33, l34)
sch.unroll(loop=l29)
sch.unroll(loop=l30)
sch.unroll(loop=l33)
sch.unroll(loop=l34)
l35 = sch.fuse(l31, l32, preserve_unit_iters=True)
v36 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l37, l38 = sch.split(loop=l35, factors=[None, v36], preserve_unit_iters=True)
sch.bind(loop=l37, thread_axis="blockIdx.x")
sch.bind(loop=l38, thread_axis="threadIdx.x")
b39 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b39, loop=l38, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b26, loop=l38, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b26, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b28)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l40, l41, l42, l43, l44 = sch.get_loops(block=b1)
v45, v46, v47, v48, v49 = sch.sample_perfect_tile(loop=l40, n=5, max_innermost_factor=64, decision=[2, 2, 1, 1, 1])
l50, l51, l52, l53, l54 = sch.split(loop=l40, factors=[v45, v46, v47, v48, v49], preserve_unit_iters=True)
v55, v56, v57, v58, v59 = sch.sample_perfect_tile(loop=l41, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 2])
l60, l61, l62, l63, l64 = sch.split(loop=l41, factors=[v55, v56, v57, v58, v59], preserve_unit_iters=True)
v65, v66, v67, v68, v69 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[2, 4, 1, 1, 4])
l70, l71, l72, l73, l74 = sch.split(loop=l42, factors=[v65, v66, v67, v68, v69], preserve_unit_iters=True)
v75, v76, v77, v78, v79 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 49, 1, 1])
l80, l81, l82, l83, l84 = sch.split(loop=l43, factors=[v75, v76, v77, v78, v79], preserve_unit_iters=True)
v85, v86, v87 = sch.sample_perfect_tile(loop=l44, n=3, max_innermost_factor=64, decision=[2, 2, 32])
l88, l89, l90 = sch.split(loop=l44, factors=[v85, v86, v87], preserve_unit_iters=True)
sch.reorder(l50, l60, l70, l80, l51, l61, l71, l81, l52, l62, l72, l82, l88, l89, l53, l63, l73, l83, l90, l54, l64, l74, l84)
l91 = sch.fuse(l50, l60, l70, l80, preserve_unit_iters=True)
sch.bind(loop=l91, thread_axis="blockIdx.x")
l92 = sch.fuse(l51, l61, l71, l81, preserve_unit_iters=True)
sch.bind(loop=l92, thread_axis="vthread.x")
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b94 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b94, loop=l93, preserve_unit_loops=True, index=-1)
b95 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b95, loop=l88, preserve_unit_loops=True, index=-1)
l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b95)
l104 = sch.fuse(l100, l101, l102, l103, preserve_unit_iters=True)
v105 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b95, ann_key="meta_schedule.cooperative_fetch", ann_val=v105)
b106 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b106, loop=l88, preserve_unit_loops=True, index=-1)
l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b106)
l115 = sch.fuse(l111, l112, l113, l114, preserve_unit_iters=True)
v116 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b106, ann_key="meta_schedule.cooperative_fetch", ann_val=v116)
l117 = sch.fuse(l88, preserve_unit_iters=True)
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l117, ann_key="software_pipeline_async_stages", ann_val=[0])
v118 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v118)
l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b3)
l125 = sch.fuse(l119, l120, l121, l122, preserve_unit_iters=True)
v126 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l127, l128 = sch.split(loop=l125, factors=[None, v126], preserve_unit_iters=True)
sch.bind(loop=l127, thread_axis="blockIdx.x")
sch.bind(loop=l128, thread_axis="threadIdx.x")
2024-05-01 17:33:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 17:33:19 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 17:33:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 389 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 17:33:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 783 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 17:33:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1169 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 17:33:30 [INFO] [evolutionary_search.cc:723] Sampled 61 candidate(s)
2024-05-01 17:33:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 136 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 17:33:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 132 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 17:34:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 156 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 17:34:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 160 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 17:34:15 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0000  0.9987  0.9987  0.9984  0.9982  0.9974  0.9961  0.9958  0.9958  0.9957  0.9941  0.9931  0.9923  0.9923  0.9915  0.9900
[17 : 32]:	0.9899  0.9894  0.9886  0.9872  0.9865  0.9858  0.9846  0.9843  0.9843  0.9839  0.9838  0.9835  0.9828  0.9827  0.9823  0.9818
[33 : 48]:	0.9818  0.9800  0.9784  0.9782  0.9780  0.9779  0.9772  0.9762  0.9762  0.9757  0.9746  0.9744  0.9739  0.9738  0.9729  0.9726
[49 : 64]:	0.9711  0.9702  0.9689  0.9689  0.9684  0.9684  0.9684  0.9682  0.9672  0.9665  0.9654  0.9651  0.9648  0.9643  0.9637  0.9633
2024-05-01 17:34:15 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 17:34:15 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #1: GFLOPs: 539.7976. Time: 21.3793 us. Best GFLOPs: 539.7976
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #2: GFLOPs: 130.0342. Time: 88.7496 us. Best GFLOPs: 539.7976
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #3: GFLOPs: 104.0394. Time: 110.9241 us. Best GFLOPs: 539.7976
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #4: GFLOPs: 709.4458. Time: 16.2669 us. Best GFLOPs: 709.4458
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #5: GFLOPs: 92.6100. Time: 124.6138 us. Best GFLOPs: 709.4458
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #6: GFLOPs: 817.4721. Time: 14.1173 us. Best GFLOPs: 817.4721
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #7: GFLOPs: 857.3060. Time: 13.4613 us. Best GFLOPs: 857.3060
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #8: GFLOPs: 874.5484. Time: 13.1959 us. Best GFLOPs: 874.5484
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #9: GFLOPs: 96.1286. Time: 120.0525 us. Best GFLOPs: 874.5484
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #10: GFLOPs: 833.1360. Time: 13.8519 us. Best GFLOPs: 874.5484
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #11: GFLOPs: 977.3216. Time: 11.8083 us. Best GFLOPs: 977.3216
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #12: GFLOPs: 166.2208. Time: 69.4286 us. Best GFLOPs: 977.3216
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #13: GFLOPs: 149.1310. Time: 77.3848 us. Best GFLOPs: 977.3216
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #14: GFLOPs: 170.0838. Time: 67.8517 us. Best GFLOPs: 977.3216
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #15: GFLOPs: 994.5533. Time: 11.6037 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #16: GFLOPs: 303.7832. Time: 37.9892 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #17: GFLOPs: 828.0083. Time: 13.9376 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #18: GFLOPs: 448.1562. Time: 25.7510 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #19: GFLOPs: 936.8289. Time: 12.3187 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #20: GFLOPs: 271.6874. Time: 42.4771 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #21: GFLOPs: 414.7995. Time: 27.8218 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #22: GFLOPs: 888.7134. Time: 12.9856 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #23: GFLOPs: 372.9232. Time: 30.9460 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #24: GFLOPs: 889.1883. Time: 12.9787 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #25: GFLOPs: 574.5326. Time: 20.0867 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #26: GFLOPs: 107.0541. Time: 107.8005 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #27: GFLOPs: 610.4172. Time: 18.9059 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #28: GFLOPs: 603.0952. Time: 19.1354 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #29: GFLOPs: 153.4207. Time: 75.2211 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #30: GFLOPs: 421.4360. Time: 27.3837 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #31: GFLOPs: 363.6184. Time: 31.7379 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #32: GFLOPs: 11.9130. Time: 968.7287 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #33: GFLOPs: 925.5360. Time: 12.4690 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #34: GFLOPs: 746.4113. Time: 15.4613 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #35: GFLOPs: 829.1428. Time: 13.9186 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #36: GFLOPs: 932.3940. Time: 12.3773 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #37: GFLOPs: 835.7385. Time: 13.8087 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #38: GFLOPs: 298.5523. Time: 38.6548 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #39: GFLOPs: 159.9914. Time: 72.1319 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #40: GFLOPs: 89.7472. Time: 128.5888 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #41: GFLOPs: 898.8325. Time: 12.8394 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #42: GFLOPs: 898.9130. Time: 12.8383 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #43: GFLOPs: 939.1860. Time: 12.2877 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #44: GFLOPs: 813.5728. Time: 14.1849 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #45: GFLOPs: 460.9786. Time: 25.0347 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #46: GFLOPs: 729.0283. Time: 15.8299 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #47: GFLOPs: 949.0704. Time: 12.1598 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #48: GFLOPs: 864.9248. Time: 13.3428 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #49: GFLOPs: 857.4736. Time: 13.4587 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #50: GFLOPs: 71.2019. Time: 162.0810 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #51: GFLOPs: 903.2519. Time: 12.7766 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #52: GFLOPs: 921.7380. Time: 12.5203 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #53: GFLOPs: 187.0295. Time: 61.7040 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #54: GFLOPs: 63.0481. Time: 183.0423 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #55: GFLOPs: 207.1771. Time: 55.7034 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #56: GFLOPs: 197.1112. Time: 58.5481 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #57: GFLOPs: 681.9583. Time: 16.9226 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #58: GFLOPs: 983.7099. Time: 11.7316 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #59: GFLOPs: 104.5943. Time: 110.3357 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #60: GFLOPs: 350.3760. Time: 32.9374 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #61: GFLOPs: 80.8530. Time: 142.7341 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #62: GFLOPs: 16.5925. Time: 695.5236 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #63: GFLOPs: 85.4774. Time: 135.0121 us. Best GFLOPs: 994.5533
2024-05-01 18:38:23 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #64: GFLOPs: 439.7696. Time: 26.2421 us. Best GFLOPs: 994.5533
2024-05-01 18:42:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 18:42:17 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 18:42:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 389 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:42:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 779 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:42:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1171 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:42:27 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-05-01 18:42:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 131 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:42:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 160 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:43:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 169 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:43:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 174 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:43:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.5634  1.5108  1.3096  1.2540  1.2205  1.2100  1.1822  1.1779  1.1665  1.1654  1.1567  1.1533  1.1525  1.1503  1.1438  1.1438
[17 : 32]:	1.1418  1.1401  1.1349  1.1347  1.1333  1.1327  1.1315  1.1288  1.1266  1.1227  1.1226  1.1214  1.1202  1.1167  1.1140  1.1114
[33 : 48]:	1.1111  1.1111  1.1107  1.1107  1.1106  1.1086  1.1044  1.1041  1.0986  1.0953  1.0929  1.0929  1.0917  1.0885  1.0883  1.0883
[49 : 64]:	1.0883  1.0873  1.0873  1.0851  1.0844  1.0835  1.0834  1.0823  1.0820  1.0815  1.0814  1.0810  1.0802  1.0799  1.0799  1.0795
2024-05-01 18:43:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 18:43:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #65: GFLOPs: 896.3989. Time: 12.8743 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #66: GFLOPs: 366.4762. Time: 31.4904 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #67: GFLOPs: 356.1296. Time: 32.4053 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #68: GFLOPs: 373.2222. Time: 30.9212 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #69: GFLOPs: 580.9392. Time: 19.8652 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #70: GFLOPs: 862.6437. Time: 13.3780 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #71: GFLOPs: 355.0063. Time: 32.5078 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #72: GFLOPs: 355.0138. Time: 32.5071 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #73: GFLOPs: 412.8154. Time: 27.9555 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #74: GFLOPs: 851.3920. Time: 13.5548 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #75: GFLOPs: 856.2413. Time: 13.4781 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #76: GFLOPs: 852.1425. Time: 13.5429 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #77: GFLOPs: 960.4290. Time: 12.0160 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #78: GFLOPs: 805.7987. Time: 14.3218 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #79: GFLOPs: 921.7022. Time: 12.5208 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #80: GFLOPs: 921.5779. Time: 12.5225 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #81: GFLOPs: 828.1588. Time: 13.9351 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #82: GFLOPs: 873.0241. Time: 13.2190 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #83: GFLOPs: 817.5272. Time: 14.1163 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #84: GFLOPs: 851.9831. Time: 13.5454 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #85: GFLOPs: 849.8451. Time: 13.5795 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #86: GFLOPs: 897.4170. Time: 12.8597 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #87: GFLOPs: 849.8249. Time: 13.5798 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #88: GFLOPs: 767.2574. Time: 15.0412 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #89: GFLOPs: 372.1052. Time: 31.0140 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #90: GFLOPs: 367.1161. Time: 31.4355 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #91: GFLOPs: 952.9133. Time: 12.1107 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #92: GFLOPs: 963.3050. Time: 11.9801 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #93: GFLOPs: 881.1128. Time: 13.0976 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #94: GFLOPs: 836.4192. Time: 13.7975 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #95: GFLOPs: 867.7511. Time: 13.2993 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #96: GFLOPs: 851.2902. Time: 13.5565 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #97: GFLOPs: 933.2551. Time: 12.3658 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #98: GFLOPs: 933.4205. Time: 12.3636 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #99: GFLOPs: 916.6185. Time: 12.5903 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #100: GFLOPs: 910.6863. Time: 12.6723 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #101: GFLOPs: 845.0895. Time: 13.6559 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #102: GFLOPs: 914.9772. Time: 12.6129 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #103: GFLOPs: 828.4533. Time: 13.9302 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #104: GFLOPs: 842.1164. Time: 13.7041 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #105: GFLOPs: 873.2827. Time: 13.2151 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #106: GFLOPs: 752.7408. Time: 15.3313 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #107: GFLOPs: 935.5015. Time: 12.3361 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #108: GFLOPs: 935.3861. Time: 12.3377 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #109: GFLOPs: 935.2323. Time: 12.3397 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #110: GFLOPs: 862.7252. Time: 13.3768 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #111: GFLOPs: 751.4398. Time: 15.3578 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #112: GFLOPs: 763.4598. Time: 15.1160 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #113: GFLOPs: 505.1791. Time: 22.8443 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #114: GFLOPs: 911.5090. Time: 12.6609 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #115: GFLOPs: 881.5648. Time: 13.0909 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #116: GFLOPs: 834.2699. Time: 13.8330 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #117: GFLOPs: 752.8919. Time: 15.3282 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #118: GFLOPs: 813.4056. Time: 14.1879 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #119: GFLOPs: 821.7348. Time: 14.0440 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #120: GFLOPs: 853.8701. Time: 13.5155 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #121: GFLOPs: 853.8583. Time: 13.5157 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #122: GFLOPs: 776.8291. Time: 14.8559 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #123: GFLOPs: 915.4395. Time: 12.6065 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #124: GFLOPs: 778.0287. Time: 14.8330 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #125: GFLOPs: 752.7805. Time: 15.3305 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #126: GFLOPs: 202.9850. Time: 56.8538 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #127: GFLOPs: 42.6096. Time: 270.8420 us. Best GFLOPs: 994.5533
2024-05-01 18:44:45 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #128: GFLOPs: 91.8112. Time: 125.6980 us. Best GFLOPs: 994.5533
2024-05-01 18:47:21 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 18:47:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 18:47:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 396 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:47:32 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 790 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:47:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1183 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:47:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1573 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:47:39 [INFO] [evolutionary_search.cc:723] Sampled 67 candidate(s)
2024-05-01 18:47:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:48:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 135 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:48:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 181 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:48:37 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 156 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:48:41 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.0591  1.8893  1.7912  1.6583  1.6425  1.6087  1.5071  1.4883  1.4860  1.4836  1.4725  1.4642  1.4483  1.4387  1.4383  1.3978
[17 : 32]:	1.3978  1.3942  1.3919  1.3896  1.3893  1.3854  1.3820  1.3737  1.3718  1.3680  1.3680  1.3549  1.3429  1.3402  1.3344  1.3342
[33 : 48]:	1.3342  1.3284  1.3228  1.3226  1.3209  1.3185  1.3161  1.3143  1.3142  1.3141  1.3129  1.3109  1.3078  1.3070  1.3034  1.3019
[49 : 64]:	1.2992  1.2932  1.2897  1.2871  1.2866  1.2861  1.2841  1.2809  1.2731  1.2715  1.2711  1.2684  1.2679  1.2654  1.2645  1.2500
2024-05-01 18:48:41 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 18:48:41 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #129: GFLOPs: 719.2446. Time: 16.0453 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #130: GFLOPs: 696.6857. Time: 16.5648 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #131: GFLOPs: 523.2382. Time: 22.0559 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #132: GFLOPs: 507.7401. Time: 22.7291 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #133: GFLOPs: 362.6244. Time: 31.8249 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #134: GFLOPs: 500.2506. Time: 23.0694 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #135: GFLOPs: 316.2000. Time: 36.4974 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #136: GFLOPs: 862.7039. Time: 13.3771 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #137: GFLOPs: 882.0782. Time: 13.0833 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #138: GFLOPs: 881.3814. Time: 13.0936 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #139: GFLOPs: 529.0992. Time: 21.8116 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #140: GFLOPs: 498.9443. Time: 23.1298 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #141: GFLOPs: 466.4949. Time: 24.7387 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #142: GFLOPs: 849.9054. Time: 13.5785 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #143: GFLOPs: 521.9615. Time: 22.1098 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #144: GFLOPs: 853.4184. Time: 13.5227 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #145: GFLOPs: 887.4111. Time: 13.0047 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #146: GFLOPs: 521.7198. Time: 22.1201 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #147: GFLOPs: 741.1903. Time: 15.5702 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #148: GFLOPs: 469.8878. Time: 24.5601 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #149: GFLOPs: 746.8962. Time: 15.4513 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #150: GFLOPs: 720.1018. Time: 16.0262 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #151: GFLOPs: 740.9769. Time: 15.5747 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #152: GFLOPs: 746.4536. Time: 15.4604 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #153: GFLOPs: 741.0946. Time: 15.5722 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #154: GFLOPs: 474.5071. Time: 24.3210 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #155: GFLOPs: 474.6172. Time: 24.3153 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #156: GFLOPs: 676.5915. Time: 17.0568 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #157: GFLOPs: 914.0979. Time: 12.6250 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #158: GFLOPs: 658.1931. Time: 17.5336 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #159: GFLOPs: 535.9312. Time: 21.5335 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #160: GFLOPs: 741.4982. Time: 15.5637 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #161: GFLOPs: 911.4189. Time: 12.6621 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #162: GFLOPs: 473.2502. Time: 24.3856 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #163: GFLOPs: 914.0172. Time: 12.6261 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #164: GFLOPs: 741.5230. Time: 15.5632 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #165: GFLOPs: 881.6719. Time: 13.0893 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #166: GFLOPs: 742.2108. Time: 15.5488 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #167: GFLOPs: 472.9110. Time: 24.4031 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #168: GFLOPs: 720.4905. Time: 16.0175 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #169: GFLOPs: 911.3967. Time: 12.6624 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #170: GFLOPs: 638.6627. Time: 18.0698 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #171: GFLOPs: 457.5133. Time: 25.2244 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #172: GFLOPs: 744.8794. Time: 15.4931 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #173: GFLOPs: 507.3304. Time: 22.7475 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #174: GFLOPs: 741.1913. Time: 15.5702 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #175: GFLOPs: 351.1319. Time: 32.8665 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #176: GFLOPs: 900.2256. Time: 12.8195 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #177: GFLOPs: 871.4999. Time: 13.2421 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #178: GFLOPs: 465.4433. Time: 24.7946 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #179: GFLOPs: 887.7328. Time: 12.9999 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #180: GFLOPs: 706.6338. Time: 16.3316 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #181: GFLOPs: 522.7749. Time: 22.0754 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #182: GFLOPs: 469.7917. Time: 24.5651 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #183: GFLOPs: 522.6491. Time: 22.0807 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #184: GFLOPs: 651.1450. Time: 17.7234 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #185: GFLOPs: 720.4511. Time: 16.0184 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #186: GFLOPs: 838.5692. Time: 13.7621 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #187: GFLOPs: 667.4371. Time: 17.2907 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #188: GFLOPs: 450.2955. Time: 25.6287 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #189: GFLOPs: 654.6892. Time: 17.6274 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #190: GFLOPs: 8.2336. Time: 1401.6404 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #191: GFLOPs: 123.3966. Time: 93.5235 us. Best GFLOPs: 994.5533
2024-05-01 18:50:05 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #192: GFLOPs: 167.3507. Time: 68.9599 us. Best GFLOPs: 994.5533
2024-05-01 18:56:13 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 18:56:15 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 18:56:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 389 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:56:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 783 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:56:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1176 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:56:26 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-05-01 18:56:38 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 125 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:56:53 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:57:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 141 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:57:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 198 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 18:57:26 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6976  1.4343  1.4198  1.4132  1.4011  1.3229  1.2780  1.2561  1.2284  1.2222  1.1896  1.1639  1.1507  1.1479  1.1447  1.1331
[17 : 32]:	1.1325  1.1281  1.0968  1.0944  1.0942  1.0928  1.0921  1.0757  1.0747  1.0630  1.0557  1.0324  1.0316  1.0257  1.0092  0.9959
[33 : 48]:	0.9836  0.9835  0.9739  0.9729  0.9725  0.9697  0.9688  0.9679  0.9661  0.9659  0.9656  0.9656  0.9649  0.9637  0.9636  0.9633
[49 : 64]:	0.9631  0.9629  0.9624  0.9610  0.9606  0.9599  0.9594  0.9594  0.9589  0.9582  0.9572  0.9572  0.9572  0.9572  0.9570  0.9567
2024-05-01 18:57:26 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 18:57:26 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #193: GFLOPs: 453.6150. Time: 25.4411 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #194: GFLOPs: 776.0415. Time: 14.8710 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #195: GFLOPs: 365.6121. Time: 31.5648 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #196: GFLOPs: 567.2738. Time: 20.3438 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #197: GFLOPs: 365.5429. Time: 31.5708 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #198: GFLOPs: 826.9637. Time: 13.9552 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #199: GFLOPs: 715.5745. Time: 16.1276 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #200: GFLOPs: 544.0112. Time: 21.2137 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #201: GFLOPs: 528.9982. Time: 21.8157 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #202: GFLOPs: 434.3627. Time: 26.5688 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #203: GFLOPs: 391.9652. Time: 29.4426 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #204: GFLOPs: 753.9460. Time: 15.3068 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #205: GFLOPs: 526.4047. Time: 21.9232 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #206: GFLOPs: 389.0083. Time: 29.6664 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #207: GFLOPs: 403.8632. Time: 28.5752 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #208: GFLOPs: 366.8622. Time: 31.4573 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #209: GFLOPs: 388.1293. Time: 29.7336 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #210: GFLOPs: 881.7171. Time: 13.0886 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #211: GFLOPs: 243.3514. Time: 47.4231 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #212: GFLOPs: 480.7440. Time: 24.0055 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #213: GFLOPs: 419.2311. Time: 27.5277 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #214: GFLOPs: 756.2489. Time: 15.2602 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #215: GFLOPs: 640.5928. Time: 18.0153 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #216: GFLOPs: 243.3951. Time: 47.4146 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #217: GFLOPs: 706.1283. Time: 16.3433 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #218: GFLOPs: 242.5114. Time: 47.5874 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #219: GFLOPs: 854.4360. Time: 13.5065 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #220: GFLOPs: 815.6868. Time: 14.1482 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #221: GFLOPs: 620.9583. Time: 18.5850 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #222: GFLOPs: 685.3226. Time: 16.8395 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #223: GFLOPs: 882.0762. Time: 13.0833 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #224: GFLOPs: 333.3735. Time: 34.6173 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #225: GFLOPs: 954.9759. Time: 12.0846 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #226: GFLOPs: 934.9195. Time: 12.3438 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #227: GFLOPs: 948.7952. Time: 12.1633 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #228: GFLOPs: 924.8317. Time: 12.4785 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #229: GFLOPs: 962.3292. Time: 11.9922 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #230: GFLOPs: 945.2827. Time: 12.2085 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #231: GFLOPs: 926.8430. Time: 12.4514 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #232: GFLOPs: 940.4682. Time: 12.2710 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #233: GFLOPs: 954.3414. Time: 12.0926 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #234: GFLOPs: 955.8176. Time: 12.0739 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #235: GFLOPs: 919.5333. Time: 12.5504 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #236: GFLOPs: 916.6431. Time: 12.5899 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #237: GFLOPs: 961.8583. Time: 11.9981 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #238: GFLOPs: 940.7041. Time: 12.2679 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #239: GFLOPs: 922.0704. Time: 12.5158 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #240: GFLOPs: 952.2371. Time: 12.1193 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #241: GFLOPs: 938.9571. Time: 12.2907 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #242: GFLOPs: 919.2190. Time: 12.5547 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #243: GFLOPs: 928.3419. Time: 12.4313 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #244: GFLOPs: 903.3188. Time: 12.7756 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #245: GFLOPs: 954.4593. Time: 12.0911 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #246: GFLOPs: 927.1593. Time: 12.4471 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #247: GFLOPs: 955.0634. Time: 12.0835 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #248: GFLOPs: 954.9810. Time: 12.0845 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #249: GFLOPs: 915.5114. Time: 12.6055 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #250: GFLOPs: 921.7547. Time: 12.5201 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #251: GFLOPs: 945.9563. Time: 12.1998 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #252: GFLOPs: 945.7377. Time: 12.2026 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #253: GFLOPs: 945.7755. Time: 12.2021 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #254: GFLOPs: 274.0845. Time: 42.1056 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #255: GFLOPs: 18.1491. Time: 635.8716 us. Best GFLOPs: 994.5533
2024-05-01 18:58:37 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #256: GFLOPs: 341.9901. Time: 33.7451 us. Best GFLOPs: 994.5533
2024-05-01 19:00:44 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:00:48 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:00:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 386 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:00:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 783 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:00:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1175 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:00:59 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-05-01 19:01:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 140 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:01:25 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 144 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:01:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 159 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:01:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 177 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:01:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.1912  2.1535  2.1394  2.1372  2.1350  2.1338  2.1298  2.1275  2.0611  2.0599  2.0536  2.0430  2.0356  2.0201  2.0034  1.9971
[17 : 32]:	1.9971  1.9795  1.9576  1.9523  1.9471  1.9449  1.9299  1.9236  1.9125  1.9052  1.9051  1.8229  1.7309  1.7143  1.7115  1.6924
[33 : 48]:	1.6620  1.6402  1.6398  1.6371  1.6283  1.6239  1.6194  1.6147  1.6145  1.5977  1.5903  1.5715  1.5714  1.5694  1.5665  1.5446
[49 : 64]:	1.5438  1.5383  1.5331  1.5309  1.5226  1.5164  1.5163  1.5080  1.5048  1.5010  1.4912  1.4905  1.4863  1.4768  1.4723  1.4698
2024-05-01 19:01:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:01:59 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #257: GFLOPs: 460.7301. Time: 25.0482 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #258: GFLOPs: 430.4726. Time: 26.8089 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #259: GFLOPs: 469.4600. Time: 24.5825 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #260: GFLOPs: 446.3550. Time: 25.8549 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #261: GFLOPs: 430.4033. Time: 26.8132 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #262: GFLOPs: 430.5479. Time: 26.8042 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #263: GFLOPs: 437.8762. Time: 26.3556 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #264: GFLOPs: 422.3612. Time: 27.3237 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #265: GFLOPs: 429.7626. Time: 26.8531 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #266: GFLOPs: 464.9275. Time: 24.8221 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #267: GFLOPs: 421.8681. Time: 27.3557 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #268: GFLOPs: 440.2796. Time: 26.2117 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #269: GFLOPs: 431.8494. Time: 26.7234 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #270: GFLOPs: 422.2793. Time: 27.3290 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #271: GFLOPs: 430.0943. Time: 26.8324 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #272: GFLOPs: 422.8536. Time: 27.2919 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #273: GFLOPs: 423.2486. Time: 27.2664 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #274: GFLOPs: 426.2223. Time: 27.0762 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #275: GFLOPs: 380.7579. Time: 30.3092 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #276: GFLOPs: 360.8284. Time: 31.9833 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #277: GFLOPs: 360.0406. Time: 32.0533 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #278: GFLOPs: 355.0348. Time: 32.5052 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #279: GFLOPs: 423.7417. Time: 27.2347 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #280: GFLOPs: 430.2393. Time: 26.8234 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #281: GFLOPs: 442.2476. Time: 26.0951 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #282: GFLOPs: 434.3036. Time: 26.5724 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #283: GFLOPs: 433.9887. Time: 26.5917 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #284: GFLOPs: 422.2546. Time: 27.3306 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #285: GFLOPs: 433.1144. Time: 26.6453 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #286: GFLOPs: 431.0725. Time: 26.7716 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #287: GFLOPs: 430.6310. Time: 26.7990 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #288: GFLOPs: 421.8485. Time: 27.3569 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #289: GFLOPs: 387.7582. Time: 29.7621 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #290: GFLOPs: 358.5296. Time: 32.1884 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #291: GFLOPs: 287.8461. Time: 40.0925 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #292: GFLOPs: 383.6910. Time: 30.0775 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #293: GFLOPs: 442.5991. Time: 26.0743 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #294: GFLOPs: 445.1153. Time: 25.9269 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #295: GFLOPs: 311.2291. Time: 37.0803 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #296: GFLOPs: 393.1031. Time: 29.3574 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #297: GFLOPs: 374.1999. Time: 30.8404 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #298: GFLOPs: 445.1633. Time: 25.9241 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #299: GFLOPs: 436.6070. Time: 26.4322 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #300: GFLOPs: 666.9902. Time: 17.3023 us. Best GFLOPs: 994.5533
2024-05-01 19:03:11 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #301: GFLOPs: 687.3010. Time: 16.7910 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #302: GFLOPs: 427.7348. Time: 26.9805 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #303: GFLOPs: 344.3690. Time: 33.5120 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #304: GFLOPs: 421.8909. Time: 27.3542 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #305: GFLOPs: 434.5468. Time: 26.5575 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #306: GFLOPs: 112.1139. Time: 102.9353 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #307: GFLOPs: 489.0309. Time: 23.5987 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #308: GFLOPs: 365.6139. Time: 31.5647 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #309: GFLOPs: 187.3860. Time: 61.5867 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #310: GFLOPs: 393.6061. Time: 29.3199 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #311: GFLOPs: 396.7891. Time: 29.0847 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #312: GFLOPs: 341.5426. Time: 33.7893 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #313: GFLOPs: 478.8351. Time: 24.1012 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #314: GFLOPs: 293.7797. Time: 39.2828 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #315: GFLOPs: 438.2057. Time: 26.3358 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #316: GFLOPs: 307.0168. Time: 37.5891 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #317: GFLOPs: 483.5053. Time: 23.8684 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #318: GFLOPs: 131.0709. Time: 88.0476 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #319: GFLOPs: 232.7435. Time: 49.5845 us. Best GFLOPs: 994.5533
2024-05-01 19:03:12 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #320: GFLOPs: 71.2606. Time: 161.9476 us. Best GFLOPs: 994.5533
2024-05-01 19:05:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:05:27 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:05:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 387 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:05:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 776 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:05:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1164 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:05:38 [INFO] [evolutionary_search.cc:723] Sampled 66 candidate(s)
2024-05-01 19:05:50 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 162 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:06:05 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 157 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:06:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 189 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:06:34 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 200 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:06:38 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.1909  1.7809  1.7384  1.7027  1.6018  1.5971  1.5961  1.5765  1.5656  1.5591  1.5490  1.5479  1.5271  1.5235  1.5188  1.5178
[17 : 32]:	1.5113  1.5110  1.5072  1.5062  1.5054  1.5044  1.4976  1.4950  1.4899  1.4886  1.4824  1.4806  1.4790  1.4757  1.4753  1.4688
[33 : 48]:	1.4657  1.4617  1.4606  1.4606  1.4592  1.4558  1.4553  1.4545  1.4521  1.4508  1.4477  1.4473  1.4430  1.4426  1.4422  1.4402
[49 : 64]:	1.4387  1.4377  1.4371  1.4356  1.4342  1.4327  1.4325  1.4268  1.4252  1.4229  1.4219  1.4213  1.4202  1.4201  1.4199  1.4187
2024-05-01 19:06:38 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:06:38 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #321: GFLOPs: 559.3763. Time: 20.6310 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #322: GFLOPs: 134.9551. Time: 85.5135 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #323: GFLOPs: 135.0131. Time: 85.4767 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #324: GFLOPs: 106.2517. Time: 108.6145 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #325: GFLOPs: 104.1986. Time: 110.7547 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #326: GFLOPs: 104.4410. Time: 110.4976 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #327: GFLOPs: 136.4757. Time: 84.5607 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #328: GFLOPs: 193.3480. Time: 59.6876 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #329: GFLOPs: 302.1201. Time: 38.1983 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #330: GFLOPs: 741.3854. Time: 15.5661 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #331: GFLOPs: 126.5551. Time: 91.1894 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #332: GFLOPs: 126.7582. Time: 91.0432 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #333: GFLOPs: 289.5303. Time: 39.8593 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #334: GFLOPs: 298.3785. Time: 38.6773 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #335: GFLOPs: 300.3335. Time: 38.4256 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #336: GFLOPs: 300.4462. Time: 38.4111 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #337: GFLOPs: 836.7375. Time: 13.7922 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #338: GFLOPs: 864.0091. Time: 13.3569 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #339: GFLOPs: 300.3445. Time: 38.4241 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #340: GFLOPs: 843.2647. Time: 13.6855 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #341: GFLOPs: 302.2523. Time: 38.1816 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #342: GFLOPs: 302.2501. Time: 38.1819 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #343: GFLOPs: 865.0758. Time: 13.3404 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #344: GFLOPs: 837.2136. Time: 13.7844 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #345: GFLOPs: 835.8111. Time: 13.8075 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #346: GFLOPs: 863.7315. Time: 13.3612 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #347: GFLOPs: 291.2668. Time: 39.6217 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #348: GFLOPs: 884.1267. Time: 13.0530 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #349: GFLOPs: 843.7089. Time: 13.6783 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #350: GFLOPs: 869.4500. Time: 13.2733 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #351: GFLOPs: 865.6789. Time: 13.3311 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #352: GFLOPs: 834.7093. Time: 13.8257 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #353: GFLOPs: 525.7187. Time: 21.9518 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #354: GFLOPs: 836.4226. Time: 13.7974 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #355: GFLOPs: 845.2243. Time: 13.6537 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #356: GFLOPs: 836.0498. Time: 13.8036 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #357: GFLOPs: 89.4771. Time: 128.9770 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #358: GFLOPs: 126.4664. Time: 91.2533 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #359: GFLOPs: 708.0143. Time: 16.2998 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #360: GFLOPs: 89.8831. Time: 128.3943 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #361: GFLOPs: 713.1654. Time: 16.1821 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #362: GFLOPs: 719.1547. Time: 16.0473 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #363: GFLOPs: 719.8977. Time: 16.0307 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #364: GFLOPs: 125.5637. Time: 91.9093 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #365: GFLOPs: 714.3594. Time: 16.1550 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #366: GFLOPs: 718.9938. Time: 16.0509 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #367: GFLOPs: 836.1496. Time: 13.8019 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #368: GFLOPs: 521.8822. Time: 22.1132 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #369: GFLOPs: 715.4688. Time: 16.1300 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #370: GFLOPs: 794.0456. Time: 14.5338 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #371: GFLOPs: 714.0234. Time: 16.1626 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #372: GFLOPs: 715.8968. Time: 16.1203 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #373: GFLOPs: 721.9873. Time: 15.9843 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #374: GFLOPs: 723.2689. Time: 15.9560 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #375: GFLOPs: 719.5682. Time: 16.0381 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #376: GFLOPs: 769.7677. Time: 14.9922 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #377: GFLOPs: 773.5073. Time: 14.9197 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #378: GFLOPs: 811.8146. Time: 14.2157 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #379: GFLOPs: 784.9976. Time: 14.7013 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #380: GFLOPs: 812.6054. Time: 14.2018 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #381: GFLOPs: 792.9034. Time: 14.5547 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #382: GFLOPs: 132.1205. Time: 87.3482 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #383: GFLOPs: 13.0338. Time: 885.4276 us. Best GFLOPs: 994.5533
2024-05-01 19:07:54 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #384: GFLOPs: 195.3950. Time: 59.0623 us. Best GFLOPs: 994.5533
2024-05-01 19:10:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:10:31 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:10:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 390 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:10:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 787 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:10:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1179 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:10:41 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-05-01 19:10:53 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:11:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 138 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:11:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 159 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:11:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 132 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:11:39 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.7684  1.6654  1.6051  1.5591  1.4625  1.4607  1.4541  1.4499  1.4467  1.4449  1.4346  1.4193  1.4143  1.4100  1.4077  1.4072
[17 : 32]:	1.3869  1.3591  1.3543  1.3521  1.3505  1.3490  1.3475  1.3250  1.3168  1.3131  1.3009  1.2989  1.2988  1.2971  1.2916  1.2902
[33 : 48]:	1.2814  1.2740  1.2687  1.2684  1.2673  1.2670  1.2607  1.2598  1.2551  1.2521  1.2518  1.2515  1.2514  1.2284  1.2253  1.2203
[49 : 64]:	1.2165  1.2059  1.1960  1.1894  1.1842  1.1623  1.1609  1.1584  1.1537  1.1536  1.1529  1.1468  1.1391  1.1301  1.1300  1.1134
2024-05-01 19:11:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:11:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #385: GFLOPs: 108.5343. Time: 106.3302 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #386: GFLOPs: 202.4023. Time: 57.0175 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #387: GFLOPs: 235.4193. Time: 49.0210 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #388: GFLOPs: 102.6617. Time: 112.4127 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #389: GFLOPs: 289.2621. Time: 39.8963 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #390: GFLOPs: 734.4752. Time: 15.7126 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #391: GFLOPs: 187.6966. Time: 61.4848 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #392: GFLOPs: 919.9513. Time: 12.5447 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #393: GFLOPs: 915.5156. Time: 12.6054 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #394: GFLOPs: 915.3432. Time: 12.6078 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #395: GFLOPs: 106.1252. Time: 108.7440 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #396: GFLOPs: 918.8718. Time: 12.5594 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #397: GFLOPs: 915.6079. Time: 12.6042 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #398: GFLOPs: 869.0909. Time: 13.2788 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #399: GFLOPs: 186.0997. Time: 62.0123 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #400: GFLOPs: 865.2871. Time: 13.3372 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #401: GFLOPs: 865.6606. Time: 13.3314 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #402: GFLOPs: 172.2671. Time: 66.9918 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #403: GFLOPs: 224.3232. Time: 51.4458 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #404: GFLOPs: 170.2399. Time: 67.7895 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #405: GFLOPs: 58.8881. Time: 195.9731 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #406: GFLOPs: 47.8556. Time: 241.1520 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #407: GFLOPs: 54.3316. Time: 212.4084 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #408: GFLOPs: 173.3880. Time: 66.5587 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #409: GFLOPs: 234.7613. Time: 49.1584 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #410: GFLOPs: 252.0796. Time: 45.7811 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #411: GFLOPs: 199.7064. Time: 57.7872 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #412: GFLOPs: 49.1377. Time: 234.8598 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #413: GFLOPs: 252.0834. Time: 45.7804 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #414: GFLOPs: 170.9239. Time: 67.5182 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #415: GFLOPs: 159.3229. Time: 72.4345 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #416: GFLOPs: 216.4976. Time: 53.3054 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #417: GFLOPs: 166.6120. Time: 69.2656 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #418: GFLOPs: 171.9647. Time: 67.1096 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #419: GFLOPs: 185.0777. Time: 62.3548 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #420: GFLOPs: 196.1684. Time: 58.8295 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #421: GFLOPs: 183.9565. Time: 62.7348 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #422: GFLOPs: 189.0817. Time: 61.0343 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #423: GFLOPs: 174.7717. Time: 66.0317 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #424: GFLOPs: 76.3172. Time: 151.2172 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #425: GFLOPs: 141.3917. Time: 81.6207 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #426: GFLOPs: 171.5153. Time: 67.2854 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #427: GFLOPs: 173.3522. Time: 66.5725 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #428: GFLOPs: 218.0217. Time: 52.9327 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #429: GFLOPs: 185.2705. Time: 62.2899 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #430: GFLOPs: 173.2058. Time: 66.6287 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #431: GFLOPs: 230.1501. Time: 50.1433 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #432: GFLOPs: 148.9587. Time: 77.4744 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #433: GFLOPs: 423.3480. Time: 27.2600 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #434: GFLOPs: 207.4892. Time: 55.6197 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #435: GFLOPs: 75.3793. Time: 153.0988 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #436: GFLOPs: 869.8970. Time: 13.2665 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #437: GFLOPs: 60.1322. Time: 191.9186 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #438: GFLOPs: 820.6560. Time: 14.0625 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #439: GFLOPs: 124.2098. Time: 92.9112 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #440: GFLOPs: 124.2287. Time: 92.8971 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #441: GFLOPs: 159.9021. Time: 72.1722 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #442: GFLOPs: 120.4610. Time: 95.8026 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #443: GFLOPs: 889.5778. Time: 12.9730 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #444: GFLOPs: 182.9597. Time: 63.0766 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #445: GFLOPs: 176.3861. Time: 65.4274 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #446: GFLOPs: 317.4837. Time: 36.3498 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #447: GFLOPs: 224.6552. Time: 51.3697 us. Best GFLOPs: 994.5533
2024-05-01 19:12:55 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #448: GFLOPs: 89.3845. Time: 129.1105 us. Best GFLOPs: 994.5533
2024-05-01 19:21:30 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:21:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:21:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 392 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:21:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 783 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:21:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1181 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:21:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1565 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:21:45 [INFO] [evolutionary_search.cc:723] Sampled 75 candidate(s)
2024-05-01 19:21:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 143 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:22:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 144 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:22:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:22:40 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 153 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:22:44 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	2.5720  2.2297  2.2272  2.1534  2.1491  2.1313  2.0335  2.0311  1.9498  1.9336  1.9020  1.8971  1.8750  1.8355  1.8313  1.8278
[17 : 32]:	1.8232  1.8163  1.8155  1.8121  1.7987  1.7857  1.7492  1.7400  1.7322  1.7307  1.7271  1.7261  1.7223  1.7184  1.7122  1.7053
[33 : 48]:	1.7048  1.6947  1.6940  1.6924  1.6902  1.6735  1.6541  1.6519  1.6511  1.6497  1.6492  1.6452  1.6410  1.6388  1.6377  1.6268
[49 : 64]:	1.6029  1.6017  1.5987  1.5928  1.5746  1.5261  1.5222  1.5063  1.4966  1.4965  1.4924  1.4913  1.4900  1.4845  1.4839  1.4817
2024-05-01 19:22:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:22:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #449: GFLOPs: 411.1014. Time: 28.0721 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #450: GFLOPs: 444.8464. Time: 25.9426 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #451: GFLOPs: 242.3846. Time: 47.6123 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #452: GFLOPs: 243.6578. Time: 47.3635 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #453: GFLOPs: 244.4667. Time: 47.2068 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #454: GFLOPs: 243.6773. Time: 47.3597 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #455: GFLOPs: 447.2525. Time: 25.8031 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #456: GFLOPs: 238.6081. Time: 48.3658 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #457: GFLOPs: 447.3873. Time: 25.7953 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #458: GFLOPs: 373.2955. Time: 30.9151 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #459: GFLOPs: 278.9309. Time: 41.3740 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #460: GFLOPs: 347.6788. Time: 33.1929 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #461: GFLOPs: 243.4279. Time: 47.4082 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #462: GFLOPs: 244.9475. Time: 47.1141 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #463: GFLOPs: 243.6485. Time: 47.3653 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #464: GFLOPs: 243.1298. Time: 47.4663 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #465: GFLOPs: 243.6581. Time: 47.3634 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #466: GFLOPs: 243.3959. Time: 47.4144 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #467: GFLOPs: 243.6530. Time: 47.3644 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #468: GFLOPs: 451.3792. Time: 25.5671 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #469: GFLOPs: 226.9898. Time: 50.8414 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #470: GFLOPs: 238.9808. Time: 48.2904 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #471: GFLOPs: 411.0593. Time: 28.0750 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #472: GFLOPs: 221.6925. Time: 52.0563 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #473: GFLOPs: 140.4744. Time: 82.1536 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #474: GFLOPs: 199.3063. Time: 57.9032 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #475: GFLOPs: 140.0454. Time: 82.4053 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #476: GFLOPs: 213.7173. Time: 53.9988 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #477: GFLOPs: 66.6357. Time: 173.1877 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #478: GFLOPs: 198.9026. Time: 58.0207 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #479: GFLOPs: 275.2481. Time: 41.9276 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #480: GFLOPs: 66.6009. Time: 173.2780 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #481: GFLOPs: 221.5448. Time: 52.0909 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #482: GFLOPs: 66.8451. Time: 172.6451 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #483: GFLOPs: 243.6229. Time: 47.3703 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #484: GFLOPs: 230.2468. Time: 50.1222 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #485: GFLOPs: 243.6498. Time: 47.3650 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #486: GFLOPs: 243.5641. Time: 47.3817 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #487: GFLOPs: 236.6666. Time: 48.7626 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #488: GFLOPs: 243.8136. Time: 47.3332 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #489: GFLOPs: 243.8544. Time: 47.3253 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #490: GFLOPs: 266.3125. Time: 43.3344 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #491: GFLOPs: 255.3428. Time: 45.1960 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #492: GFLOPs: 253.1762. Time: 45.5828 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #493: GFLOPs: 242.3345. Time: 47.6221 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #494: GFLOPs: 241.4167. Time: 47.8032 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #495: GFLOPs: 86.0663. Time: 134.0883 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #496: GFLOPs: 182.5506. Time: 63.2180 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #497: GFLOPs: 242.5193. Time: 47.5858 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #498: GFLOPs: 281.1729. Time: 41.0441 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #499: GFLOPs: 244.4522. Time: 47.2096 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #500: GFLOPs: 243.7637. Time: 47.3429 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #501: GFLOPs: 222.2755. Time: 51.9197 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #502: GFLOPs: 205.6128. Time: 56.1273 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #503: GFLOPs: 237.0038. Time: 48.6932 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #504: GFLOPs: 543.5278. Time: 21.2325 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #505: GFLOPs: 236.2911. Time: 48.8401 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #506: GFLOPs: 410.8670. Time: 28.0881 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #507: GFLOPs: 395.5867. Time: 29.1731 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #508: GFLOPs: 243.6325. Time: 47.3684 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #509: GFLOPs: 243.5712. Time: 47.3803 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #510: GFLOPs: 53.8584. Time: 214.2744 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #511: GFLOPs: 275.5585. Time: 41.8803 us. Best GFLOPs: 994.5533
2024-05-01 19:24:00 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #512: GFLOPs: 478.4738. Time: 24.1194 us. Best GFLOPs: 994.5533
2024-05-01 19:25:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:25:31 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:25:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 383 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:25:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 776 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:25:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:25:42 [INFO] [evolutionary_search.cc:723] Sampled 60 candidate(s)
2024-05-01 19:25:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 143 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:26:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 144 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:26:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 154 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:26:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:26:43 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.7752  1.6944  1.6881  1.6728  1.6692  1.6658  1.6613  1.6592  1.6573  1.6330  1.6264  1.6210  1.6169  1.6031  1.5995  1.5666
[17 : 32]:	1.5496  1.4995  1.4975  1.4948  1.4920  1.4643  1.4478  1.4140  1.3966  1.3933  1.3886  1.3873  1.3695  1.3589  1.3489  1.3431
[33 : 48]:	1.3281  1.3243  1.3218  1.3157  1.3078  1.3034  1.2995  1.2942  1.2920  1.2817  1.2777  1.2777  1.2766  1.2731  1.2692  1.2619
[49 : 64]:	1.2534  1.2402  1.2362  1.2336  1.2123  1.1914  1.1862  1.1787  1.1613  1.1448  1.1441  1.1383  1.1376  1.1361  1.1283  1.1238
2024-05-01 19:26:43 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:26:43 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #513: GFLOPs: 394.1919. Time: 29.2763 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #514: GFLOPs: 28.2400. Time: 408.6566 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #515: GFLOPs: 614.5771. Time: 18.7779 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #516: GFLOPs: 28.3058. Time: 407.7071 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #517: GFLOPs: 30.3025. Time: 380.8423 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #518: GFLOPs: 530.5168. Time: 21.7533 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #519: GFLOPs: 770.0998. Time: 14.9857 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #520: GFLOPs: 696.0957. Time: 16.5789 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #521: GFLOPs: 729.2636. Time: 15.8248 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #522: GFLOPs: 640.7538. Time: 18.0108 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #523: GFLOPs: 699.0793. Time: 16.5081 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #524: GFLOPs: 523.7627. Time: 22.0338 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #525: GFLOPs: 640.7642. Time: 18.0105 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #526: GFLOPs: 575.4087. Time: 20.0561 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #527: GFLOPs: 624.5520. Time: 18.4780 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #528: GFLOPs: 537.5649. Time: 21.4681 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #529: GFLOPs: 576.0594. Time: 20.0335 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #530: GFLOPs: 799.7103. Time: 14.4308 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #531: GFLOPs: 545.8842. Time: 21.1409 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #532: GFLOPs: 204.9253. Time: 56.3155 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #533: GFLOPs: 686.4422. Time: 16.8120 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #534: GFLOPs: 657.1511. Time: 17.5614 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #535: GFLOPs: 544.0016. Time: 21.2141 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #536: GFLOPs: 599.5521. Time: 19.2485 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #537: GFLOPs: 540.8952. Time: 21.3359 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #538: GFLOPs: 360.7717. Time: 31.9883 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #539: GFLOPs: 536.9159. Time: 21.4940 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #540: GFLOPs: 465.3029. Time: 24.8021 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #541: GFLOPs: 16.2218. Time: 711.4185 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #542: GFLOPs: 650.1022. Time: 17.7518 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #543: GFLOPs: 16.2971. Time: 708.1320 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #544: GFLOPs: 612.0512. Time: 18.8554 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #545: GFLOPs: 626.7224. Time: 18.4140 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #546: GFLOPs: 430.1504. Time: 26.8289 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #547: GFLOPs: 706.8123. Time: 16.3275 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #548: GFLOPs: 452.3779. Time: 25.5107 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #549: GFLOPs: 533.7498. Time: 21.6215 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #550: GFLOPs: 235.3865. Time: 49.0278 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #551: GFLOPs: 465.3399. Time: 24.8001 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #552: GFLOPs: 609.2767. Time: 18.9413 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #553: GFLOPs: 497.0574. Time: 23.2176 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #554: GFLOPs: 497.1559. Time: 23.2130 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #555: GFLOPs: 515.3209. Time: 22.3947 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #556: GFLOPs: 487.9548. Time: 23.6507 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #557: GFLOPs: 553.2118. Time: 20.8609 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #558: GFLOPs: 497.0887. Time: 23.2161 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #559: GFLOPs: 497.1446. Time: 23.2135 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #560: GFLOPs: 549.6550. Time: 20.9959 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #561: GFLOPs: 505.7550. Time: 22.8183 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #562: GFLOPs: 599.5426. Time: 19.2488 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #563: GFLOPs: 702.7178. Time: 16.4226 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #564: GFLOPs: 599.5852. Time: 19.2474 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #565: GFLOPs: 829.6664. Time: 13.9098 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #566: GFLOPs: 397.7015. Time: 29.0179 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #567: GFLOPs: 518.7076. Time: 22.2485 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #568: GFLOPs: 712.8769. Time: 16.1886 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #569: GFLOPs: 618.4136. Time: 18.6614 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #570: GFLOPs: 293.8031. Time: 39.2796 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #571: GFLOPs: 820.6751. Time: 14.0622 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #572: GFLOPs: 720.5477. Time: 16.0163 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #573: GFLOPs: 845.9982. Time: 13.6413 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #574: GFLOPs: 19.2889. Time: 598.2967 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #575: GFLOPs: 589.3163. Time: 19.5828 us. Best GFLOPs: 994.5533
2024-05-01 19:27:50 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #576: GFLOPs: 130.6278. Time: 88.3463 us. Best GFLOPs: 994.5533
2024-05-01 19:38:11 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:38:14 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:38:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:38:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 790 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:38:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1183 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:38:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1576 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:38:27 [INFO] [evolutionary_search.cc:723] Sampled 64 candidate(s)
2024-05-01 19:38:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 121 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:38:53 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 147 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:39:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 175 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:39:24 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:39:28 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.3873  1.3844  1.3088  1.2906  1.2643  1.1816  1.1715  1.1680  1.1620  1.1526  1.0733  1.0733  1.0731  1.0722  1.0602  1.0513
[17 : 32]:	1.0507  1.0201  1.0171  1.0137  1.0077  1.0075  1.0005  0.9978  0.9975  0.9938  0.9933  0.9886  0.9876  0.9875  0.9862  0.9849
[33 : 48]:	0.9802  0.9771  0.9759  0.9758  0.9751  0.9750  0.9737  0.9723  0.9712  0.9708  0.9703  0.9689  0.9686  0.9685  0.9683  0.9682
[49 : 64]:	0.9668  0.9666  0.9664  0.9663  0.9660  0.9660  0.9653  0.9651  0.9647  0.9645  0.9643  0.9642  0.9630  0.9620  0.9619  0.9618
2024-05-01 19:39:28 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:39:28 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #577: GFLOPs: 753.6111. Time: 15.3136 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #578: GFLOPs: 751.4628. Time: 15.3574 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #579: GFLOPs: 646.6258. Time: 17.8472 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #580: GFLOPs: 336.8694. Time: 34.2580 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #581: GFLOPs: 640.7217. Time: 18.0117 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #582: GFLOPs: 539.1779. Time: 21.4038 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #583: GFLOPs: 884.1716. Time: 13.0523 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #584: GFLOPs: 587.4071. Time: 19.6465 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #585: GFLOPs: 594.5714. Time: 19.4097 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #586: GFLOPs: 514.5762. Time: 22.4272 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #587: GFLOPs: 687.3198. Time: 16.7906 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #588: GFLOPs: 687.0855. Time: 16.7963 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #589: GFLOPs: 388.1506. Time: 29.7320 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #590: GFLOPs: 631.8694. Time: 18.2640 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #591: GFLOPs: 900.9641. Time: 12.8090 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #592: GFLOPs: 361.3255. Time: 31.9393 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #593: GFLOPs: 562.5696. Time: 20.5139 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #594: GFLOPs: 392.8222. Time: 29.3784 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #595: GFLOPs: 857.8967. Time: 13.4521 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #596: GFLOPs: 388.1479. Time: 29.7322 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #597: GFLOPs: 379.4913. Time: 30.4104 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #598: GFLOPs: 223.8696. Time: 51.5500 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #599: GFLOPs: 518.1755. Time: 22.2714 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #600: GFLOPs: 962.5089. Time: 11.9900 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #601: GFLOPs: 982.1720. Time: 11.7500 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #602: GFLOPs: 962.7586. Time: 11.9869 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #603: GFLOPs: 317.9494. Time: 36.2966 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #604: GFLOPs: 936.9795. Time: 12.3167 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #605: GFLOPs: 967.4052. Time: 11.9293 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #606: GFLOPs: 950.4186. Time: 12.1425 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #607: GFLOPs: 619.5483. Time: 18.6272 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #608: GFLOPs: 975.3446. Time: 11.8322 us. Best GFLOPs: 994.5533
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #609: GFLOPs: 1019.3162. Time: 11.3218 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #610: GFLOPs: 591.3006. Time: 19.5171 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #611: GFLOPs: 984.2713. Time: 11.7249 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #612: GFLOPs: 989.6318. Time: 11.6614 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #613: GFLOPs: 988.3350. Time: 11.6767 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #614: GFLOPs: 921.9544. Time: 12.5174 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #615: GFLOPs: 706.8703. Time: 16.3262 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #616: GFLOPs: 956.8060. Time: 12.0615 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #617: GFLOPs: 893.2194. Time: 12.9201 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #618: GFLOPs: 914.3159. Time: 12.6220 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #619: GFLOPs: 986.3442. Time: 11.7003 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #620: GFLOPs: 970.0126. Time: 11.8972 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #621: GFLOPs: 986.2116. Time: 11.7018 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #622: GFLOPs: 988.4462. Time: 11.6754 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #623: GFLOPs: 989.0963. Time: 11.6677 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #624: GFLOPs: 993.1192. Time: 11.6204 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #625: GFLOPs: 986.4002. Time: 11.6996 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #626: GFLOPs: 970.1386. Time: 11.8957 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #627: GFLOPs: 960.1640. Time: 12.0193 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #628: GFLOPs: 951.7922. Time: 12.1250 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #629: GFLOPs: 954.1455. Time: 12.0951 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #630: GFLOPs: 936.2336. Time: 12.3265 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #631: GFLOPs: 951.0390. Time: 12.1346 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #632: GFLOPs: 949.3672. Time: 12.1560 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #633: GFLOPs: 986.0835. Time: 11.7033 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #634: GFLOPs: 995.2496. Time: 11.5956 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #635: GFLOPs: 991.2628. Time: 11.6422 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #636: GFLOPs: 953.1628. Time: 12.1076 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #637: GFLOPs: 968.4952. Time: 11.9159 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #638: GFLOPs: 197.0038. Time: 58.5800 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #639: GFLOPs: 153.9371. Time: 74.9688 us. Best GFLOPs: 1019.3162
2024-05-01 19:40:42 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #640: GFLOPs: 91.9371. Time: 125.5258 us. Best GFLOPs: 1019.3162
2024-05-01 19:58:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 19:58:36 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-05-01 19:58:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 392 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:58:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 787 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:58:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 1178 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:58:47 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-05-01 19:59:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 150 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:59:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 145 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:59:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 165 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:59:43 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa7b7078)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x10ae3518)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x12c7f918)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x110a1bc8)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x1294f128)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb56a588)]: 200 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x13aa61a8)]: 0 failure(s)
2024-05-01 19:59:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6616  1.6304  1.4251  1.3747  1.2984  1.2976  1.2558  1.2527  1.2521  1.2517  1.2517  1.2512  1.2458  1.1897  1.1897  1.1835
[17 : 32]:	1.1823  1.1789  1.1773  1.1769  1.1763  1.1131  1.0921  1.0855  1.0677  1.0647  1.0471  1.0444  1.0430  1.0377  1.0364  1.0364
[33 : 48]:	1.0349  1.0338  1.0283  1.0270  1.0143  1.0059  1.0019  0.9960  0.9956  0.9939  0.9936  0.9924  0.9884  0.9828  0.9822  0.9786
[49 : 64]:	0.9731  0.9716  0.9709  0.9698  0.9690  0.9685  0.9680  0.9650  0.9637  0.9636  0.9619  0.9615  0.9613  0.9613  0.9611  0.9603
2024-05-01 19:59:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-05-01 19:59:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #641: GFLOPs: 749.0738. Time: 15.4063 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #642: GFLOPs: 827.6389. Time: 13.9439 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #643: GFLOPs: 445.7520. Time: 25.8899 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #644: GFLOPs: 840.4531. Time: 13.7313 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #645: GFLOPs: 679.4026. Time: 16.9862 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #646: GFLOPs: 679.3476. Time: 16.9876 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #647: GFLOPs: 757.0244. Time: 15.2445 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #648: GFLOPs: 759.3690. Time: 15.1975 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #649: GFLOPs: 764.2357. Time: 15.1007 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #650: GFLOPs: 795.3088. Time: 14.5107 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #651: GFLOPs: 795.3524. Time: 14.5099 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #652: GFLOPs: 798.9155. Time: 14.4452 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #653: GFLOPs: 830.8549. Time: 13.8899 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #654: GFLOPs: 362.2786. Time: 31.8553 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #655: GFLOPs: 362.2634. Time: 31.8566 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #656: GFLOPs: 362.1620. Time: 31.8655 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #657: GFLOPs: 822.8604. Time: 14.0248 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #658: GFLOPs: 359.3913. Time: 32.1112 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #659: GFLOPs: 203.0507. Time: 56.8355 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #660: GFLOPs: 830.8360. Time: 13.8902 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #661: GFLOPs: 835.8633. Time: 13.8067 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #662: GFLOPs: 781.9089. Time: 14.7594 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #663: GFLOPs: 817.3819. Time: 14.1188 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #664: GFLOPs: 389.0086. Time: 29.6664 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #665: GFLOPs: 767.7274. Time: 15.0320 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #666: GFLOPs: 378.2138. Time: 30.5131 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #667: GFLOPs: 754.5935. Time: 15.2936 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #668: GFLOPs: 767.4554. Time: 15.0373 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #669: GFLOPs: 784.1312. Time: 14.7175 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #670: GFLOPs: 753.3091. Time: 15.3197 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #671: GFLOPs: 784.0874. Time: 14.7184 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #672: GFLOPs: 784.4017. Time: 14.7125 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #673: GFLOPs: 831.0153. Time: 13.8872 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #674: GFLOPs: 634.6912. Time: 18.1828 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #675: GFLOPs: 218.3457. Time: 52.8542 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #676: GFLOPs: 795.5615. Time: 14.5061 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #677: GFLOPs: 886.8664. Time: 13.0126 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #678: GFLOPs: 423.1038. Time: 27.2758 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #679: GFLOPs: 393.5459. Time: 29.3244 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #680: GFLOPs: 959.6875. Time: 12.0252 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #681: GFLOPs: 794.7210. Time: 14.5214 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #682: GFLOPs: 878.2226. Time: 13.1407 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #683: GFLOPs: 535.2506. Time: 21.5609 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #684: GFLOPs: 772.0494. Time: 14.9479 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #685: GFLOPs: 959.6660. Time: 12.0255 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #686: GFLOPs: 625.0255. Time: 18.4640 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #687: GFLOPs: 807.9639. Time: 14.2834 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #688: GFLOPs: 765.2994. Time: 15.0797 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #689: GFLOPs: 783.8063. Time: 14.7236 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #690: GFLOPs: 994.9396. Time: 11.5992 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #691: GFLOPs: 338.1439. Time: 34.1289 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #692: GFLOPs: 987.5104. Time: 11.6864 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #693: GFLOPs: 996.5852. Time: 11.5800 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #694: GFLOPs: 526.0908. Time: 21.9363 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #695: GFLOPs: 827.1620. Time: 13.9519 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #696: GFLOPs: 887.5411. Time: 13.0028 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #697: GFLOPs: 978.8973. Time: 11.7893 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #698: GFLOPs: 998.9293. Time: 11.5528 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #699: GFLOPs: 982.9945. Time: 11.7401 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #700: GFLOPs: 818.1971. Time: 14.1048 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #701: GFLOPs: 1011.1290. Time: 11.4135 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #702: GFLOPs: 82.4185. Time: 140.0230 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #703: GFLOPs: 259.0098. Time: 44.5562 us. Best GFLOPs: 1019.3162
2024-05-01 20:00:57 [INFO] [task_scheduler.cc:131] [Task #161: fused_nn_contrib_conv2d_winograd_without_weight_transform_1] Trial #704: GFLOPs: 138.1953. Time: 83.5085 us. Best GFLOPs: 1019.3162
