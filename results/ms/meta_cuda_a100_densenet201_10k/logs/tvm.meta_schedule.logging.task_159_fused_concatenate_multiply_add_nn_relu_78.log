2024-04-29 16:32:19 [INFO] [task_scheduler.cc:160] Initializing Task #159: "fused_concatenate_multiply_add_nn_relu_78"
2024-04-29 16:32:19 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_concat = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)))
        T_multiply = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = p0[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_multiply"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_concat[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3])
                T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] = T_concat[v_ax0, v_ax1, v_ax2, v_ax3] * p1[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 16:32:19 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-29 16:32:19 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                with T.block("T_concat"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(256), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) // T.int64(196))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196) // T.int64(14))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) % T.int64(14))
                    T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(p0[v_ax0, v_ax1, v_ax2, v_ax3] * p1[v_ax0, v_ax1, T.int64(0), T.int64(0)] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="T_concat", func_name="main")
b1 = sch.get_block(name="T_multiply", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.reverse_compute_inline(block=b1)
l4, l5, l6, l7 = sch.get_loops(block=b0)
l8 = sch.fuse(l4, l5, l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
2024-04-29 18:59:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:59:42 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 18:59:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3439a68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x125a1648)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13512d38)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x134c7538)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x390ac18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x10996468)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x10da9358)]: 0 failure(s)
2024-04-29 18:59:42 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 18:59:43 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3439a68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x125a1648)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13512d38)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x134c7538)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x390ac18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x10996468)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x10da9358)]: 0 failure(s)
2024-04-29 18:59:43 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3439a68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x125a1648)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13512d38)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x134c7538)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x390ac18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x10996468)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x10da9358)]: 0 failure(s)
2024-04-29 18:59:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3439a68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x125a1648)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13512d38)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x134c7538)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x390ac18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x10996468)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x10da9358)]: 0 failure(s)
2024-04-29 18:59:43 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3439a68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x125a1648)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x13512d38)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x134c7538)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x390ac18)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x10996468)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x10da9358)]: 0 failure(s)
2024-04-29 18:59:43 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.9227  0.9014  0.8941  0.7862  0.5128  0.3059
2024-04-29 18:59:43 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-04-29 18:59:43 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-04-29 20:30:17 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #1: GFLOPs: 45.3032. Time: 3.3227 us. Best GFLOPs: 45.3032
2024-04-29 20:30:17 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #2: GFLOPs: 39.3624. Time: 3.8242 us. Best GFLOPs: 45.3032
2024-04-29 20:30:17 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #3: GFLOPs: 46.8181. Time: 3.2152 us. Best GFLOPs: 46.8181
2024-04-29 20:30:17 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #4: GFLOPs: 46.8198. Time: 3.2151 us. Best GFLOPs: 46.8198
2024-04-29 20:30:17 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #5: GFLOPs: 45.8436. Time: 3.2835 us. Best GFLOPs: 46.8198
2024-04-29 20:30:17 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #6: GFLOPs: 47.9097. Time: 3.1419 us. Best GFLOPs: 47.9097
2024-05-01 15:05:59 [INFO] [task_scheduler.cc:160] Initializing Task #159: "fused_concatenate_multiply_add_nn_relu_78"
2024-05-01 15:05:59 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_concat = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)))
        T_multiply = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)))
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_concat"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_concat[v_ax0, v_ax1, v_ax2, v_ax3])
                T_concat[v_ax0, v_ax1, v_ax2, v_ax3] = p0[v_ax0, v_ax1, v_ax2, v_ax3]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_multiply"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_concat[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3])
                T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] = T_concat[v_ax0, v_ax1, v_ax2, v_ax3] * p1[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_multiply[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = T_multiply[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(256), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-05-01 15:05:59 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-05-01 15:05:59 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(256), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(256), thread="threadIdx.x"):
                with T.block("T_concat"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(256), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) // T.int64(196))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) % T.int64(196) // T.int64(14))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_fused_0 * T.int64(256) + ax0_ax1_ax2_ax3_fused_1) % T.int64(14))
                    T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3], p1[v_ax0, v_ax1, T.int64(0), T.int64(0)], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(p0[v_ax0, v_ax1, v_ax2, v_ax3] * p1[v_ax0, v_ax1, T.int64(0), T.int64(0)] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="T_concat", func_name="main")
b1 = sch.get_block(name="T_multiply", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.reverse_compute_inline(block=b1)
l4, l5, l6, l7 = sch.get_loops(block=b0)
l8 = sch.fuse(l4, l5, l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=3)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
2024-05-01 17:31:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-05-01 17:31:45 [INFO] [evolutionary_search.cc:715] Picked top 6 candidate(s) from database
2024-05-01 17:31:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13044918)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xddc2718)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb4cde08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9d51478)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x107745f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xae2dba8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b186b8)]: 0 failure(s)
2024-05-01 17:31:46 [INFO] [evolutionary_search.cc:723] Sampled 506 candidate(s)
2024-05-01 17:31:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13044918)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xddc2718)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb4cde08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9d51478)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x107745f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xae2dba8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b186b8)]: 0 failure(s)
2024-05-01 17:31:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13044918)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xddc2718)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb4cde08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9d51478)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x107745f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xae2dba8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b186b8)]: 0 failure(s)
2024-05-01 17:31:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13044918)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xddc2718)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb4cde08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9d51478)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x107745f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xae2dba8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b186b8)]: 0 failure(s)
2024-05-01 17:31:47 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x13044918)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xddc2718)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb4cde08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9d51478)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x107745f8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xae2dba8)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x12b186b8)]: 0 failure(s)
2024-05-01 17:31:47 [INFO] [evolutionary_search.cc:649] Scores of the best 6 candidates:
[1 : 6]:	0.9305  0.5592  0.3998  0.1506  0.1489  0.0205
2024-05-01 17:31:47 [INFO] [evolutionary_search.cc:727] Got 6 candidate(s) with evolutionary search
2024-05-01 17:31:47 [INFO] [evolutionary_search.cc:730] Sending 6 candidates(s) for measurement
2024-05-01 18:38:10 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #1: GFLOPs: 51.7651. Time: 2.9079 us. Best GFLOPs: 51.7651
2024-05-01 18:38:10 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #2: GFLOPs: 38.9774. Time: 3.8619 us. Best GFLOPs: 51.7651
2024-05-01 18:38:10 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #3: GFLOPs: 44.4144. Time: 3.3892 us. Best GFLOPs: 51.7651
2024-05-01 18:38:10 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #4: GFLOPs: 49.2824. Time: 3.0544 us. Best GFLOPs: 51.7651
2024-05-01 18:38:10 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #5: GFLOPs: 51.6564. Time: 2.9140 us. Best GFLOPs: 51.7651
2024-05-01 18:38:10 [INFO] [task_scheduler.cc:131] [Task #159: fused_concatenate_multiply_add_nn_relu_78] Trial #6: GFLOPs: 52.1029. Time: 2.8891 us. Best GFLOPs: 52.1029
