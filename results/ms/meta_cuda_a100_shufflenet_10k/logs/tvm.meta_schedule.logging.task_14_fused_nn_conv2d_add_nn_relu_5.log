2024-04-28 19:50:51 [INFO] [task_scheduler.cc:160] Initializing Task #14: "fused_nn_conv2d_add_nn_relu_5"
2024-04-28 19:50:51 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(24), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(58), T.int64(24), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(28), T.int64(28)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(24), T.int64(28), T.int64(28)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(58), T.int64(28), T.int64(28), T.int64(24), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(58), T.int64(28), T.int64(28)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(58), T.int64(28), T.int64(28)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-28 19:50:51 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 19:50:51 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(24), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(58), T.int64(24), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(58), T.int64(24), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(56), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(4), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4704)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(24), rc_0 * T.int64(6) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(348)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(58), ax0_ax1_ax2_ax3_fused // T.int64(6))
                                    v1 = T.axis.spatial(T.int64(24), rc_0 * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(6))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(29), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(58), nn_2_ff_2_yy_2_xx_2_fused * T.int64(29) + ff_3 * T.int64(29) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(24), rc_0 * T.int64(6) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(29), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(58), nn_2_ff_2_yy_2_xx_2_fused * T.int64(29) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 29])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 3, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-28 19:50:51 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(24), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(58), T.int64(24), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(58), T.int64(24), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(56), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4704)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(24), rc_0_ry_0_rx_0_fused * T.int64(6) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(348)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(58), ax0_ax1_ax2_ax3_fused // T.int64(6))
                                    v1 = T.axis.spatial(T.int64(24), rc_0_ry_0_rx_0_fused * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(6))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(29), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(58), nn_2_ff_2_yy_2_xx_2_fused * T.int64(29) + ff_3 * T.int64(29) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(24), rc_0_ry_0_rx_0_fused * T.int64(6) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(29), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(58), nn_2_ff_2_yy_2_xx_2_fused * T.int64(29) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 29])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 3, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-28 19:50:51 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(24), T.int64(28), T.int64(28)), "float32"), p1: T.Buffer((T.int64(58), T.int64(24), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(28), T.int64(28)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(28), T.int64(28)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(58), T.int64(24), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(56), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(2), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(4704)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(24), rc_0_ry_0_rx_0_fused * T.int64(6) + ax0_ax1_ax2_ax3_fused // T.int64(784))
                                    v2 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(784) // T.int64(28))
                                    v3 = T.axis.spatial(T.int64(28), ax0_ax1_ax2_ax3_fused % T.int64(28))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(348)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(58), ax0_ax1_ax2_ax3_fused // T.int64(6))
                                    v1 = T.axis.spatial(T.int64(24), rc_0_ry_0_rx_0_fused * T.int64(6) + ax0_ax1_ax2_ax3_fused % T.int64(6))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(29), T.int64(1), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(58), nn_2_ff_2_yy_2_xx_2_fused * T.int64(29) + ff_3 * T.int64(29) + ff_4)
                                    v_yy = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(7) + yy_3 + yy_4)
                                    v_xx = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(24), rc_0_ry_0_rx_0_fused * T.int64(6) + rc_1 * T.int64(2) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(29), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(58), nn_2_ff_2_yy_2_xx_2_fused * T.int64(29) + ax1)
                                v2 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused // T.int64(14) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(28), nn_1_ff_1_yy_1_xx_1_fused % T.int64(14) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 29])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 4, 1, 7, 1])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 14, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[4, 3, 2])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-28 20:08:30 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:08:30 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:08:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 440 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 20:08:33 [INFO] [evolutionary_search.cc:723] Sampled 72 candidate(s)
2024-04-28 20:08:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 117 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 20:08:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 20:08:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 121 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 20:08:48 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 88 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 20:08:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9982  0.9980  0.9972  0.9952  0.9951  0.9948  0.9940  0.9922  0.9914  0.9905  0.9885  0.9878  0.9878  0.9873  0.9870
[17 : 32]:	0.9860  0.9819  0.9818  0.9816  0.9816  0.9805  0.9796  0.9794  0.9788  0.9786  0.9781  0.9781  0.9759  0.9756  0.9755  0.9752
[33 : 48]:	0.9746  0.9740  0.9737  0.9736  0.9732  0.9729  0.9707  0.9706  0.9699  0.9693  0.9686  0.9680  0.9680  0.9674  0.9670  0.9665
[49 : 64]:	0.9664  0.9661  0.9656  0.9653  0.9653  0.9648  0.9642  0.9639  0.9638  0.9627  0.9611  0.9608  0.9608  0.9593  0.9591  0.9590
2024-04-28 20:08:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:08:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #1: GFLOPs: 130.7205. Time: 17.3928 us. Best GFLOPs: 130.7205
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #2: GFLOPs: 342.1280. Time: 6.6455 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #3: GFLOPs: 94.7908. Time: 23.9854 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #4: GFLOPs: 52.4998. Time: 43.3068 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #5: GFLOPs: 109.3743. Time: 20.7873 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #6: GFLOPs: 232.9392. Time: 9.7605 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #7: GFLOPs: 56.5312. Time: 40.2185 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #8: GFLOPs: 216.9277. Time: 10.4809 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #9: GFLOPs: 18.1930. Time: 124.9710 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #10: GFLOPs: 197.8209. Time: 11.4932 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #11: GFLOPs: 125.9994. Time: 18.0445 us. Best GFLOPs: 342.1280
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #12: GFLOPs: 344.4379. Time: 6.6009 us. Best GFLOPs: 344.4379
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #13: GFLOPs: 261.6330. Time: 8.6900 us. Best GFLOPs: 344.4379
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #14: GFLOPs: 58.9995. Time: 38.5359 us. Best GFLOPs: 344.4379
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #15: GFLOPs: 143.4847. Time: 15.8456 us. Best GFLOPs: 344.4379
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #16: GFLOPs: 413.7687. Time: 5.4949 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #17: GFLOPs: 59.5675. Time: 38.1684 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #18: GFLOPs: 80.4981. Time: 28.2442 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #19: GFLOPs: 73.0210. Time: 31.1362 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #20: GFLOPs: 134.3823. Time: 16.9189 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #21: GFLOPs: 145.3938. Time: 15.6375 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #22: GFLOPs: 103.8468. Time: 21.8938 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #23: GFLOPs: 134.2894. Time: 16.9306 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #24: GFLOPs: 147.4227. Time: 15.4223 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #25: GFLOPs: 24.1244. Time: 94.2447 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #26: GFLOPs: 10.1455. Time: 224.1001 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #27: GFLOPs: 136.0570. Time: 16.7106 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #28: GFLOPs: 127.6995. Time: 17.8043 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #29: GFLOPs: 17.6488. Time: 128.8243 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #30: GFLOPs: 131.5844. Time: 17.2786 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #31: GFLOPs: 143.4962. Time: 15.8443 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #32: GFLOPs: 237.4870. Time: 9.5736 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #33: GFLOPs: 19.1205. Time: 118.9092 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #34: GFLOPs: 79.5844. Time: 28.5684 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #35: GFLOPs: 7.0745. Time: 321.3807 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #36: GFLOPs: 17.1241. Time: 132.7717 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #37: GFLOPs: 379.7503. Time: 5.9871 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #38: GFLOPs: 104.6475. Time: 21.7263 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #39: GFLOPs: 7.0435. Time: 322.7953 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #40: GFLOPs: 183.5700. Time: 12.3855 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #41: GFLOPs: 24.1156. Time: 94.2791 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #42: GFLOPs: 111.3916. Time: 20.4109 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #43: GFLOPs: 80.8950. Time: 28.1056 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #44: GFLOPs: 67.9931. Time: 33.4387 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #45: GFLOPs: 70.4046. Time: 32.2933 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #46: GFLOPs: 1.8941. Time: 1200.3496 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #47: GFLOPs: 405.7063. Time: 5.6041 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #48: GFLOPs: 23.5478. Time: 96.5525 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #49: GFLOPs: 227.7016. Time: 9.9850 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #50: GFLOPs: 217.0236. Time: 10.4763 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #51: GFLOPs: 6.1457. Time: 369.9482 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #52: GFLOPs: 30.8564. Time: 73.6833 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #53: GFLOPs: 196.9297. Time: 11.5452 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #54: GFLOPs: 44.0242. Time: 51.6443 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #55: GFLOPs: 211.6101. Time: 10.7443 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #56: GFLOPs: 198.7755. Time: 11.4380 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #57: GFLOPs: 51.7026. Time: 43.9746 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #58: GFLOPs: 8.3461. Time: 272.4134 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #59: GFLOPs: 60.8185. Time: 37.3834 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #60: GFLOPs: 348.0860. Time: 6.5317 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #61: GFLOPs: 10.0616. Time: 225.9679 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #62: GFLOPs: 222.8368. Time: 10.2030 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #63: GFLOPs: 152.5368. Time: 14.9053 us. Best GFLOPs: 413.7687
2024-04-28 20:20:49 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #64: GFLOPs: 126.2767. Time: 18.0049 us. Best GFLOPs: 413.7687
2024-04-28 21:17:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:17:41 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-28 21:17:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 393 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 21:17:43 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-28 21:17:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 21:17:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 90 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 21:17:57 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 21:18:02 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 86 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 21:18:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0291  1.0183  1.0102  0.9858  0.9815  0.9807  0.9791  0.9768  0.9748  0.9748  0.9748  0.9707  0.9687  0.9682  0.9660  0.9655
[17 : 32]:	0.9572  0.9568  0.9560  0.9555  0.9548  0.9538  0.9538  0.9538  0.9538  0.9520  0.9500  0.9500  0.9482  0.9480  0.9467  0.9439
[33 : 48]:	0.9429  0.9416  0.9414  0.9414  0.9405  0.9401  0.9359  0.9348  0.9317  0.9296  0.9289  0.9279  0.9273  0.9266  0.9266  0.9261
[49 : 64]:	0.9251  0.9221  0.9208  0.9207  0.9194  0.9191  0.9189  0.9189  0.9185  0.9182  0.9176  0.9172  0.9172  0.9172  0.9172  0.9172
2024-04-28 21:18:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:18:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #65: GFLOPs: 386.6029. Time: 5.8810 us. Best GFLOPs: 413.7687
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #66: GFLOPs: 375.1773. Time: 6.0601 us. Best GFLOPs: 413.7687
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #67: GFLOPs: 362.6739. Time: 6.2690 us. Best GFLOPs: 413.7687
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #68: GFLOPs: 429.0407. Time: 5.2993 us. Best GFLOPs: 429.0407
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #69: GFLOPs: 429.0274. Time: 5.2994 us. Best GFLOPs: 429.0407
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #70: GFLOPs: 368.4324. Time: 6.1710 us. Best GFLOPs: 429.0407
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #71: GFLOPs: 398.1929. Time: 5.7098 us. Best GFLOPs: 429.0407
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #72: GFLOPs: 395.1570. Time: 5.7537 us. Best GFLOPs: 429.0407
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #73: GFLOPs: 398.2233. Time: 5.7094 us. Best GFLOPs: 429.0407
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #74: GFLOPs: 438.5006. Time: 5.1849 us. Best GFLOPs: 438.5006
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #75: GFLOPs: 438.5453. Time: 5.1844 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #76: GFLOPs: 351.7977. Time: 6.4628 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #77: GFLOPs: 432.2787. Time: 5.2596 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #78: GFLOPs: 403.4418. Time: 5.6355 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #79: GFLOPs: 347.5087. Time: 6.5426 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #80: GFLOPs: 362.6628. Time: 6.2692 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #81: GFLOPs: 403.4210. Time: 5.6358 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #82: GFLOPs: 415.0022. Time: 5.4785 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #83: GFLOPs: 399.9785. Time: 5.6843 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #84: GFLOPs: 400.4195. Time: 5.6780 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #85: GFLOPs: 399.9461. Time: 5.6848 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #86: GFLOPs: 403.4070. Time: 5.6360 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #87: GFLOPs: 403.4070. Time: 5.6360 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #88: GFLOPs: 403.3662. Time: 5.6366 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #89: GFLOPs: 403.3866. Time: 5.6363 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #90: GFLOPs: 430.5913. Time: 5.2802 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #91: GFLOPs: 414.9693. Time: 5.4790 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #92: GFLOPs: 414.9497. Time: 5.4792 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #93: GFLOPs: 413.4711. Time: 5.4988 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #94: GFLOPs: 405.1125. Time: 5.6123 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #95: GFLOPs: 404.7756. Time: 5.6169 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #96: GFLOPs: 361.7633. Time: 6.2848 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #97: GFLOPs: 403.3278. Time: 5.6371 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #98: GFLOPs: 403.3637. Time: 5.6366 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #99: GFLOPs: 413.5311. Time: 5.4980 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #100: GFLOPs: 413.6158. Time: 5.4969 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #101: GFLOPs: 409.7036. Time: 5.5494 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #102: GFLOPs: 409.9895. Time: 5.5455 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #103: GFLOPs: 408.6443. Time: 5.5638 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #104: GFLOPs: 402.8013. Time: 5.6445 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #105: GFLOPs: 379.8014. Time: 5.9863 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #106: GFLOPs: 397.1696. Time: 5.7245 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #107: GFLOPs: 413.7654. Time: 5.4949 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #108: GFLOPs: 411.8887. Time: 5.5199 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #109: GFLOPs: 409.9950. Time: 5.5454 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #110: GFLOPs: 375.7390. Time: 6.0510 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #111: GFLOPs: 375.7486. Time: 6.0509 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #112: GFLOPs: 409.9179. Time: 5.5465 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #113: GFLOPs: 361.5086. Time: 6.2892 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #114: GFLOPs: 389.3357. Time: 5.8397 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #115: GFLOPs: 399.3426. Time: 5.6934 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #116: GFLOPs: 397.1416. Time: 5.7249 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #117: GFLOPs: 389.4159. Time: 5.8385 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #118: GFLOPs: 417.4694. Time: 5.4461 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #119: GFLOPs: 405.4052. Time: 5.6082 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #120: GFLOPs: 405.4027. Time: 5.6083 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #121: GFLOPs: 397.1166. Time: 5.7253 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #122: GFLOPs: 388.7872. Time: 5.8479 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #123: GFLOPs: 376.3180. Time: 6.0417 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #124: GFLOPs: 397.1396. Time: 5.7249 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #125: GFLOPs: 397.1439. Time: 5.7249 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #126: GFLOPs: 32.5155. Time: 69.9236 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #127: GFLOPs: 252.0161. Time: 9.0216 us. Best GFLOPs: 438.5453
2024-04-28 21:19:05 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #128: GFLOPs: 292.6592. Time: 7.7688 us. Best GFLOPs: 438.5453
2024-04-28 22:23:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:23:46 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:23:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 365 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 22:23:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 728 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 22:23:50 [INFO] [evolutionary_search.cc:723] Sampled 92 candidate(s)
2024-04-28 22:23:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 84 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 22:23:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 82 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 22:24:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 110 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 22:24:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xf1c8e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738228)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x4d24078)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4cd6f18)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4bfee68)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4d3f348)]: 67 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x4cec878)]: 0 failure(s)
2024-04-28 22:24:10 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9693  0.9620  0.9617  0.9615  0.9613  0.9603  0.9597  0.9575  0.9570  0.9555  0.9550  0.9547  0.9545  0.9525  0.9515  0.9515
[17 : 32]:	0.9509  0.9508  0.9505  0.9501  0.9501  0.9501  0.9500  0.9494  0.9492  0.9483  0.9481  0.9473  0.9472  0.9469  0.9465  0.9465
[33 : 48]:	0.9463  0.9461  0.9452  0.9449  0.9449  0.9444  0.9444  0.9442  0.9441  0.9437  0.9432  0.9426  0.9426  0.9424  0.9422  0.9422
[49 : 64]:	0.9416  0.9409  0.9402  0.9400  0.9395  0.9393  0.9392  0.9388  0.9386  0.9376  0.9371  0.9371  0.9368  0.9363  0.9363  0.9362
2024-04-28 22:24:10 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:24:10 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #129: GFLOPs: 396.3025. Time: 5.7370 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #130: GFLOPs: 422.6674. Time: 5.3792 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #131: GFLOPs: 435.1837. Time: 5.2245 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #132: GFLOPs: 411.8528. Time: 5.5204 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #133: GFLOPs: 426.8898. Time: 5.3260 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #134: GFLOPs: 426.8952. Time: 5.3259 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #135: GFLOPs: 427.0369. Time: 5.3241 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #136: GFLOPs: 424.3029. Time: 5.3584 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #137: GFLOPs: 424.3339. Time: 5.3580 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #138: GFLOPs: 423.9151. Time: 5.3633 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #139: GFLOPs: 422.4515. Time: 5.3819 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #140: GFLOPs: 423.2930. Time: 5.3712 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #141: GFLOPs: 423.9771. Time: 5.3626 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #142: GFLOPs: 422.5690. Time: 5.3804 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #143: GFLOPs: 428.0340. Time: 5.3117 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #144: GFLOPs: 428.0746. Time: 5.3112 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #145: GFLOPs: 422.5152. Time: 5.3811 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #146: GFLOPs: 405.2615. Time: 5.6102 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #147: GFLOPs: 428.1752. Time: 5.3100 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #148: GFLOPs: 378.2136. Time: 6.0114 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #149: GFLOPs: 411.0295. Time: 5.5315 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #150: GFLOPs: 410.9867. Time: 5.5321 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #151: GFLOPs: 422.4353. Time: 5.3821 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #152: GFLOPs: 422.4060. Time: 5.3825 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #153: GFLOPs: 425.6271. Time: 5.3418 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #154: GFLOPs: 400.6056. Time: 5.6754 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #155: GFLOPs: 427.9933. Time: 5.3122 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #156: GFLOPs: 400.6461. Time: 5.6748 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #157: GFLOPs: 424.3217. Time: 5.3582 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #158: GFLOPs: 423.5705. Time: 5.3677 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #159: GFLOPs: 422.6904. Time: 5.3789 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #160: GFLOPs: 422.6925. Time: 5.3789 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #161: GFLOPs: 406.3723. Time: 5.5949 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #162: GFLOPs: 391.6210. Time: 5.8056 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #163: GFLOPs: 411.8840. Time: 5.5200 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #164: GFLOPs: 422.6599. Time: 5.3793 us. Best GFLOPs: 438.5453
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #165: GFLOPs: 516.9390. Time: 4.3982 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #166: GFLOPs: 415.6182. Time: 5.4704 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #167: GFLOPs: 415.6929. Time: 5.4694 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #168: GFLOPs: 422.6532. Time: 5.3794 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #169: GFLOPs: 422.7814. Time: 5.3777 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #170: GFLOPs: 423.5186. Time: 5.3684 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #171: GFLOPs: 413.7899. Time: 5.4946 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #172: GFLOPs: 506.6432. Time: 4.4876 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #173: GFLOPs: 397.6904. Time: 5.7170 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #174: GFLOPs: 390.6226. Time: 5.8205 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #175: GFLOPs: 411.9103. Time: 5.5196 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #176: GFLOPs: 411.9453. Time: 5.5192 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #177: GFLOPs: 423.0097. Time: 5.3748 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #178: GFLOPs: 411.9775. Time: 5.5187 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #179: GFLOPs: 412.0142. Time: 5.5183 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #180: GFLOPs: 404.7883. Time: 5.6168 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #181: GFLOPs: 498.7181. Time: 4.5589 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #182: GFLOPs: 411.9036. Time: 5.5197 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #183: GFLOPs: 413.3878. Time: 5.4999 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #184: GFLOPs: 422.2773. Time: 5.3841 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #185: GFLOPs: 404.8215. Time: 5.6163 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #186: GFLOPs: 398.1212. Time: 5.7108 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #187: GFLOPs: 404.7769. Time: 5.6169 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #188: GFLOPs: 383.0676. Time: 5.9352 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #189: GFLOPs: 406.0682. Time: 5.5991 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #190: GFLOPs: 91.7425. Time: 24.7824 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #191: GFLOPs: 12.8431. Time: 177.0283 us. Best GFLOPs: 516.9390
2024-04-28 22:25:12 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_conv2d_add_nn_relu_5] Trial #192: GFLOPs: 54.0966. Time: 42.0285 us. Best GFLOPs: 516.9390
