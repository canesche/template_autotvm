2024-04-28 19:50:55 [INFO] [task_scheduler.cc:160] Initializing Task #28: "fused_nn_softmax"
2024-04-28 19:50:55 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
        T_softmax_exp = T.alloc_buffer((T.int64(1), T.int64(1000)))
        T_softmax_expsum = T.alloc_buffer((T.int64(1),))
        for i0, k in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_maxelem"):
                v_i0, v_k = T.axis.remap("SR", [i0, k])
                T.reads(p0[v_i0, v_k])
                T.writes(T_softmax_maxelem[v_i0])
                with T.init():
                    T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
        for i0, i1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_exp"):
                v_i0, v_i1 = T.axis.remap("SS", [i0, i1])
                T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0])
                T.writes(T_softmax_exp[v_i0, v_i1])
                T_softmax_exp[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0])
        for i0, k in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_expsum"):
                v_i0, v_k = T.axis.remap("SR", [i0, k])
                T.reads(T_softmax_exp[v_i0, v_k])
                T.writes(T_softmax_expsum[v_i0])
                with T.init():
                    T_softmax_expsum[v_i0] = T.float32(0)
                T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T_softmax_exp[v_i0, v_k]
        for i0, i1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_norm"):
                v_i0, v_i1 = T.axis.remap("SS", [i0, i1])
                T.reads(T_softmax_exp[v_i0, v_i1], T_softmax_expsum[v_i0])
                T.writes(T_softmax_norm[v_i0, v_i1])
                T.block_attr({"axis": 1})
                T_softmax_norm[v_i0, v_i1] = T_softmax_exp[v_i0, v_i1] / T_softmax_expsum[v_i0]
2024-04-28 19:50:55 [INFO] [task_scheduler.cc:164] Total 4 design space(s) generated
2024-04-28 19:50:55 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum = T.alloc_buffer((T.int64(1),))
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum[v_i0])
                            with T.init():
                                T_softmax_expsum[v_i0] = T.float32(0)
                            T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
            for i0_i1_fused_0 in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for i0_i1_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    with T.block("T_softmax_norm"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(1000), i0_i1_fused_0 * T.int64(32) + i0_i1_fused_1)
                        T.where(i0_i1_fused_0 * T.int64(32) + i0_i1_fused_1 < T.int64(1000))
                        T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum[v_i0])
                        T.writes(T_softmax_norm[v_i0, v_i1])
                        T.block_attr({"axis": 1})
                        T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
v5 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v5)
l6, l7 = sch.get_loops(block=b3)
l8 = sch.fuse(l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
l12, l13 = sch.get_loops(block=b2)
l14 = sch.fuse(l12, preserve_unit_iters=True)
l15, l16 = sch.split(loop=l14, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="blockIdx.x")
sch.bind(loop=l16, thread_axis="threadIdx.x")
l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l17, preserve_unit_iters=True)
l20, l21 = sch.split(loop=l19, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
2024-04-28 19:50:55 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum = T.alloc_buffer((T.int64(1),))
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for k_0 in range(T.int64(8)):
                    for k_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k_0 * T.int64(128) + k_1)
                            T.where(k_0 * T.int64(128) + k_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum[v_i0])
                            with T.init():
                                T_softmax_expsum[v_i0] = T.float32(0)
                            T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
            for i0_i1_fused_0 in T.thread_binding(T.int64(2), thread="blockIdx.x"):
                for i0_i1_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                    with T.block("T_softmax_norm"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(1000), i0_i1_fused_0 * T.int64(512) + i0_i1_fused_1)
                        T.where(i0_i1_fused_0 * T.int64(512) + i0_i1_fused_1 < T.int64(1000))
                        T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum[v_i0])
                        T.writes(T_softmax_norm[v_i0, v_i1])
                        T.block_attr({"axis": 1})
                        T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
v5 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=5)
l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, v5], preserve_unit_iters=True)
sch.bind(loop=l9, thread_axis="threadIdx.x")
v10 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v10)
l11, l12 = sch.get_loops(block=b3)
l13 = sch.fuse(l11, l12, preserve_unit_iters=True)
v14 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
l15, l16 = sch.split(loop=l13, factors=[None, v14], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="blockIdx.x")
sch.bind(loop=l16, thread_axis="threadIdx.x")
l17, l18 = sch.get_loops(block=b2)
l19 = sch.fuse(l17, preserve_unit_iters=True)
l20, l21 = sch.split(loop=l19, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
l22, l23, l24 = sch.get_loops(block=b0)
l25 = sch.fuse(l22, preserve_unit_iters=True)
sch.bind(loop=l25, thread_axis="blockIdx.x")
2024-04-28 19:50:55 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(63)):
                    for ax1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(16) + ax1_1)
                            T.where(ax1_0 * T.int64(16) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum_shared[v_i0])
                            with T.init():
                                T_softmax_expsum_shared[v_i0] = T.float32(0)
                            T_softmax_expsum_shared[v_i0] = T_softmax_expsum_shared[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
                for i1_0 in range(T.int64(63)):
                    for i1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_norm"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_i1 = T.axis.spatial(T.int64(1000), i1_0 * T.int64(16) + i1_1)
                            T.where(i1_0 * T.int64(16) + i1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum_shared[v_i0])
                            T.writes(T_softmax_norm[v_i0, v_i1])
                            T.block_attr({"axis": 1})
                            T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum_shared[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
b5, = sch.get_consumers(block=b2)
l6, l7 = sch.get_loops(block=b5)
v8 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=2)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="threadIdx.x")
sch.compute_at(block=b2, loop=l6, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="shared")
l11, l12, l13 = sch.get_loops(block=b2)
l14, l15 = sch.split(loop=l13, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="threadIdx.x")
v16 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v16)
l17, l18, l19 = sch.get_loops(block=b3)
l20 = sch.fuse(l17, preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
l21, l22 = sch.get_loops(block=b0)
l23 = sch.fuse(l21, preserve_unit_iters=True)
l24, l25 = sch.split(loop=l23, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l24, thread_axis="blockIdx.x")
sch.bind(loop=l25, thread_axis="threadIdx.x")
2024-04-28 19:50:55 [INFO] [task_scheduler.cc:170] Design space #3:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            T_softmax_maxelem_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            T_softmax_expsum_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(63)):
                    for ax1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(16) + ax1_1)
                            T.where(ax1_0 * T.int64(16) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem_shared[v_i0])
                            with T.init():
                                T_softmax_maxelem_shared[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem_shared[v_i0] = T.max(T_softmax_maxelem_shared[v_i0], p0[v_i0, v_k])
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(63)):
                    for ax1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(16) + ax1_1)
                            T.where(ax1_0 * T.int64(16) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem_shared[v_i0])
                            T.writes(T_softmax_expsum_shared[v_i0])
                            with T.init():
                                T_softmax_expsum_shared[v_i0] = T.float32(0)
                            T_softmax_expsum_shared[v_i0] = T_softmax_expsum_shared[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem_shared[v_i0])
                for i1_0 in range(T.int64(63)):
                    for i1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_norm"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_i1 = T.axis.spatial(T.int64(1000), i1_0 * T.int64(16) + i1_1)
                            T.where(i1_0 * T.int64(16) + i1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_i1], T_softmax_maxelem_shared[v_i0], T_softmax_expsum_shared[v_i0])
                            T.writes(T_softmax_norm[v_i0, v_i1])
                            T.block_attr({"axis": 1})
                            T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem_shared[v_i0]) / T_softmax_expsum_shared[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
b5, = sch.get_consumers(block=b2)
l6, l7 = sch.get_loops(block=b5)
v8 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=2)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="threadIdx.x")
sch.compute_at(block=b2, loop=l6, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="shared")
l11, l12, l13 = sch.get_loops(block=b2)
l14, l15 = sch.split(loop=l13, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="threadIdx.x")
b16, b17 = sch.get_consumers(block=b0)
l18, l19, l20, l21 = sch.get_loops(block=b16)
sch.compute_at(block=b0, loop=l18, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b0, buffer_index=0, storage_scope="shared")
l22, l23, l24 = sch.get_loops(block=b0)
l25, l26 = sch.split(loop=l24, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l26, thread_axis="threadIdx.x")
v27 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v27)
l28, l29, l30 = sch.get_loops(block=b3)
l31 = sch.fuse(l28, preserve_unit_iters=True)
sch.bind(loop=l31, thread_axis="blockIdx.x")
2024-04-28 20:19:28 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:19:28 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:19:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 20:19:29 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 20:19:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 20:19:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 20:19:30 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 20:19:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 20:19:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9936  0.9915  0.9838  0.9824  0.9823  0.9800  0.9722  0.9518  0.9507  0.9503  0.9451  0.9412  0.9411  0.9409  0.9365  0.9360
[17 : 32]:	0.9320  0.9268  0.9266  0.9216  0.9212  0.9162  0.9140  0.9105  0.8990  0.8972  0.8963  0.8931  0.8874  0.8870  0.8845  0.8821
[33 : 48]:	0.8807  0.8806  0.8697  0.8670  0.8607  0.8482  0.8472  0.8469  0.8435  0.8411  0.8402  0.8378  0.8372  0.8205  0.8204  0.8127
[49 : 64]:	0.8115  0.8111  0.8082  0.7958  0.7924  0.7893  0.7885  0.7876  0.7865  0.7845  0.7843  0.7811  0.7638  0.7461  0.7368  0.7314
2024-04-28 20:19:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:19:31 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #1: GFLOPs: 0.1485. Time: 26.9318 us. Best GFLOPs: 0.1485
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #2: GFLOPs: 0.1086. Time: 36.8273 us. Best GFLOPs: 0.1485
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #3: GFLOPs: 0.1074. Time: 37.2604 us. Best GFLOPs: 0.1485
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #4: GFLOPs: 0.1542. Time: 25.9327 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #5: GFLOPs: 0.1080. Time: 37.0521 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #6: GFLOPs: 0.1064. Time: 37.6105 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #7: GFLOPs: 0.0587. Time: 68.1208 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #8: GFLOPs: 0.1073. Time: 37.2738 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #9: GFLOPs: 0.1070. Time: 37.3759 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #10: GFLOPs: 0.1443. Time: 27.7196 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #11: GFLOPs: 0.1347. Time: 29.6975 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #12: GFLOPs: 0.1084. Time: 36.8933 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #13: GFLOPs: 0.1209. Time: 33.0918 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #14: GFLOPs: 0.0863. Time: 46.3559 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #15: GFLOPs: 0.1085. Time: 36.8594 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #16: GFLOPs: 0.1057. Time: 37.8494 us. Best GFLOPs: 0.1542
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #17: GFLOPs: 0.1920. Time: 20.8343 us. Best GFLOPs: 0.1920
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #18: GFLOPs: 0.2377. Time: 16.8282 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #19: GFLOPs: 0.1087. Time: 36.8008 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #20: GFLOPs: 0.1517. Time: 26.3660 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #21: GFLOPs: 0.1069. Time: 37.4058 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #22: GFLOPs: 0.1056. Time: 37.8801 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #23: GFLOPs: 0.1542. Time: 25.9369 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #24: GFLOPs: 0.1086. Time: 36.8433 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #25: GFLOPs: 0.1345. Time: 29.7354 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #26: GFLOPs: 0.1086. Time: 36.8490 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #27: GFLOPs: 0.1074. Time: 37.2411 us. Best GFLOPs: 0.2377
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #28: GFLOPs: 0.6691. Time: 5.9783 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #29: GFLOPs: 0.1528. Time: 26.1775 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #30: GFLOPs: 0.1077. Time: 37.1335 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #31: GFLOPs: 0.1653. Time: 24.1934 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #32: GFLOPs: 0.1077. Time: 37.1479 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #33: GFLOPs: 0.3796. Time: 10.5378 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #34: GFLOPs: 0.1071. Time: 37.3461 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #35: GFLOPs: 0.1058. Time: 37.7958 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #36: GFLOPs: 0.2280. Time: 17.5432 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #37: GFLOPs: 0.2586. Time: 15.4707 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #38: GFLOPs: 0.0863. Time: 46.3325 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #39: GFLOPs: 0.1078. Time: 37.0900 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #40: GFLOPs: 0.1086. Time: 36.8345 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #41: GFLOPs: 0.1083. Time: 36.9296 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #42: GFLOPs: 0.1051. Time: 38.0685 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #43: GFLOPs: 0.1080. Time: 37.0515 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #44: GFLOPs: 0.1526. Time: 26.2118 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #45: GFLOPs: 0.3541. Time: 11.2966 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #46: GFLOPs: 0.0862. Time: 46.4278 us. Best GFLOPs: 0.6691
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #47: GFLOPs: 0.8512. Time: 4.6994 us. Best GFLOPs: 0.8512
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #48: GFLOPs: 0.1052. Time: 38.0208 us. Best GFLOPs: 0.8512
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #49: GFLOPs: 0.1073. Time: 37.2709 us. Best GFLOPs: 0.8512
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #50: GFLOPs: 0.2537. Time: 15.7661 us. Best GFLOPs: 0.8512
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #51: GFLOPs: 0.1079. Time: 37.0851 us. Best GFLOPs: 0.8512
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #52: GFLOPs: 0.1051. Time: 38.0498 us. Best GFLOPs: 0.8512
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #53: GFLOPs: 0.1490. Time: 26.8492 us. Best GFLOPs: 0.8512
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #54: GFLOPs: 0.9145. Time: 4.3741 us. Best GFLOPs: 0.9145
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #55: GFLOPs: 0.0863. Time: 46.3618 us. Best GFLOPs: 0.9145
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #56: GFLOPs: 0.1506. Time: 26.5614 us. Best GFLOPs: 0.9145
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #57: GFLOPs: 0.1873. Time: 21.3546 us. Best GFLOPs: 0.9145
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #58: GFLOPs: 0.0854. Time: 46.8263 us. Best GFLOPs: 0.9145
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #59: GFLOPs: 0.2691. Time: 14.8658 us. Best GFLOPs: 0.9145
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #60: GFLOPs: 1.0321. Time: 3.8755 us. Best GFLOPs: 1.0321
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #61: GFLOPs: 0.8062. Time: 4.9617 us. Best GFLOPs: 1.0321
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #62: GFLOPs: 0.0591. Time: 67.7146 us. Best GFLOPs: 1.0321
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #63: GFLOPs: 0.2511. Time: 15.9323 us. Best GFLOPs: 1.0321
2024-04-28 20:21:10 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #64: GFLOPs: 0.0854. Time: 46.8135 us. Best GFLOPs: 1.0321
2024-04-28 21:39:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:39:26 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-28 21:39:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 21:39:27 [INFO] [evolutionary_search.cc:723] Sampled 448 candidate(s)
2024-04-28 21:39:29 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 21:39:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 21:39:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 21:39:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 21:39:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8456  0.8207  0.7988  0.7947  0.7946  0.7942  0.7650  0.7486  0.7338  0.7078  0.6672  0.6625  0.6614  0.6053  0.6006  0.4191
[17 : 32]:	0.4089  0.3684  0.3651  0.3532  0.3438  0.3414  0.3369  0.3335  0.3306  0.3201  0.3179  0.3162  0.3126  0.3117  0.2790  0.2713
[33 : 48]:	0.2598  0.2581  0.2494  0.2175  0.2158  0.1972  0.1947  0.1904  0.1885  0.1870  0.1860  0.1801  0.1787  0.1777  0.1769  0.1760
[49 : 64]:	0.1751  0.1739  0.1728  0.1726  0.1710  0.1708  0.1692  0.1680  0.1669  0.1662  0.1618  0.1605  0.1585  0.1572  0.1561  0.1561
2024-04-28 21:39:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:39:35 [INFO] [evolutionary_search.cc:730] Sending 61 candidates(s) for measurement
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #65: GFLOPs: 1.0813. Time: 3.6992 us. Best GFLOPs: 1.0813
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #66: GFLOPs: 0.8754. Time: 4.5691 us. Best GFLOPs: 1.0813
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #67: GFLOPs: 1.1382. Time: 3.5142 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #68: GFLOPs: 0.8746. Time: 4.5736 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #69: GFLOPs: 1.1382. Time: 3.5144 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #70: GFLOPs: 1.0722. Time: 3.7306 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #71: GFLOPs: 1.0131. Time: 3.9482 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #72: GFLOPs: 1.0133. Time: 3.9475 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #73: GFLOPs: 1.0133. Time: 3.9474 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #74: GFLOPs: 1.0813. Time: 3.6993 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #75: GFLOPs: 0.8980. Time: 4.4545 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #76: GFLOPs: 0.8907. Time: 4.4909 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #77: GFLOPs: 0.7085. Time: 5.6454 us. Best GFLOPs: 1.1382
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #78: GFLOPs: 1.1385. Time: 3.5135 us. Best GFLOPs: 1.1385
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #79: GFLOPs: 0.9708. Time: 4.1204 us. Best GFLOPs: 1.1385
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #80: GFLOPs: 0.4596. Time: 8.7034 us. Best GFLOPs: 1.1385
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #81: GFLOPs: 0.4596. Time: 8.7032 us. Best GFLOPs: 1.1385
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #82: GFLOPs: 0.2725. Time: 14.6802 us. Best GFLOPs: 1.1385
2024-04-28 21:40:35 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #83: GFLOPs: 0.2304. Time: 17.3596 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #84: GFLOPs: 0.4728. Time: 8.4594 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #85: GFLOPs: 0.2512. Time: 15.9257 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #86: GFLOPs: 0.2590. Time: 15.4463 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #87: GFLOPs: 0.4967. Time: 8.0534 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #88: GFLOPs: 0.4728. Time: 8.4597 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #89: GFLOPs: 0.2714. Time: 14.7398 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #90: GFLOPs: 0.2594. Time: 15.4229 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #91: GFLOPs: 0.2546. Time: 15.7084 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #92: GFLOPs: 0.2593. Time: 15.4270 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #93: GFLOPs: 0.2596. Time: 15.4065 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #94: GFLOPs: 0.2824. Time: 14.1628 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #95: GFLOPs: 0.2741. Time: 14.5947 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #96: GFLOPs: 0.1914. Time: 20.9039 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #97: GFLOPs: 0.2590. Time: 15.4438 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #98: GFLOPs: 0.2271. Time: 17.6131 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #99: GFLOPs: 0.1651. Time: 24.2228 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #100: GFLOPs: 0.2532. Time: 15.7990 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #101: GFLOPs: 0.2544. Time: 15.7225 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #102: GFLOPs: 0.1096. Time: 36.4876 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #103: GFLOPs: 0.1094. Time: 36.5568 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #104: GFLOPs: 0.1561. Time: 25.6313 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #105: GFLOPs: 0.2577. Time: 15.5231 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #106: GFLOPs: 0.1096. Time: 36.4854 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #107: GFLOPs: 0.1096. Time: 36.4831 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #108: GFLOPs: 0.1098. Time: 36.4245 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #109: GFLOPs: 0.2391. Time: 16.7279 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #110: GFLOPs: 0.2298. Time: 17.4075 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #111: GFLOPs: 0.1090. Time: 36.7070 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #112: GFLOPs: 0.2171. Time: 18.4249 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #113: GFLOPs: 0.1567. Time: 25.5346 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #114: GFLOPs: 0.1096. Time: 36.4919 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #115: GFLOPs: 0.2715. Time: 14.7329 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #116: GFLOPs: 0.1095. Time: 36.5150 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #117: GFLOPs: 0.1556. Time: 25.7021 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #118: GFLOPs: 0.1847. Time: 21.6613 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #119: GFLOPs: 0.1092. Time: 36.6303 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #120: GFLOPs: 0.1094. Time: 36.5656 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #121: GFLOPs: 0.1096. Time: 36.4874 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #122: GFLOPs: 0.1563. Time: 25.5953 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #123: GFLOPs: 0.1098. Time: 36.4278 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #124: GFLOPs: 0.2327. Time: 17.1909 us. Best GFLOPs: 1.1385
2024-04-28 21:40:36 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #125: GFLOPs: 0.1094. Time: 36.5475 us. Best GFLOPs: 1.1385
2024-04-28 23:15:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:15:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:15:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 23:15:59 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:16:00 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 23:16:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 23:16:03 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 23:16:05 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x466a468)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xc738ca8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xc6a4e58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3affe58)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x4b7b6d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xc680638)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8768f8)]: 0 failure(s)
2024-04-28 23:16:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.1929  0.1803  0.1786  0.1769  0.1743  0.1727  0.1668  0.1649  0.1645  0.1608  0.1606  0.1597  0.1591  0.1590  0.1564  0.1563
[17 : 32]:	0.1539  0.1508  0.1468  0.1466  0.1465  0.1461  0.1433  0.1426  0.1417  0.1374  0.1373  0.1372  0.1357  0.1356  0.1348  0.1329
[33 : 48]:	0.1297  0.1272  0.1255  0.1241  0.1239  0.1231  0.1225  0.1192  0.1183  0.1181  0.1153  0.1153  0.1135  0.1123  0.1121  0.1106
[49 : 64]:	0.1105  0.1104  0.1095  0.1083  0.1073  0.1046  0.1023  0.1021  0.1012  0.1001  0.0985  0.0977  0.0972  0.0954  0.0952  0.0948
2024-04-28 23:16:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:16:06 [INFO] [evolutionary_search.cc:730] Sending 61 candidates(s) for measurement
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #126: GFLOPs: 0.2148. Time: 18.6188 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #127: GFLOPs: 0.1083. Time: 36.9461 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #128: GFLOPs: 0.1085. Time: 36.8776 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #129: GFLOPs: 0.1545. Time: 25.8929 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #130: GFLOPs: 0.1072. Time: 37.3183 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #131: GFLOPs: 0.1525. Time: 26.2338 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #132: GFLOPs: 0.1072. Time: 37.3175 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #133: GFLOPs: 0.1514. Time: 26.4153 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #134: GFLOPs: 0.1067. Time: 37.4866 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #135: GFLOPs: 0.1073. Time: 37.2877 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #136: GFLOPs: 0.1080. Time: 37.0494 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #137: GFLOPs: 0.1084. Time: 36.8999 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #138: GFLOPs: 0.1565. Time: 25.5631 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #139: GFLOPs: 0.1539. Time: 25.9912 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #140: GFLOPs: 0.1078. Time: 37.0904 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #141: GFLOPs: 0.1070. Time: 37.3862 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #142: GFLOPs: 0.1071. Time: 37.3539 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #143: GFLOPs: 0.1058. Time: 37.7917 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #144: GFLOPs: 0.1366. Time: 29.2746 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #145: GFLOPs: 0.1072. Time: 37.3139 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #146: GFLOPs: 0.1072. Time: 37.3097 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #147: GFLOPs: 0.1071. Time: 37.3315 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #148: GFLOPs: 0.1084. Time: 36.8847 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #149: GFLOPs: 0.1059. Time: 37.7791 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #150: GFLOPs: 0.1072. Time: 37.3185 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #151: GFLOPs: 0.1075. Time: 37.2188 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #152: GFLOPs: 0.1059. Time: 37.7631 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #153: GFLOPs: 0.1073. Time: 37.2942 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #154: GFLOPs: 0.1552. Time: 25.7792 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #155: GFLOPs: 0.1452. Time: 27.5544 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #156: GFLOPs: 0.1071. Time: 37.3637 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #157: GFLOPs: 0.1257. Time: 31.8335 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #158: GFLOPs: 0.1083. Time: 36.9486 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #159: GFLOPs: 0.1058. Time: 37.7950 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #160: GFLOPs: 0.1072. Time: 37.3255 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #161: GFLOPs: 0.0955. Time: 41.8864 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #162: GFLOPs: 0.1084. Time: 36.9015 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #163: GFLOPs: 0.1084. Time: 36.8925 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #164: GFLOPs: 0.1084. Time: 36.9046 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #165: GFLOPs: 0.1077. Time: 37.1572 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #166: GFLOPs: 0.1073. Time: 37.2948 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #167: GFLOPs: 0.1068. Time: 37.4412 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #168: GFLOPs: 0.1072. Time: 37.2966 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #169: GFLOPs: 0.1073. Time: 37.2736 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #170: GFLOPs: 0.1072. Time: 37.3240 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #171: GFLOPs: 0.1086. Time: 36.8482 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #172: GFLOPs: 0.1085. Time: 36.8707 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #173: GFLOPs: 0.1549. Time: 25.8159 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #174: GFLOPs: 0.1525. Time: 26.2377 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #175: GFLOPs: 0.0953. Time: 41.9843 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #176: GFLOPs: 0.1084. Time: 36.9020 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #177: GFLOPs: 0.0955. Time: 41.8988 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #178: GFLOPs: 0.1053. Time: 38.0042 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #179: GFLOPs: 0.1078. Time: 37.0978 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #180: GFLOPs: 0.1068. Time: 37.4508 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #181: GFLOPs: 0.1071. Time: 37.3346 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #182: GFLOPs: 0.1359. Time: 29.4335 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #183: GFLOPs: 0.1072. Time: 37.3117 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #184: GFLOPs: 0.1457. Time: 27.4486 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #185: GFLOPs: 0.1083. Time: 36.9472 us. Best GFLOPs: 1.1385
2024-04-28 23:17:09 [INFO] [task_scheduler.cc:131] [Task #28: fused_nn_softmax] Trial #186: GFLOPs: 0.1053. Time: 38.0028 us. Best GFLOPs: 1.1385
