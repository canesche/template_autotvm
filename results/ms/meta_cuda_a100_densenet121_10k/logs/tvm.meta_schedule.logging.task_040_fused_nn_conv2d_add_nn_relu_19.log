2024-04-28 19:55:10 [INFO] [task_scheduler.cc:160] Initializing Task #40: "fused_nn_conv2d_add_nn_relu_19"
2024-04-28 19:55:10 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(896), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(896), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(896), T.int64(14), T.int64(14)))
        conv2d_nchw = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(896), T.int64(14), T.int64(14)):
            with T.block("pad_temp"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2, v_i3])
                T.writes(pad_temp[v_i0, v_i1, v_i2, v_i3])
                pad_temp[v_i0, v_i1, v_i2, v_i3] = p0[v_i0, v_i1, v_i2, v_i3]
        for nn, ff, yy, xx, rc, ry, rx in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(896), T.int64(1), T.int64(1)):
            with T.block("conv2d_nchw"):
                v_nn, v_ff, v_yy, v_xx, v_rc, v_ry, v_rx = T.axis.remap("SSSSRRR", [nn, ff, yy, xx, rc, ry, rx])
                T.reads(pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1[v_ff, v_rc, v_ry, v_rx])
                T.writes(conv2d_nchw[v_nn, v_ff, v_yy, v_xx])
                with T.init():
                    conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                conv2d_nchw[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw[v_nn, v_ff, v_yy, v_xx] + pad_temp[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1[v_ff, v_rc, v_ry, v_rx]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_nchw[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-28 19:55:10 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 19:55:10 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(896), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(896), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(896), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(896), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                        for rc_0, ry_0, rx_0 in T.grid(T.int64(7), T.int64(1), T.int64(1)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(25088)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(896), rc_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused // T.int64(196))
                                    v2 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(196) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(16384)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(128))
                                    v1 = T.axis.spatial(T.int64(896), rc_0 * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 * T.int64(7) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(896), rc_0 * T.int64(128) + rc_1 * T.int64(4) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_0 + ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_0 + rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 16, 4, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 7])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 7, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[7, 32, 4])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v100 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v100)
2024-04-28 19:55:10 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(896), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(896), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(896), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(896), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(7), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(25088)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(896), rc_0_ry_0_rx_0_fused * T.int64(128) + ax0_ax1_ax2_ax3_fused // T.int64(196))
                                    v2 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(196) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(16384)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(128))
                                    v1 = T.axis.spatial(T.int64(896), rc_0_ry_0_rx_0_fused * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 * T.int64(7) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(896), rc_0_ry_0_rx_0_fused * T.int64(128) + rc_1 * T.int64(4) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 16, 4, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 7])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 7, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[7, 32, 4])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-28 19:55:10 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(896), T.int64(14), T.int64(14)), "float32"), p1: T.Buffer((T.int64(128), T.int64(896), T.int64(1), T.int64(1)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            conv2d_nchw_local = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14)), scope="local")
            pad_temp_shared = T.alloc_buffer((T.int64(1), T.int64(896), T.int64(14), T.int64(14)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(128), T.int64(896), T.int64(1), T.int64(1)), scope="shared")
            for nn_0_ff_0_yy_0_xx_0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for nn_1_ff_1_yy_1_xx_1_fused in T.thread_binding(T.int64(14), thread="vthread.x"):
                    for nn_2_ff_2_yy_2_xx_2_fused in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                        for rc_0_ry_0_rx_0_fused in T.serial(T.int64(7), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(25088)):
                                with T.block("pad_temp_shared"):
                                    v0 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v1 = T.axis.spatial(T.int64(896), rc_0_ry_0_rx_0_fused * T.int64(128) + ax0_ax1_ax2_ax3_fused // T.int64(196))
                                    v2 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(196) // T.int64(14))
                                    v3 = T.axis.spatial(T.int64(14), ax0_ax1_ax2_ax3_fused % T.int64(14))
                                    T.reads(p0[v0, v1, v2, v3])
                                    T.writes(pad_temp_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 4})
                                    pad_temp_shared[v0, v1, v2, v3] = p0[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(16384)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused // T.int64(128))
                                    v1 = T.axis.spatial(T.int64(896), rc_0_ry_0_rx_0_fused * T.int64(128) + ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    v2 = T.axis.spatial(T.int64(1), T.int64(0))
                                    v3 = T.axis.spatial(T.int64(1), T.int64(0))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for rc_1, ry_1, rx_1, nn_3, ff_3, yy_3, xx_3, rc_2, ry_2, rx_2, nn_4, ff_4, yy_4, xx_4 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2)):
                                with T.block("conv2d_nchw"):
                                    v_nn = T.axis.spatial(T.int64(1), nn_3 + nn_4)
                                    v_ff = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ff_3 + ff_4)
                                    v_yy = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + yy_3 * T.int64(7) + yy_4)
                                    v_xx = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(2) + xx_3 * T.int64(2) + xx_4)
                                    v_rc = T.axis.reduce(T.int64(896), rc_0_ry_0_rx_0_fused * T.int64(128) + rc_1 * T.int64(4) + rc_2)
                                    v_ry = T.axis.reduce(T.int64(1), ry_1 + ry_2)
                                    v_rx = T.axis.reduce(T.int64(1), rx_1 + rx_2)
                                    T.reads(pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx], p1_shared[v_ff, v_rc, v_ry, v_rx])
                                    T.writes(conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = T.float32(0)
                                    conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] = conv2d_nchw_local[v_nn, v_ff, v_yy, v_xx] + pad_temp_shared[v_nn, v_rc, v_yy + v_ry, v_xx + v_rx] * p1_shared[v_ff, v_rc, v_ry, v_rx]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(2)):
                            with T.block("conv2d_nchw_local"):
                                v0 = T.axis.spatial(T.int64(1), ax0)
                                v1 = T.axis.spatial(T.int64(128), nn_1_ff_1_yy_1_xx_1_fused // T.int64(7) * T.int64(64) + nn_2_ff_2_yy_2_xx_2_fused // T.int64(2) * T.int64(4) + ax1)
                                v2 = T.axis.spatial(T.int64(14), nn_2_ff_2_yy_2_xx_2_fused % T.int64(2) * T.int64(7) + ax2)
                                v3 = T.axis.spatial(T.int64(14), nn_1_ff_1_yy_1_xx_1_fused % T.int64(7) * T.int64(2) + ax3)
                                T.reads(conv2d_nchw_local[v0, v1, v2, v3], p2[v0, v1, T.int64(0), T.int64(0)])
                                T.writes(T_relu[v0, v1, v2, v3])
                                T_relu[v0, v1, v2, v3] = T.max(conv2d_nchw_local[v0, v1, v2, v3] + p2[v0, v1, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="conv2d_nchw", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="T_relu", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15, v16 = sch.sample_perfect_tile(loop=l5, n=5, max_innermost_factor=64, decision=[1, 1, 1, 1, 1])
l17, l18, l19, l20, l21 = sch.split(loop=l5, factors=[v12, v13, v14, v15, v16], preserve_unit_iters=True)
v22, v23, v24, v25, v26 = sch.sample_perfect_tile(loop=l6, n=5, max_innermost_factor=64, decision=[1, 2, 16, 4, 1])
l27, l28, l29, l30, l31 = sch.split(loop=l6, factors=[v22, v23, v24, v25, v26], preserve_unit_iters=True)
v32, v33, v34, v35, v36 = sch.sample_perfect_tile(loop=l7, n=5, max_innermost_factor=64, decision=[1, 1, 2, 1, 7])
l37, l38, l39, l40, l41 = sch.split(loop=l7, factors=[v32, v33, v34, v35, v36], preserve_unit_iters=True)
v42, v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l8, n=5, max_innermost_factor=64, decision=[1, 7, 1, 1, 2])
l47, l48, l49, l50, l51 = sch.split(loop=l8, factors=[v42, v43, v44, v45, v46], preserve_unit_iters=True)
v52, v53, v54 = sch.sample_perfect_tile(loop=l9, n=3, max_innermost_factor=64, decision=[7, 32, 4])
l55, l56, l57 = sch.split(loop=l9, factors=[v52, v53, v54], preserve_unit_iters=True)
v58, v59, v60 = sch.sample_perfect_tile(loop=l10, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l61, l62, l63 = sch.split(loop=l10, factors=[v58, v59, v60], preserve_unit_iters=True)
v64, v65, v66 = sch.sample_perfect_tile(loop=l11, n=3, max_innermost_factor=64, decision=[1, 1, 1])
l67, l68, l69 = sch.split(loop=l11, factors=[v64, v65, v66], preserve_unit_iters=True)
sch.reorder(l17, l27, l37, l47, l18, l28, l38, l48, l19, l29, l39, l49, l55, l61, l67, l56, l62, l68, l20, l30, l40, l50, l57, l63, l69, l21, l31, l41, l51)
l70 = sch.fuse(l17, l27, l37, l47, preserve_unit_iters=True)
sch.bind(loop=l70, thread_axis="blockIdx.x")
l71 = sch.fuse(l18, l28, l38, l48, preserve_unit_iters=True)
sch.bind(loop=l71, thread_axis="vthread.x")
l72 = sch.fuse(l19, l29, l39, l49, preserve_unit_iters=True)
sch.bind(loop=l72, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b73 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b73, loop=l72, preserve_unit_loops=True, index=-1)
b74 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b74, loop=l67, preserve_unit_loops=True, index=-1)
l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b74)
l85 = sch.fuse(l81, l82, l83, l84, preserve_unit_iters=True)
v86 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b74, ann_key="meta_schedule.cooperative_fetch", ann_val=v86)
b87 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b87, loop=l67, preserve_unit_loops=True, index=-1)
l88, l89, l90, l91, l92, l93, l94, l95, l96, l97 = sch.get_loops(block=b87)
l98 = sch.fuse(l94, l95, l96, l97, preserve_unit_iters=True)
v99 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b87, ann_key="meta_schedule.cooperative_fetch", ann_val=v99)
l100 = sch.fuse(l55, l61, l67, preserve_unit_iters=True)
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l100, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b3)
sch.reverse_compute_inline(block=b2)
sch.compute_inline(block=b0)
v101 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v101)
2024-04-28 20:48:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 20:48:00 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 20:48:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 486 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-28 20:48:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 962 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-28 20:48:03 [INFO] [evolutionary_search.cc:723] Sampled 62 candidate(s)
2024-04-28 20:48:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 114 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-28 20:48:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 94 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-28 20:48:10 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 77 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-28 20:48:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 62 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-28 20:48:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9982  0.9959  0.9955  0.9945  0.9941  0.9921  0.9919  0.9917  0.9910  0.9888  0.9883  0.9876  0.9868  0.9864  0.9857
[17 : 32]:	0.9849  0.9845  0.9842  0.9842  0.9841  0.9834  0.9833  0.9824  0.9821  0.9818  0.9812  0.9805  0.9805  0.9792  0.9792  0.9789
[33 : 48]:	0.9785  0.9773  0.9771  0.9770  0.9770  0.9769  0.9756  0.9753  0.9740  0.9740  0.9739  0.9728  0.9723  0.9720  0.9712  0.9709
[49 : 64]:	0.9706  0.9702  0.9683  0.9666  0.9656  0.9648  0.9638  0.9637  0.9629  0.9627  0.9623  0.9623  0.9598  0.9589  0.9586  0.9582
2024-04-28 20:48:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 20:48:12 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #1: GFLOPs: 150.0622. Time: 299.9281 us. Best GFLOPs: 150.0622
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #2: GFLOPs: 1288.8039. Time: 34.9222 us. Best GFLOPs: 1288.8039
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #3: GFLOPs: 193.1455. Time: 233.0257 us. Best GFLOPs: 1288.8039
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #4: GFLOPs: 1575.4827. Time: 28.5677 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #5: GFLOPs: 203.0363. Time: 221.6740 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #6: GFLOPs: 160.2352. Time: 280.8862 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #7: GFLOPs: 109.1174. Time: 412.4719 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #8: GFLOPs: 107.0259. Time: 420.5325 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #9: GFLOPs: 847.9529. Time: 53.0783 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #10: GFLOPs: 616.1825. Time: 73.0431 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #11: GFLOPs: 572.1318. Time: 78.6670 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #12: GFLOPs: 478.1128. Time: 94.1365 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #13: GFLOPs: 113.8027. Time: 395.4905 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #14: GFLOPs: 161.0391. Time: 279.4842 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #15: GFLOPs: 345.4647. Time: 130.2821 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #16: GFLOPs: 6.7158. Time: 6701.8071 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #17: GFLOPs: 122.2638. Time: 368.1210 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #18: GFLOPs: 1178.7859. Time: 38.1816 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #19: GFLOPs: 103.2544. Time: 435.8929 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #20: GFLOPs: 262.4668. Time: 171.4803 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #21: GFLOPs: 109.5091. Time: 410.9966 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #22: GFLOPs: 136.3507. Time: 330.0890 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #23: GFLOPs: 84.7964. Time: 530.7756 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #24: GFLOPs: 908.5487. Time: 49.5382 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #25: GFLOPs: 529.0350. Time: 85.0754 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #26: GFLOPs: 13.0916. Time: 3437.9094 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #27: GFLOPs: 103.3607. Time: 435.4449 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #28: GFLOPs: 130.6937. Time: 344.3767 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #29: GFLOPs: 120.4668. Time: 373.6123 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #30: GFLOPs: 398.6712. Time: 112.8947 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #31: GFLOPs: 470.8870. Time: 95.5810 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #32: GFLOPs: 246.3443. Time: 182.7031 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #33: GFLOPs: 16.0263. Time: 2808.3769 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #34: GFLOPs: 12.6379. Time: 3561.3308 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #35: GFLOPs: 61.8104. Time: 728.1605 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #36: GFLOPs: 62.2694. Time: 722.7925 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #37: GFLOPs: 917.3306. Time: 49.0640 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #38: GFLOPs: 65.5312. Time: 686.8164 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #39: GFLOPs: 955.6763. Time: 47.0953 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #40: GFLOPs: 771.5833. Time: 58.3318 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #41: GFLOPs: 200.0419. Time: 224.9922 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #42: GFLOPs: 357.9646. Time: 125.7328 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #43: GFLOPs: 62.3243. Time: 722.1557 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #44: GFLOPs: 1253.0581. Time: 35.9184 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:33 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #45: GFLOPs: 121.5136. Time: 370.3937 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #46: GFLOPs: 190.8181. Time: 235.8679 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #47: GFLOPs: 130.4469. Time: 345.0284 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #48: GFLOPs: 634.0707. Time: 70.9824 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #49: GFLOPs: 96.2023. Time: 467.8460 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #50: GFLOPs: 87.8774. Time: 512.1669 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #51: GFLOPs: 13.3954. Time: 3359.9487 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #52: GFLOPs: 164.2903. Time: 273.9533 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #53: GFLOPs: 683.4013. Time: 65.8586 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #54: GFLOPs: 315.4835. Time: 142.6632 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #55: GFLOPs: 283.1734. Time: 158.9410 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #56: GFLOPs: 34.0381. Time: 1322.2804 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #57: GFLOPs: 821.3835. Time: 54.7952 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #58: GFLOPs: 271.2814. Time: 165.9084 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #59: GFLOPs: 70.1475. Time: 641.6179 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #60: GFLOPs: 529.9273. Time: 84.9322 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #61: GFLOPs: 28.1598. Time: 1598.3015 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #62: GFLOPs: 909.4638. Time: 49.4884 us. Best GFLOPs: 1575.4827
2024-04-28 23:02:34 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #63: GFLOPs: 219.8087. Time: 204.7593 us. Best GFLOPs: 1575.4827
2024-04-29 01:22:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:22:51 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 01:22:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 431 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-29 01:22:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 860 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-29 01:22:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 1288 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-29 01:22:57 [INFO] [evolutionary_search.cc:723] Sampled 59 candidate(s)
2024-04-29 01:22:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 108 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-29 01:23:03 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 93 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-29 01:23:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 107 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-29 01:23:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6c98648)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xaaadce8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x98ff568)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x372e598)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x987b4d8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb61abc8)]: 80 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xc8116e8)]: 0 failure(s)
2024-04-29 01:23:10 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.8858  1.8445  1.8095  1.8068  1.7582  1.6820  1.6443  1.5142  1.3624  1.3582  1.3318  1.3291  1.3146  1.3142  1.3092  1.3092
[17 : 32]:	1.3084  1.3055  1.3033  1.2977  1.2907  1.2871  1.2864  1.2779  1.2748  1.2701  1.2610  1.2590  1.2557  1.2551  1.2520  1.2515
[33 : 48]:	1.2410  1.2407  1.2347  1.2329  1.2286  1.2206  1.2158  1.2150  1.2148  1.2033  1.1977  1.1975  1.1951  1.1945  1.1943  1.1892
[49 : 64]:	1.1805  1.1772  1.1717  1.1711  1.1676  1.1661  1.1583  1.1568  1.1536  1.1514  1.1513  1.1424  1.1413  1.1384  1.1374  1.1355
2024-04-29 01:23:10 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:23:10 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #64: GFLOPs: 1827.2340. Time: 24.6317 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #65: GFLOPs: 1781.0322. Time: 25.2707 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #66: GFLOPs: 1480.8978. Time: 30.3923 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #67: GFLOPs: 1761.6290. Time: 25.5490 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #68: GFLOPs: 1495.4454. Time: 30.0966 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #69: GFLOPs: 1260.7028. Time: 35.7006 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #70: GFLOPs: 1244.8086. Time: 36.1565 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #71: GFLOPs: 1022.0469. Time: 44.0370 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #72: GFLOPs: 1767.5986. Time: 25.4627 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #73: GFLOPs: 1414.7850. Time: 31.8125 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #74: GFLOPs: 1039.8865. Time: 43.2815 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #75: GFLOPs: 1713.4315. Time: 26.2677 us. Best GFLOPs: 1827.2340
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #76: GFLOPs: 2026.5596. Time: 22.2090 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #77: GFLOPs: 1742.2016. Time: 25.8339 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #78: GFLOPs: 1473.1403. Time: 30.5523 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #79: GFLOPs: 1297.2094. Time: 34.6959 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #80: GFLOPs: 1290.3491. Time: 34.8804 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #81: GFLOPs: 1276.8363. Time: 35.2495 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #82: GFLOPs: 1276.8541. Time: 35.2490 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #83: GFLOPs: 1915.3153. Time: 23.4989 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #84: GFLOPs: 850.8636. Time: 52.8967 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #85: GFLOPs: 1296.9630. Time: 34.7025 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #86: GFLOPs: 1510.8728. Time: 29.7893 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #87: GFLOPs: 1982.5482. Time: 22.7020 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #88: GFLOPs: 2004.5283. Time: 22.4531 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #89: GFLOPs: 1732.2160. Time: 25.9828 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #90: GFLOPs: 1297.1613. Time: 34.6972 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #91: GFLOPs: 1302.2738. Time: 34.5610 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #92: GFLOPs: 1308.1284. Time: 34.4063 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #93: GFLOPs: 1867.4306. Time: 24.1015 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #94: GFLOPs: 1652.6590. Time: 27.2336 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #95: GFLOPs: 1430.2687. Time: 31.4681 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #96: GFLOPs: 2001.9402. Time: 22.4821 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #97: GFLOPs: 1320.8884. Time: 34.0739 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #98: GFLOPs: 1523.1585. Time: 29.5490 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #99: GFLOPs: 1362.0476. Time: 33.0443 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #100: GFLOPs: 1478.1797. Time: 30.4482 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #101: GFLOPs: 1816.1788. Time: 24.7816 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #102: GFLOPs: 1370.1453. Time: 32.8490 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #103: GFLOPs: 1293.6261. Time: 34.7920 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #104: GFLOPs: 1304.1265. Time: 34.5119 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #105: GFLOPs: 1303.9639. Time: 34.5162 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #106: GFLOPs: 1302.9214. Time: 34.5438 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #107: GFLOPs: 1263.3787. Time: 35.6250 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #108: GFLOPs: 1405.8094. Time: 32.0156 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #109: GFLOPs: 1252.5157. Time: 35.9340 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #110: GFLOPs: 1402.2385. Time: 32.0972 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #111: GFLOPs: 1698.5327. Time: 26.4981 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #112: GFLOPs: 1378.3317. Time: 32.6539 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #113: GFLOPs: 1088.7190. Time: 41.3402 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #114: GFLOPs: 1286.0416. Time: 34.9972 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #115: GFLOPs: 1750.0443. Time: 25.7181 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #116: GFLOPs: 1766.3083. Time: 25.4813 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #117: GFLOPs: 1480.0583. Time: 30.4095 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #118: GFLOPs: 1753.3231. Time: 25.6700 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:02 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #119: GFLOPs: 1592.2488. Time: 28.2669 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:03 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #120: GFLOPs: 1367.7272. Time: 32.9071 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:03 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #121: GFLOPs: 1797.8556. Time: 25.0342 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:03 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #122: GFLOPs: 1567.2084. Time: 28.7185 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:03 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #123: GFLOPs: 1672.5438. Time: 26.9098 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:03 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #124: GFLOPs: 1762.0712. Time: 25.5426 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:03 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #125: GFLOPs: 435.2383. Time: 103.4097 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:03 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #126: GFLOPs: 593.3925. Time: 75.8484 us. Best GFLOPs: 2026.5596
2024-04-29 01:25:03 [INFO] [task_scheduler.cc:131] [Task #40: fused_nn_conv2d_add_nn_relu_19] Trial #127: GFLOPs: 316.4532. Time: 142.2260 us. Best GFLOPs: 2026.5596
