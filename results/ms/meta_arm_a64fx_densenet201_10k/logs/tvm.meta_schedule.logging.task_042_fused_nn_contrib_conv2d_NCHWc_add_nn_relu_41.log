2024-04-29 14:03:38 [INFO] [task_scheduler.cc:160] Initializing Task #42: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41"
2024-04-29 14:03:38 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(368), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(368), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4), T.int64(1472), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 14:03:38 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 14:03:38 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(368), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(368), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(736), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1472), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[736, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 14:03:38 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(368), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(368), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(736), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1472), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(1), T.int64(7), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[736, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 14:03:38 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(368), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(368), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(736), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1472), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(2), T.int64(7), T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[736, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 15:11:52 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 15:11:52 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 15:11:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 15:11:54 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 15:11:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 15:12:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 15:12:03 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 15:12:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 15:12:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9993  0.9990  0.9982  0.9978  0.9966  0.9965  0.9965  0.9961  0.9957  0.9954  0.9954  0.9948  0.9944  0.9942  0.9938  0.9938
[17 : 32]:	0.9936  0.9929  0.9928  0.9917  0.9912  0.9908  0.9903  0.9903  0.9898  0.9891  0.9891  0.9881  0.9878  0.9874  0.9865  0.9864
[33 : 48]:	0.9863  0.9863  0.9857  0.9853  0.9844  0.9840  0.9831  0.9826  0.9824  0.9822  0.9818  0.9802  0.9802  0.9787  0.9777  0.9774
[49 : 64]:	0.9770  0.9766  0.9766  0.9759  0.9756  0.9749  0.9742  0.9723  0.9719  0.9715  0.9711  0.9701  0.9692  0.9682  0.9677  0.9661
2024-04-29 15:12:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 15:12:07 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #1: GFLOPs: 31.8771. Time: 2318.5657 us. Best GFLOPs: 31.8771
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #2: GFLOPs: 83.8029. Time: 881.9413 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #3: GFLOPs: 38.5887. Time: 1915.3078 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #4: GFLOPs: 60.9134. Time: 1213.3489 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #5: GFLOPs: 46.2137. Time: 1599.2925 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #6: GFLOPs: 41.2761. Time: 1790.6073 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #7: GFLOPs: 29.5511. Time: 2501.0672 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #8: GFLOPs: 58.5216. Time: 1262.9394 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #9: GFLOPs: 71.0091. Time: 1040.8420 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #10: GFLOPs: 33.6166. Time: 2198.5907 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #11: GFLOPs: 65.1323. Time: 1134.7565 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #12: GFLOPs: 6.2845. Time: 11760.5937 us. Best GFLOPs: 83.8029
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #13: GFLOPs: 99.6151. Time: 741.9485 us. Best GFLOPs: 99.6151
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #14: GFLOPs: 89.0203. Time: 830.2517 us. Best GFLOPs: 99.6151
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #15: GFLOPs: 27.4441. Time: 2693.0802 us. Best GFLOPs: 99.6151
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #16: GFLOPs: 99.1608. Time: 745.3474 us. Best GFLOPs: 99.6151
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #17: GFLOPs: 78.7468. Time: 938.5683 us. Best GFLOPs: 99.6151
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #18: GFLOPs: 18.7092. Time: 3950.4255 us. Best GFLOPs: 99.6151
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #19: GFLOPs: 181.0145. Time: 408.3056 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #20: GFLOPs: 45.9166. Time: 1609.6427 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #21: GFLOPs: 57.4486. Time: 1286.5273 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #22: GFLOPs: 29.7243. Time: 2486.4902 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #23: GFLOPs: 89.8450. Time: 822.6307 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #24: GFLOPs: 13.9728. Time: 5289.5017 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #25: GFLOPs: 5.0608. Time: 14604.3929 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #26: GFLOPs: 0.5152. Time: 143458.8060 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #27: GFLOPs: 15.8519. Time: 4662.4947 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #28: GFLOPs: 50.2552. Time: 1470.6774 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #29: GFLOPs: 33.6221. Time: 2198.2363 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #30: GFLOPs: 36.0128. Time: 2052.3046 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #31: GFLOPs: 44.8787. Time: 1646.8675 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #32: GFLOPs: 11.4205. Time: 6471.6407 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #33: GFLOPs: 81.9134. Time: 902.2851 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #34: GFLOPs: 28.5692. Time: 2587.0261 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #35: GFLOPs: 0.6138. Time: 120407.4250 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #36: GFLOPs: 78.7176. Time: 938.9168 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #37: GFLOPs: 14.6746. Time: 5036.5513 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #38: GFLOPs: 89.7774. Time: 823.2501 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #39: GFLOPs: 0.5700. Time: 129672.4177 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #40: GFLOPs: 45.6250. Time: 1619.9273 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #41: GFLOPs: 84.0487. Time: 879.3625 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #42: GFLOPs: 0.6669. Time: 110823.1027 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #43: GFLOPs: 4.1881. Time: 17647.4840 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #44: GFLOPs: 10.0514. Time: 7353.1183 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #45: GFLOPs: 63.7819. Time: 1158.7809 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #46: GFLOPs: 7.3792. Time: 10015.9331 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #47: GFLOPs: 84.1487. Time: 878.3175 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #48: GFLOPs: 109.1186. Time: 677.3293 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #49: GFLOPs: 51.4582. Time: 1436.2966 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #50: GFLOPs: 6.7915. Time: 10882.6501 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #51: GFLOPs: 89.2817. Time: 827.8212 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #52: GFLOPs: 93.1071. Time: 793.8089 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #53: GFLOPs: 4.2149. Time: 17535.1362 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #54: GFLOPs: 56.7204. Time: 1303.0452 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #55: GFLOPs: 15.7970. Time: 4678.6917 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #56: GFLOPs: 35.3735. Time: 2089.3938 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #57: GFLOPs: 13.6802. Time: 5402.6471 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #58: GFLOPs: 120.3934. Time: 613.8981 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #59: GFLOPs: 24.9518. Time: 2962.0849 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:121] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #60: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(368), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(368), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1472), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1472), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1472, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #61: GFLOPs: 18.0295. Time: 4099.3589 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #62: GFLOPs: 80.7444. Time: 915.3478 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #63: GFLOPs: 54.5780. Time: 1354.1939 us. Best GFLOPs: 181.0145
2024-04-29 17:07:39 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #64: GFLOPs: 97.8108. Time: 755.6349 us. Best GFLOPs: 181.0145
2024-04-29 18:55:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:55:18 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 18:55:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 18:55:20 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 18:55:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 18:55:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 18:55:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 18:55:41 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x110e83d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0xa6a2178)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x9bc9308)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0xc301798)]: 0 failure(s)
2024-04-29 18:55:44 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.6987  0.6967  0.6841  0.6733  0.6668  0.6582  0.6577  0.6515  0.6495  0.6481  0.6449  0.6447  0.6398  0.6377  0.6365  0.6359
[17 : 32]:	0.6294  0.6217  0.6203  0.6196  0.6192  0.6153  0.6146  0.6107  0.6072  0.6029  0.6021  0.6021  0.6002  0.5967  0.5963  0.5949
[33 : 48]:	0.5948  0.5946  0.5945  0.5945  0.5938  0.5938  0.5915  0.5902  0.5888  0.5885  0.5871  0.5808  0.5800  0.5758  0.5746  0.5738
[49 : 64]:	0.5678  0.5676  0.5659  0.5650  0.5641  0.5634  0.5629  0.5612  0.5612  0.5598  0.5574  0.5573  0.5573  0.5553  0.5549  0.5546
2024-04-29 18:55:44 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:55:44 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #65: GFLOPs: 44.2256. Time: 1671.1883 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #66: GFLOPs: 15.9243. Time: 4641.2894 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #67: GFLOPs: 148.8695. Time: 496.4700 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #68: GFLOPs: 80.3012. Time: 920.4000 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #69: GFLOPs: 72.1474. Time: 1024.4202 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #70: GFLOPs: 121.1991. Time: 609.8169 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #71: GFLOPs: 142.4019. Time: 519.0187 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #72: GFLOPs: 161.6169. Time: 457.3115 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #73: GFLOPs: 99.5691. Time: 742.2913 us. Best GFLOPs: 181.0145
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #74: GFLOPs: 185.6222. Time: 398.1704 us. Best GFLOPs: 185.6222
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #75: GFLOPs: 202.9894. Time: 364.1040 us. Best GFLOPs: 202.9894
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #76: GFLOPs: 134.6204. Time: 549.0198 us. Best GFLOPs: 202.9894
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #77: GFLOPs: 203.6629. Time: 362.9000 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #78: GFLOPs: 113.5647. Time: 650.8119 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #79: GFLOPs: 45.2269. Time: 1634.1863 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #80: GFLOPs: 89.7072. Time: 823.8939 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #81: GFLOPs: 105.3948. Time: 701.2607 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #82: GFLOPs: 185.4662. Time: 398.5052 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #83: GFLOPs: 178.3012. Time: 414.5191 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #84: GFLOPs: 46.4512. Time: 1591.1154 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #85: GFLOPs: 139.7171. Time: 528.9920 us. Best GFLOPs: 203.6629
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #86: GFLOPs: 210.2025. Time: 351.6097 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #87: GFLOPs: 38.8182. Time: 1903.9864 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #88: GFLOPs: 177.4652. Time: 416.4718 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #89: GFLOPs: 195.9262. Time: 377.2301 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #90: GFLOPs: 146.7771. Time: 503.5475 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #91: GFLOPs: 175.7024. Time: 420.6501 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #92: GFLOPs: 163.7190. Time: 451.4397 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #93: GFLOPs: 177.5029. Time: 416.3833 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #94: GFLOPs: 147.6328. Time: 500.6290 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #95: GFLOPs: 150.8278. Time: 490.0239 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #96: GFLOPs: 95.7045. Time: 772.2653 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #97: GFLOPs: 107.3201. Time: 688.6805 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #98: GFLOPs: 150.5811. Time: 490.8269 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #99: GFLOPs: 137.0381. Time: 539.3335 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #100: GFLOPs: 107.5515. Time: 687.1990 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #101: GFLOPs: 113.1286. Time: 653.3206 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #102: GFLOPs: 111.4920. Time: 662.9108 us. Best GFLOPs: 210.2025
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #103: GFLOPs: 281.3936. Time: 262.6543 us. Best GFLOPs: 281.3936
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #104: GFLOPs: 165.2073. Time: 447.3727 us. Best GFLOPs: 281.3936
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #105: GFLOPs: 109.9378. Time: 672.2821 us. Best GFLOPs: 281.3936
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #106: GFLOPs: 109.8527. Time: 672.8030 us. Best GFLOPs: 281.3936
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #107: GFLOPs: 354.0768. Time: 208.7379 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #108: GFLOPs: 131.5873. Time: 561.6745 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #109: GFLOPs: 103.9855. Time: 710.7652 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #110: GFLOPs: 87.4723. Time: 844.9446 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #111: GFLOPs: 273.8800. Time: 269.8600 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #112: GFLOPs: 49.8637. Time: 1482.2245 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #113: GFLOPs: 113.1212. Time: 653.3632 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #114: GFLOPs: 83.9496. Time: 880.3998 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #115: GFLOPs: 178.5695. Time: 413.8962 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #116: GFLOPs: 99.5410. Time: 742.5004 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #117: GFLOPs: 77.8068. Time: 949.9068 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #118: GFLOPs: 103.4115. Time: 714.7100 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #119: GFLOPs: 84.5289. Time: 874.3669 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #120: GFLOPs: 194.2558. Time: 380.4738 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #121: GFLOPs: 195.0223. Time: 378.9784 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #122: GFLOPs: 217.9115. Time: 339.1709 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #123: GFLOPs: 121.7221. Time: 607.1966 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #124: GFLOPs: 122.1569. Time: 605.0352 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #125: GFLOPs: 121.9320. Time: 606.1516 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #126: GFLOPs: 7.1187. Time: 10382.3655 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #127: GFLOPs: 29.5963. Time: 2497.2449 us. Best GFLOPs: 354.0768
2024-04-29 18:57:22 [INFO] [task_scheduler.cc:131] [Task #42: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_41] Trial #128: GFLOPs: 43.7596. Time: 1688.9827 us. Best GFLOPs: 354.0768
