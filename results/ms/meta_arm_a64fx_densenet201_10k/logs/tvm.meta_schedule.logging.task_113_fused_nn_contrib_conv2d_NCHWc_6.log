2024-04-29 14:07:56 [INFO] [task_scheduler.cc:160] Initializing Task #113: "fused_nn_contrib_conv2d_NCHWc_6"
2024-04-29 14:07:56 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(448), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(224), T.int64(448), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4), T.int64(1792), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
2024-04-29 14:07:56 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 14:07:56 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(448), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(224), T.int64(448), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(112), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(224), oc_chunk_0 * T.int64(112) + oc_chunk_1 * T.int64(28) + oc_chunk_2 * T.int64(7) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1792), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(28), T.int64(14), T.int64(14), T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(224), oc_chunk_0 * T.int64(112) + oc_chunk_1 * T.int64(28) + ax1)
                        v2, v3 = T.axis.remap("SS", [ax2, ax3])
                        v4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 4, 4, 7])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[112, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 14:07:56 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(448), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(224), T.int64(448), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(112), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(224), oc_chunk_0 * T.int64(112) + oc_chunk_1 * T.int64(28) + oc_chunk_2 * T.int64(7) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1792), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(112), T.int64(14), T.int64(14), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(224), oc_chunk_0 * T.int64(112) + ax1)
                        v2, v3, v4 = T.axis.remap("SSS", [ax2, ax3, ax4])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 4, 4, 7])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[112, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 14:07:56 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(448), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(224), T.int64(448), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(112), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(224), oc_chunk_0 * T.int64(112) + oc_chunk_1 * T.int64(28) + oc_chunk_2 * T.int64(7) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1792), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 4, 4, 7])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[112, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-29 16:56:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 16:56:31 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 16:56:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 16:56:34 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 16:56:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 16:56:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 16:56:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 16:56:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 16:56:45 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9992  0.9988  0.9985  0.9979  0.9976  0.9976  0.9974  0.9962  0.9959  0.9958  0.9956  0.9956  0.9954  0.9953  0.9952
[17 : 32]:	0.9950  0.9947  0.9943  0.9925  0.9923  0.9922  0.9920  0.9920  0.9914  0.9906  0.9904  0.9893  0.9893  0.9889  0.9886  0.9883
[33 : 48]:	0.9877  0.9870  0.9865  0.9848  0.9843  0.9836  0.9828  0.9823  0.9822  0.9819  0.9819  0.9817  0.9791  0.9785  0.9776  0.9766
[49 : 64]:	0.9764  0.9762  0.9758  0.9754  0.9748  0.9731  0.9723  0.9721  0.9714  0.9706  0.9700  0.9691  0.9690  0.9677  0.9676  0.9676
2024-04-29 16:56:46 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 16:56:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #1: GFLOPs: 6.8213. Time: 92270.8377 us. Best GFLOPs: 6.8213
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:121] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #2: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(448), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(224), T.int64(448), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(112) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(896), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(112) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1792), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(112), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(112) + ax1)
                        v2 = T.axis.spatial(T.int64(14), ax2)
                        v3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 14, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[896, 2])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l98, l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #3: GFLOPs: 128.4409. Time: 4900.3680 us. Best GFLOPs: 128.4409
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #4: GFLOPs: 147.6215. Time: 4263.6594 us. Best GFLOPs: 147.6215
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #5: GFLOPs: 68.3119. Time: 9213.7341 us. Best GFLOPs: 147.6215
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #6: GFLOPs: 34.1795. Time: 18414.7933 us. Best GFLOPs: 147.6215
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #7: GFLOPs: 8.3812. Time: 75097.4940 us. Best GFLOPs: 147.6215
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #8: GFLOPs: 18.5751. Time: 33884.5763 us. Best GFLOPs: 147.6215
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #9: GFLOPs: 91.1267. Time: 6906.9557 us. Best GFLOPs: 147.6215
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #10: GFLOPs: 209.9579. Time: 2997.7800 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:121] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #11: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(448), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(224), T.int64(448), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(7), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(112), T.int64(2), T.int64(1), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(224), oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(224), oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1792), ic_0 * T.int64(56) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(224), T.int64(2)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("conv2d_NCHWc_global"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + ax2)
                        v3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 112, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 56])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l98, l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b101)
b124 = sch.decompose_reduction(block=b101, loop=l108)
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #12: GFLOPs: 9.0157. Time: 69812.5847 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:121] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #13: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(448), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(224), T.int64(448), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(28), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(56) + oc_chunk_1 * T.int64(56) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) // T.int64(7) * T.int64(7) + oh_1 * T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1792), T.int64(1), T.int64(1), T.int64(1), T.int64(28), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(56) + oc_chunk_1 * T.int64(56) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) // T.int64(7) * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1792), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(56), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(56) + ax1)
                        v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) // T.int64(7) * T.int64(7) + ax2)
                        v3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 28, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1792, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #14: GFLOPs: 31.3473. Time: 20078.5352 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #15: GFLOPs: 5.0624. Time: 124328.9297 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #16: GFLOPs: 108.0220. Time: 5826.6604 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #17: GFLOPs: 12.1829. Time: 51663.0120 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #18: GFLOPs: 16.4180. Time: 38336.4610 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #19: GFLOPs: 58.7673. Time: 10710.1639 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #20: GFLOPs: 2.7366. Time: 229996.2423 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #21: GFLOPs: 45.5806. Time: 13808.6867 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #22: GFLOPs: 9.5807. Time: 65695.3190 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #23: GFLOPs: 40.2668. Time: 15630.9534 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #24: GFLOPs: 58.5225. Time: 10754.9637 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #25: GFLOPs: 1.5419. Time: 408197.5270 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #26: GFLOPs: 3.4493. Time: 182474.8580 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #27: GFLOPs: 0.6657. Time: 945524.8547 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #28: GFLOPs: 45.7972. Time: 13743.3690 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #29: GFLOPs: 3.4999. Time: 179836.8003 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #30: GFLOPs: 25.2775. Time: 24899.8808 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #31: GFLOPs: 59.2532. Time: 10622.3475 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #32: GFLOPs: 24.1358. Time: 26077.7717 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #33: GFLOPs: 179.1177. Time: 3513.9333 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #34: GFLOPs: 2.7356. Time: 230081.4760 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #35: GFLOPs: 121.5033. Time: 5180.1696 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #36: GFLOPs: 10.4866. Time: 60019.9097 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #37: GFLOPs: 24.6374. Time: 25546.8517 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #38: GFLOPs: 47.9920. Time: 13114.8360 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #39: GFLOPs: 72.6275. Time: 8666.2412 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #40: GFLOPs: 8.9292. Time: 70488.5000 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #41: GFLOPs: 4.1881. Time: 150284.1063 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #42: GFLOPs: 2.5868. Time: 243314.7987 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #43: GFLOPs: 49.3682. Time: 12749.2631 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #44: GFLOPs: 51.5629. Time: 12206.6043 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #45: GFLOPs: 79.0915. Time: 7957.9645 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #46: GFLOPs: 28.2259. Time: 22298.9628 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #47: GFLOPs: 83.5908. Time: 7529.6334 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #48: GFLOPs: 10.0062. Time: 62901.5200 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #49: GFLOPs: 2.8815. Time: 218433.2413 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #50: GFLOPs: 2.4933. Time: 252437.3833 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #51: GFLOPs: 1.7233. Time: 365233.7987 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:121] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #52: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(448), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(224), T.int64(448), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(224), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(1372), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(49) * T.int64(8) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(56), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(224), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(49) * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1792), ic_0 * T.int64(56) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[28, 1, 2, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 56])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l91)
l92 = sch.fuse(l90, preserve_unit_iters=True)
sch.vectorize(loop=l92)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b93 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b93)
b112 = sch.decompose_reduction(block=b93, loop=l96)
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #53: GFLOPs: 1.4347. Time: 438694.4230 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #54: GFLOPs: 35.1483. Time: 17907.1893 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #55: GFLOPs: 55.2155. Time: 11399.1079 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #56: GFLOPs: 66.8365. Time: 9417.1227 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #57: GFLOPs: 116.8425. Time: 5386.8026 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #58: GFLOPs: 160.1684. Time: 3929.6633 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #59: GFLOPs: 8.3631. Time: 75260.2010 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #60: GFLOPs: 47.0993. Time: 13363.4064 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #61: GFLOPs: 7.3999. Time: 85056.1417 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #62: GFLOPs: 100.0363. Time: 6291.7912 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #63: GFLOPs: 119.6209. Time: 5261.6884 us. Best GFLOPs: 209.9579
2024-04-29 17:18:17 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #64: GFLOPs: 1.1323. Time: 555881.2560 us. Best GFLOPs: 209.9579
2024-04-29 17:27:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:27:04 [INFO] [evolutionary_search.cc:715] Picked top 60 candidate(s) from database
2024-04-29 17:27:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:27:06 [INFO] [evolutionary_search.cc:723] Sampled 452 candidate(s)
2024-04-29 17:27:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:27:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:27:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:27:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:27:28 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9546  0.9514  0.9501  0.9239  0.9239  0.9073  0.8951  0.8703  0.8703  0.8648  0.8534  0.8524  0.8475  0.8451  0.8451  0.8364
[17 : 32]:	0.8306  0.8293  0.8276  0.8247  0.8169  0.8166  0.8156  0.8144  0.8070  0.8066  0.8006  0.7922  0.7903  0.7831  0.7826  0.7732
[33 : 48]:	0.7714  0.7671  0.7608  0.7601  0.7599  0.7577  0.7564  0.7535  0.7516  0.7497  0.7488  0.7487  0.7485  0.7484  0.7471  0.7471
[49 : 64]:	0.7466  0.7446  0.7428  0.7428  0.7418  0.7406  0.7405  0.7371  0.7341  0.7333  0.7305  0.7266  0.7266  0.7253  0.7253  0.7227
2024-04-29 17:27:28 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:27:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #65: GFLOPs: 232.1412. Time: 2711.3145 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #66: GFLOPs: 176.8188. Time: 3559.6203 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #67: GFLOPs: 151.8249. Time: 4145.6147 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #68: GFLOPs: 175.9378. Time: 3577.4452 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #69: GFLOPs: 80.4685. Time: 7821.7884 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #70: GFLOPs: 97.1014. Time: 6481.9617 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #71: GFLOPs: 94.5847. Time: 6654.4339 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #72: GFLOPs: 89.5715. Time: 7026.8769 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #73: GFLOPs: 178.0512. Time: 3534.9826 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #74: GFLOPs: 160.0670. Time: 3932.1513 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #75: GFLOPs: 196.3273. Time: 3205.9109 us. Best GFLOPs: 232.1412
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #76: GFLOPs: 322.4284. Time: 1952.0853 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #77: GFLOPs: 122.8048. Time: 5125.2703 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #78: GFLOPs: 111.8595. Time: 5626.7697 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #79: GFLOPs: 67.5150. Time: 9322.4925 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #80: GFLOPs: 134.5325. Time: 4678.4814 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #81: GFLOPs: 132.3668. Time: 4755.0280 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #82: GFLOPs: 142.8833. Time: 4405.0490 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #83: GFLOPs: 143.4885. Time: 4386.4667 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #84: GFLOPs: 178.3914. Time: 3528.2412 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #85: GFLOPs: 137.6146. Time: 4573.7000 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #86: GFLOPs: 179.0901. Time: 3514.4759 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #87: GFLOPs: 97.1482. Time: 6478.8435 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #88: GFLOPs: 182.8288. Time: 3442.6078 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #89: GFLOPs: 167.6788. Time: 3753.6521 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #90: GFLOPs: 189.9185. Time: 3314.0935 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #91: GFLOPs: 119.0842. Time: 5285.4009 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #92: GFLOPs: 168.9934. Time: 3724.4507 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #93: GFLOPs: 131.3527. Time: 4791.7395 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #94: GFLOPs: 177.1377. Time: 3553.2110 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #95: GFLOPs: 76.2579. Time: 8253.6778 us. Best GFLOPs: 322.4284
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #96: GFLOPs: 342.8257. Time: 1835.9409 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #97: GFLOPs: 187.2901. Time: 3360.6034 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #98: GFLOPs: 154.5058. Time: 4073.6844 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #99: GFLOPs: 170.1769. Time: 3698.5488 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #100: GFLOPs: 186.6692. Time: 3371.7812 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #101: GFLOPs: 179.5207. Time: 3506.0458 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #102: GFLOPs: 68.9323. Time: 9130.8070 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #103: GFLOPs: 153.8302. Time: 4091.5746 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #104: GFLOPs: 181.2459. Time: 3472.6721 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #105: GFLOPs: 106.6299. Time: 5902.7333 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #106: GFLOPs: 245.6033. Time: 2562.7010 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #107: GFLOPs: 155.1438. Time: 4056.9314 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #108: GFLOPs: 90.3787. Time: 6964.1157 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #109: GFLOPs: 113.8313. Time: 5529.3021 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #110: GFLOPs: 109.5719. Time: 5744.2436 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #111: GFLOPs: 114.1529. Time: 5513.7267 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #112: GFLOPs: 112.7491. Time: 5582.3757 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #113: GFLOPs: 70.3031. Time: 8952.7677 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #114: GFLOPs: 156.7724. Time: 4014.7875 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #115: GFLOPs: 190.1510. Time: 3310.0418 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #116: GFLOPs: 199.5929. Time: 3153.4582 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #117: GFLOPs: 118.9389. Time: 5291.8599 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #118: GFLOPs: 155.2275. Time: 4054.7446 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #119: GFLOPs: 61.1182. Time: 10298.2131 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #120: GFLOPs: 152.2399. Time: 4134.3154 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #121: GFLOPs: 140.5112. Time: 4479.4131 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #122: GFLOPs: 126.6786. Time: 4968.5416 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #123: GFLOPs: 110.8828. Time: 5676.3352 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #124: GFLOPs: 90.1968. Time: 6978.1638 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #125: GFLOPs: 92.3956. Time: 6812.0993 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #126: GFLOPs: 131.0910. Time: 4801.3058 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #127: GFLOPs: 68.4868. Time: 9190.2040 us. Best GFLOPs: 342.8257
2024-04-29 17:29:11 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #128: GFLOPs: 8.1966. Time: 76788.6557 us. Best GFLOPs: 342.8257
2024-04-29 17:53:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:53:05 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 17:53:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:53:07 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 17:53:12 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:53:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:53:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:53:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb827b98)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x32ebf38)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0xa8d7a98)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x60710b8)]: 0 failure(s)
2024-04-29 17:53:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9823  0.9823  0.9823  0.8801  0.8739  0.8659  0.8205  0.8157  0.8024  0.7977  0.7909  0.7639  0.7374  0.7316  0.7316  0.7249
[17 : 32]:	0.7166  0.6963  0.6946  0.6904  0.6788  0.6765  0.6754  0.6749  0.6707  0.6707  0.6692  0.6616  0.6583  0.6574  0.6510  0.6468
[33 : 48]:	0.6320  0.6264  0.6257  0.6216  0.6216  0.6201  0.6143  0.6143  0.6143  0.6078  0.6074  0.6073  0.6033  0.6033  0.6021  0.6020
[49 : 64]:	0.6007  0.5988  0.5986  0.5981  0.5847  0.5836  0.5829  0.5828  0.5806  0.5781  0.5769  0.5761  0.5750  0.5738  0.5736  0.5736
2024-04-29 17:53:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:53:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #129: GFLOPs: 469.2970. Time: 1341.1715 us. Best GFLOPs: 469.2970
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #130: GFLOPs: 358.8878. Time: 1753.7731 us. Best GFLOPs: 469.2970
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #131: GFLOPs: 463.6910. Time: 1357.3861 us. Best GFLOPs: 469.2970
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #132: GFLOPs: 348.8465. Time: 1804.2542 us. Best GFLOPs: 469.2970
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #133: GFLOPs: 529.5562. Time: 1188.5571 us. Best GFLOPs: 529.5562
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #134: GFLOPs: 87.5175. Time: 7191.7947 us. Best GFLOPs: 529.5562
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #135: GFLOPs: 350.6591. Time: 1794.9275 us. Best GFLOPs: 529.5562
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #136: GFLOPs: 347.1018. Time: 1813.3233 us. Best GFLOPs: 529.5562
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #137: GFLOPs: 375.7786. Time: 1674.9430 us. Best GFLOPs: 529.5562
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #138: GFLOPs: 366.7326. Time: 1716.2579 us. Best GFLOPs: 529.5562
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #139: GFLOPs: 390.8555. Time: 1610.3337 us. Best GFLOPs: 529.5562
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #140: GFLOPs: 133.8297. Time: 4703.0508 us. Best GFLOPs: 529.5562
2024-04-29 17:55:13 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #141: GFLOPs: 194.2074. Time: 3240.9053 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #142: GFLOPs: 249.2167. Time: 2525.5442 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #143: GFLOPs: 246.8384. Time: 2549.8776 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #144: GFLOPs: 235.0007. Time: 2678.3228 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #145: GFLOPs: 108.4241. Time: 5805.0543 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #146: GFLOPs: 121.5774. Time: 5177.0107 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #147: GFLOPs: 109.7370. Time: 5735.6004 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #148: GFLOPs: 142.0604. Time: 4430.5654 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #149: GFLOPs: 194.4769. Time: 3236.4138 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #150: GFLOPs: 382.4947. Time: 1645.5331 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #151: GFLOPs: 328.1123. Time: 1918.2694 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #152: GFLOPs: 145.5935. Time: 4323.0480 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #153: GFLOPs: 215.3248. Time: 2923.0622 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #154: GFLOPs: 153.4413. Time: 4101.9440 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #155: GFLOPs: 156.8562. Time: 4012.6416 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #156: GFLOPs: 134.2168. Time: 4689.4852 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #157: GFLOPs: 195.2593. Time: 3223.4457 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #158: GFLOPs: 140.5302. Time: 4478.8080 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #159: GFLOPs: 49.4011. Time: 12740.7618 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #160: GFLOPs: 192.8109. Time: 3264.3793 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #161: GFLOPs: 97.0333. Time: 6486.5151 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #162: GFLOPs: 109.2313. Time: 5762.1578 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #163: GFLOPs: 250.8510. Time: 2509.0902 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #164: GFLOPs: 87.1971. Time: 7218.2161 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #165: GFLOPs: 87.0676. Time: 7228.9520 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #166: GFLOPs: 147.2167. Time: 4275.3817 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #167: GFLOPs: 80.7202. Time: 7797.4038 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #168: GFLOPs: 148.8861. Time: 4227.4438 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #169: GFLOPs: 222.4970. Time: 2828.8373 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #170: GFLOPs: 84.7733. Time: 7424.5966 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #171: GFLOPs: 140.4780. Time: 4480.4711 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #172: GFLOPs: 166.0839. Time: 3789.6973 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #173: GFLOPs: 167.7423. Time: 3752.2307 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #174: GFLOPs: 88.6551. Time: 7099.5089 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #175: GFLOPs: 148.4284. Time: 4240.4810 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #176: GFLOPs: 199.4174. Time: 3156.2333 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #177: GFLOPs: 130.8822. Time: 4808.9645 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #178: GFLOPs: 61.7956. Time: 10185.3244 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #179: GFLOPs: 60.7992. Time: 10352.2439 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #180: GFLOPs: 136.8191. Time: 4600.2899 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #181: GFLOPs: 121.2108. Time: 5192.6716 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #182: GFLOPs: 68.9022. Time: 9134.7983 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #183: GFLOPs: 57.2677. Time: 10990.6268 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #184: GFLOPs: 104.0898. Time: 6046.7785 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #185: GFLOPs: 219.7291. Time: 2864.4711 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #186: GFLOPs: 97.3749. Time: 6463.7556 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #187: GFLOPs: 92.0556. Time: 6837.2581 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #188: GFLOPs: 164.5456. Time: 3825.1266 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #189: GFLOPs: 97.4746. Time: 6457.1468 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #190: GFLOPs: 185.3411. Time: 3395.9435 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #191: GFLOPs: 72.7062. Time: 8656.8703 us. Best GFLOPs: 529.5562
2024-04-29 17:55:14 [INFO] [task_scheduler.cc:131] [Task #113: fused_nn_contrib_conv2d_NCHWc_6] Trial #192: GFLOPs: 17.8534. Time: 35254.2273 us. Best GFLOPs: 529.5562
