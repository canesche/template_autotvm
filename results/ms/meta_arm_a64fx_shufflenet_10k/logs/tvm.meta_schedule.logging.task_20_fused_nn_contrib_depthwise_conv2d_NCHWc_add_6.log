2024-04-28 20:38:28 [INFO] [task_scheduler.cc:160] Initializing Task #20: "fused_nn_contrib_depthwise_conv2d_NCHWc_add_6"
2024-04-28 20:38:28 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(58), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(58), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        PaddedInput = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(16), T.int64(16), T.int64(4)))
        DepthwiseConv2d = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(58), T.int64(16), T.int64(16), T.int64(4)):
            with T.block("PaddedInput"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4])
                PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for b, oco, oh, ow, oci, kh, kw in T.grid(T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4), T.int64(3), T.int64(3)):
            with T.block("DepthwiseConv2d"):
                v_b, v_oco, v_oh, v_ow, v_oci, v_kh, v_kw = T.axis.remap("SSSSSRR", [b, oco, oh, ow, oci, kh, kw])
                T.reads(PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)], p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci])
                T.writes(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci])
                with T.init():
                    DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = T.float32(0)
                DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] + PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)] * p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
2024-04-28 20:38:28 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 20:38:28 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(58), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(58), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            PaddedInput = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(16), T.int64(16), T.int64(4)))
            DepthwiseConv2d = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)))
            for b_0, oco_0, oh_0, ow_0, oci_0, b_1, oco_1, oh_1, ow_1, oci_1, kh_0, kw_0, b_2, oco_2 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(58)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(15), T.int64(3), T.int64(4)):
                    with T.block("PaddedInput"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(58), oco_2 + ax1)
                        v_i2 = T.axis.spatial(T.int64(16), ax2)
                        v_i3 = T.axis.spatial(T.int64(16), ow_1 * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4])
                        PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oh_2, ow_2, oci_2, kh_1, kw_1, b_3, oco_3, oh_3, ow_3, oci_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2)):
                    with T.block("DepthwiseConv2d"):
                        v_b = T.axis.spatial(T.int64(1), b_0 + b_1 + b_2 + b_3)
                        v_oco = T.axis.spatial(T.int64(58), oco_0 * T.int64(58) + oco_1 * T.int64(58) + oco_2 + oco_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oci = T.axis.spatial(T.int64(4), oci_0 * T.int64(4) + oci_1 * T.int64(4) + oci_2 * T.int64(2) + oci_3)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)], p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci])
                        T.writes(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = T.float32(0)
                        DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] + PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)] * p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)):
                with T.block("T_add"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l3, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 58, 1])
l22, l23, l24, l25 = sch.split(loop=l4, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l5, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l6, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l7, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 3])
l52, l53 = sch.split(loop=l8, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l56, l57 = sch.split(loop=l9, factors=[v54, v55], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l16, l24, l32, l40, l48, l53, l57, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v58 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v58)
l59 = sch.sample_compute_location(block=b0, decision=13)
sch.compute_at(block=b0, loop=l59, preserve_unit_loops=True, index=-1)
2024-04-28 20:38:28 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(58), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(58), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            PaddedInput = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(16), T.int64(16), T.int64(4)))
            DepthwiseConv2d = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)))
            for b_0, oco_0, oh_0, ow_0, oci_0, b_1, oco_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(58), T.int64(15), T.int64(3), T.int64(4)):
                    with T.block("PaddedInput"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(16), ax2)
                        v_i3 = T.axis.spatial(T.int64(16), ow_1 * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4])
                        PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oci_1 in range(T.int64(1)):
                    for kh_0, kw_0, b_2, oco_2, oh_2, ow_2, oci_2, kh_1, kw_1, b_3, oco_3, oh_3, ow_3, oci_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2)):
                        with T.block("DepthwiseConv2d"):
                            v_b = T.axis.spatial(T.int64(1), b_0 + b_1 + b_2 + b_3)
                            v_oco = T.axis.spatial(T.int64(58), oco_0 * T.int64(58) + oco_1 * T.int64(58) + oco_2 + oco_3)
                            v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                            v_oci = T.axis.spatial(T.int64(4), oci_0 * T.int64(4) + oci_1 * T.int64(4) + oci_2 * T.int64(2) + oci_3)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)], p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci])
                            T.writes(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = T.float32(0)
                            DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] + PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)] * p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(58), T.int64(7), T.int64(1), T.int64(4)):
                        with T.block("T_add"):
                            v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                            v_ax3 = T.axis.spatial(T.int64(7), ow_1 + ax3)
                            v_ax4 = T.axis.spatial(T.int64(4), ax4)
                            T.reads(DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l3, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 58, 1])
l22, l23, l24, l25 = sch.split(loop=l4, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l5, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l6, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l7, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 3])
l52, l53 = sch.split(loop=l8, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l56, l57 = sch.split(loop=l9, factors=[v54, v55], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l16, l24, l32, l40, l48, l53, l57, l17, l25, l33, l41, l49)
b58, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b58, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v59 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v59)
l60 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l60, preserve_unit_loops=True, index=-1)
2024-04-28 20:38:28 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(58), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(58), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            PaddedInput = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(16), T.int64(16), T.int64(4)))
            DepthwiseConv2d = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)))
            for b_0, oco_0, oh_0, ow_0, oci_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for b_1, oco_1, oh_1, ow_1, oci_1, kh_0, kw_0, b_2, oco_2, oh_2, ow_2, oci_2, kh_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(2), T.int64(3)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(13), T.int64(3), T.int64(2)):
                        with T.block("PaddedInput"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_i1 = T.axis.spatial(T.int64(58), oco_2 + ax1)
                            v_i2 = T.axis.spatial(T.int64(16), kh_1 + ax2)
                            v_i3 = T.axis.spatial(T.int64(16), ow_1 * T.int64(2) + ax3)
                            v_i4 = T.axis.spatial(T.int64(4), oci_2 * T.int64(2) + ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4])
                            PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kw_1, b_3, oco_3, oh_3, ow_3, oci_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(2)):
                        with T.block("DepthwiseConv2d"):
                            v_b = T.axis.spatial(T.int64(1), b_0 + b_1 + b_2 + b_3)
                            v_oco = T.axis.spatial(T.int64(58), oco_0 * T.int64(58) + oco_1 * T.int64(58) + oco_2 + oco_3)
                            v_oh = T.axis.spatial(T.int64(7), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                            v_oci = T.axis.spatial(T.int64(4), oci_0 * T.int64(4) + oci_1 * T.int64(4) + oci_2 * T.int64(2) + oci_3)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)], p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci])
                            T.writes(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = T.float32(0)
                            DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] + PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)] * p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)):
                    with T.block("T_add"):
                        v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                        T.reads(DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l3, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 58, 1])
l22, l23, l24, l25 = sch.split(loop=l4, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l5, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l6, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l7, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 3])
l52, l53 = sch.split(loop=l8, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l56, l57 = sch.split(loop=l9, factors=[v54, v55], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l16, l24, l32, l40, l48, l53, l57, l17, l25, l33, l41, l49)
b58, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b58, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v59 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v59)
l60 = sch.sample_compute_location(block=b0, decision=17)
sch.compute_at(block=b0, loop=l60, preserve_unit_loops=True, index=-1)
2024-04-28 21:02:51 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:02:51 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 21:02:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 21:02:56 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 21:03:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 21:03:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 21:03:13 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 21:03:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 21:03:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9993  0.9991  0.9982  0.9981  0.9978  0.9978  0.9974  0.9970  0.9967  0.9966  0.9966  0.9964  0.9960  0.9959  0.9947  0.9942
[17 : 32]:	0.9942  0.9941  0.9937  0.9932  0.9919  0.9919  0.9916  0.9916  0.9913  0.9909  0.9904  0.9896  0.9893  0.9893  0.9880  0.9876
[33 : 48]:	0.9874  0.9873  0.9866  0.9865  0.9855  0.9851  0.9846  0.9840  0.9827  0.9827  0.9822  0.9818  0.9814  0.9807  0.9806  0.9805
[49 : 64]:	0.9803  0.9800  0.9789  0.9787  0.9784  0.9780  0.9777  0.9776  0.9775  0.9766  0.9760  0.9755  0.9754  0.9750  0.9750  0.9734
2024-04-28 21:03:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:03:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #1: GFLOPs: 3.2728. Time: 65.9965 us. Best GFLOPs: 3.2728
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #2: GFLOPs: 0.7741. Time: 279.0286 us. Best GFLOPs: 3.2728
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #3: GFLOPs: 16.9540. Time: 12.7399 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #4: GFLOPs: 5.5710. Time: 38.7705 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #5: GFLOPs: 4.0710. Time: 53.0564 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #6: GFLOPs: 0.7428. Time: 290.7620 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #7: GFLOPs: 1.9905. Time: 108.5093 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #8: GFLOPs: 3.5013. Time: 61.6889 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #9: GFLOPs: 1.7334. Time: 124.6064 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #10: GFLOPs: 5.3874. Time: 40.0920 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #11: GFLOPs: 1.9360. Time: 111.5640 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #12: GFLOPs: 2.0814. Time: 103.7721 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #13: GFLOPs: 0.5794. Time: 372.7734 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #14: GFLOPs: 1.0181. Time: 212.1561 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #15: GFLOPs: 2.4720. Time: 87.3741 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #16: GFLOPs: 2.6936. Time: 80.1870 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #17: GFLOPs: 2.2914. Time: 94.2631 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #18: GFLOPs: 3.4091. Time: 63.3574 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #19: GFLOPs: 0.8832. Time: 244.5610 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #20: GFLOPs: 5.0000. Time: 43.1986 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #21: GFLOPs: 5.0717. Time: 42.5875 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #22: GFLOPs: 1.3513. Time: 159.8354 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #23: GFLOPs: 3.3091. Time: 65.2715 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #24: GFLOPs: 3.9976. Time: 54.0308 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #25: GFLOPs: 3.2728. Time: 65.9965 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #26: GFLOPs: 1.6274. Time: 132.7249 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #27: GFLOPs: 14.9365. Time: 14.4607 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #28: GFLOPs: 5.9315. Time: 36.4146 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #29: GFLOPs: 3.0032. Time: 71.9214 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #30: GFLOPs: 6.0848. Time: 35.4967 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #31: GFLOPs: 3.0679. Time: 70.4047 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #32: GFLOPs: 5.4801. Time: 39.4141 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #33: GFLOPs: 1.1594. Time: 186.3036 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #34: GFLOPs: 3.4235. Time: 63.0912 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #35: GFLOPs: 2.7862. Time: 77.5229 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #36: GFLOPs: 1.8980. Time: 113.7973 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #37: GFLOPs: 10.7224. Time: 20.1439 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #38: GFLOPs: 11.8451. Time: 18.2347 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #39: GFLOPs: 16.8781. Time: 12.7972 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #40: GFLOPs: 0.4703. Time: 459.3050 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #41: GFLOPs: 5.7160. Time: 37.7871 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #42: GFLOPs: 0.3719. Time: 580.8192 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #43: GFLOPs: 11.6067. Time: 18.6092 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #44: GFLOPs: 0.5289. Time: 408.3827 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #45: GFLOPs: 2.6171. Time: 82.5310 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #46: GFLOPs: 1.5913. Time: 135.7334 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #47: GFLOPs: 4.8720. Time: 44.3333 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #48: GFLOPs: 6.5520. Time: 32.9656 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #49: GFLOPs: 3.3274. Time: 64.9131 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #50: GFLOPs: 3.2691. Time: 66.0713 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #51: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(58), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(58), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        PaddedInput = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(16), T.int64(16), T.int64(4)))
        DepthwiseConv2d = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)))
        for b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(58), T.int64(15), T.int64(3), T.int64(1)):
                with T.block("PaddedInput"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), ax2)
                    v_i3 = T.axis.spatial(T.int64(16), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax3)
                    v_i4 = T.axis.spatial(T.int64(4), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused // T.int64(14) * T.int64(2) + b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused % T.int64(2) + ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4])
                    PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for b_2_init, oco_2_init, oh_2_init, ow_2_init, oci_2_init, b_3_init, oco_3_init, oh_3_init, ow_3_init, oci_3_init in T.grid(T.int64(1), T.int64(29), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("DepthwiseConv2d_init"):
                    v_b = T.axis.spatial(T.int64(1), b_2_init + b_3_init)
                    v_oco = T.axis.spatial(T.int64(58), oco_2_init * T.int64(2) + oco_3_init)
                    v_oh = T.axis.spatial(T.int64(7), oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(7), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused % T.int64(14) // T.int64(2) + ow_2_init + ow_3_init)
                    v_oci = T.axis.spatial(T.int64(4), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused // T.int64(14) * T.int64(2) + b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused % T.int64(2) + oci_2_init + oci_3_init)
                    T.reads()
                    T.writes(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = T.float32(0)
            for kh_0, kw_0, b_2, oco_2, oh_2, ow_2, oci_2, kh_1, kw_1, b_3, oco_3, oh_3, ow_3, oci_3 in T.grid(T.int64(3), T.int64(3), T.int64(1), T.int64(29), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("DepthwiseConv2d_update"):
                    v_b = T.axis.spatial(T.int64(1), b_2 + b_3)
                    v_oco = T.axis.spatial(T.int64(58), oco_2 * T.int64(2) + oco_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused % T.int64(14) // T.int64(2) + ow_2 + ow_3)
                    v_oci = T.axis.spatial(T.int64(4), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused // T.int64(14) * T.int64(2) + b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused_fused % T.int64(2) + oci_2 + oci_3)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                    T.reads(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci], PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)], p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci])
                    T.writes(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] + PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)] * p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(178)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_add"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(58), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(196))
                    v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(196) // T.int64(28))
                    v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(28) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.where(ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1 < T.int64(11368))
                    T.reads(DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l3, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 29, 2])
l22, l23, l24, l25 = sch.split(loop=l4, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l5, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l6, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l7, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[3, 1])
l52, l53 = sch.split(loop=l8, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[3, 1])
l56, l57 = sch.split(loop=l9, factors=[v54, v55], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l16, l24, l32, l40, l48, l53, l57, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v58 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v58)
l59 = sch.sample_compute_location(block=b0, decision=9)
sch.compute_at(block=b0, loop=l59, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b60 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b60, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b60, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b60, ann_key="meta_schedule.unroll_explicit")
b61, b62, b63 = sch.get_child_blocks(b60)
l64, l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78 = sch.get_loops(block=b61)
l79 = sch.fuse(l64, l65, l66, l67, l68, l69, l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l79)
l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94 = sch.get_loops(block=b62)
l95 = sch.fuse(l80, preserve_unit_iters=True)
sch.parallel(loop=l95)
sch.annotate(block_or_loop=l95, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l95, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100 = sch.get_loops(block=b63)
l101 = sch.fuse(l96, l97, l98, l99, l100, preserve_unit_iters=True)
l102, l103 = sch.split(loop=l101, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l102)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="DepthwiseConv2d", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b104)
b120 = sch.decompose_reduction(block=b104, loop=l106)
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #52: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(58), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(58), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        PaddedInput = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(16), T.int64(16), T.int64(4)))
        DepthwiseConv2d = T.alloc_buffer((T.int64(1), T.int64(58), T.int64(7), T.int64(7), T.int64(4)))
        for i0_i1_i2_fused in T.parallel(T.int64(928)):
            for i3_i4_fused in T.vectorized(T.int64(64)):
                with T.block("PaddedInput"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(58), i0_i1_i2_fused // T.int64(16))
                    v_i2 = T.axis.spatial(T.int64(16), i0_i1_i2_fused % T.int64(16))
                    v_i3 = T.axis.spatial(T.int64(16), i3_i4_fused // T.int64(4))
                    v_i4 = T.axis.spatial(T.int64(4), i3_i4_fused % T.int64(4))
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4])
                    PaddedInput[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for b_2_init, oco_2_init, oh_2_init, ow_2_init, oci_2_init, b_3_init, oco_3_init, oh_3_init, ow_3_init, oci_3_init in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("DepthwiseConv2d_init"):
                    v_b = T.axis.spatial(T.int64(1), b_2_init + b_3_init)
                    v_oco = T.axis.spatial(T.int64(58), oco_2_init * T.int64(58) + oco_3_init)
                    v_oh = T.axis.spatial(T.int64(7), oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(7), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused % T.int64(7) + ow_2_init + ow_3_init)
                    v_oci = T.axis.spatial(T.int64(4), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused // T.int64(7) + oci_2_init + oci_3_init)
                    T.reads()
                    T.writes(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = T.float32(0)
            for kh_0, kw_0, b_2, oco_2, oh_2, ow_2, oci_2, kh_1, kw_1, b_3, oco_3, oh_3, ow_3, oci_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(58), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("DepthwiseConv2d_update"):
                    v_b = T.axis.spatial(T.int64(1), b_2 + b_3)
                    v_oco = T.axis.spatial(T.int64(58), oco_2 * T.int64(58) + oco_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused % T.int64(7) + ow_2 + ow_3)
                    v_oci = T.axis.spatial(T.int64(4), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused // T.int64(7) + oci_2 + oci_3)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                    T.reads(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci], PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)], p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci])
                    T.writes(DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] = DepthwiseConv2d[v_b, v_oco, v_oh, v_ow, v_oci] + PaddedInput[v_b, v_oci // T.int64(4) + v_oco, v_oh * T.int64(2) + v_kh, v_ow * T.int64(2) + v_kw, v_oci % T.int64(4)] * p1[v_oco, T.int64(0), v_kh, v_kw, T.int64(0), v_oci]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(58), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("T_add"):
                    v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                    v_ax3 = T.axis.spatial(T.int64(7), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused % T.int64(7) + ax3)
                    v_ax4 = T.axis.spatial(T.int64(4), b_0_oco_0_oh_0_ow_0_oci_0_b_1_oco_1_oh_1_ow_1_oci_1_fused // T.int64(7) + ax4)
                    T.reads(DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = DepthwiseConv2d[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="PaddedInput", func_name="main")
b1 = sch.get_block(name="DepthwiseConv2d", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l3, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 58])
l22, l23, l24, l25 = sch.split(loop=l4, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l5, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l6, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l7, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 3])
l52, l53 = sch.split(loop=l8, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 3])
l56, l57 = sch.split(loop=l9, factors=[v54, v55], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l16, l24, l32, l40, l48, l53, l57, l17, l25, l33, l41, l49)
b58, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b58, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v59 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v59)
l60 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l60, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b61 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b61, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b61, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b61, ann_key="meta_schedule.unroll_explicit")
b62, b63, b64 = sch.get_child_blocks(b61)
l65, l66, l67, l68, l69 = sch.get_loops(block=b62)
l70 = sch.fuse(l65, l66, l67, preserve_unit_iters=True)
sch.parallel(loop=l70)
l71 = sch.fuse(l68, l69, preserve_unit_iters=True)
sch.vectorize(loop=l71)
l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b63)
l96 = sch.fuse(l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, preserve_unit_iters=True)
sch.parallel(loop=l96)
sch.annotate(block_or_loop=l96, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l96, ann_key="pragma_unroll_explicit", ann_val=1)
l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b64)
b103 = sch.get_block(name="DepthwiseConv2d", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b103)
b119 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #53: GFLOPs: 3.7291. Time: 57.9204 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #54: GFLOPs: 5.2698. Time: 40.9866 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #55: GFLOPs: 5.3804. Time: 40.1440 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #56: GFLOPs: 0.4139. Time: 521.8151 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #57: GFLOPs: 7.3770. Time: 29.2793 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #58: GFLOPs: 1.9896. Time: 108.5580 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #59: GFLOPs: 0.2621. Time: 824.0607 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #60: GFLOPs: 3.7852. Time: 57.0617 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #61: GFLOPs: 2.6728. Time: 80.8097 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #62: GFLOPs: 4.2532. Time: 50.7831 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #63: GFLOPs: 2.3769. Time: 90.8714 us. Best GFLOPs: 16.9540
2024-04-28 21:12:14 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #64: GFLOPs: 4.5409. Time: 47.5657 us. Best GFLOPs: 16.9540
2024-04-28 23:23:30 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:23:31 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-28 23:23:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 23:23:36 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-28 23:23:45 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 23:23:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 23:24:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 23:24:15 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-28 23:24:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0142  1.0049  1.0049  0.9940  0.9880  0.9790  0.9790  0.9615  0.9466  0.9465  0.9465  0.9465  0.9465  0.9465  0.9433  0.9433
[17 : 32]:	0.9427  0.9251  0.9251  0.9251  0.9249  0.9231  0.9200  0.9166  0.9157  0.9151  0.9147  0.9096  0.9096  0.9094  0.9056  0.9056
[33 : 48]:	0.9002  0.8967  0.8959  0.8912  0.8882  0.8876  0.8867  0.8851  0.8833  0.8833  0.8752  0.8680  0.8633  0.8632  0.8627  0.8601
[49 : 64]:	0.8601  0.8599  0.8566  0.8546  0.8533  0.8504  0.8483  0.8457  0.8454  0.8453  0.8430  0.8426  0.8395  0.8319  0.8284  0.8263
2024-04-28 23:24:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:24:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #65: GFLOPs: 17.6049. Time: 12.2688 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #66: GFLOPs: 16.9921. Time: 12.7113 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #67: GFLOPs: 17.1621. Time: 12.5854 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #68: GFLOPs: 16.7268. Time: 12.9130 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #69: GFLOPs: 16.0023. Time: 13.4976 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #70: GFLOPs: 16.3553. Time: 13.2062 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #71: GFLOPs: 16.6712. Time: 12.9560 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #72: GFLOPs: 13.6741. Time: 15.7957 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #73: GFLOPs: 17.2282. Time: 12.5371 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #74: GFLOPs: 17.2492. Time: 12.5218 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #75: GFLOPs: 16.9491. Time: 12.7436 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #76: GFLOPs: 16.9987. Time: 12.7064 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #77: GFLOPs: 15.5518. Time: 13.8885 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #78: GFLOPs: 16.1252. Time: 13.3947 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #79: GFLOPs: 15.9713. Time: 13.5237 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #80: GFLOPs: 16.4798. Time: 13.1065 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #81: GFLOPs: 16.0525. Time: 13.4553 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #82: GFLOPs: 12.9566. Time: 16.6704 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #83: GFLOPs: 15.6329. Time: 13.8165 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #84: GFLOPs: 16.5036. Time: 13.0876 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #85: GFLOPs: 16.4016. Time: 13.1689 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #86: GFLOPs: 16.8298. Time: 12.8339 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #87: GFLOPs: 16.2915. Time: 13.2580 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #88: GFLOPs: 16.1736. Time: 13.3546 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #89: GFLOPs: 14.5644. Time: 14.8302 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #90: GFLOPs: 16.2192. Time: 13.3170 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #91: GFLOPs: 17.0377. Time: 12.6773 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #92: GFLOPs: 16.4541. Time: 13.1270 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #93: GFLOPs: 17.0487. Time: 12.6691 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #94: GFLOPs: 16.3339. Time: 13.2235 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #95: GFLOPs: 15.8243. Time: 13.6494 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #96: GFLOPs: 16.2156. Time: 13.3200 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #97: GFLOPs: 16.8692. Time: 12.8039 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #98: GFLOPs: 0.6346. Time: 340.3772 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #99: GFLOPs: 15.2608. Time: 14.1534 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #100: GFLOPs: 15.9019. Time: 13.5828 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #101: GFLOPs: 16.2991. Time: 13.2518 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #102: GFLOPs: 14.6913. Time: 14.7021 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #103: GFLOPs: 15.6712. Time: 13.7828 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #104: GFLOPs: 14.0234. Time: 15.4023 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #105: GFLOPs: 16.2525. Time: 13.2898 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #106: GFLOPs: 16.3376. Time: 13.2205 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #107: GFLOPs: 13.0541. Time: 16.5459 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #108: GFLOPs: 14.9170. Time: 14.4796 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #109: GFLOPs: 14.9496. Time: 14.4480 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #110: GFLOPs: 15.6609. Time: 13.7918 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #111: GFLOPs: 14.8368. Time: 14.5579 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #112: GFLOPs: 14.1462. Time: 15.2685 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #113: GFLOPs: 13.8203. Time: 15.6286 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #114: GFLOPs: 13.0219. Time: 16.5868 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #115: GFLOPs: 16.4625. Time: 13.1203 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #116: GFLOPs: 15.0151. Time: 14.3850 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #117: GFLOPs: 12.7258. Time: 16.9727 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #118: GFLOPs: 8.8557. Time: 24.3903 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #119: GFLOPs: 11.1946. Time: 19.2942 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #120: GFLOPs: 15.5267. Time: 13.9110 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #121: GFLOPs: 16.0827. Time: 13.4301 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #122: GFLOPs: 15.4266. Time: 14.0012 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #123: GFLOPs: 13.2955. Time: 16.2455 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #124: GFLOPs: 15.0245. Time: 14.3760 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #125: GFLOPs: 16.0112. Time: 13.4901 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #126: GFLOPs: 5.3549. Time: 40.3358 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #127: GFLOPs: 3.5898. Time: 60.1686 us. Best GFLOPs: 17.6049
2024-04-28 23:25:55 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #128: GFLOPs: 5.7896. Time: 37.3070 us. Best GFLOPs: 17.6049
2024-04-29 01:45:10 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:45:12 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:45:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-29 01:45:16 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 01:45:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-29 01:45:35 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-29 01:45:45 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-29 01:45:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x38ec3d8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x591ed28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3521838)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x5710328)]: 0 failure(s)
2024-04-29 01:45:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9796  0.9796  0.9796  0.9769  0.9692  0.9692  0.9652  0.9652  0.9641  0.9626  0.9601  0.9601  0.9601  0.9601  0.9601  0.9591
[17 : 32]:	0.9558  0.9558  0.9558  0.9558  0.9550  0.9518  0.9484  0.9468  0.9468  0.9463  0.9456  0.9456  0.9456  0.9456  0.9440  0.9414
[33 : 48]:	0.9400  0.9400  0.9400  0.9400  0.9399  0.9399  0.9399  0.9397  0.9397  0.9397  0.9397  0.9384  0.9382  0.9382  0.9382  0.9382
[49 : 64]:	0.9382  0.9382  0.9368  0.9357  0.9357  0.9357  0.9357  0.9357  0.9357  0.9357  0.9357  0.9291  0.9277  0.9266  0.9229  0.9229
2024-04-29 01:45:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:45:59 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #129: GFLOPs: 8.5577. Time: 25.2394 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #130: GFLOPs: 10.4272. Time: 20.7143 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #131: GFLOPs: 4.4743. Time: 48.2741 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #132: GFLOPs: 14.8132. Time: 14.5811 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #133: GFLOPs: 12.4941. Time: 17.2875 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #134: GFLOPs: 12.5904. Time: 17.1553 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #135: GFLOPs: 12.5627. Time: 17.1931 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #136: GFLOPs: 12.9418. Time: 16.6895 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #137: GFLOPs: 12.6435. Time: 17.0832 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #138: GFLOPs: 12.9853. Time: 16.6336 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #139: GFLOPs: 12.7790. Time: 16.9020 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #140: GFLOPs: 12.7555. Time: 16.9333 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #141: GFLOPs: 12.9103. Time: 16.7302 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #142: GFLOPs: 12.8168. Time: 16.8522 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #143: GFLOPs: 12.4094. Time: 17.4056 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #144: GFLOPs: 12.3507. Time: 17.4882 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #145: GFLOPs: 13.0283. Time: 16.5787 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #146: GFLOPs: 14.5505. Time: 14.8443 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #147: GFLOPs: 14.4948. Time: 14.9014 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #148: GFLOPs: 14.4679. Time: 14.9290 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #149: GFLOPs: 13.5853. Time: 15.8990 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #150: GFLOPs: 15.3455. Time: 14.0753 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #151: GFLOPs: 12.5312. Time: 17.2363 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #152: GFLOPs: 13.6626. Time: 15.8090 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #153: GFLOPs: 13.5808. Time: 15.9043 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #154: GFLOPs: 15.1186. Time: 14.2866 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #155: GFLOPs: 14.9906. Time: 14.4085 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #156: GFLOPs: 15.0015. Time: 14.3981 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #157: GFLOPs: 14.6229. Time: 14.7708 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #158: GFLOPs: 15.1573. Time: 14.2501 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #159: GFLOPs: 12.9270. Time: 16.7086 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #160: GFLOPs: 15.0592. Time: 14.3428 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #161: GFLOPs: 15.0309. Time: 14.3699 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #162: GFLOPs: 15.6735. Time: 13.7807 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #163: GFLOPs: 15.2510. Time: 14.1625 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #164: GFLOPs: 15.1349. Time: 14.2712 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #165: GFLOPs: 17.2444. Time: 12.5253 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #166: GFLOPs: 16.3140. Time: 13.2397 us. Best GFLOPs: 17.6049
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #167: GFLOPs: 17.7437. Time: 12.1729 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #168: GFLOPs: 12.7159. Time: 16.9860 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #169: GFLOPs: 12.7220. Time: 16.9778 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #170: GFLOPs: 12.5381. Time: 17.2269 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #171: GFLOPs: 12.4081. Time: 17.4074 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #172: GFLOPs: 12.6017. Time: 17.1399 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #173: GFLOPs: 15.1433. Time: 14.2632 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #174: GFLOPs: 15.0245. Time: 14.3760 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #175: GFLOPs: 15.1294. Time: 14.2763 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #176: GFLOPs: 14.8624. Time: 14.5328 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #177: GFLOPs: 15.1769. Time: 14.2316 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #178: GFLOPs: 15.1204. Time: 14.2848 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #179: GFLOPs: 15.1046. Time: 14.2998 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #180: GFLOPs: 12.9517. Time: 16.6768 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #181: GFLOPs: 12.8865. Time: 16.7611 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #182: GFLOPs: 12.8171. Time: 16.8519 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #183: GFLOPs: 12.4737. Time: 17.3158 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #184: GFLOPs: 12.8733. Time: 16.7783 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #185: GFLOPs: 11.4460. Time: 18.8704 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #186: GFLOPs: 12.9903. Time: 16.6272 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #187: GFLOPs: 16.0401. Time: 13.4658 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #188: GFLOPs: 15.1326. Time: 14.2733 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #189: GFLOPs: 14.5852. Time: 14.8090 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #190: GFLOPs: 2.6661. Time: 81.0132 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #191: GFLOPs: 1.5898. Time: 135.8583 us. Best GFLOPs: 17.7437
2024-04-29 01:47:23 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_depthwise_conv2d_NCHWc_add_6] Trial #192: GFLOPs: 1.9635. Time: 110.0039 us. Best GFLOPs: 17.7437
