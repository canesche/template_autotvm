2024-04-29 03:20:12 [INFO] [task_scheduler.cc:160] Initializing Task #13: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3"
2024-04-29 03:20:12 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32), T.int64(128), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 03:20:13 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 03:20:13 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(2), T.int64(4), T.int64(3), T.int64(3)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(32)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), oh_1 * T.int64(7) + kh_0 + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ow_0 * T.int64(14) + ow_1 * T.int64(2) + kw_0 + ax3)
                        v_i4 = T.axis.spatial(T.int64(128), ic_0 * T.int64(32) + ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=12)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-29 03:20:13 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(7)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(4), T.int64(128)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), oh_1 * T.int64(7) + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(128), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_1 in range(T.int64(2)):
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(32) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(16)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(2) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(28), oh_1 * T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(16) + ax4)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 03:20:13 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(7)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(4), T.int64(128)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(30), oh_1 * T.int64(7) + ax2)
                            v_i3 = T.axis.spatial(T.int64(30), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ax3)
                            v_i4 = T.axis.spatial(T.int64(128), ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(2), T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(32) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(28), T.int64(14), T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 03:36:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:36:02 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 03:36:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 03:36:08 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 03:36:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 03:36:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 03:36:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 03:36:32 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 03:36:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9995  0.9991  0.9983  0.9981  0.9980  0.9975  0.9969  0.9965  0.9965  0.9962  0.9962  0.9950  0.9944  0.9941  0.9939
[17 : 32]:	0.9937  0.9933  0.9932  0.9929  0.9919  0.9917  0.9913  0.9913  0.9902  0.9897  0.9896  0.9892  0.9892  0.9881  0.9872  0.9861
[33 : 48]:	0.9860  0.9856  0.9855  0.9853  0.9852  0.9830  0.9825  0.9825  0.9817  0.9800  0.9793  0.9789  0.9761  0.9759  0.9753  0.9746
[49 : 64]:	0.9741  0.9736  0.9729  0.9722  0.9715  0.9715  0.9714  0.9690  0.9687  0.9680  0.9669  0.9667  0.9665  0.9654  0.9639  0.9637
2024-04-29 03:36:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:36:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #1: GFLOPs: 21.8572. Time: 10587.4591 us. Best GFLOPs: 21.8572
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #2: GFLOPs: 52.8915. Time: 4375.2125 us. Best GFLOPs: 52.8915
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #3: GFLOPs: 3.6219. Time: 63892.3093 us. Best GFLOPs: 52.8915
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #4: GFLOPs: 136.5585. Time: 1694.5978 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #5: GFLOPs: 98.5968. Time: 2347.0517 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #6: GFLOPs: 98.6590. Time: 2345.5717 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #7: GFLOPs: 2.7256. Time: 84903.5157 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #8: GFLOPs: 88.4727. Time: 2615.6293 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #9: GFLOPs: 62.6530. Time: 3693.5447 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #10: GFLOPs: 81.0917. Time: 2853.7046 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #11: GFLOPs: 124.5128. Time: 1858.5382 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #12: GFLOPs: 6.2206. Time: 37200.7973 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #13: GFLOPs: 11.9722. Time: 19329.0863 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #14: GFLOPs: 11.4547. Time: 20202.4030 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #15: GFLOPs: 32.1400. Time: 7200.1073 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #16: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(9), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                    v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_fused_fused * T.int64(7) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(32)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(7), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_fused_fused * T.int64(7) + ow_1 * T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(7), T.int64(1), T.int64(16), T.int64(3), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_fused_fused * T.int64(7) + ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(25088))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(25088) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 7, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 32, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78 = sch.get_loops(block=b67)
l79 = sch.fuse(l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l79)
l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l80, preserve_unit_iters=True)
sch.parallel(loop=l103)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l104, l105, l106, l107, l108, preserve_unit_iters=True)
l110, l111 = sch.split(loop=l109, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l110)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b112)
b136 = sch.decompose_reduction(block=b112, loop=l120)
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #17: GFLOPs: 27.3117. Time: 8472.9831 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #18: GFLOPs: 55.9898. Time: 4133.1058 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #19: GFLOPs: 72.0376. Time: 3212.3723 us. Best GFLOPs: 136.5585
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #20: GFLOPs: 250.2361. Time: 924.7736 us. Best GFLOPs: 250.2361
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #21: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for i0_i1_i2_i3_fused in T.parallel(T.int64(900)):
            for i4 in range(T.int64(128)):
                with T.block("data_pad"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i2 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused // T.int64(30))
                    v_i3 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused % T.int64(30))
                    v_i4 = T.axis.spatial(T.int64(128), i4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(14)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(14) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused * T.int64(8) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(14)):
                for oc_block_3_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused * T.int64(8) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(25088))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(25088) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74 = sch.get_loops(block=b67)
l75 = sch.fuse(l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l75)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b68)
l102 = sch.fuse(l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, preserve_unit_iters=True)
sch.parallel(loop=l102)
l103 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l103)
sch.annotate(block_or_loop=l102, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l102, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l104, l105, l106, l107, l108, preserve_unit_iters=True)
l110, l111 = sch.split(loop=l109, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l110)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b112)
b130 = sch.decompose_reduction(block=b112, loop=l114)
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #22: GFLOPs: 131.2646. Time: 1762.9403 us. Best GFLOPs: 250.2361
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #23: GFLOPs: 8.1664. Time: 28336.9730 us. Best GFLOPs: 250.2361
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #24: GFLOPs: 5.4702. Time: 42303.9703 us. Best GFLOPs: 250.2361
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #25: GFLOPs: 2.3078. Time: 100273.4957 us. Best GFLOPs: 250.2361
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #26: GFLOPs: 70.5393. Time: 3280.6070 us. Best GFLOPs: 250.2361
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #27: GFLOPs: 287.4112. Time: 805.1590 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #28: GFLOPs: 46.2451. Time: 5004.0249 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #29: GFLOPs: 45.8356. Time: 5048.7368 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #30: GFLOPs: 140.9285. Time: 1642.0510 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #31: GFLOPs: 2.5695. Time: 90061.0697 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #32: GFLOPs: 20.1235. Time: 11499.5554 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #33: GFLOPs: 24.2349. Time: 9548.6878 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #34: GFLOPs: 31.6454. Time: 7312.6449 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #35: GFLOPs: 25.9686. Time: 8911.2050 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #36: GFLOPs: 18.7831. Time: 12320.2116 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #37: GFLOPs: 199.9407. Time: 1157.4016 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #38: GFLOPs: 55.4939. Time: 4170.0376 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #39: GFLOPs: 7.8068. Time: 29642.2310 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #40: GFLOPs: 7.1065. Time: 32563.5048 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #41: GFLOPs: 15.4791. Time: 14949.9864 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #42: GFLOPs: 60.0305. Time: 3854.9035 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #43: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(392), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(8)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(128)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(196) // T.int64(14) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ow_1 * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(4) + ax3)
                        v_i4 = T.axis.spatial(T.int64(128), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(196) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(196) // T.int64(14) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(4) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(196) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(196) // T.int64(14) * T.int64(2) + oh_1 * T.int64(2) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(4) + ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(4)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(196) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(196) // T.int64(14) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 8, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=9)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b68)
l86 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l86)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l87, preserve_unit_iters=True)
sch.parallel(loop=l109)
l110 = sch.fuse(l108, preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.annotate(block_or_loop=l109, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l109, ann_key="pragma_unroll_explicit", ann_val=1)
l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b70)
l117 = sch.fuse(l116, preserve_unit_iters=True)
sch.vectorize(loop=l117)
b118 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140 = sch.get_loops(block=b118)
b141 = sch.decompose_reduction(block=b118, loop=l125)
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #44: GFLOPs: 3.0944. Time: 74783.2710 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #45: GFLOPs: 6.4640. Time: 35800.1757 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #46: GFLOPs: 24.9020. Time: 9292.8979 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #47: GFLOPs: 67.2588. Time: 3440.6145 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #48: GFLOPs: 54.5456. Time: 4242.5400 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #49: GFLOPs: 77.7666. Time: 2975.7223 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #50: GFLOPs: 96.6573. Time: 2394.1461 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #51: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for i0_i1_i2_i3_fused in T.parallel(T.int64(900)):
            for i4 in range(T.int64(128)):
                with T.block("data_pad"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i2 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused // T.int64(30))
                    v_i3 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused % T.int64(30))
                    v_i4 = T.axis.spatial(T.int64(128), i4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(14)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(14) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(8) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(14)):
                for oc_block_3_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(8) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(25088))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(25088) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74 = sch.get_loops(block=b67)
l75 = sch.fuse(l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l75)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b68)
l102 = sch.fuse(l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, preserve_unit_iters=True)
sch.parallel(loop=l102)
l103 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l103)
sch.annotate(block_or_loop=l102, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l102, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l104, l105, l106, l107, l108, preserve_unit_iters=True)
l110, l111 = sch.split(loop=l109, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l110)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b112)
b130 = sch.decompose_reduction(block=b112, loop=l114)
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #52: GFLOPs: 12.2709. Time: 18858.6097 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #53: GFLOPs: 5.9899. Time: 38633.7890 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #54: GFLOPs: 22.3913. Time: 10334.9146 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #55: GFLOPs: 39.6372. Time: 5838.2487 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #56: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for i0_i1_i2_i3_fused in T.parallel(T.int64(900)):
            for i4 in range(T.int64(128)):
                with T.block("data_pad"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i2 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused // T.int64(30))
                    v_i3 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused % T.int64(30))
                    v_i4 = T.axis.spatial(T.int64(128), i4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(14)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(4) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), ow_2_init * T.int64(14) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(8) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(32), T.int64(3), T.int64(3), T.int64(1), T.int64(4), T.int64(4), T.int64(14)):
                for oc_block_3_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(4) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_2 * T.int64(14) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(8) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(25088))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(25088) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 4])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 2, 1, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74 = sch.get_loops(block=b67)
l75 = sch.fuse(l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l75)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b68)
l102 = sch.fuse(l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, preserve_unit_iters=True)
sch.parallel(loop=l102)
l103 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l103)
sch.annotate(block_or_loop=l102, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l102, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l104, l105, l106, l107, l108, preserve_unit_iters=True)
l110, l111 = sch.split(loop=l109, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l110)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b112)
b130 = sch.decompose_reduction(block=b112, loop=l114)
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #57: GFLOPs: 18.3123. Time: 12636.9446 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #58: GFLOPs: 47.1679. Time: 4906.1280 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #59: GFLOPs: 66.5320. Time: 3478.2025 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #60: GFLOPs: 88.5884. Time: 2612.2118 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #61: GFLOPs: 23.0988. Time: 10018.3405 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #62: GFLOPs: 5.7704. Time: 40103.0183 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #63: GFLOPs: 77.3993. Time: 2989.8416 us. Best GFLOPs: 287.4112
2024-04-29 03:57:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #64: GFLOPs: 98.9718. Time: 2338.1592 us. Best GFLOPs: 287.4112
2024-04-29 04:12:56 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:12:57 [INFO] [evolutionary_search.cc:715] Picked top 59 candidate(s) from database
2024-04-29 04:13:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 04:13:01 [INFO] [evolutionary_search.cc:723] Sampled 453 candidate(s)
2024-04-29 04:13:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 04:13:26 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 04:13:39 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 04:13:52 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 04:13:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9715  0.9715  0.9715  0.9715  0.9715  0.9454  0.8131  0.8001  0.7993  0.7914  0.7909  0.7833  0.7711  0.7686  0.7536  0.7315
[17 : 32]:	0.7305  0.7304  0.7281  0.7281  0.7234  0.7205  0.7092  0.7091  0.7091  0.7088  0.7069  0.7060  0.7052  0.7012  0.6924  0.6881
[33 : 48]:	0.6868  0.6868  0.6868  0.6868  0.6865  0.6753  0.6668  0.6610  0.6610  0.6610  0.6610  0.6610  0.6588  0.6581  0.6573  0.6512
[49 : 64]:	0.6461  0.6433  0.6396  0.6390  0.6349  0.6320  0.6320  0.6310  0.6225  0.6173  0.6076  0.6076  0.6070  0.6065  0.6056  0.6051
2024-04-29 04:14:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:14:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #65: GFLOPs: 185.7945. Time: 1245.5251 us. Best GFLOPs: 287.4112
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #66: GFLOPs: 317.9114. Time: 727.9125 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #67: GFLOPs: 149.3420. Time: 1549.5422 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #68: GFLOPs: 142.2234. Time: 1627.1002 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #69: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for i0_i1_i2_i3_fused in T.parallel(T.int64(900)):
            for i4 in range(T.int64(128)):
                with T.block("data_pad"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i2 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused // T.int64(30))
                    v_i3 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused % T.int64(30))
                    v_i4 = T.axis.spatial(T.int64(128), i4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(4) * T.int64(4) + oh_1 * T.int64(4) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(7) + ow_1 * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(32) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(8), T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(4) * T.int64(4) + oh_1 * T.int64(4) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(7) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(32) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(7)):
                for ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(4) * T.int64(4) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 4, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 8, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75 = sch.get_loops(block=b68)
l76 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l76)
l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b69)
l103 = sch.fuse(l77, l78, l79, l80, l81, preserve_unit_iters=True)
sch.parallel(loop=l103)
l104 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l104)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b70)
l111 = sch.fuse(l110, preserve_unit_iters=True)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b112)
b135 = sch.decompose_reduction(block=b112, loop=l119)
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #70: GFLOPs: 167.4356. Time: 1382.0936 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #71: GFLOPs: 180.7855. Time: 1280.0345 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #72: GFLOPs: 113.2567. Time: 2043.2488 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #73: GFLOPs: 250.2073. Time: 924.8799 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #74: GFLOPs: 243.4427. Time: 950.5799 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #75: GFLOPs: 99.2485. Time: 2331.6396 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #76: GFLOPs: 145.7959. Time: 1587.2303 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #77: GFLOPs: 230.3379. Time: 1004.6618 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #78: GFLOPs: 140.3575. Time: 1648.7307 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #79: GFLOPs: 76.5806. Time: 3021.8055 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #80: GFLOPs: 94.0392. Time: 2460.8009 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #81: GFLOPs: 121.3183. Time: 1907.4760 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #82: GFLOPs: 164.8448. Time: 1403.8159 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #83: GFLOPs: 157.5157. Time: 1469.1340 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #84: GFLOPs: 103.1829. Time: 2242.7321 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #85: GFLOPs: 133.6170. Time: 1731.9034 us. Best GFLOPs: 317.9114
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #86: GFLOPs: 518.9970. Time: 445.8826 us. Best GFLOPs: 518.9970
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #87: GFLOPs: 105.1977. Time: 2199.7792 us. Best GFLOPs: 518.9970
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #88: GFLOPs: 117.9744. Time: 1961.5411 us. Best GFLOPs: 518.9970
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #89: GFLOPs: 521.7198. Time: 443.5555 us. Best GFLOPs: 521.7198
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #90: GFLOPs: 209.4379. Time: 1104.9179 us. Best GFLOPs: 521.7198
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #91: GFLOPs: 151.6865. Time: 1525.5918 us. Best GFLOPs: 521.7198
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #92: GFLOPs: 601.8588. Time: 384.4950 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #93: GFLOPs: 107.8218. Time: 2146.2427 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #94: GFLOPs: 69.0067. Time: 3353.4693 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #95: GFLOPs: 106.8469. Time: 2165.8247 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #96: GFLOPs: 60.9724. Time: 3795.3494 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #97: GFLOPs: 96.3672. Time: 2401.3544 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #98: GFLOPs: 84.4546. Time: 2740.0712 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #99: GFLOPs: 88.0472. Time: 2628.2701 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #100: GFLOPs: 98.3242. Time: 2353.5591 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #101: GFLOPs: 200.4414. Time: 1154.5104 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #102: GFLOPs: 64.0923. Time: 3610.6000 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #103: GFLOPs: 599.4090. Time: 386.0665 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #104: GFLOPs: 108.9439. Time: 2124.1368 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #105: GFLOPs: 132.6558. Time: 1744.4526 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #106: GFLOPs: 487.5923. Time: 474.6008 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #107: GFLOPs: 491.3483. Time: 470.9728 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #108: GFLOPs: 127.5678. Time: 1814.0287 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #109: GFLOPs: 81.5184. Time: 2838.7661 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #110: GFLOPs: 157.1691. Time: 1472.3743 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #111: GFLOPs: 32.8501. Time: 7044.4772 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #112: GFLOPs: 61.7641. Time: 3746.7052 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #113: GFLOPs: 128.8396. Time: 1796.1221 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #114: GFLOPs: 89.4673. Time: 2586.5509 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #115: GFLOPs: 248.5406. Time: 931.0822 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #116: GFLOPs: 21.2867. Time: 10871.1791 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #117: GFLOPs: 116.2703. Time: 1990.2911 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #118: GFLOPs: 166.3495. Time: 1391.1175 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #119: GFLOPs: 193.7828. Time: 1194.1807 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #120: GFLOPs: 27.5768. Time: 8391.5460 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #121: GFLOPs: 162.6355. Time: 1422.8859 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #122: GFLOPs: 65.2635. Time: 3545.8055 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #123: GFLOPs: 147.5170. Time: 1568.7120 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #124: GFLOPs: 155.3047. Time: 1490.0494 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #125: GFLOPs: 136.3183. Time: 1697.5834 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #126: GFLOPs: 47.5448. Time: 4867.2304 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #127: GFLOPs: 15.3281. Time: 15097.2683 us. Best GFLOPs: 601.8588
2024-04-29 04:15:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #128: GFLOPs: 95.5351. Time: 2422.2690 us. Best GFLOPs: 601.8588
2024-04-29 05:00:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:00:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:01:03 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:01:03 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:01:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:01:28 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:01:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:01:53 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:02:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0165  0.9853  0.9853  0.9775  0.9639  0.9628  0.9551  0.9428  0.9277  0.9199  0.9052  0.9008  0.8311  0.8311  0.8119  0.8119
[17 : 32]:	0.7555  0.7549  0.7533  0.7498  0.7433  0.7414  0.7397  0.7326  0.7270  0.7244  0.7242  0.7227  0.7179  0.7173  0.7137  0.7137
[33 : 48]:	0.7129  0.7012  0.6994  0.6840  0.6840  0.6794  0.6788  0.6788  0.6741  0.6741  0.6724  0.6625  0.6607  0.6595  0.6587  0.6587
[49 : 64]:	0.6587  0.6575  0.6555  0.6554  0.6535  0.6523  0.6411  0.6317  0.6300  0.6275  0.6275  0.6264  0.6250  0.6250  0.6250  0.6250
2024-04-29 05:02:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:02:01 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #129: GFLOPs: 563.3574. Time: 410.7724 us. Best GFLOPs: 601.8588
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #130: GFLOPs: 598.6272. Time: 386.5706 us. Best GFLOPs: 601.8588
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #131: GFLOPs: 597.0967. Time: 387.5615 us. Best GFLOPs: 601.8588
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #132: GFLOPs: 676.7647. Time: 341.9382 us. Best GFLOPs: 676.7647
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #133: GFLOPs: 667.9206. Time: 346.4659 us. Best GFLOPs: 676.7647
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #134: GFLOPs: 596.0983. Time: 388.2107 us. Best GFLOPs: 676.7647
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #135: GFLOPs: 658.2040. Time: 351.5805 us. Best GFLOPs: 676.7647
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #136: GFLOPs: 593.0448. Time: 390.2095 us. Best GFLOPs: 676.7647
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #137: GFLOPs: 585.5023. Time: 395.2362 us. Best GFLOPs: 676.7647
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #138: GFLOPs: 679.8728. Time: 340.3750 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #139: GFLOPs: 587.7580. Time: 393.7194 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #140: GFLOPs: 674.5987. Time: 343.0361 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #141: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0 in range(T.int64(16)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(3)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(14) + ax2)
                            v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ax3)
                            v_i4 = T.axis.spatial(T.int64(128), ic_0 * T.int64(8) + ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28))
                        v_ax4 = T.axis.spatial(T.int64(32), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 28, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b69)
l106 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l106)
l107 = sch.fuse(l105, preserve_unit_iters=True)
sch.vectorize(loop=l107)
sch.annotate(block_or_loop=l106, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l106, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l112, l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b115)
b133 = sch.decompose_reduction(block=b115, loop=l117)
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #142: GFLOPs: 421.9843. Time: 548.3894 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #143: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0 in range(T.int64(16)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(3)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(14) + ax2)
                            v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ax3)
                            v_i4 = T.axis.spatial(T.int64(128), ic_0 * T.int64(8) + ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(4), T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(56) * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28))
                        v_ax4 = T.axis.spatial(T.int64(32), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 28, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b69)
l106 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l106)
l107 = sch.fuse(l105, preserve_unit_iters=True)
sch.vectorize(loop=l107)
sch.annotate(block_or_loop=l106, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l106, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l112, l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b115)
b133 = sch.decompose_reduction(block=b115, loop=l117)
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #144: GFLOPs: 504.2430. Time: 458.9290 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #145: GFLOPs: 297.4263. Time: 778.0471 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #146: GFLOPs: 621.8449. Time: 372.1373 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #147: GFLOPs: 666.5895. Time: 347.1577 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #148: GFLOPs: 501.1168. Time: 461.7920 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #149: GFLOPs: 533.3898. Time: 433.8510 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #150: GFLOPs: 283.2683. Time: 816.9348 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #151: GFLOPs: 309.3866. Time: 747.9695 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #152: GFLOPs: 525.7721. Time: 440.1369 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #153: GFLOPs: 620.1280. Time: 373.1677 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #154: GFLOPs: 470.8940. Time: 491.4306 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #155: GFLOPs: 526.3189. Time: 439.6797 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #156: GFLOPs: 251.8267. Time: 918.9323 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #157: GFLOPs: 451.2484. Time: 512.8256 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #158: GFLOPs: 453.3152. Time: 510.4874 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #159: GFLOPs: 65.4214. Time: 3537.2503 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #160: GFLOPs: 65.3925. Time: 3538.8090 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #161: GFLOPs: 469.3908. Time: 493.0044 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #162: GFLOPs: 121.0140. Time: 1912.2726 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #163: GFLOPs: 69.1312. Time: 3347.4256 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #164: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(112) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0 in range(T.int64(16)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(3)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(14) + ax2)
                            v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ax3)
                            v_i4 = T.axis.spatial(T.int64(128), ic_0 * T.int64(8) + ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(112) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(1), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(112) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28))
                        v_ax4 = T.axis.spatial(T.int64(32), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 28, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b69)
l106 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l106)
l107 = sch.fuse(l105, preserve_unit_iters=True)
sch.vectorize(loop=l107)
sch.annotate(block_or_loop=l106, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l106, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l112, l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b115)
b133 = sch.decompose_reduction(block=b115, loop=l117)
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #165: GFLOPs: 279.8668. Time: 826.8638 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #166: GFLOPs: 69.5022. Time: 3329.5579 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #167: GFLOPs: 105.9447. Time: 2184.2683 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #168: GFLOPs: 77.4856. Time: 2986.5118 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #169: GFLOPs: 463.9365. Time: 498.8004 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #170: GFLOPs: 473.4966. Time: 488.7295 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #171: GFLOPs: 134.9337. Time: 1715.0033 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #172: GFLOPs: 295.4915. Time: 783.1418 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #173: GFLOPs: 262.5142. Time: 881.5208 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #174: GFLOPs: 473.9641. Time: 488.2473 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #175: GFLOPs: 98.8786. Time: 2340.3624 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #176: GFLOPs: 248.7690. Time: 930.2271 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #177: GFLOPs: 255.1767. Time: 906.8685 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #178: GFLOPs: 599.1836. Time: 386.2117 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #179: GFLOPs: 421.5037. Time: 549.0147 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #180: GFLOPs: 618.9313. Time: 373.8892 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #181: GFLOPs: 456.8194. Time: 506.5715 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #182: GFLOPs: 531.9110. Time: 435.0572 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #183: GFLOPs: 446.9251. Time: 517.7864 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #184: GFLOPs: 405.0487. Time: 571.3183 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #185: GFLOPs: 90.4692. Time: 2557.9057 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #186: GFLOPs: 568.3720. Time: 407.1483 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #187: GFLOPs: 333.4817. Time: 693.9264 us. Best GFLOPs: 679.8728
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #188: GFLOPs: 700.7530. Time: 330.2329 us. Best GFLOPs: 700.7530
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #189: GFLOPs: 243.9935. Time: 948.4340 us. Best GFLOPs: 700.7530
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #190: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(9), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                    v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(4) * T.int64(7) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(4) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(4) * T.int64(7) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(4) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(4) * T.int64(7) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(1)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(4) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(4) * T.int64(7) + ow_1 + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b68)
l80 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l81, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b70)
l118 = sch.fuse(l117, preserve_unit_iters=True)
sch.vectorize(loop=l118)
b119 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142 = sch.get_loops(block=b119)
b143 = sch.decompose_reduction(block=b119, loop=l127)
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #191: GFLOPs: 160.1950. Time: 1444.5630 us. Best GFLOPs: 700.7530
2024-04-29 05:03:27 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #192: GFLOPs: 1.7170. Time: 134780.6397 us. Best GFLOPs: 700.7530
2024-04-29 05:36:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:36:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:36:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:36:42 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:36:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:37:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:37:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:37:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:37:38 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9637  0.9597  0.9365  0.9365  0.9340  0.9333  0.9299  0.9263  0.9234  0.9222  0.9222  0.9128  0.9022  0.8973  0.8920  0.8916
[17 : 32]:	0.8824  0.8755  0.8679  0.8615  0.8612  0.8603  0.8574  0.8540  0.8490  0.8490  0.8450  0.8450  0.8342  0.8342  0.8296  0.8289
[33 : 48]:	0.8232  0.8211  0.8199  0.8192  0.8133  0.8054  0.8043  0.8011  0.7977  0.7946  0.7898  0.7892  0.7844  0.7800  0.7749  0.7723
[49 : 64]:	0.7687  0.7687  0.7678  0.7670  0.7670  0.7650  0.7649  0.7647  0.7647  0.7638  0.7637  0.7615  0.7615  0.7604  0.7525  0.7513
2024-04-29 05:37:38 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:37:38 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #193: GFLOPs: 738.5397. Time: 313.3369 us. Best GFLOPs: 738.5397
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #194: GFLOPs: 662.7961. Time: 349.1446 us. Best GFLOPs: 738.5397
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #195: GFLOPs: 691.1260. Time: 334.8329 us. Best GFLOPs: 738.5397
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #196: GFLOPs: 675.7079. Time: 342.4730 us. Best GFLOPs: 738.5397
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #197: GFLOPs: 691.4021. Time: 334.6992 us. Best GFLOPs: 738.5397
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #198: GFLOPs: 535.4111. Time: 432.2131 us. Best GFLOPs: 738.5397
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #199: GFLOPs: 683.6248. Time: 338.5069 us. Best GFLOPs: 738.5397
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #200: GFLOPs: 777.5698. Time: 297.6089 us. Best GFLOPs: 777.5698
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #201: GFLOPs: 764.9586. Time: 302.5154 us. Best GFLOPs: 777.5698
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #202: GFLOPs: 790.4893. Time: 292.7449 us. Best GFLOPs: 790.4893
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #203: GFLOPs: 792.8971. Time: 291.8559 us. Best GFLOPs: 792.8971
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #204: GFLOPs: 694.9739. Time: 332.9790 us. Best GFLOPs: 792.8971
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #205: GFLOPs: 788.1384. Time: 293.6181 us. Best GFLOPs: 792.8971
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #206: GFLOPs: 618.9752. Time: 373.8626 us. Best GFLOPs: 792.8971
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #207: GFLOPs: 678.8396. Time: 340.8931 us. Best GFLOPs: 792.8971
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #208: GFLOPs: 795.3682. Time: 290.9492 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #209: GFLOPs: 787.1002. Time: 294.0054 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #210: GFLOPs: 668.1038. Time: 346.3709 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #211: GFLOPs: 638.0800. Time: 362.6688 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #212: GFLOPs: 671.8806. Time: 344.4239 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #213: GFLOPs: 464.6313. Time: 498.0545 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #214: GFLOPs: 600.7463. Time: 385.2070 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #215: GFLOPs: 595.2045. Time: 388.7937 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #216: GFLOPs: 647.4242. Time: 357.4344 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #217: GFLOPs: 646.1447. Time: 358.1423 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #218: GFLOPs: 638.8614. Time: 362.2252 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #219: GFLOPs: 700.6727. Time: 330.2708 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #220: GFLOPs: 705.1510. Time: 328.1733 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #221: GFLOPs: 103.1845. Time: 2242.6987 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #222: GFLOPs: 100.4392. Time: 2303.9991 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #223: GFLOPs: 669.4876. Time: 345.6550 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #224: GFLOPs: 765.9908. Time: 302.1077 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #225: GFLOPs: 549.1643. Time: 421.3888 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #226: GFLOPs: 617.0947. Time: 375.0019 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #227: GFLOPs: 702.0015. Time: 329.6456 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #228: GFLOPs: 563.9574. Time: 410.3354 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #229: GFLOPs: 121.2913. Time: 1907.9010 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #230: GFLOPs: 492.5327. Time: 469.8403 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #231: GFLOPs: 615.2668. Time: 376.1160 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #232: GFLOPs: 150.7003. Time: 1535.5754 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #233: GFLOPs: 594.0714. Time: 389.5352 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #234: GFLOPs: 548.9004. Time: 421.5914 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #235: GFLOPs: 597.8642. Time: 387.0640 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #236: GFLOPs: 775.1320. Time: 298.5449 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #237: GFLOPs: 533.9887. Time: 433.3644 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #238: GFLOPs: 543.1460. Time: 426.0580 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #239: GFLOPs: 530.5126. Time: 436.2040 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #240: GFLOPs: 633.4111. Time: 365.3421 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #241: GFLOPs: 556.4904. Time: 415.8413 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #242: GFLOPs: 546.0776. Time: 423.7707 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #243: GFLOPs: 506.9126. Time: 456.5121 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #244: GFLOPs: 152.2614. Time: 1519.8320 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #245: GFLOPs: 555.6155. Time: 416.4962 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #246: GFLOPs: 580.9547. Time: 398.3300 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #247: GFLOPs: 305.0338. Time: 758.6429 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #248: GFLOPs: 554.2343. Time: 417.5341 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #249: GFLOPs: 562.1469. Time: 411.6570 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #250: GFLOPs: 466.6493. Time: 495.9007 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #251: GFLOPs: 228.6025. Time: 1012.2885 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #252: GFLOPs: 631.4510. Time: 366.4761 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #253: GFLOPs: 601.4360. Time: 384.7653 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #254: GFLOPs: 5.7678. Time: 40121.1627 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #255: GFLOPs: 83.2887. Time: 2778.4294 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #256: GFLOPs: 7.1022. Time: 32583.2573 us. Best GFLOPs: 795.3682
2024-04-29 05:39:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:39:08 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:39:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:39:13 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:39:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:39:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:39:50 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:40:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 05:40:10 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0050  1.0037  0.9727  0.9535  0.9535  0.9510  0.9510  0.9310  0.9270  0.9124  0.8865  0.8697  0.8564  0.8494  0.8458  0.8445
[17 : 32]:	0.8434  0.8419  0.8406  0.8392  0.8381  0.8366  0.8365  0.8358  0.8358  0.8351  0.8312  0.8296  0.8240  0.8237  0.8219  0.8171
[33 : 48]:	0.8168  0.8168  0.8153  0.8148  0.8133  0.8123  0.8123  0.8113  0.8100  0.8061  0.8061  0.8041  0.8040  0.7909  0.7844  0.7837
[49 : 64]:	0.7799  0.7796  0.7776  0.7728  0.7706  0.7607  0.7606  0.7605  0.7605  0.7600  0.7551  0.7513  0.7501  0.7494  0.7484  0.7484
2024-04-29 05:40:10 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:40:10 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #257: GFLOPs: 402.3607. Time: 575.1349 us. Best GFLOPs: 795.3682
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #258: GFLOPs: 790.4368. Time: 292.7643 us. Best GFLOPs: 795.3682
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #259: GFLOPs: 725.4215. Time: 319.0031 us. Best GFLOPs: 795.3682
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #260: GFLOPs: 769.7247. Time: 300.6422 us. Best GFLOPs: 795.3682
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #261: GFLOPs: 767.6962. Time: 301.4366 us. Best GFLOPs: 795.3682
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #262: GFLOPs: 800.1552. Time: 289.2085 us. Best GFLOPs: 800.1552
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #263: GFLOPs: 802.2716. Time: 288.4456 us. Best GFLOPs: 802.2716
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #264: GFLOPs: 800.4270. Time: 289.1103 us. Best GFLOPs: 802.2716
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #265: GFLOPs: 788.7006. Time: 293.4088 us. Best GFLOPs: 802.2716
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #266: GFLOPs: 786.9458. Time: 294.0631 us. Best GFLOPs: 802.2716
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #267: GFLOPs: 524.1474. Time: 441.5012 us. Best GFLOPs: 802.2716
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #268: GFLOPs: 648.0275. Time: 357.1017 us. Best GFLOPs: 802.2716
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #269: GFLOPs: 684.3674. Time: 338.1396 us. Best GFLOPs: 802.2716
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #270: GFLOPs: 899.6547. Time: 257.2228 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #271: GFLOPs: 684.9605. Time: 337.8468 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #272: GFLOPs: 712.2066. Time: 324.9222 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #273: GFLOPs: 733.6472. Time: 315.4264 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #274: GFLOPs: 685.1743. Time: 337.7414 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #275: GFLOPs: 877.2059. Time: 263.8055 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #276: GFLOPs: 662.9395. Time: 349.0691 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #277: GFLOPs: 735.9623. Time: 314.4342 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #278: GFLOPs: 701.5740. Time: 329.8465 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #279: GFLOPs: 650.5491. Time: 355.7175 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #280: GFLOPs: 680.6309. Time: 339.9959 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #281: GFLOPs: 681.0164. Time: 339.8034 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #282: GFLOPs: 668.3303. Time: 346.2535 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #283: GFLOPs: 693.1591. Time: 333.8508 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #284: GFLOPs: 736.0185. Time: 314.4102 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #285: GFLOPs: 708.0280. Time: 326.8398 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #286: GFLOPs: 739.2197. Time: 313.0486 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #287: GFLOPs: 681.0034. Time: 339.8099 us. Best GFLOPs: 899.6547
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #288: GFLOPs: 913.1587. Time: 253.4189 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #289: GFLOPs: 684.1741. Time: 338.2351 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #290: GFLOPs: 665.5386. Time: 347.7059 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #291: GFLOPs: 624.6640. Time: 370.4579 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #292: GFLOPs: 744.1950. Time: 310.9558 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #293: GFLOPs: 708.6549. Time: 326.5506 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #294: GFLOPs: 677.4623. Time: 341.5861 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #295: GFLOPs: 687.7232. Time: 336.4896 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #296: GFLOPs: 809.4894. Time: 285.8737 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #297: GFLOPs: 679.1200. Time: 340.7523 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #298: GFLOPs: 629.2625. Time: 367.7507 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #299: GFLOPs: 626.9703. Time: 369.0952 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #300: GFLOPs: 514.3973. Time: 449.8696 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #301: GFLOPs: 680.2510. Time: 340.1858 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #302: GFLOPs: 637.1365. Time: 363.2059 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #303: GFLOPs: 620.9860. Time: 372.6520 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #304: GFLOPs: 710.3530. Time: 325.7700 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #305: GFLOPs: 616.1651. Time: 375.5677 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #306: GFLOPs: 617.9609. Time: 374.4763 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #307: GFLOPs: 399.9635. Time: 578.5821 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #308: GFLOPs: 689.8697. Time: 335.4426 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #309: GFLOPs: 561.4652. Time: 412.1568 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #310: GFLOPs: 493.9308. Time: 468.5104 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #311: GFLOPs: 533.5686. Time: 433.7056 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #312: GFLOPs: 619.9469. Time: 373.2767 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #313: GFLOPs: 625.4661. Time: 369.9828 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #314: GFLOPs: 570.8859. Time: 405.3554 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #315: GFLOPs: 621.8304. Time: 372.1460 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #316: GFLOPs: 572.6862. Time: 404.0812 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #317: GFLOPs: 617.1858. Time: 374.9466 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #318: GFLOPs: 43.4747. Time: 5322.9051 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #319: GFLOPs: 58.1708. Time: 3978.1452 us. Best GFLOPs: 913.1587
2024-04-29 05:41:19 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #320: GFLOPs: 33.8858. Time: 6829.1592 us. Best GFLOPs: 913.1587
2024-04-29 06:20:37 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:20:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:20:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:20:42 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:20:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:21:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:21:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:21:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:21:38 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9690  0.9574  0.9488  0.9223  0.9197  0.9146  0.9081  0.8774  0.8654  0.8654  0.8644  0.8641  0.8588  0.8586  0.8575  0.8565
[17 : 32]:	0.8461  0.8437  0.8380  0.8309  0.8309  0.8304  0.8203  0.8201  0.8193  0.8193  0.8175  0.8171  0.8137  0.8131  0.8131  0.8131
[33 : 48]:	0.8106  0.8064  0.8046  0.8011  0.7945  0.7940  0.7936  0.7876  0.7872  0.7844  0.7835  0.7826  0.7798  0.7764  0.7756  0.7754
[49 : 64]:	0.7714  0.7713  0.7712  0.7688  0.7675  0.7657  0.7636  0.7578  0.7577  0.7577  0.7577  0.7572  0.7527  0.7496  0.7475  0.7464
2024-04-29 06:21:38 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:21:39 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #321: GFLOPs: 878.6318. Time: 263.3774 us. Best GFLOPs: 913.1587
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #322: GFLOPs: 933.4624. Time: 247.9068 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #323: GFLOPs: 915.2111. Time: 252.8506 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #324: GFLOPs: 883.8810. Time: 261.8132 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #325: GFLOPs: 879.2683. Time: 263.1867 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #326: GFLOPs: 817.8588. Time: 282.9482 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #327: GFLOPs: 830.5989. Time: 278.6083 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #328: GFLOPs: 820.1392. Time: 282.1615 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #329: GFLOPs: 727.6608. Time: 318.0214 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #330: GFLOPs: 729.1908. Time: 317.3541 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #331: GFLOPs: 897.4117. Time: 257.8657 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #332: GFLOPs: 395.6640. Time: 584.8692 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #333: GFLOPs: 789.2932. Time: 293.1885 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #334: GFLOPs: 677.4203. Time: 341.6073 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #335: GFLOPs: 881.1063. Time: 262.6377 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #336: GFLOPs: 814.6054. Time: 284.0783 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #337: GFLOPs: 780.7750. Time: 296.3872 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #338: GFLOPs: 791.2548. Time: 292.4617 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #339: GFLOPs: 504.3311. Time: 458.8488 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #340: GFLOPs: 224.2984. Time: 1031.7138 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #341: GFLOPs: 464.0630. Time: 498.6644 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #342: GFLOPs: 810.6518. Time: 285.4637 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #343: GFLOPs: 778.8090. Time: 297.1354 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #344: GFLOPs: 798.3149. Time: 289.8752 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #345: GFLOPs: 464.0309. Time: 498.6989 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #346: GFLOPs: 471.8758. Time: 490.4081 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #347: GFLOPs: 787.5896. Time: 293.8227 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #348: GFLOPs: 769.7817. Time: 300.6199 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #349: GFLOPs: 798.3011. Time: 289.8802 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #350: GFLOPs: 590.3193. Time: 392.0111 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #351: GFLOPs: 711.2308. Time: 325.3679 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #352: GFLOPs: 735.5799. Time: 314.5977 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #353: GFLOPs: 723.0653. Time: 320.0426 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #354: GFLOPs: 509.5468. Time: 454.1521 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #355: GFLOPs: 898.4020. Time: 257.5815 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #356: GFLOPs: 758.3326. Time: 305.1586 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #357: GFLOPs: 742.1210. Time: 311.8248 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #358: GFLOPs: 763.3000. Time: 303.1727 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #359: GFLOPs: 787.9563. Time: 293.6860 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #360: GFLOPs: 741.6897. Time: 312.0061 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #361: GFLOPs: 781.0603. Time: 296.2789 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #362: GFLOPs: 170.2265. Time: 1359.4341 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #363: GFLOPs: 785.6376. Time: 294.5528 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #364: GFLOPs: 778.3048. Time: 297.3279 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #365: GFLOPs: 582.4646. Time: 397.2974 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #366: GFLOPs: 483.2479. Time: 478.8674 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #367: GFLOPs: 718.7258. Time: 321.9750 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #368: GFLOPs: 260.4448. Time: 888.5248 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #369: GFLOPs: 722.8123. Time: 320.1546 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #370: GFLOPs: 171.9163. Time: 1346.0718 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #371: GFLOPs: 789.1280. Time: 293.2499 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #372: GFLOPs: 466.6897. Time: 495.8577 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #373: GFLOPs: 733.6317. Time: 315.4331 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #374: GFLOPs: 701.8720. Time: 329.7064 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #375: GFLOPs: 294.8040. Time: 784.9679 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #376: GFLOPs: 702.4631. Time: 329.4290 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #377: GFLOPs: 687.8296. Time: 336.4376 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #378: GFLOPs: 658.9117. Time: 351.2029 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #379: GFLOPs: 648.1410. Time: 357.0392 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #380: GFLOPs: 648.9181. Time: 356.6116 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #381: GFLOPs: 605.9164. Time: 381.9202 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #382: GFLOPs: 54.9167. Time: 4213.8682 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #383: GFLOPs: 6.6859. Time: 34611.8843 us. Best GFLOPs: 933.4624
2024-04-29 06:22:46 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #384: GFLOPs: 3.5493. Time: 65200.0617 us. Best GFLOPs: 933.4624
2024-04-29 06:46:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:46:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:46:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:46:42 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:46:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:47:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:47:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:47:32 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 06:47:39 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9298  0.9238  0.9164  0.9077  0.9045  0.8998  0.8488  0.8371  0.8327  0.8309  0.8283  0.8238  0.8220  0.8206  0.8162  0.8149
[17 : 32]:	0.8137  0.8123  0.8123  0.8117  0.8054  0.8047  0.8039  0.8022  0.7960  0.7922  0.7921  0.7898  0.7890  0.7867  0.7850  0.7850
[33 : 48]:	0.7836  0.7804  0.7769  0.7767  0.7748  0.7700  0.7700  0.7673  0.7633  0.7610  0.7594  0.7514  0.7459  0.7435  0.7430  0.7429
[49 : 64]:	0.7424  0.7424  0.7424  0.7409  0.7403  0.7402  0.7384  0.7383  0.7383  0.7373  0.7361  0.7340  0.7332  0.7321  0.7295  0.7287
2024-04-29 06:47:39 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:47:39 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #385: GFLOPs: 806.8201. Time: 286.8195 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #386: GFLOPs: 885.9966. Time: 261.1881 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #387: GFLOPs: 651.7629. Time: 355.0550 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #388: GFLOPs: 866.3278. Time: 267.1180 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #389: GFLOPs: 845.2548. Time: 273.7775 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #390: GFLOPs: 894.4177. Time: 258.7289 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #391: GFLOPs: 812.0632. Time: 284.9676 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #392: GFLOPs: 769.7047. Time: 300.6500 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #393: GFLOPs: 809.6110. Time: 285.8307 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #394: GFLOPs: 900.2660. Time: 257.0482 us. Best GFLOPs: 933.4624
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #395: GFLOPs: 942.1297. Time: 245.6262 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #396: GFLOPs: 803.6163. Time: 287.9629 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #397: GFLOPs: 737.9042. Time: 313.6067 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #398: GFLOPs: 797.7696. Time: 290.0734 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #399: GFLOPs: 799.7649. Time: 289.3497 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #400: GFLOPs: 807.1581. Time: 286.6994 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #401: GFLOPs: 800.4084. Time: 289.1170 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #402: GFLOPs: 772.2953. Time: 299.6415 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #403: GFLOPs: 777.5702. Time: 297.6088 us. Best GFLOPs: 942.1297
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #404: GFLOPs: 952.4070. Time: 242.9757 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #405: GFLOPs: 684.6882. Time: 337.9812 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #406: GFLOPs: 746.7580. Time: 309.8885 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #407: GFLOPs: 757.8336. Time: 305.3595 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #408: GFLOPs: 779.3245. Time: 296.9388 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #409: GFLOPs: 776.1185. Time: 298.1654 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #410: GFLOPs: 571.4572. Time: 404.9502 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #411: GFLOPs: 731.9480. Time: 316.1587 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #412: GFLOPs: 759.1275. Time: 304.8390 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #413: GFLOPs: 729.7508. Time: 317.1106 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #414: GFLOPs: 660.9288. Time: 350.1311 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #415: GFLOPs: 756.0534. Time: 306.0785 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #416: GFLOPs: 717.2878. Time: 322.6205 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #417: GFLOPs: 351.2058. Time: 658.9063 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #418: GFLOPs: 507.9321. Time: 455.5958 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #419: GFLOPs: 513.6420. Time: 450.5311 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #420: GFLOPs: 731.7270. Time: 316.2541 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #421: GFLOPs: 803.0576. Time: 288.1633 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #422: GFLOPs: 689.1776. Time: 335.7795 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #423: GFLOPs: 659.3069. Time: 350.9924 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #424: GFLOPs: 760.7845. Time: 304.1751 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #425: GFLOPs: 741.7230. Time: 311.9921 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #426: GFLOPs: 654.4916. Time: 353.5748 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #427: GFLOPs: 647.2565. Time: 357.5270 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #428: GFLOPs: 643.7286. Time: 359.4865 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #429: GFLOPs: 747.0214. Time: 309.7792 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #430: GFLOPs: 685.3951. Time: 337.6326 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #431: GFLOPs: 878.6005. Time: 263.3867 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #432: GFLOPs: 638.7446. Time: 362.2915 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #433: GFLOPs: 684.2713. Time: 338.1871 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #434: GFLOPs: 690.4356. Time: 335.1677 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #435: GFLOPs: 672.0425. Time: 344.3409 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #436: GFLOPs: 645.6336. Time: 358.4258 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #437: GFLOPs: 677.7896. Time: 341.4212 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #438: GFLOPs: 799.4835. Time: 289.4515 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #439: GFLOPs: 687.8858. Time: 336.4101 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #440: GFLOPs: 689.1141. Time: 335.8104 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #441: GFLOPs: 686.5273. Time: 337.0758 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #442: GFLOPs: 685.0150. Time: 337.8199 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #443: GFLOPs: 119.6941. Time: 1933.3598 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #444: GFLOPs: 499.0396. Time: 463.7142 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #445: GFLOPs: 673.2909. Time: 343.7024 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #446: GFLOPs: 2.7117. Time: 85337.0733 us. Best GFLOPs: 952.4070
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #447: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(16), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                    v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_fused_fused * T.int64(14) + ax3)
                    v_i4 = T.axis.spatial(T.int64(128), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_0 in range(T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(32)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(28) + oh_2_init * T.int64(2) + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_fused_fused * T.int64(14) + ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(32) + oc_block_2_init * T.int64(32) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(14)):
                        for oc_block_3_fused in T.vectorized(T.int64(32)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(28) + oh_2 * T.int64(2) + oh_3)
                                v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_fused_fused * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(32) + oc_block_2 * T.int64(32) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(4) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(28), T.int64(14)):
                    for ax4_fused in T.vectorized(T.int64(32)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                            v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_fused_fused * T.int64(14) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 14, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 1, 32])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b68)
l80 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l81, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b70)
l113 = sch.fuse(l112, preserve_unit_iters=True)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b114)
b138 = sch.decompose_reduction(block=b114, loop=l122)
2024-04-29 06:49:18 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #448: GFLOPs: 96.6265. Time: 2394.9100 us. Best GFLOPs: 952.4070
2024-04-29 07:12:37 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:12:39 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:12:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:12:43 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:12:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:13:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:13:21 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:13:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:13:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9521  0.9471  0.9349  0.9317  0.9218  0.9218  0.9212  0.9109  0.9109  0.9109  0.9105  0.9104  0.9069  0.8986  0.8893  0.8768
[17 : 32]:	0.8754  0.8728  0.8669  0.8539  0.8491  0.8482  0.8473  0.8430  0.8332  0.8324  0.8301  0.8258  0.8249  0.8233  0.8201  0.8196
[33 : 48]:	0.8151  0.8151  0.8136  0.8126  0.8126  0.8115  0.8114  0.8082  0.8082  0.8029  0.8029  0.7994  0.7987  0.7980  0.7978  0.7857
[49 : 64]:	0.7829  0.7828  0.7790  0.7773  0.7756  0.7731  0.7730  0.7729  0.7711  0.7688  0.7579  0.7564  0.7495  0.7482  0.7482  0.7460
2024-04-29 07:13:41 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:13:41 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #449: GFLOPs: 855.8898. Time: 270.3756 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #450: GFLOPs: 466.5596. Time: 495.9960 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #451: GFLOPs: 886.3836. Time: 261.0740 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #452: GFLOPs: 885.0050. Time: 261.4807 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #453: GFLOPs: 907.2358. Time: 255.0734 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #454: GFLOPs: 936.1070. Time: 247.2065 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #455: GFLOPs: 904.6200. Time: 255.8110 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #456: GFLOPs: 355.3516. Time: 651.2191 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #457: GFLOPs: 894.7055. Time: 258.6457 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #458: GFLOPs: 947.9953. Time: 244.1064 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #459: GFLOPs: 949.3646. Time: 243.7543 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #460: GFLOPs: 654.3475. Time: 353.6526 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #461: GFLOPs: 880.5122. Time: 262.8149 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #462: GFLOPs: 904.2967. Time: 255.9024 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #463: GFLOPs: 847.9420. Time: 272.9098 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #464: GFLOPs: 644.6577. Time: 358.9683 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #465: GFLOPs: 637.4083. Time: 363.0510 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #466: GFLOPs: 869.0807. Time: 266.2718 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #467: GFLOPs: 894.9451. Time: 258.5764 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #468: GFLOPs: 851.7949. Time: 271.6754 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #469: GFLOPs: 688.4068. Time: 336.1555 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #470: GFLOPs: 689.6691. Time: 335.5402 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #471: GFLOPs: 622.1320. Time: 371.9656 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #472: GFLOPs: 690.2629. Time: 335.2515 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #473: GFLOPs: 139.5133. Time: 1658.7069 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #474: GFLOPs: 803.9204. Time: 287.8540 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #475: GFLOPs: 758.0581. Time: 305.2691 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #476: GFLOPs: 793.1996. Time: 291.7446 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #477: GFLOPs: 791.8386. Time: 292.2461 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #478: GFLOPs: 801.6573. Time: 288.6666 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #479: GFLOPs: 773.2992. Time: 299.2525 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #480: GFLOPs: 720.8198. Time: 321.0396 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #481: GFLOPs: 797.6429. Time: 290.1194 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #482: GFLOPs: 795.6013. Time: 290.8639 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #483: GFLOPs: 786.4599. Time: 294.2448 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #484: GFLOPs: 799.5619. Time: 289.4231 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #485: GFLOPs: 797.7981. Time: 290.0630 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #486: GFLOPs: 716.7720. Time: 322.8526 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #487: GFLOPs: 767.0638. Time: 301.6851 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #488: GFLOPs: 710.9301. Time: 325.5056 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #489: GFLOPs: 799.2649. Time: 289.5307 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #490: GFLOPs: 773.1264. Time: 299.3194 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #491: GFLOPs: 769.5601. Time: 300.7065 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #492: GFLOPs: 777.0717. Time: 297.7997 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #493: GFLOPs: 796.1111. Time: 290.6777 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #494: GFLOPs: 139.2075. Time: 1662.3509 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #495: GFLOPs: 776.8743. Time: 297.8754 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #496: GFLOPs: 752.2393. Time: 307.6304 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #497: GFLOPs: 772.4205. Time: 299.5929 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #498: GFLOPs: 129.4283. Time: 1787.9524 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #499: GFLOPs: 754.1447. Time: 306.8532 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #500: GFLOPs: 682.7436. Time: 338.9438 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #501: GFLOPs: 796.6316. Time: 290.4877 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #502: GFLOPs: 689.3361. Time: 335.7023 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #503: GFLOPs: 764.4815. Time: 302.7041 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #504: GFLOPs: 696.5251. Time: 332.2374 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #505: GFLOPs: 678.3582. Time: 341.1350 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #506: GFLOPs: 713.7632. Time: 324.2136 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #507: GFLOPs: 728.8856. Time: 317.4870 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #508: GFLOPs: 603.3105. Time: 383.5698 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #509: GFLOPs: 716.9243. Time: 322.7840 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #510: GFLOPs: 202.8414. Time: 1140.8503 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #511: GFLOPs: 49.8331. Time: 4643.7376 us. Best GFLOPs: 952.4070
2024-04-29 07:14:58 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #512: GFLOPs: 1.7893. Time: 129332.1623 us. Best GFLOPs: 952.4070
2024-04-29 07:52:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:52:30 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:52:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:52:35 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:52:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:53:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:53:13 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:53:26 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 07:53:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9397  0.9278  0.9253  0.9134  0.9107  0.9100  0.9040  0.8972  0.8304  0.8287  0.8213  0.8213  0.8171  0.8150  0.8130  0.8126
[17 : 32]:	0.8125  0.8099  0.8062  0.8045  0.8045  0.8045  0.8006  0.7988  0.7987  0.7975  0.7975  0.7946  0.7912  0.7895  0.7892  0.7865
[33 : 48]:	0.7853  0.7841  0.7808  0.7797  0.7797  0.7788  0.7771  0.7771  0.7764  0.7650  0.7590  0.7559  0.7517  0.7488  0.7485  0.7476
[49 : 64]:	0.7460  0.7436  0.7357  0.7357  0.7322  0.7296  0.7260  0.7252  0.7243  0.7227  0.7209  0.7197  0.7193  0.7190  0.7189  0.7188
2024-04-29 07:53:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:53:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #513: GFLOPs: 896.8379. Time: 258.0307 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #514: GFLOPs: 887.0330. Time: 260.8829 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #515: GFLOPs: 868.7553. Time: 266.3716 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #516: GFLOPs: 850.4377. Time: 272.1089 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #517: GFLOPs: 852.4297. Time: 271.4731 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #518: GFLOPs: 893.3943. Time: 259.0253 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #519: GFLOPs: 850.7177. Time: 272.0194 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #520: GFLOPs: 467.7548. Time: 494.7287 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #521: GFLOPs: 753.6090. Time: 307.0713 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #522: GFLOPs: 792.1949. Time: 292.1146 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #523: GFLOPs: 765.9615. Time: 302.1193 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #524: GFLOPs: 737.1837. Time: 313.9132 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #525: GFLOPs: 746.3766. Time: 310.0469 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #526: GFLOPs: 561.3425. Time: 412.2469 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #527: GFLOPs: 764.7365. Time: 302.6032 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #528: GFLOPs: 756.3655. Time: 305.9522 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #529: GFLOPs: 766.5967. Time: 301.8689 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #530: GFLOPs: 755.1237. Time: 306.4554 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #531: GFLOPs: 748.2667. Time: 309.2637 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #532: GFLOPs: 738.1943. Time: 313.4835 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #533: GFLOPs: 729.7272. Time: 317.1209 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #534: GFLOPs: 746.4407. Time: 310.0202 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #535: GFLOPs: 748.2769. Time: 309.2595 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #536: GFLOPs: 677.4588. Time: 341.5879 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #537: GFLOPs: 688.2018. Time: 336.2556 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #538: GFLOPs: 775.9183. Time: 298.2424 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #539: GFLOPs: 745.5003. Time: 310.4113 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #540: GFLOPs: 758.0834. Time: 305.2589 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #541: GFLOPs: 606.3963. Time: 381.6180 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #542: GFLOPs: 638.9765. Time: 362.1600 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #543: GFLOPs: 732.5268. Time: 315.9089 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #544: GFLOPs: 741.9387. Time: 311.9014 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #545: GFLOPs: 865.1766. Time: 267.4734 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #546: GFLOPs: 637.7111. Time: 362.8786 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #547: GFLOPs: 734.1260. Time: 315.2207 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #548: GFLOPs: 730.1392. Time: 316.9419 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #549: GFLOPs: 747.6158. Time: 309.5329 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #550: GFLOPs: 729.5281. Time: 317.2074 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #551: GFLOPs: 122.4502. Time: 1889.8438 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #552: GFLOPs: 122.1527. Time: 1894.4455 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #553: GFLOPs: 719.4972. Time: 321.6298 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #554: GFLOPs: 122.6435. Time: 1886.8648 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #555: GFLOPs: 553.8372. Time: 417.8335 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #556: GFLOPs: 767.1078. Time: 301.6678 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #557: GFLOPs: 689.9699. Time: 335.3939 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #558: GFLOPs: 485.9035. Time: 476.2503 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #559: GFLOPs: 582.4611. Time: 397.2999 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #560: GFLOPs: 677.8839. Time: 341.3737 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #561: GFLOPs: 475.8518. Time: 486.3105 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #562: GFLOPs: 431.8162. Time: 535.9033 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #563: GFLOPs: 711.9975. Time: 325.0176 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #564: GFLOPs: 679.7310. Time: 340.4460 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #565: GFLOPs: 711.4769. Time: 325.2554 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #566: GFLOPs: 838.9582. Time: 275.8322 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #567: GFLOPs: 678.9479. Time: 340.8387 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #568: GFLOPs: 687.8955. Time: 336.4053 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #569: GFLOPs: 31.7644. Time: 7285.2501 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #570: GFLOPs: 631.1193. Time: 366.6687 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #571: GFLOPs: 436.0783. Time: 530.6655 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #572: GFLOPs: 646.5961. Time: 357.8922 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #573: GFLOPs: 751.9502. Time: 307.7487 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #574: GFLOPs: 34.2732. Time: 6751.9653 us. Best GFLOPs: 952.4070
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #575: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for i0_i1_i2_i3_fused in T.parallel(T.int64(900)):
            for i4 in range(T.int64(128)):
                with T.block("data_pad"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i2 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused // T.int64(30))
                    v_i3 = T.axis.spatial(T.int64(30), i0_i1_i2_i3_fused % T.int64(30))
                    v_i4 = T.axis.spatial(T.int64(128), i4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(392), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(14) * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_2_init * T.int64(16) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(14) * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_2 * T.int64(16) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(25088))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(25088) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[14, 1, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 2, 16])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74 = sch.get_loops(block=b67)
l75 = sch.fuse(l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l75)
l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b68)
l102 = sch.fuse(l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, preserve_unit_iters=True)
sch.parallel(loop=l102)
l103 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l103)
sch.annotate(block_or_loop=l102, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l102, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l104, l105, l106, l107, l108, preserve_unit_iters=True)
l110, l111 = sch.split(loop=l109, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l110)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b112)
b130 = sch.decompose_reduction(block=b112, loop=l114)
2024-04-29 07:55:15 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #576: GFLOPs: 30.8409. Time: 7503.4147 us. Best GFLOPs: 952.4070
2024-04-29 08:15:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:15:10 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 08:15:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:15:14 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 08:15:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:15:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:15:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:16:04 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:16:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9258  0.9249  0.9171  0.9143  0.9143  0.9143  0.9117  0.9107  0.9105  0.9105  0.9031  0.9023  0.9018  0.8778  0.8768  0.8767
[17 : 32]:	0.8327  0.8158  0.8151  0.8096  0.8087  0.8083  0.8083  0.8073  0.8041  0.8013  0.8013  0.8005  0.7999  0.7989  0.7905  0.7902
[33 : 48]:	0.7792  0.7710  0.7688  0.7676  0.7674  0.7609  0.7498  0.7425  0.7418  0.7413  0.7393  0.7351  0.7351  0.7337  0.7330  0.7330
[49 : 64]:	0.7322  0.7319  0.7316  0.7299  0.7241  0.7238  0.7232  0.7214  0.7206  0.7205  0.7193  0.7186  0.7176  0.7144  0.7141  0.7125
2024-04-29 08:16:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:16:12 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #577: GFLOPs: 882.7859. Time: 262.1380 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #578: GFLOPs: 854.8471. Time: 270.7054 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #579: GFLOPs: 860.9910. Time: 268.7737 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #580: GFLOPs: 939.0198. Time: 246.4396 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #581: GFLOPs: 944.7207. Time: 244.9525 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #582: GFLOPs: 857.5713. Time: 269.8455 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #583: GFLOPs: 881.1427. Time: 262.6268 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #584: GFLOPs: 889.2201. Time: 260.2412 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #585: GFLOPs: 901.1714. Time: 256.7899 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #586: GFLOPs: 902.7649. Time: 256.3366 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #587: GFLOPs: 889.8631. Time: 260.0532 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #588: GFLOPs: 835.8949. Time: 276.8431 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #589: GFLOPs: 887.2447. Time: 260.8206 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #590: GFLOPs: 926.7679. Time: 249.6976 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #591: GFLOPs: 909.7322. Time: 254.3734 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #592: GFLOPs: 922.8006. Time: 250.7711 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #593: GFLOPs: 818.5557. Time: 282.7073 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #594: GFLOPs: 799.6301. Time: 289.3984 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #595: GFLOPs: 945.4238. Time: 244.7704 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #596: GFLOPs: 807.5717. Time: 286.5525 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #597: GFLOPs: 786.5864. Time: 294.1975 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #598: GFLOPs: 764.3333. Time: 302.7628 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #599: GFLOPs: 769.9332. Time: 300.5608 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #600: GFLOPs: 800.5019. Time: 289.0833 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #601: GFLOPs: 796.9037. Time: 290.3886 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #602: GFLOPs: 838.8377. Time: 275.8718 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #603: GFLOPs: 896.2714. Time: 258.1938 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #604: GFLOPs: 805.8534. Time: 287.1636 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #605: GFLOPs: 609.0022. Time: 379.9850 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #606: GFLOPs: 803.2826. Time: 288.0826 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #607: GFLOPs: 680.2627. Time: 340.1799 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #608: GFLOPs: 572.3001. Time: 404.3538 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #609: GFLOPs: 557.5276. Time: 415.0677 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #610: GFLOPs: 778.7324. Time: 297.1646 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #611: GFLOPs: 772.7114. Time: 299.4801 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #612: GFLOPs: 741.4305. Time: 312.1152 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #613: GFLOPs: 946.7586. Time: 244.4253 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #614: GFLOPs: 647.6412. Time: 357.3147 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #615: GFLOPs: 706.6713. Time: 327.4672 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #616: GFLOPs: 676.6408. Time: 342.0008 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #617: GFLOPs: 786.6892. Time: 294.1590 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #618: GFLOPs: 759.9645. Time: 304.5033 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #619: GFLOPs: 888.4986. Time: 260.4525 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #620: GFLOPs: 650.5895. Time: 355.6954 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #621: GFLOPs: 817.6535. Time: 283.0193 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #622: GFLOPs: 541.7148. Time: 427.1837 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #623: GFLOPs: 598.6332. Time: 386.5668 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #624: GFLOPs: 771.4638. Time: 299.9644 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #625: GFLOPs: 756.5395. Time: 305.8819 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #626: GFLOPs: 670.8819. Time: 344.9366 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #627: GFLOPs: 718.8283. Time: 321.9291 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #628: GFLOPs: 705.3686. Time: 328.0720 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #629: GFLOPs: 754.6716. Time: 306.6390 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #630: GFLOPs: 675.6070. Time: 342.5242 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #631: GFLOPs: 723.6501. Time: 319.7840 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #632: GFLOPs: 682.3410. Time: 339.1438 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #633: GFLOPs: 488.8422. Time: 473.3874 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #634: GFLOPs: 593.9657. Time: 389.6045 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #635: GFLOPs: 700.6032. Time: 330.3035 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #636: GFLOPs: 751.6191. Time: 307.8843 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #637: GFLOPs: 639.7545. Time: 361.7196 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #638: GFLOPs: 99.3820. Time: 2328.5083 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #639: GFLOPs: 9.8128. Time: 23582.7250 us. Best GFLOPs: 952.4070
2024-04-29 08:17:21 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #640: GFLOPs: 6.2531. Time: 37007.4117 us. Best GFLOPs: 952.4070
2024-04-29 08:41:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:41:47 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 08:41:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:41:52 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 08:42:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:42:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:42:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:42:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 08:42:50 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9474  0.9404  0.9299  0.9222  0.9222  0.9222  0.9222  0.9209  0.9091  0.9089  0.8933  0.8881  0.8837  0.8422  0.8422  0.8414
[17 : 32]:	0.8373  0.8281  0.8218  0.8205  0.8176  0.8157  0.8125  0.8090  0.8043  0.8043  0.8031  0.8020  0.8020  0.7973  0.7872  0.7858
[33 : 48]:	0.7836  0.7825  0.7825  0.7804  0.7792  0.7776  0.7767  0.7763  0.7753  0.7750  0.7740  0.7661  0.7661  0.7652  0.7614  0.7614
[49 : 64]:	0.7613  0.7611  0.7604  0.7600  0.7567  0.7567  0.7547  0.7496  0.7496  0.7478  0.7478  0.7468  0.7453  0.7437  0.7419  0.7385
2024-04-29 08:42:51 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:42:51 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #641: GFLOPs: 903.4990. Time: 256.1284 us. Best GFLOPs: 952.4070
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #642: GFLOPs: 921.8075. Time: 251.0412 us. Best GFLOPs: 952.4070
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #643: GFLOPs: 952.0432. Time: 243.0685 us. Best GFLOPs: 952.4070
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #644: GFLOPs: 942.9102. Time: 245.4229 us. Best GFLOPs: 952.4070
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #645: GFLOPs: 867.0950. Time: 266.8816 us. Best GFLOPs: 952.4070
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #646: GFLOPs: 881.8290. Time: 262.4224 us. Best GFLOPs: 952.4070
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #647: GFLOPs: 863.0361. Time: 268.1368 us. Best GFLOPs: 952.4070
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #648: GFLOPs: 971.7594. Time: 238.1368 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #649: GFLOPs: 901.7154. Time: 256.6350 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #650: GFLOPs: 903.3326. Time: 256.1755 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #651: GFLOPs: 891.1753. Time: 259.6703 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #652: GFLOPs: 893.1589. Time: 259.0936 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #653: GFLOPs: 468.7811. Time: 493.6456 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #654: GFLOPs: 668.7347. Time: 346.0441 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #655: GFLOPs: 911.2556. Time: 253.9482 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #656: GFLOPs: 629.5144. Time: 367.6036 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #657: GFLOPs: 828.8343. Time: 279.2014 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #658: GFLOPs: 818.5018. Time: 282.7260 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #659: GFLOPs: 804.0708. Time: 287.8002 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #660: GFLOPs: 804.9507. Time: 287.4856 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #661: GFLOPs: 811.8397. Time: 285.0461 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #662: GFLOPs: 810.0851. Time: 285.6635 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #663: GFLOPs: 779.5414. Time: 296.8562 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #664: GFLOPs: 782.0252. Time: 295.9134 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #665: GFLOPs: 675.2909. Time: 342.6845 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #666: GFLOPs: 677.1071. Time: 341.7653 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #667: GFLOPs: 612.0982. Time: 378.0631 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #668: GFLOPs: 835.7102. Time: 276.9043 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #669: GFLOPs: 606.8546. Time: 381.3298 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #670: GFLOPs: 668.0435. Time: 346.4022 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #671: GFLOPs: 752.7882. Time: 307.4061 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #672: GFLOPs: 776.4917. Time: 298.0221 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #673: GFLOPs: 759.5682. Time: 304.6622 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #674: GFLOPs: 655.8644. Time: 352.8347 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #675: GFLOPs: 652.3943. Time: 354.7114 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #676: GFLOPs: 737.9752. Time: 313.5766 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #677: GFLOPs: 702.2137. Time: 329.5460 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #678: GFLOPs: 759.3176. Time: 304.7627 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #679: GFLOPs: 684.5658. Time: 338.0416 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #680: GFLOPs: 709.8831. Time: 325.9856 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #681: GFLOPs: 776.8000. Time: 297.9039 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #682: GFLOPs: 713.7045. Time: 324.2402 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #683: GFLOPs: 675.9172. Time: 342.3669 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #684: GFLOPs: 766.4889. Time: 301.9114 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #685: GFLOPs: 799.5713. Time: 289.4197 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #686: GFLOPs: 760.9557. Time: 304.1067 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #687: GFLOPs: 712.4678. Time: 324.8030 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #688: GFLOPs: 529.8571. Time: 436.7436 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #689: GFLOPs: 675.8454. Time: 342.4033 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #690: GFLOPs: 875.1416. Time: 264.4277 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #691: GFLOPs: 735.7759. Time: 314.5138 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #692: GFLOPs: 717.4305. Time: 322.5563 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #693: GFLOPs: 635.1622. Time: 364.3348 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #694: GFLOPs: 625.7515. Time: 369.8141 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #695: GFLOPs: 715.6796. Time: 323.3454 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #696: GFLOPs: 900.3738. Time: 257.0174 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #697: GFLOPs: 688.7740. Time: 335.9763 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #698: GFLOPs: 728.0010. Time: 317.8728 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #699: GFLOPs: 766.1033. Time: 302.0633 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #700: GFLOPs: 717.4241. Time: 322.5591 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #701: GFLOPs: 812.2125. Time: 284.9152 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #702: GFLOPs: 35.5935. Time: 6501.5183 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #703: GFLOPs: 3.3518. Time: 69040.7533 us. Best GFLOPs: 971.7594
2024-04-29 08:44:09 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #704: GFLOPs: 3.0040. Time: 77034.4787 us. Best GFLOPs: 971.7594
2024-04-29 09:13:10 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:13:11 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:13:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:13:16 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:13:28 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:13:41 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:13:54 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:14:07 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:14:15 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9311  0.9117  0.8977  0.8920  0.8797  0.8796  0.8472  0.8356  0.8305  0.8298  0.8157  0.8157  0.8140  0.7938  0.7938  0.7931
[17 : 32]:	0.7928  0.7887  0.7846  0.7843  0.7816  0.7801  0.7763  0.7752  0.7731  0.7685  0.7625  0.7625  0.7612  0.7603  0.7557  0.7537
[33 : 48]:	0.7523  0.7523  0.7523  0.7494  0.7491  0.7487  0.7483  0.7458  0.7433  0.7413  0.7395  0.7393  0.7379  0.7379  0.7339  0.7328
[49 : 64]:	0.7285  0.7285  0.7268  0.7231  0.7218  0.7142  0.7125  0.7094  0.7031  0.6978  0.6974  0.6974  0.6974  0.6945  0.6945  0.6944
2024-04-29 09:14:15 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:14:15 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #705: GFLOPs: 928.1926. Time: 249.3143 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #706: GFLOPs: 898.3082. Time: 257.6084 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #707: GFLOPs: 886.4696. Time: 261.0487 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #708: GFLOPs: 933.9979. Time: 247.7647 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #709: GFLOPs: 772.6109. Time: 299.5191 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #710: GFLOPs: 909.2566. Time: 254.5065 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #711: GFLOPs: 642.5816. Time: 360.1281 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #712: GFLOPs: 812.6927. Time: 284.7469 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #713: GFLOPs: 697.6756. Time: 331.6896 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #714: GFLOPs: 776.6404. Time: 297.9651 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #715: GFLOPs: 789.6828. Time: 293.0439 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #716: GFLOPs: 797.2021. Time: 290.2799 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #717: GFLOPs: 768.2836. Time: 301.2061 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #718: GFLOPs: 655.9646. Time: 352.7808 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #719: GFLOPs: 657.1248. Time: 352.1579 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #720: GFLOPs: 781.9050. Time: 295.9589 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #721: GFLOPs: 898.5647. Time: 257.5348 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #722: GFLOPs: 642.1809. Time: 360.3528 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #723: GFLOPs: 875.5898. Time: 264.2924 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #724: GFLOPs: 750.7312. Time: 308.2484 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #725: GFLOPs: 813.3088. Time: 284.5312 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #726: GFLOPs: 796.9726. Time: 290.3635 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #727: GFLOPs: 760.7350. Time: 304.1949 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #728: GFLOPs: 677.0035. Time: 341.8176 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #729: GFLOPs: 821.2650. Time: 281.7747 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #730: GFLOPs: 769.3005. Time: 300.8079 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #731: GFLOPs: 778.5220. Time: 297.2449 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #732: GFLOPs: 778.7446. Time: 297.1600 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #733: GFLOPs: 783.7454. Time: 295.2639 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #734: GFLOPs: 562.8932. Time: 411.1112 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #735: GFLOPs: 720.3664. Time: 321.2417 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #736: GFLOPs: 696.1492. Time: 332.4168 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #737: GFLOPs: 359.7279. Time: 643.2966 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #738: GFLOPs: 717.7379. Time: 322.4181 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #739: GFLOPs: 678.9657. Time: 340.8298 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #740: GFLOPs: 676.1976. Time: 342.2250 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #741: GFLOPs: 849.1662. Time: 272.5164 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #742: GFLOPs: 741.8883. Time: 311.9226 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #743: GFLOPs: 655.8127. Time: 352.8625 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #744: GFLOPs: 514.3675. Time: 449.8957 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #745: GFLOPs: 711.2865. Time: 325.3425 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #746: GFLOPs: 686.8543. Time: 336.9153 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #747: GFLOPs: 765.1465. Time: 302.4411 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #748: GFLOPs: 725.2947. Time: 319.0589 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #749: GFLOPs: 672.7137. Time: 343.9973 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #750: GFLOPs: 789.6434. Time: 293.0585 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #751: GFLOPs: 699.5936. Time: 330.7802 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #752: GFLOPs: 772.5111. Time: 299.5578 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #753: GFLOPs: 700.3518. Time: 330.4221 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #754: GFLOPs: 434.4377. Time: 532.6694 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #755: GFLOPs: 707.8729. Time: 326.9114 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #756: GFLOPs: 736.3056. Time: 314.2876 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #757: GFLOPs: 709.4591. Time: 326.1805 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #758: GFLOPs: 889.8731. Time: 260.0503 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #759: GFLOPs: 750.4678. Time: 308.3566 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #760: GFLOPs: 648.5897. Time: 356.7921 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #761: GFLOPs: 601.9702. Time: 384.4238 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #762: GFLOPs: 618.6559. Time: 374.0556 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #763: GFLOPs: 240.7272. Time: 961.3026 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #764: GFLOPs: 241.3497. Time: 958.8234 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #765: GFLOPs: 238.9080. Time: 968.6227 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #766: GFLOPs: 69.0172. Time: 3352.9585 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #767: GFLOPs: 33.2083. Time: 6968.4983 us. Best GFLOPs: 971.7594
2024-04-29 09:15:59 [INFO] [task_scheduler.cc:121] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #768: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(128)), "float32"), p1: T.Buffer((T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(128), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(128)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(30), T.int64(128)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(4) * T.int64(4) + ax2)
                    v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(28) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(4) // T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(4) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(2) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(28) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(28) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(4) // T.int64(2) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(4) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(2) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(28) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)], p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(128), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(128)] * p1[v_oc_chunk, v_ic // T.int64(128), v_kh, v_kw, v_ic % T.int64(128), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(25088))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(25088) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 14, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 8, 2, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b67)
l83 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l84, preserve_unit_iters=True)
sch.parallel(loop=l103)
l104 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l104)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109 = sch.get_loops(block=b69)
l110 = sch.fuse(l105, l106, l107, l108, l109, preserve_unit_iters=True)
l111, l112 = sch.split(loop=l110, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l111)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b113)
b133 = sch.decompose_reduction(block=b113, loop=l117)
2024-04-29 09:45:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:45:38 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:45:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:45:42 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:45:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:46:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:46:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:46:33 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6dfc388)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42da9b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3b8f9c8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3515a58)]: 0 failure(s)
2024-04-29 09:46:41 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9330  0.9155  0.9155  0.9103  0.9096  0.9096  0.9034  0.9025  0.8507  0.8499  0.8100  0.8100  0.8085  0.8072  0.8068  0.8012
[17 : 32]:	0.7956  0.7879  0.7845  0.7845  0.7845  0.7828  0.7821  0.7782  0.7782  0.7782  0.7761  0.7737  0.7737  0.7732  0.7676  0.7664
[33 : 48]:	0.7590  0.7586  0.7556  0.7463  0.7392  0.7383  0.7369  0.7366  0.7352  0.7336  0.7330  0.7297  0.7297  0.7287  0.7277  0.7215
[49 : 64]:	0.7201  0.7199  0.7182  0.7146  0.7138  0.7133  0.7099  0.7096  0.6984  0.6978  0.6971  0.6935  0.6883  0.6883  0.6878  0.6855
2024-04-29 09:46:41 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:46:41 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #769: GFLOPs: 471.8169. Time: 490.4693 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #770: GFLOPs: 478.3649. Time: 483.7556 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #771: GFLOPs: 476.6927. Time: 485.4526 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #772: GFLOPs: 923.1497. Time: 250.6763 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #773: GFLOPs: 896.2524. Time: 258.1993 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #774: GFLOPs: 894.9289. Time: 258.5811 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #775: GFLOPs: 924.8500. Time: 250.2154 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #776: GFLOPs: 915.0300. Time: 252.9007 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #777: GFLOPs: 936.3458. Time: 247.1434 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #778: GFLOPs: 649.0580. Time: 356.5347 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #779: GFLOPs: 806.1366. Time: 287.0626 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #780: GFLOPs: 803.7129. Time: 287.9283 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #781: GFLOPs: 803.8821. Time: 287.8677 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #782: GFLOPs: 796.5476. Time: 290.5184 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #783: GFLOPs: 807.8902. Time: 286.4396 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #784: GFLOPs: 804.7426. Time: 287.5599 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #785: GFLOPs: 779.1575. Time: 297.0025 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #786: GFLOPs: 773.4303. Time: 299.2018 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #787: GFLOPs: 663.1761. Time: 348.9446 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #788: GFLOPs: 674.3746. Time: 343.1501 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #789: GFLOPs: 774.7688. Time: 298.6849 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #790: GFLOPs: 791.9007. Time: 292.2232 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #791: GFLOPs: 862.0792. Time: 268.4344 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #792: GFLOPs: 936.3167. Time: 247.1511 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #793: GFLOPs: 906.4804. Time: 255.2860 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #794: GFLOPs: 326.1671. Time: 709.4882 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #795: GFLOPs: 507.9868. Time: 455.5467 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #796: GFLOPs: 668.6808. Time: 346.0720 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #797: GFLOPs: 909.3295. Time: 254.4861 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #798: GFLOPs: 781.3825. Time: 296.1568 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #799: GFLOPs: 781.8304. Time: 295.9871 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #800: GFLOPs: 797.0638. Time: 290.3302 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #801: GFLOPs: 751.4334. Time: 307.9604 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #802: GFLOPs: 558.6432. Time: 414.2389 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #803: GFLOPs: 780.4980. Time: 296.4924 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #804: GFLOPs: 733.3602. Time: 315.5499 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #805: GFLOPs: 714.7687. Time: 323.7575 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #806: GFLOPs: 707.9046. Time: 326.8967 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #807: GFLOPs: 743.9983. Time: 311.0380 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #808: GFLOPs: 711.3666. Time: 325.3058 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #809: GFLOPs: 752.2406. Time: 307.6299 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #810: GFLOPs: 735.9429. Time: 314.4425 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #811: GFLOPs: 711.1241. Time: 325.4168 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #812: GFLOPs: 745.9947. Time: 310.2056 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #813: GFLOPs: 755.1261. Time: 306.4544 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #814: GFLOPs: 614.0604. Time: 376.8549 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #815: GFLOPs: 720.6051. Time: 321.1353 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #816: GFLOPs: 756.2675. Time: 305.9919 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #817: GFLOPs: 719.7329. Time: 321.5244 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #818: GFLOPs: 566.4599. Time: 408.5226 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #819: GFLOPs: 775.5273. Time: 298.3927 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #820: GFLOPs: 717.2884. Time: 322.6202 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #821: GFLOPs: 686.3759. Time: 337.1501 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #822: GFLOPs: 792.5719. Time: 291.9757 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #823: GFLOPs: 716.6871. Time: 322.8908 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #824: GFLOPs: 697.1158. Time: 331.9559 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #825: GFLOPs: 670.8646. Time: 344.9455 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #826: GFLOPs: 613.2367. Time: 377.3612 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #827: GFLOPs: 733.7328. Time: 315.3896 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #828: GFLOPs: 549.5372. Time: 421.1029 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #829: GFLOPs: 527.2609. Time: 438.8941 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #830: GFLOPs: 33.0483. Time: 7002.2243 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #831: GFLOPs: 76.6683. Time: 3018.3513 us. Best GFLOPs: 971.7594
2024-04-29 09:48:11 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_3] Trial #832: GFLOPs: 9.6166. Time: 24063.8682 us. Best GFLOPs: 971.7594
