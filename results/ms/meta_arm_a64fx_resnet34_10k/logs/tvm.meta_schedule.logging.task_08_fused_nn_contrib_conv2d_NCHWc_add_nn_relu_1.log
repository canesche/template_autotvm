2024-04-29 03:19:53 [INFO] [task_scheduler.cc:160] Initializing Task #8: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1"
2024-04-29 03:19:53 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32), T.int64(64), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 03:19:53 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 03:19:53 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(58), T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), oh_0 * T.int64(14) + oh_1 + ax2)
                        v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(2), T.int64(4), T.int64(4), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14), T.int64(4), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(28) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 14, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 14, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-29 03:19:53 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(4)):
                for ic_0, kh_0 in T.grid(T.int64(4), T.int64(3)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(30), T.int64(16)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), oh_0 * T.int64(14) + oh_1 + kh_0 + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), ow_1 * T.int64(28) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ic_0 * T.int64(16) + ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14), T.int64(4), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(28) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(2) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(28), T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), ow_1 * T.int64(28) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 14, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 14, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=11)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 03:19:53 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(4), T.int64(4)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(30), T.int64(16)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), oh_0 * T.int64(14) + oh_1 + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), ow_1 * T.int64(28) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ic_0 * T.int64(16) + ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14), T.int64(4), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_0 * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(28) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(32) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(2) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(56), T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 14, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 14, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-29 03:30:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:30:08 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 03:30:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 03:30:14 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 03:30:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 03:30:26 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 03:30:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 03:30:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 03:30:39 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9993  0.9988  0.9985  0.9979  0.9972  0.9971  0.9970  0.9964  0.9960  0.9956  0.9954  0.9952  0.9952  0.9950  0.9949  0.9944
[17 : 32]:	0.9940  0.9938  0.9937  0.9932  0.9919  0.9917  0.9914  0.9914  0.9896  0.9892  0.9888  0.9886  0.9884  0.9882  0.9880  0.9877
[33 : 48]:	0.9875  0.9874  0.9873  0.9866  0.9865  0.9863  0.9860  0.9851  0.9851  0.9848  0.9847  0.9839  0.9832  0.9831  0.9821  0.9820
[49 : 64]:	0.9811  0.9811  0.9810  0.9807  0.9803  0.9801  0.9794  0.9791  0.9788  0.9777  0.9772  0.9767  0.9762  0.9752  0.9751  0.9750
2024-04-29 03:30:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:30:40 [INFO] [evolutionary_search.cc:730] Sending 62 candidates(s) for measurement
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #1: GFLOPs: 18.7584. Time: 12347.1629 us. Best GFLOPs: 18.7584
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #2: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(14), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(6)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(28) + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(8) + ow_1 * T.int64(4) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_1 in range(T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(28) + oh_1 * T.int64(28) + oh_2_init * T.int64(4) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(8) + ow_1 * T.int64(4) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(16) + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(4), T.int64(16), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(28) + oh_1 * T.int64(28) + oh_2 * T.int64(4) + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(8) + ow_1 * T.int64(4) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(28), T.int64(8)):
                for ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(28) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(8) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 4])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 4, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b68)
l85 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86 = sch.fuse(l84, preserve_unit_iters=True)
sch.vectorize(loop=l86)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l87, preserve_unit_iters=True)
sch.parallel(loop=l109)
sch.annotate(block_or_loop=l109, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l109, ann_key="pragma_unroll_explicit", ann_val=1)
l110, l111, l112, l113, l114, l115 = sch.get_loops(block=b70)
l116 = sch.fuse(l115, preserve_unit_iters=True)
sch.vectorize(loop=l116)
b117 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139 = sch.get_loops(block=b117)
b140 = sch.decompose_reduction(block=b117, loop=l124)
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #3: GFLOPs: 135.0683. Time: 1714.7806 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #4: GFLOPs: 110.3785. Time: 2098.3474 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #5: GFLOPs: 13.1276. Time: 17643.2087 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #6: GFLOPs: 11.3883. Time: 20337.6768 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #7: GFLOPs: 47.5989. Time: 4865.9220 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #8: GFLOPs: 33.8331. Time: 6845.7327 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #9: GFLOPs: 125.6499. Time: 1843.3156 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #10: GFLOPs: 30.1455. Time: 7683.1578 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #11: GFLOPs: 28.2799. Time: 8189.9943 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #12: GFLOPs: 89.1940. Time: 2596.7266 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #13: GFLOPs: 31.7673. Time: 7290.8993 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #14: GFLOPs: 63.7302. Time: 3634.2662 us. Best GFLOPs: 135.0683
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #15: GFLOPs: 197.0459. Time: 1175.4236 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #16: GFLOPs: 70.7665. Time: 3272.9103 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #17: GFLOPs: 63.5728. Time: 3643.2625 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #18: GFLOPs: 3.4329. Time: 67467.5467 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #19: GFLOPs: 59.3472. Time: 3902.6681 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #20: GFLOPs: 10.9159. Time: 21217.8340 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #21: GFLOPs: 152.6309. Time: 1517.4678 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #22: GFLOPs: 64.9810. Time: 3564.3104 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #23: GFLOPs: 19.1560. Time: 12090.8452 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #24: GFLOPs: 62.9788. Time: 3677.6246 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #25: GFLOPs: 6.9343. Time: 33401.1627 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #26: GFLOPs: 3.3739. Time: 68648.2137 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #27: GFLOPs: 59.5268. Time: 3890.8933 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #28: GFLOPs: 159.4547. Time: 1452.5279 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #29: GFLOPs: 42.7298. Time: 5420.3926 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #30: GFLOPs: 163.3363. Time: 1418.0092 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #31: GFLOPs: 28.0345. Time: 8261.6819 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #32: GFLOPs: 33.5421. Time: 6905.1231 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #33: GFLOPs: 9.5806. Time: 24175.1231 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #34: GFLOPs: 50.3863. Time: 4596.7322 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #35: GFLOPs: 55.2645. Time: 4190.9836 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #36: GFLOPs: 9.6528. Time: 23994.3554 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #37: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(30)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(2) * T.int64(14) + ax2)
                        v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(2) * T.int64(28) + ax3)
                        v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(16), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(2) * T.int64(14) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(2) * T.int64(28) + ow_1 * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(4), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(16), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(2) * T.int64(14) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(2) * T.int64(28) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(3136)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(2), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(100352))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(100352) // T.int64(1792))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(1792) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 14, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 2, 7, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[4, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78 = sch.get_loops(block=b67)
l79 = sch.fuse(l70, l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l79)
l80 = sch.fuse(l78, preserve_unit_iters=True)
sch.vectorize(loop=l80)
l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b68)
l104 = sch.fuse(l81, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109 = sch.get_loops(block=b69)
l110 = sch.fuse(l105, l106, l107, l108, l109, preserve_unit_iters=True)
l111, l112 = sch.split(loop=l110, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l111)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136 = sch.get_loops(block=b113)
b137 = sch.decompose_reduction(block=b113, loop=l121)
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #38: GFLOPs: 26.2057. Time: 8838.2437 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #39: GFLOPs: 13.3375. Time: 17365.5426 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #40: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(16)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(8) * T.int64(28) + ax2)
                        v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(2) * T.int64(14) + ax3)
                        v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(28), T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(8) * T.int64(28) + oh_1 * T.int64(28) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(2) * T.int64(14) + ow_1 * T.int64(7) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(28), T.int64(7), T.int64(4), T.int64(64), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(8) * T.int64(28) + oh_1 * T.int64(28) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(2) * T.int64(14) + ow_1 * T.int64(7) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(8) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(3136)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(2), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(100352))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(100352) // T.int64(1792))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(1792) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 28, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 2, 7, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=6)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b67)
l82 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l82)
l83 = sch.fuse(l81, preserve_unit_iters=True)
sch.vectorize(loop=l83)
l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b68)
l104 = sch.fuse(l84, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110 = sch.get_loops(block=b69)
l111 = sch.fuse(l106, l107, l108, l109, l110, preserve_unit_iters=True)
l112, l113 = sch.split(loop=l111, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l112)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b114)
b135 = sch.decompose_reduction(block=b114, loop=l119)
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #41: GFLOPs: 115.5352. Time: 2004.6921 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #42: GFLOPs: 3.2205. Time: 71917.9207 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #43: GFLOPs: 26.3000. Time: 8806.5447 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #44: GFLOPs: 76.1685. Time: 3040.7916 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #45: GFLOPs: 4.3091. Time: 53748.9963 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #46: GFLOPs: 37.4319. Time: 6187.5717 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #47: GFLOPs: 70.3575. Time: 3291.9346 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #48: GFLOPs: 138.0719. Time: 1677.4765 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #49: GFLOPs: 33.4758. Time: 6918.7943 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #50: GFLOPs: 116.4747. Time: 1988.5216 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #51: GFLOPs: 40.5403. Time: 5713.1466 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #52: GFLOPs: 17.8113. Time: 13003.6811 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #53: GFLOPs: 37.7825. Time: 6130.1572 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #54: GFLOPs: 25.8790. Time: 8949.8147 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #55: GFLOPs: 72.5387. Time: 3192.9490 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #56: GFLOPs: 2.7202. Time: 85145.8320 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #57: GFLOPs: 76.0355. Time: 3046.1107 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #58: GFLOPs: 154.5374. Time: 1498.7463 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #59: GFLOPs: 98.5505. Time: 2350.1899 us. Best GFLOPs: 197.0459
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #60: GFLOPs: 211.0697. Time: 1097.3267 us. Best GFLOPs: 211.0697
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #61: GFLOPs: 78.0070. Time: 2969.1249 us. Best GFLOPs: 211.0697
2024-04-29 03:57:03 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #62: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_fused_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(58), T.int64(58)):
                for ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("data_pad"):
                        v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4_fused])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_0, ow_0, oc_block_0 in T.grid(T.int64(2), T.int64(2), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(1), T.int64(1), T.int64(28), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_fused_fused + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(28) + oh_1 * T.int64(28) + oh_2_init * T.int64(28) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(28) + ow_1 * T.int64(4) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(28), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_fused_fused + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(28) + oh_1 * T.int64(28) + oh_2 * T.int64(28) + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(28) + ow_1 * T.int64(4) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(28), T.int64(28)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_fused_fused + ax1)
                            v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(28) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(56), ow_0 * T.int64(28) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 28])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 4, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 2, 4, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77 = sch.get_loops(block=b68)
l78 = sch.fuse(l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l78)
l79 = sch.fuse(l77, preserve_unit_iters=True)
sch.vectorize(loop=l79)
l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l80, preserve_unit_iters=True)
sch.parallel(loop=l105)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
l115 = sch.fuse(l114, preserve_unit_iters=True)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141 = sch.get_loops(block=b116)
b142 = sch.decompose_reduction(block=b116, loop=l126)
2024-04-29 04:07:56 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:07:56 [INFO] [evolutionary_search.cc:715] Picked top 58 candidate(s) from database
2024-04-29 04:08:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:08:02 [INFO] [evolutionary_search.cc:723] Sampled 454 candidate(s)
2024-04-29 04:08:14 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:08:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:08:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:08:55 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:09:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0421  1.0073  0.9685  0.9662  0.9617  0.9473  0.9366  0.8980  0.8695  0.8695  0.8283  0.8251  0.8219  0.8187  0.8130  0.8127
[17 : 32]:	0.8063  0.8043  0.7915  0.7896  0.7867  0.7816  0.7803  0.7734  0.7734  0.7677  0.7677  0.7645  0.7622  0.7622  0.7622  0.7567
[33 : 48]:	0.7516  0.7516  0.7512  0.7506  0.7499  0.7478  0.7478  0.7478  0.7478  0.7471  0.7442  0.7384  0.7384  0.7370  0.7362  0.7362
[49 : 64]:	0.7321  0.7310  0.7292  0.7240  0.7205  0.7205  0.7151  0.7144  0.7123  0.7098  0.7093  0.7093  0.7093  0.7052  0.7050  0.7034
2024-04-29 04:09:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:09:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #63: GFLOPs: 109.5542. Time: 2114.1354 us. Best GFLOPs: 211.0697
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #64: GFLOPs: 63.8727. Time: 3626.1539 us. Best GFLOPs: 211.0697
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #65: GFLOPs: 165.1234. Time: 1402.6629 us. Best GFLOPs: 211.0697
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #66: GFLOPs: 193.0731. Time: 1199.6097 us. Best GFLOPs: 211.0697
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #67: GFLOPs: 380.4097. Time: 608.8499 us. Best GFLOPs: 380.4097
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #68: GFLOPs: 335.1755. Time: 691.0184 us. Best GFLOPs: 380.4097
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #69: GFLOPs: 426.8255. Time: 542.6396 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #70: GFLOPs: 207.4589. Time: 1116.4257 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #71: GFLOPs: 213.6406. Time: 1084.1217 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #72: GFLOPs: 142.2909. Time: 1627.7384 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #73: GFLOPs: 145.0891. Time: 1596.3456 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #74: GFLOPs: 282.5696. Time: 819.6649 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #75: GFLOPs: 356.3407. Time: 649.9746 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #76: GFLOPs: 167.9722. Time: 1378.8733 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #77: GFLOPs: 162.8201. Time: 1422.5053 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #78: GFLOPs: 182.0598. Time: 1272.1780 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #79: GFLOPs: 388.7463. Time: 595.7932 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #80: GFLOPs: 67.5974. Time: 3426.3517 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #81: GFLOPs: 171.1390. Time: 1353.3586 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #82: GFLOPs: 152.9794. Time: 1514.0108 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #83: GFLOPs: 183.8426. Time: 1259.8406 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #84: GFLOPs: 127.7081. Time: 1813.6072 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #85: GFLOPs: 179.6449. Time: 1289.2791 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #86: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(1568), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0 in range(T.int64(4)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(6)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(784) // T.int64(14) + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) * T.int64(4) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(784) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(784) // T.int64(14) + oh_1 + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) * T.int64(4) + ow_1 * T.int64(4) + ow_2_init * T.int64(2) + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(2), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(784) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(784) // T.int64(14) + oh_1 + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(32) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                        for ax4_fused in T.vectorized(T.int64(8)):
                            with T.block("T_relu"):
                                v_ax0 = T.axis.spatial(T.int64(1), ax0)
                                v_ax1 = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(784) + ax1)
                                v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(784) // T.int64(14) + ax2)
                                v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) * T.int64(4) + ax3)
                                v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + ax4_fused)
                                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[56, 1, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[14, 1, 2, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[2, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b68)
l81 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l81)
l82 = sch.fuse(l80, preserve_unit_iters=True)
sch.vectorize(loop=l82)
l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b69)
l106 = sch.fuse(l83, preserve_unit_iters=True)
sch.parallel(loop=l106)
l107 = sch.fuse(l105, preserve_unit_iters=True)
sch.vectorize(loop=l107)
sch.annotate(block_or_loop=l106, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l106, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b70)
l120 = sch.fuse(l119, preserve_unit_iters=True)
sch.vectorize(loop=l120)
b121 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142, l143, l144 = sch.get_loops(block=b121)
b145 = sch.decompose_reduction(block=b121, loop=l129)
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #87: GFLOPs: 108.0927. Time: 2142.7207 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #88: GFLOPs: 145.7298. Time: 1589.3277 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #89: GFLOPs: 106.0168. Time: 2184.6773 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #90: GFLOPs: 145.5126. Time: 1591.7000 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #91: GFLOPs: 107.9971. Time: 2144.6165 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #92: GFLOPs: 153.6290. Time: 1507.6082 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #93: GFLOPs: 154.8267. Time: 1495.9464 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #94: GFLOPs: 201.4821. Time: 1149.5432 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #95: GFLOPs: 158.8245. Time: 1458.2910 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #96: GFLOPs: 147.2260. Time: 1573.1762 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #97: GFLOPs: 167.1075. Time: 1386.0082 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #98: GFLOPs: 200.0364. Time: 1157.8512 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #99: GFLOPs: 181.2647. Time: 1277.7580 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #100: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(896), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1 in T.grid(T.int64(1), T.int64(1), T.int64(7)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(6)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(448) // T.int64(56) * T.int64(7) + oh_1 + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(4) * T.int64(4) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(448) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(448) // T.int64(56) * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(4) * T.int64(4) + ow_1 * T.int64(4) + ow_2_init * T.int64(2) + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(2), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(448) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(448) // T.int64(56) * T.int64(7) + oh_1 + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(4) * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(32) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                        for ax4_fused in T.vectorized(T.int64(8)):
                            with T.block("T_relu"):
                                v_ax0 = T.axis.spatial(T.int64(1), ax0)
                                v_ax1 = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(448) + ax1)
                                v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(448) // T.int64(56) * T.int64(7) + oh_1 + ax2)
                                v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(4) * T.int64(4) + ax3)
                                v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(8) + ax4_fused)
                                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[8, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[14, 1, 2, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[2, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85 = sch.fuse(l83, preserve_unit_iters=True)
sch.vectorize(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b69)
l108 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l108)
l109 = sch.fuse(l107, preserve_unit_iters=True)
sch.vectorize(loop=l109)
sch.annotate(block_or_loop=l108, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l108, ann_key="pragma_unroll_explicit", ann_val=1)
l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b70)
l121 = sch.fuse(l120, preserve_unit_iters=True)
sch.vectorize(loop=l121)
b122 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142, l143, l144 = sch.get_loops(block=b122)
b145 = sch.decompose_reduction(block=b122, loop=l129)
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #101: GFLOPs: 45.8201. Time: 5054.8183 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #102: GFLOPs: 58.3916. Time: 3966.5395 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #103: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused in T.parallel(T.int64(896), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oh_1 in range(T.int64(7)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(6)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(112) * T.int64(7) + oh_1 + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(112) // T.int64(8) * T.int64(4) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(112) * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(112) // T.int64(8) * T.int64(4) + ow_1 * T.int64(4) + ow_2_init * T.int64(2) + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(2) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(2), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) + oc_chunk_2 + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(112) * T.int64(7) + oh_1 + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(112) // T.int64(8) * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(2) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(32) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(4)):
                        for ax4_fused in T.vectorized(T.int64(8)):
                            with T.block("T_relu"):
                                v_ax0 = T.axis.spatial(T.int64(1), ax0)
                                v_ax1 = T.axis.spatial(T.int64(2), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) + ax1)
                                v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(112) * T.int64(7) + oh_1 + ax2)
                                v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(112) // T.int64(8) * T.int64(4) + ax3)
                                v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(2) * T.int64(8) + ax4_fused)
                                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[8, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[14, 1, 2, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[2, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85 = sch.fuse(l83, preserve_unit_iters=True)
sch.vectorize(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b69)
l106 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l106)
l107 = sch.fuse(l105, preserve_unit_iters=True)
sch.vectorize(loop=l107)
sch.annotate(block_or_loop=l106, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l106, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b70)
l117 = sch.fuse(l116, preserve_unit_iters=True)
sch.vectorize(loop=l117)
b118 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b118)
b139 = sch.decompose_reduction(block=b118, loop=l123)
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #104: GFLOPs: 106.2474. Time: 2179.9353 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #105: GFLOPs: 18.8240. Time: 12304.0932 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #106: GFLOPs: 107.9777. Time: 2145.0027 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #107: GFLOPs: 106.8057. Time: 2168.5406 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #108: GFLOPs: 75.1477. Time: 3082.0961 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #109: GFLOPs: 51.3506. Time: 4510.4133 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #110: GFLOPs: 51.5113. Time: 4496.3400 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #111: GFLOPs: 179.6331. Time: 1289.3635 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #112: GFLOPs: 219.0357. Time: 1057.4185 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #113: GFLOPs: 197.4319. Time: 1173.1253 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #114: GFLOPs: 107.6401. Time: 2151.7303 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #115: GFLOPs: 124.8938. Time: 1854.4751 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #116: GFLOPs: 88.7131. Time: 2610.8025 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #117: GFLOPs: 115.4431. Time: 2006.2903 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #118: GFLOPs: 51.9561. Time: 4457.8446 us. Best GFLOPs: 426.8255
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #119: GFLOPs: 554.7701. Time: 417.4926 us. Best GFLOPs: 554.7701
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #120: GFLOPs: 180.7381. Time: 1281.4811 us. Best GFLOPs: 554.7701
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #121: GFLOPs: 62.0870. Time: 3730.4520 us. Best GFLOPs: 554.7701
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #122: GFLOPs: 76.0797. Time: 3044.3373 us. Best GFLOPs: 554.7701
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #123: GFLOPs: 78.7683. Time: 2940.4252 us. Best GFLOPs: 554.7701
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #124: GFLOPs: 3.5350. Time: 65520.7047 us. Best GFLOPs: 554.7701
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #125: GFLOPs: 6.0614. Time: 38211.0690 us. Best GFLOPs: 554.7701
2024-04-29 04:10:26 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #126: GFLOPs: 1.9854. Time: 116658.8190 us. Best GFLOPs: 554.7701
2024-04-29 04:56:12 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:56:13 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 04:56:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:56:18 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 04:56:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:56:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:56:58 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:57:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 04:57:19 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9354  0.7676  0.7009  0.6914  0.6860  0.6855  0.6810  0.6760  0.6726  0.6702  0.6676  0.6662  0.6662  0.6657  0.6516  0.6514
[17 : 32]:	0.6227  0.6166  0.6111  0.6085  0.6051  0.5987  0.5983  0.5966  0.5902  0.5895  0.5837  0.5797  0.5753  0.5753  0.5732  0.5713
[33 : 48]:	0.5674  0.5649  0.5636  0.5628  0.5623  0.5618  0.5586  0.5584  0.5582  0.5579  0.5564  0.5558  0.5489  0.5470  0.5434  0.5422
[49 : 64]:	0.5411  0.5409  0.5409  0.5409  0.5402  0.5376  0.5376  0.5373  0.5306  0.5294  0.5282  0.5269  0.5263  0.5247  0.5239  0.5236
2024-04-29 04:57:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:57:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #127: GFLOPs: 132.3196. Time: 1750.4011 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #128: GFLOPs: 429.1112. Time: 539.7492 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #129: GFLOPs: 469.1479. Time: 493.6874 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #130: GFLOPs: 381.6550. Time: 606.8634 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #131: GFLOPs: 373.1741. Time: 620.6551 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #132: GFLOPs: 71.6593. Time: 3232.1318 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #133: GFLOPs: 90.9251. Time: 2547.2876 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #134: GFLOPs: 240.9414. Time: 961.2809 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #135: GFLOPs: 90.6579. Time: 2554.7965 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #136: GFLOPs: 497.4479. Time: 465.6014 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #137: GFLOPs: 473.2437. Time: 489.4147 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #138: GFLOPs: 92.9130. Time: 2492.7868 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #139: GFLOPs: 91.0414. Time: 2544.0334 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #140: GFLOPs: 320.2599. Time: 723.2015 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #141: GFLOPs: 156.8636. Time: 1476.5207 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #142: GFLOPs: 71.5249. Time: 3238.2048 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #143: GFLOPs: 550.1401. Time: 421.0062 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #144: GFLOPs: 504.4988. Time: 459.0941 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #145: GFLOPs: 359.9802. Time: 643.4032 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #146: GFLOPs: 324.6184. Time: 713.4912 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #147: GFLOPs: 383.5836. Time: 603.8121 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #148: GFLOPs: 526.6396. Time: 439.7930 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #149: GFLOPs: 174.2289. Time: 1329.3568 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #150: GFLOPs: 544.9235. Time: 425.0366 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #151: GFLOPs: 531.1000. Time: 436.0995 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #152: GFLOPs: 467.8395. Time: 495.0681 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #153: GFLOPs: 486.5855. Time: 475.9954 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #154: GFLOPs: 298.9528. Time: 774.7458 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #155: GFLOPs: 336.5531. Time: 688.1899 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #156: GFLOPs: 137.3659. Time: 1686.0987 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #157: GFLOPs: 146.5518. Time: 1580.4136 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #158: GFLOPs: 255.3857. Time: 906.9124 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #159: GFLOPs: 58.7982. Time: 3939.1044 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #160: GFLOPs: 353.8688. Time: 654.5150 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #161: GFLOPs: 74.2531. Time: 3119.2277 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #162: GFLOPs: 356.7572. Time: 649.2159 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #163: GFLOPs: 444.0086. Time: 521.6394 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #164: GFLOPs: 453.1234. Time: 511.1465 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #165: GFLOPs: 446.8834. Time: 518.2837 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #166: GFLOPs: 363.8874. Time: 636.4948 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #167: GFLOPs: 117.5447. Time: 1970.4200 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #168: GFLOPs: 454.2581. Time: 509.8696 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #169: GFLOPs: 302.8749. Time: 764.7132 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #170: GFLOPs: 509.0004. Time: 455.0339 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #171: GFLOPs: 413.3528. Time: 560.3263 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #172: GFLOPs: 73.7213. Time: 3141.7316 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #173: GFLOPs: 256.6588. Time: 902.4136 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #174: GFLOPs: 369.1078. Time: 627.4926 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #175: GFLOPs: 198.3108. Time: 1167.9262 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #176: GFLOPs: 496.6268. Time: 466.3712 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #177: GFLOPs: 496.3027. Time: 466.6757 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #178: GFLOPs: 502.5778. Time: 460.8488 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #179: GFLOPs: 490.7342. Time: 471.9713 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #180: GFLOPs: 340.8447. Time: 679.5247 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #181: GFLOPs: 455.6113. Time: 508.3553 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #182: GFLOPs: 428.4694. Time: 540.5577 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #183: GFLOPs: 75.4198. Time: 3070.9768 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #184: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(112) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) // T.int64(2) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(16) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0 in T.grid(T.int64(1), T.int64(3)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(16)):
                    for ax4_fused in T.vectorized(T.int64(64)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), kh_0 + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(112) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) // T.int64(2) * T.int64(2) + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(14) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(112) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) // T.int64(2) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(16) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(112) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) // T.int64(2) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(112) // T.int64(56) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(2) * T.int64(14) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 14, 1, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 2, 7, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=11)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87 = sch.get_loops(block=b68)
l88 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l88)
l89 = sch.fuse(l87, preserve_unit_iters=True)
sch.vectorize(loop=l89)
l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b69)
l107 = sch.fuse(l90, preserve_unit_iters=True)
sch.parallel(loop=l107)
l108 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l108)
sch.annotate(block_or_loop=l107, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l107, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
l115 = sch.fuse(l114, preserve_unit_iters=True)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b116)
b134 = sch.decompose_reduction(block=b116, loop=l118)
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #185: GFLOPs: 466.5936. Time: 496.3900 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #186: GFLOPs: 228.7977. Time: 1012.3020 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #187: GFLOPs: 121.6776. Time: 1903.4928 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #188: GFLOPs: 31.0812. Time: 7451.8504 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #189: GFLOPs: 8.0055. Time: 28931.7355 us. Best GFLOPs: 554.7701
2024-04-29 04:58:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #190: GFLOPs: 16.8646. Time: 13733.6376 us. Best GFLOPs: 554.7701
2024-04-29 05:16:11 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:16:13 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:16:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:16:17 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:16:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:16:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:16:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:17:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:17:21 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9721  0.9655  0.9655  0.9655  0.9647  0.9640  0.9486  0.9390  0.9335  0.9252  0.9231  0.9231  0.9116  0.9098  0.9076  0.9075
[17 : 32]:	0.9074  0.9016  0.8973  0.8909  0.8752  0.8752  0.8683  0.8637  0.8617  0.8592  0.8592  0.8582  0.8561  0.8554  0.8453  0.8397
[33 : 48]:	0.8382  0.8320  0.8297  0.8297  0.8285  0.8263  0.8249  0.8249  0.8240  0.8233  0.8213  0.8206  0.8197  0.8188  0.8181  0.8171
[49 : 64]:	0.8154  0.8134  0.8109  0.8102  0.8092  0.8065  0.8058  0.8049  0.8029  0.8020  0.8017  0.7976  0.7965  0.7962  0.7962  0.7934
2024-04-29 05:17:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:17:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #191: GFLOPs: 331.6600. Time: 698.3429 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #192: GFLOPs: 520.4104. Time: 445.0572 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #193: GFLOPs: 465.8631. Time: 497.1684 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #194: GFLOPs: 436.0750. Time: 531.1298 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #195: GFLOPs: 319.8929. Time: 724.0311 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #196: GFLOPs: 462.5007. Time: 500.7829 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #197: GFLOPs: 516.6778. Time: 448.2724 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #198: GFLOPs: 508.9879. Time: 455.0450 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #199: GFLOPs: 518.1416. Time: 447.0060 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #200: GFLOPs: 250.4240. Time: 924.8812 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #201: GFLOPs: 276.4243. Time: 837.8872 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #202: GFLOPs: 539.0389. Time: 429.6766 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #203: GFLOPs: 533.9813. Time: 433.7463 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #204: GFLOPs: 546.7773. Time: 423.5955 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #205: GFLOPs: 515.1519. Time: 449.6003 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #206: GFLOPs: 480.8607. Time: 481.6622 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #207: GFLOPs: 526.9847. Time: 439.5050 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #208: GFLOPs: 491.5864. Time: 471.1530 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #209: GFLOPs: 494.8359. Time: 468.0590 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #210: GFLOPs: 511.8527. Time: 452.4982 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #211: GFLOPs: 484.0111. Time: 478.5271 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #212: GFLOPs: 482.4231. Time: 480.1023 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #213: GFLOPs: 518.1603. Time: 446.9899 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #214: GFLOPs: 524.1425. Time: 441.8882 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #215: GFLOPs: 434.1981. Time: 533.4257 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #216: GFLOPs: 426.0010. Time: 543.6899 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #217: GFLOPs: 426.2895. Time: 543.3218 us. Best GFLOPs: 554.7701
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #218: GFLOPs: 727.6249. Time: 318.3129 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #219: GFLOPs: 356.6388. Time: 649.4313 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #220: GFLOPs: 386.7721. Time: 598.8344 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #221: GFLOPs: 434.7215. Time: 532.7835 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #222: GFLOPs: 511.0397. Time: 453.2180 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #223: GFLOPs: 524.9442. Time: 441.2134 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #224: GFLOPs: 491.2892. Time: 471.4381 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #225: GFLOPs: 421.7046. Time: 549.2290 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #226: GFLOPs: 412.7132. Time: 561.1946 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #227: GFLOPs: 485.9416. Time: 476.6261 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #228: GFLOPs: 500.4906. Time: 462.7708 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #229: GFLOPs: 420.9347. Time: 550.2337 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #230: GFLOPs: 419.5962. Time: 551.9888 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #231: GFLOPs: 476.3486. Time: 486.2246 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #232: GFLOPs: 405.7272. Time: 570.8574 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #233: GFLOPs: 484.0035. Time: 478.5346 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #234: GFLOPs: 369.7407. Time: 626.4185 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #235: GFLOPs: 592.6283. Time: 390.8224 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #236: GFLOPs: 521.8695. Time: 443.8129 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #237: GFLOPs: 537.4093. Time: 430.9795 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #238: GFLOPs: 213.8001. Time: 1083.3132 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #239: GFLOPs: 407.7561. Time: 568.0170 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #240: GFLOPs: 538.2058. Time: 430.3417 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #241: GFLOPs: 416.6280. Time: 555.9214 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #242: GFLOPs: 365.1585. Time: 634.2791 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #243: GFLOPs: 516.2539. Time: 448.6405 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #244: GFLOPs: 218.2678. Time: 1061.1386 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #245: GFLOPs: 460.6923. Time: 502.7486 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #246: GFLOPs: 394.4738. Time: 587.1427 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #247: GFLOPs: 304.8687. Time: 759.7121 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #248: GFLOPs: 447.4254. Time: 517.6560 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #249: GFLOPs: 538.5131. Time: 430.0962 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #250: GFLOPs: 453.5116. Time: 510.7089 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #251: GFLOPs: 416.0033. Time: 556.7562 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #252: GFLOPs: 17.8726. Time: 12959.0880 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #253: GFLOPs: 38.3161. Time: 6044.7817 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #254: GFLOPs: 97.4674. Time: 2376.3074 us. Best GFLOPs: 727.6249
2024-04-29 05:18:47 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:18:48 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:18:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:18:53 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:19:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:19:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:19:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:19:48 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 05:19:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9310  0.9104  0.8181  0.8044  0.7714  0.7690  0.7571  0.7504  0.7502  0.7466  0.7449  0.7428  0.7388  0.7348  0.7262  0.7249
[17 : 32]:	0.7226  0.7224  0.7214  0.7189  0.7162  0.7161  0.7161  0.7139  0.7133  0.7125  0.7113  0.7076  0.7059  0.7059  0.7055  0.7055
[33 : 48]:	0.7037  0.6985  0.6985  0.6920  0.6920  0.6914  0.6913  0.6907  0.6883  0.6874  0.6871  0.6869  0.6864  0.6859  0.6859  0.6855
[49 : 64]:	0.6851  0.6847  0.6841  0.6835  0.6826  0.6819  0.6814  0.6783  0.6783  0.6772  0.6761  0.6759  0.6758  0.6744  0.6741  0.6737
2024-04-29 05:19:57 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:19:57 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #255: GFLOPs: 317.3755. Time: 729.7740 us. Best GFLOPs: 727.6249
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #256: GFLOPs: 633.0667. Time: 365.8578 us. Best GFLOPs: 727.6249
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #257: GFLOPs: 646.2521. Time: 358.3933 us. Best GFLOPs: 727.6249
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #258: GFLOPs: 781.4031. Time: 296.4058 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #259: GFLOPs: 685.8818. Time: 337.6856 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #260: GFLOPs: 438.1803. Time: 528.5779 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #261: GFLOPs: 453.2725. Time: 510.9783 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #262: GFLOPs: 606.7595. Time: 381.7203 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #263: GFLOPs: 482.7005. Time: 479.8263 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #264: GFLOPs: 521.9249. Time: 443.7658 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #265: GFLOPs: 516.0668. Time: 448.8032 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #266: GFLOPs: 539.4359. Time: 429.3604 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #267: GFLOPs: 499.6131. Time: 463.5835 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #268: GFLOPs: 522.1607. Time: 443.5654 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #269: GFLOPs: 597.5775. Time: 387.5856 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #270: GFLOPs: 93.9364. Time: 2465.6305 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #271: GFLOPs: 563.0746. Time: 411.3352 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #272: GFLOPs: 443.4648. Time: 522.2791 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #273: GFLOPs: 421.4757. Time: 549.5273 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #274: GFLOPs: 596.6015. Time: 388.2197 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #275: GFLOPs: 681.4090. Time: 339.9022 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #276: GFLOPs: 520.7085. Time: 444.8025 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #277: GFLOPs: 528.0658. Time: 438.6052 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #278: GFLOPs: 443.1995. Time: 522.5918 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #279: GFLOPs: 352.6011. Time: 656.8682 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #280: GFLOPs: 599.4292. Time: 386.3883 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #281: GFLOPs: 409.2359. Time: 565.9631 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #282: GFLOPs: 439.1899. Time: 527.3628 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #283: GFLOPs: 480.1123. Time: 482.4130 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #284: GFLOPs: 495.2691. Time: 467.6497 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #285: GFLOPs: 470.0928. Time: 492.6950 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #286: GFLOPs: 483.3616. Time: 479.1701 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #287: GFLOPs: 407.6340. Time: 568.1871 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #288: GFLOPs: 500.1065. Time: 463.1262 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #289: GFLOPs: 495.0467. Time: 467.8597 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #290: GFLOPs: 585.4448. Time: 395.6179 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #291: GFLOPs: 592.2585. Time: 391.0664 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #292: GFLOPs: 519.3563. Time: 445.9606 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #293: GFLOPs: 508.2629. Time: 455.6941 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #294: GFLOPs: 504.2334. Time: 459.3357 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #295: GFLOPs: 506.9802. Time: 456.8471 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #296: GFLOPs: 646.7850. Time: 358.0980 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #297: GFLOPs: 519.1062. Time: 446.1754 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #298: GFLOPs: 542.8850. Time: 426.6326 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #299: GFLOPs: 471.6196. Time: 491.1000 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #300: GFLOPs: 487.3224. Time: 475.2755 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #301: GFLOPs: 523.0448. Time: 442.8156 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #302: GFLOPs: 463.0471. Time: 500.1919 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #303: GFLOPs: 503.8755. Time: 459.6620 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #304: GFLOPs: 391.6846. Time: 591.3238 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #305: GFLOPs: 756.7316. Time: 306.0695 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #306: GFLOPs: 391.0759. Time: 592.2442 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #307: GFLOPs: 497.0726. Time: 465.9528 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #308: GFLOPs: 465.4617. Time: 497.5972 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #309: GFLOPs: 474.4153. Time: 488.2060 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #310: GFLOPs: 500.1509. Time: 463.0851 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #311: GFLOPs: 501.8601. Time: 461.5079 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #312: GFLOPs: 637.2171. Time: 363.4749 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #313: GFLOPs: 260.0670. Time: 890.5873 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #314: GFLOPs: 529.3320. Time: 437.5561 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #315: GFLOPs: 586.7106. Time: 394.7643 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #316: GFLOPs: 8.9056. Time: 26007.5547 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #317: GFLOPs: 105.6091. Time: 2193.1114 us. Best GFLOPs: 781.4031
2024-04-29 05:21:03 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #318: GFLOPs: 19.8218. Time: 11684.7409 us. Best GFLOPs: 781.4031
2024-04-29 06:12:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:12:44 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:12:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:12:49 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:13:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:13:16 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:13:31 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:13:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:13:54 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9452  0.9307  0.9206  0.9085  0.9018  0.8996  0.8994  0.8962  0.8947  0.8713  0.8619  0.8526  0.8406  0.8365  0.8344  0.8307
[17 : 32]:	0.8174  0.8168  0.8136  0.8136  0.8125  0.8116  0.8082  0.8050  0.8050  0.8037  0.8005  0.7996  0.7995  0.7952  0.7937  0.7929
[33 : 48]:	0.7922  0.7919  0.7919  0.7900  0.7899  0.7851  0.7843  0.7843  0.7812  0.7786  0.7783  0.7751  0.7751  0.7749  0.7749  0.7740
[49 : 64]:	0.7740  0.7731  0.7730  0.7728  0.7712  0.7698  0.7694  0.7664  0.7648  0.7647  0.7619  0.7581  0.7581  0.7556  0.7552  0.7549
2024-04-29 06:13:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:13:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #319: GFLOPs: 400.5471. Time: 578.2402 us. Best GFLOPs: 781.4031
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #320: GFLOPs: 763.4835. Time: 303.3627 us. Best GFLOPs: 781.4031
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #321: GFLOPs: 813.1853. Time: 284.8212 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #322: GFLOPs: 625.7928. Time: 370.1104 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #323: GFLOPs: 754.0215. Time: 307.1695 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #324: GFLOPs: 678.3662. Time: 341.4268 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #325: GFLOPs: 634.4613. Time: 365.0536 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #326: GFLOPs: 608.8835. Time: 380.3887 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #327: GFLOPs: 765.3607. Time: 302.6186 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #328: GFLOPs: 770.6345. Time: 300.5477 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #329: GFLOPs: 760.7496. Time: 304.4529 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #330: GFLOPs: 590.6308. Time: 392.1442 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #331: GFLOPs: 746.9113. Time: 310.0936 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #332: GFLOPs: 671.9019. Time: 344.7116 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #333: GFLOPs: 657.2890. Time: 352.3753 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #334: GFLOPs: 664.2306. Time: 348.6928 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #335: GFLOPs: 645.5468. Time: 358.7849 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #336: GFLOPs: 695.5419. Time: 332.9956 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #337: GFLOPs: 774.8275. Time: 298.9213 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #338: GFLOPs: 777.8289. Time: 297.7678 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #339: GFLOPs: 712.4005. Time: 325.1155 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #340: GFLOPs: 588.5453. Time: 393.5337 us. Best GFLOPs: 813.1853
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #341: GFLOPs: 904.1304. Time: 256.1715 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #342: GFLOPs: 815.0991. Time: 284.1525 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #343: GFLOPs: 794.5646. Time: 291.4960 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #344: GFLOPs: 724.4662. Time: 319.7008 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #345: GFLOPs: 646.1713. Time: 358.4381 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #346: GFLOPs: 633.3416. Time: 365.6990 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #347: GFLOPs: 735.5373. Time: 314.8888 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #348: GFLOPs: 692.4792. Time: 334.4684 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #349: GFLOPs: 680.5036. Time: 340.3544 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #350: GFLOPs: 637.7497. Time: 363.1713 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #351: GFLOPs: 593.3107. Time: 390.3729 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #352: GFLOPs: 685.6205. Time: 337.8143 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #353: GFLOPs: 710.6808. Time: 325.9022 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #354: GFLOPs: 797.9086. Time: 290.2744 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #355: GFLOPs: 710.3207. Time: 326.0674 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #356: GFLOPs: 722.8030. Time: 320.4364 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #357: GFLOPs: 539.1920. Time: 429.5546 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #358: GFLOPs: 545.0428. Time: 424.9435 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #359: GFLOPs: 606.4377. Time: 381.9228 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #360: GFLOPs: 527.3214. Time: 439.2244 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #361: GFLOPs: 723.2246. Time: 320.2496 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #362: GFLOPs: 643.7694. Time: 359.7754 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #363: GFLOPs: 655.2475. Time: 353.4732 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #364: GFLOPs: 637.2724. Time: 363.4434 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #365: GFLOPs: 632.6988. Time: 366.0706 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #366: GFLOPs: 697.8257. Time: 331.9058 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #367: GFLOPs: 600.1672. Time: 385.9132 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #368: GFLOPs: 826.8126. Time: 280.1269 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #369: GFLOPs: 680.3992. Time: 340.4067 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #370: GFLOPs: 554.3788. Time: 417.7873 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #371: GFLOPs: 529.9455. Time: 437.0495 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #372: GFLOPs: 616.8064. Time: 375.5026 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #373: GFLOPs: 638.1146. Time: 362.9637 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #374: GFLOPs: 705.2520. Time: 328.4109 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #375: GFLOPs: 633.6103. Time: 365.5440 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #376: GFLOPs: 681.0747. Time: 340.0690 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #377: GFLOPs: 659.2930. Time: 351.3042 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #378: GFLOPs: 624.3820. Time: 370.9466 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #379: GFLOPs: 643.0301. Time: 360.1891 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #380: GFLOPs: 7.9397. Time: 29171.3607 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #381: GFLOPs: 8.8734. Time: 26101.7350 us. Best GFLOPs: 904.1304
2024-04-29 06:15:09 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #382: GFLOPs: 63.2519. Time: 3661.7488 us. Best GFLOPs: 904.1304
2024-04-29 06:33:13 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:33:14 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:33:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:33:19 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:33:32 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:33:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:33:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:34:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 06:34:21 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9345  0.8841  0.8824  0.8785  0.8746  0.8706  0.8691  0.8691  0.8682  0.8682  0.8551  0.8495  0.8421  0.8403  0.8376  0.8352
[17 : 32]:	0.8352  0.8352  0.8233  0.8232  0.8207  0.8151  0.8136  0.8136  0.8127  0.8114  0.8113  0.8089  0.8032  0.8028  0.8017  0.8017
[33 : 48]:	0.7997  0.7968  0.7957  0.7948  0.7938  0.7938  0.7920  0.7917  0.7910  0.7901  0.7897  0.7890  0.7887  0.7869  0.7859  0.7855
[49 : 64]:	0.7847  0.7839  0.7839  0.7832  0.7831  0.7819  0.7809  0.7799  0.7785  0.7783  0.7783  0.7779  0.7779  0.7777  0.7777  0.7759
2024-04-29 06:34:21 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:34:21 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #383: GFLOPs: 889.2898. Time: 260.4465 us. Best GFLOPs: 904.1304
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #384: GFLOPs: 802.3349. Time: 288.6730 us. Best GFLOPs: 904.1304
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #385: GFLOPs: 888.5983. Time: 260.6492 us. Best GFLOPs: 904.1304
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #386: GFLOPs: 649.6482. Time: 356.5198 us. Best GFLOPs: 904.1304
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #387: GFLOPs: 847.9600. Time: 273.1407 us. Best GFLOPs: 904.1304
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #388: GFLOPs: 394.7985. Time: 586.6598 us. Best GFLOPs: 904.1304
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #389: GFLOPs: 570.3462. Time: 406.0909 us. Best GFLOPs: 904.1304
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #390: GFLOPs: 1020.4693. Time: 226.9666 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #391: GFLOPs: 863.3978. Time: 268.2569 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #392: GFLOPs: 838.1978. Time: 276.3219 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #393: GFLOPs: 809.3176. Time: 286.1824 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #394: GFLOPs: 825.7971. Time: 280.4713 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #395: GFLOPs: 802.3978. Time: 288.6504 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #396: GFLOPs: 108.4949. Time: 2134.7778 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #397: GFLOPs: 760.1893. Time: 304.6773 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #398: GFLOPs: 815.3177. Time: 284.0763 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #399: GFLOPs: 793.1683. Time: 292.0092 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #400: GFLOPs: 781.8235. Time: 296.2464 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #401: GFLOPs: 772.6748. Time: 299.7541 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #402: GFLOPs: 774.8403. Time: 298.9163 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #403: GFLOPs: 607.1266. Time: 381.4895 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #404: GFLOPs: 772.8989. Time: 299.6672 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #405: GFLOPs: 751.8093. Time: 308.0734 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #406: GFLOPs: 734.0153. Time: 315.5417 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #407: GFLOPs: 812.6473. Time: 285.0098 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #408: GFLOPs: 753.0175. Time: 307.5791 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #409: GFLOPs: 817.0630. Time: 283.4695 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #410: GFLOPs: 736.0463. Time: 314.6710 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #411: GFLOPs: 718.0862. Time: 322.5412 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #412: GFLOPs: 1017.4006. Time: 227.6511 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #413: GFLOPs: 779.9068. Time: 296.9745 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #414: GFLOPs: 799.7919. Time: 289.5908 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #415: GFLOPs: 728.9255. Time: 317.7450 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #416: GFLOPs: 749.0277. Time: 309.2174 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #417: GFLOPs: 595.3256. Time: 389.0517 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #418: GFLOPs: 777.7252. Time: 297.8075 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #419: GFLOPs: 775.9071. Time: 298.5053 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #420: GFLOPs: 744.8303. Time: 310.9600 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #421: GFLOPs: 716.9847. Time: 323.0368 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #422: GFLOPs: 794.4432. Time: 291.5406 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #423: GFLOPs: 777.3771. Time: 297.9409 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #424: GFLOPs: 773.2075. Time: 299.5476 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #425: GFLOPs: 753.8936. Time: 307.2216 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #426: GFLOPs: 765.0264. Time: 302.7509 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #427: GFLOPs: 650.4663. Time: 356.0713 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #428: GFLOPs: 803.7450. Time: 288.1665 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #429: GFLOPs: 590.8840. Time: 391.9761 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #430: GFLOPs: 607.2645. Time: 381.4029 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #431: GFLOPs: 765.9068. Time: 302.4029 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #432: GFLOPs: 606.1926. Time: 382.0773 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #433: GFLOPs: 903.3607. Time: 256.3897 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #434: GFLOPs: 151.7161. Time: 1526.6176 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #435: GFLOPs: 684.8532. Time: 338.1928 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #436: GFLOPs: 662.8296. Time: 349.4298 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #437: GFLOPs: 690.5886. Time: 335.3841 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #438: GFLOPs: 700.9495. Time: 330.4267 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #439: GFLOPs: 744.6705. Time: 311.0267 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #440: GFLOPs: 736.0977. Time: 314.6490 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #441: GFLOPs: 378.9734. Time: 611.1574 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #442: GFLOPs: 875.1882. Time: 264.6430 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #443: GFLOPs: 122.0294. Time: 1898.0044 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #444: GFLOPs: 17.3307. Time: 13364.2815 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #445: GFLOPs: 1.0835. Time: 213757.0487 us. Best GFLOPs: 1020.4693
2024-04-29 06:35:50 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #446: GFLOPs: 39.0276. Time: 5934.5875 us. Best GFLOPs: 1020.4693
2024-04-29 07:05:14 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:05:15 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:05:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:05:20 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:05:32 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:05:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:05:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:06:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:06:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9663  0.8805  0.8632  0.8541  0.8451  0.8250  0.8190  0.8181  0.8008  0.8007  0.7986  0.7953  0.7872  0.7855  0.7777  0.7739
[17 : 32]:	0.7738  0.7738  0.7738  0.7728  0.7694  0.7686  0.7679  0.7661  0.7658  0.7644  0.7631  0.7629  0.7603  0.7588  0.7569  0.7569
[33 : 48]:	0.7534  0.7485  0.7451  0.7443  0.7440  0.7439  0.7407  0.7405  0.7389  0.7373  0.7366  0.7366  0.7347  0.7347  0.7344  0.7344
[49 : 64]:	0.7338  0.7331  0.7325  0.7324  0.7314  0.7277  0.7274  0.7272  0.7262  0.7251  0.7248  0.7247  0.7237  0.7230  0.7214  0.7198
2024-04-29 07:06:21 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:06:21 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #447: GFLOPs: 298.5485. Time: 775.7948 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #448: GFLOPs: 289.9785. Time: 798.7228 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #449: GFLOPs: 866.2396. Time: 267.3769 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #450: GFLOPs: 534.2855. Time: 433.4994 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #451: GFLOPs: 450.5462. Time: 514.0702 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #452: GFLOPs: 431.9978. Time: 536.1426 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #453: GFLOPs: 436.6610. Time: 530.4170 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #454: GFLOPs: 554.6595. Time: 417.5758 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #455: GFLOPs: 858.0472. Time: 269.9297 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #456: GFLOPs: 757.7380. Time: 305.6629 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #457: GFLOPs: 804.3959. Time: 287.9334 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #458: GFLOPs: 824.6848. Time: 280.8496 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #459: GFLOPs: 710.9106. Time: 325.7968 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #460: GFLOPs: 773.6605. Time: 299.3722 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #461: GFLOPs: 564.6720. Time: 410.1716 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #462: GFLOPs: 541.1922. Time: 427.9670 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #463: GFLOPs: 807.1044. Time: 286.9671 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #464: GFLOPs: 741.0189. Time: 312.5594 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #465: GFLOPs: 391.0036. Time: 592.3536 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #466: GFLOPs: 46.3799. Time: 4993.8154 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #467: GFLOPs: 798.9171. Time: 289.9080 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #468: GFLOPs: 775.4456. Time: 298.6830 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #469: GFLOPs: 800.7497. Time: 289.2444 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #470: GFLOPs: 741.9073. Time: 312.1851 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #471: GFLOPs: 728.5482. Time: 317.9095 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #472: GFLOPs: 803.6826. Time: 288.1889 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #473: GFLOPs: 382.0569. Time: 606.2250 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #474: GFLOPs: 401.4125. Time: 576.9935 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #475: GFLOPs: 434.9763. Time: 532.4713 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #476: GFLOPs: 871.1012. Time: 265.8846 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #477: GFLOPs: 512.6886. Time: 451.7604 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #478: GFLOPs: 733.7560. Time: 315.6532 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #479: GFLOPs: 750.7597. Time: 308.5040 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #480: GFLOPs: 652.5277. Time: 354.9465 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #481: GFLOPs: 728.4828. Time: 317.9381 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #482: GFLOPs: 779.0906. Time: 297.2856 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #483: GFLOPs: 757.6975. Time: 305.6793 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #484: GFLOPs: 816.7195. Time: 283.5887 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #485: GFLOPs: 724.1610. Time: 319.8355 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #486: GFLOPs: 648.6908. Time: 357.0459 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #487: GFLOPs: 658.5866. Time: 351.6810 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #488: GFLOPs: 765.4051. Time: 302.6011 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #489: GFLOPs: 769.4852. Time: 300.9966 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #490: GFLOPs: 748.7592. Time: 309.3283 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #491: GFLOPs: 719.8473. Time: 321.7521 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #492: GFLOPs: 831.3326. Time: 278.6038 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #493: GFLOPs: 722.5263. Time: 320.5591 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #494: GFLOPs: 759.8811. Time: 304.8009 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #495: GFLOPs: 696.8859. Time: 332.3534 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #496: GFLOPs: 759.7015. Time: 304.8729 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #497: GFLOPs: 666.5775. Time: 347.4651 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #498: GFLOPs: 774.8077. Time: 298.9289 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #499: GFLOPs: 796.8937. Time: 290.6441 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #500: GFLOPs: 954.5860. Time: 242.6313 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #501: GFLOPs: 766.9440. Time: 301.9939 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #502: GFLOPs: 905.2452. Time: 255.8560 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #503: GFLOPs: 720.9586. Time: 321.2562 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #504: GFLOPs: 635.9034. Time: 364.2258 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #505: GFLOPs: 608.5288. Time: 380.6104 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #506: GFLOPs: 753.7610. Time: 307.2757 us. Best GFLOPs: 1020.4693
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #507: GFLOPs: 1093.1194. Time: 211.8821 us. Best GFLOPs: 1093.1194
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #508: GFLOPs: 39.6761. Time: 5837.5757 us. Best GFLOPs: 1093.1194
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #509: GFLOPs: 41.3580. Time: 5600.1781 us. Best GFLOPs: 1093.1194
2024-04-29 07:07:36 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #510: GFLOPs: 180.3246. Time: 1284.4197 us. Best GFLOPs: 1093.1194
2024-04-29 07:36:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:36:42 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:36:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:36:47 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:36:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:37:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:37:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:37:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 07:37:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8768  0.8559  0.8502  0.8098  0.8098  0.8028  0.7949  0.7861  0.7846  0.7761  0.7758  0.7728  0.7689  0.7555  0.7374  0.7324
[17 : 32]:	0.7311  0.7265  0.7225  0.7184  0.7161  0.7161  0.7161  0.7145  0.7139  0.7108  0.7094  0.7094  0.7071  0.7018  0.7008  0.7002
[33 : 48]:	0.6989  0.6981  0.6975  0.6975  0.6928  0.6903  0.6889  0.6884  0.6879  0.6879  0.6867  0.6859  0.6851  0.6851  0.6850  0.6846
[49 : 64]:	0.6823  0.6820  0.6819  0.6816  0.6816  0.6808  0.6795  0.6781  0.6781  0.6777  0.6776  0.6768  0.6768  0.6767  0.6753  0.6751
2024-04-29 07:37:46 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:37:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #511: GFLOPs: 1131.9466. Time: 204.6143 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #512: GFLOPs: 376.2908. Time: 615.5144 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #513: GFLOPs: 449.7661. Time: 514.9619 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #514: GFLOPs: 408.7216. Time: 566.6752 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #515: GFLOPs: 483.9808. Time: 478.5570 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #516: GFLOPs: 482.5682. Time: 479.9579 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #517: GFLOPs: 354.2942. Time: 653.7291 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #518: GFLOPs: 954.4471. Time: 242.6666 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #519: GFLOPs: 872.6621. Time: 265.4091 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #520: GFLOPs: 691.4536. Time: 334.9645 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #521: GFLOPs: 532.8335. Time: 434.6806 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #522: GFLOPs: 78.9607. Time: 2933.2636 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #523: GFLOPs: 699.9616. Time: 330.8930 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #524: GFLOPs: 834.7101. Time: 277.4765 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #525: GFLOPs: 1024.8051. Time: 226.0063 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #526: GFLOPs: 767.6028. Time: 301.7347 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #527: GFLOPs: 102.1634. Time: 2267.0785 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #528: GFLOPs: 811.3885. Time: 285.4519 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #529: GFLOPs: 719.9026. Time: 321.7274 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #530: GFLOPs: 809.9294. Time: 285.9662 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #531: GFLOPs: 798.8299. Time: 289.9396 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #532: GFLOPs: 781.2995. Time: 296.4451 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #533: GFLOPs: 807.6088. Time: 286.7879 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #534: GFLOPs: 617.0016. Time: 375.3838 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #535: GFLOPs: 634.5241. Time: 365.0175 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #536: GFLOPs: 782.4932. Time: 295.9929 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #537: GFLOPs: 954.0064. Time: 242.7787 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #538: GFLOPs: 694.2361. Time: 333.6220 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #539: GFLOPs: 811.4044. Time: 285.4463 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #540: GFLOPs: 798.9352. Time: 289.9014 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #541: GFLOPs: 775.4219. Time: 298.6921 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #542: GFLOPs: 791.2897. Time: 292.7024 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #543: GFLOPs: 576.6992. Time: 401.6174 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #544: GFLOPs: 788.7479. Time: 293.6457 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #545: GFLOPs: 780.7112. Time: 296.6685 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #546: GFLOPs: 770.0803. Time: 300.7640 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #547: GFLOPs: 813.4331. Time: 284.7344 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #548: GFLOPs: 678.9079. Time: 341.1544 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #549: GFLOPs: 603.1205. Time: 384.0235 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #550: GFLOPs: 780.2064. Time: 296.8604 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #551: GFLOPs: 760.6599. Time: 304.4888 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #552: GFLOPs: 747.7229. Time: 309.7570 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #553: GFLOPs: 729.2041. Time: 317.6236 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #554: GFLOPs: 610.7751. Time: 379.2106 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #555: GFLOPs: 768.1143. Time: 301.5338 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #556: GFLOPs: 753.9013. Time: 307.2185 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #557: GFLOPs: 831.7649. Time: 278.4590 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #558: GFLOPs: 837.0223. Time: 276.7100 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #559: GFLOPs: 896.7756. Time: 258.2724 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #560: GFLOPs: 683.1193. Time: 339.0512 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #561: GFLOPs: 970.6283. Time: 238.6211 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #562: GFLOPs: 764.7615. Time: 302.8558 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #563: GFLOPs: 470.1345. Time: 492.6514 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #564: GFLOPs: 561.3156. Time: 412.6242 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #565: GFLOPs: 799.1962. Time: 289.8067 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #566: GFLOPs: 808.4364. Time: 286.4943 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #567: GFLOPs: 879.0954. Time: 263.4668 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #568: GFLOPs: 610.9179. Time: 379.1220 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #569: GFLOPs: 709.9936. Time: 326.2176 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #570: GFLOPs: 939.5645. Time: 246.5104 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #571: GFLOPs: 665.0048. Time: 348.2868 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #572: GFLOPs: 48.3868. Time: 4786.6823 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #573: GFLOPs: 38.9621. Time: 5944.5492 us. Best GFLOPs: 1131.9466
2024-04-29 07:39:25 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #574: GFLOPs: 30.4147. Time: 7615.1496 us. Best GFLOPs: 1131.9466
2024-04-29 08:20:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 08:20:17 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 08:20:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 08:20:21 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 08:20:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 08:20:47 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 08:21:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 08:21:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 08:21:21 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9669  0.9554  0.9554  0.9022  0.9022  0.8318  0.8259  0.8107  0.8107  0.8060  0.8060  0.7938  0.7906  0.7868  0.7834  0.7781
[17 : 32]:	0.7725  0.7707  0.7681  0.7681  0.7675  0.7675  0.7571  0.7553  0.7537  0.7537  0.7474  0.7474  0.7464  0.7397  0.7389  0.7353
[33 : 48]:	0.7353  0.7306  0.7301  0.7301  0.7230  0.7164  0.7142  0.7136  0.7130  0.7124  0.7123  0.7114  0.7114  0.7108  0.7082  0.7082
[49 : 64]:	0.7070  0.7065  0.7056  0.7042  0.7027  0.7017  0.6997  0.6989  0.6977  0.6968  0.6965  0.6952  0.6952  0.6948  0.6942  0.6931
2024-04-29 08:21:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 08:21:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #575: GFLOPs: 305.9622. Time: 756.9969 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #576: GFLOPs: 482.4262. Time: 480.0991 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #577: GFLOPs: 733.8689. Time: 315.6046 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #578: GFLOPs: 796.7189. Time: 290.7078 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #579: GFLOPs: 848.0706. Time: 273.1051 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #580: GFLOPs: 107.7110. Time: 2150.3142 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #581: GFLOPs: 984.3017. Time: 235.3063 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #582: GFLOPs: 337.4083. Time: 686.4455 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #583: GFLOPs: 1114.0519. Time: 207.9009 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #584: GFLOPs: 760.4182. Time: 304.5856 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #585: GFLOPs: 548.8973. Time: 421.9595 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #586: GFLOPs: 778.8574. Time: 297.3746 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #587: GFLOPs: 913.9182. Time: 253.4280 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #588: GFLOPs: 822.0101. Time: 281.7635 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #589: GFLOPs: 905.3392. Time: 255.8294 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #590: GFLOPs: 891.0627. Time: 259.9283 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #591: GFLOPs: 499.7644. Time: 463.4432 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #592: GFLOPs: 789.3203. Time: 293.4327 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #593: GFLOPs: 940.2809. Time: 246.3226 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #594: GFLOPs: 894.3753. Time: 258.9656 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #595: GFLOPs: 868.6418. Time: 266.6374 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #596: GFLOPs: 728.0618. Time: 318.1219 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #597: GFLOPs: 994.5630. Time: 232.8786 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #598: GFLOPs: 214.7676. Time: 1078.4326 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #599: GFLOPs: 43.1572. Time: 5366.7145 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #600: GFLOPs: 952.3262. Time: 243.2070 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #601: GFLOPs: 1008.4575. Time: 229.6700 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #602: GFLOPs: 80.4189. Time: 2880.0748 us. Best GFLOPs: 1131.9466
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #603: GFLOPs: 1165.1687. Time: 198.7802 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #604: GFLOPs: 486.0053. Time: 476.5635 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #605: GFLOPs: 463.6747. Time: 499.5149 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #606: GFLOPs: 65.9908. Time: 3509.7667 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #607: GFLOPs: 996.2720. Time: 232.4791 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #608: GFLOPs: 633.9872. Time: 365.3266 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #609: GFLOPs: 774.6553. Time: 298.9877 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #610: GFLOPs: 771.0320. Time: 300.3927 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #611: GFLOPs: 863.6873. Time: 268.1670 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #612: GFLOPs: 926.9778. Time: 249.8576 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #613: GFLOPs: 740.4945. Time: 312.7808 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #614: GFLOPs: 852.1474. Time: 271.7985 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #615: GFLOPs: 728.6924. Time: 317.8466 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #616: GFLOPs: 807.2296. Time: 286.9226 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #617: GFLOPs: 667.0556. Time: 347.2161 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #618: GFLOPs: 81.5057. Time: 2841.6715 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #619: GFLOPs: 1009.8818. Time: 229.3461 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #620: GFLOPs: 818.5763. Time: 282.9454 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #621: GFLOPs: 856.4091. Time: 270.4460 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #622: GFLOPs: 855.6781. Time: 270.6770 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #623: GFLOPs: 747.8823. Time: 309.6910 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #624: GFLOPs: 879.0601. Time: 263.4773 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #625: GFLOPs: 769.5487. Time: 300.9717 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #626: GFLOPs: 838.0041. Time: 276.3858 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #627: GFLOPs: 808.5928. Time: 286.4389 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #628: GFLOPs: 678.8188. Time: 341.1992 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #629: GFLOPs: 781.7043. Time: 296.2916 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #630: GFLOPs: 776.1346. Time: 298.4179 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #631: GFLOPs: 622.7963. Time: 371.8911 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #632: GFLOPs: 779.6976. Time: 297.0541 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #633: GFLOPs: 896.2495. Time: 258.4240 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #634: GFLOPs: 834.7729. Time: 277.4556 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #635: GFLOPs: 811.1812. Time: 285.5249 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #636: GFLOPs: 55.1742. Time: 4197.8382 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #637: GFLOPs: 101.1101. Time: 2290.6961 us. Best GFLOPs: 1165.1687
2024-04-29 08:22:48 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #638: GFLOPs: 11.1702. Time: 20734.7574 us. Best GFLOPs: 1165.1687
2024-04-29 09:04:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 09:04:33 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 09:04:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 09:04:38 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 09:04:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 09:05:04 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 09:05:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 09:05:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x42d1a88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3b556c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4262178)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x31e7268)]: 0 failure(s)
2024-04-29 09:05:38 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9763  0.9763  0.9235  0.9235  0.9016  0.9016  0.8497  0.8467  0.8231  0.8231  0.8206  0.8178  0.8042  0.7978  0.7978  0.7969
[17 : 32]:	0.7948  0.7930  0.7928  0.7875  0.7875  0.7860  0.7858  0.7858  0.7858  0.7830  0.7815  0.7770  0.7757  0.7757  0.7738  0.7738
[33 : 48]:	0.7677  0.7619  0.7604  0.7496  0.7488  0.7472  0.7419  0.7419  0.7402  0.7378  0.7357  0.7338  0.7309  0.7286  0.7252  0.7239
[49 : 64]:	0.7239  0.7225  0.7225  0.7225  0.7167  0.7161  0.7160  0.7160  0.7153  0.7139  0.7126  0.7112  0.7108  0.7106  0.7102  0.7096
2024-04-29 09:05:39 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 09:05:39 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #639: GFLOPs: 456.2282. Time: 507.6679 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #640: GFLOPs: 808.8011. Time: 286.3651 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #641: GFLOPs: 1161.0957. Time: 199.4775 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #642: GFLOPs: 1035.4071. Time: 223.6921 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #643: GFLOPs: 449.2687. Time: 515.5320 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #644: GFLOPs: 1151.4850. Time: 201.1424 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #645: GFLOPs: 1039.3742. Time: 222.8383 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #646: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(56), T.int64(56), T.int64(64)), "float32"), p1: T.Buffer((T.int64(2), T.int64(1), T.int64(3), T.int64(3), T.int64(64), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(58), T.int64(58), T.int64(64)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(2), T.int64(56), T.int64(56), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(32), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(14) * T.int64(7) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(14) * T.int64(4) + ow_2_init * T.int64(4) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(32), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0 in range(T.int64(32)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(6)):
                    for ax4_fused in T.vectorized(T.int64(2)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(14) * T.int64(7) + ax2)
                            v_i3 = T.axis.spatial(T.int64(58), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(14) * T.int64(4) + ax3)
                            v_i4 = T.axis.spatial(T.int64(64), ic_0 * T.int64(2) + ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(57) and T.int64(1) <= v_i3 and v_i3 < T.int64(57), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(32), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(2), oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(14) * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(14) * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)], p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(64), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(64)] * p1[v_oc_chunk, v_ic // T.int64(64), v_kh, v_kw, v_ic % T.int64(64), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(4)):
                for ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(14) * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(14) * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[8, 1, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 14, 1, 4])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 32, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b69)
l106 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l106)
sch.annotate(block_or_loop=l106, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l106, ann_key="pragma_unroll_explicit", ann_val=1)
l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b70)
l113 = sch.fuse(l112, preserve_unit_iters=True)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131 = sch.get_loops(block=b114)
b132 = sch.decompose_reduction(block=b114, loop=l116)
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #647: GFLOPs: 591.9089. Time: 391.2974 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #648: GFLOPs: 454.7039. Time: 509.3698 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #649: GFLOPs: 1048.6722. Time: 220.8625 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #650: GFLOPs: 830.3325. Time: 278.9394 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #651: GFLOPs: 547.3544. Time: 423.1489 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #652: GFLOPs: 44.6450. Time: 5187.8748 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #653: GFLOPs: 1030.6653. Time: 224.7213 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #654: GFLOPs: 911.8997. Time: 253.9889 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #655: GFLOPs: 1064.3818. Time: 217.6028 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #656: GFLOPs: 802.0764. Time: 288.7660 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #657: GFLOPs: 786.4569. Time: 294.5011 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #658: GFLOPs: 464.7641. Time: 498.3440 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #659: GFLOPs: 1074.7740. Time: 215.4987 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #660: GFLOPs: 45.7095. Time: 5067.0534 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #661: GFLOPs: 760.7279. Time: 304.4616 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #662: GFLOPs: 39.4784. Time: 5866.8125 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #663: GFLOPs: 1060.6960. Time: 218.3589 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #664: GFLOPs: 1113.4824. Time: 208.0073 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #665: GFLOPs: 428.9704. Time: 539.9263 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #666: GFLOPs: 557.3801. Time: 415.5377 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #667: GFLOPs: 43.6483. Time: 5306.3305 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #668: GFLOPs: 866.5456. Time: 267.2824 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #669: GFLOPs: 44.4304. Time: 5212.9309 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #670: GFLOPs: 43.2585. Time: 5354.1495 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #671: GFLOPs: 1037.4743. Time: 223.2464 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #672: GFLOPs: 908.7774. Time: 254.8615 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #673: GFLOPs: 854.7254. Time: 270.9788 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #674: GFLOPs: 745.4295. Time: 310.7100 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #675: GFLOPs: 918.9998. Time: 252.0266 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #676: GFLOPs: 949.3107. Time: 243.9796 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #677: GFLOPs: 705.0631. Time: 328.4989 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #678: GFLOPs: 468.4891. Time: 494.3817 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #679: GFLOPs: 798.8511. Time: 289.9319 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #680: GFLOPs: 922.8266. Time: 250.9815 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #681: GFLOPs: 769.0618. Time: 301.1623 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #682: GFLOPs: 531.9857. Time: 435.3734 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #683: GFLOPs: 818.2500. Time: 283.0582 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #684: GFLOPs: 760.9337. Time: 304.3792 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #685: GFLOPs: 916.1217. Time: 252.8184 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #686: GFLOPs: 842.9770. Time: 274.7553 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #687: GFLOPs: 896.0523. Time: 258.4809 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #688: GFLOPs: 131.3708. Time: 1763.0435 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #689: GFLOPs: 133.7273. Time: 1731.9760 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #690: GFLOPs: 43.2096. Time: 5360.2075 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #691: GFLOPs: 697.5191. Time: 332.0517 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #692: GFLOPs: 1008.5981. Time: 229.6380 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #693: GFLOPs: 885.6667. Time: 261.5119 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #694: GFLOPs: 625.1944. Time: 370.4646 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #695: GFLOPs: 881.3501. Time: 262.7927 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #696: GFLOPs: 878.9979. Time: 263.4960 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #697: GFLOPs: 1016.1405. Time: 227.9335 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #698: GFLOPs: 694.3728. Time: 333.5563 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #699: GFLOPs: 906.4115. Time: 255.5268 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #700: GFLOPs: 5.6911. Time: 40697.5723 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #701: GFLOPs: 19.2480. Time: 12033.0329 us. Best GFLOPs: 1165.1687
2024-04-29 09:07:18 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_1] Trial #702: GFLOPs: 139.3747. Time: 1661.7970 us. Best GFLOPs: 1165.1687
