2024-04-28 20:48:02 [INFO] [task_scheduler.cc:160] Initializing Task #67: "fused_nn_contrib_conv2d_NCHWc_4"
2024-04-28 20:48:02 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4), T.int64(256), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
2024-04-28 20:48:02 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 20:48:02 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(56) + oh_1 * T.int64(4) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(4), T.int64(4), T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(56), oh_1 * T.int64(4) + ax2)
                        v3 = T.axis.spatial(T.int64(56), ow_0 * T.int64(4) + ax3)
                        v4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 4, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 2, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:48:02 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(14), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(56) + oh_1 * T.int64(4) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(56), T.int64(4), T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(56), ax2)
                        v3 = T.axis.spatial(T.int64(56), ow_0 * T.int64(4) + ax3)
                        v4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 4, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 2, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:48:02 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(56) + oh_1 * T.int64(4) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(256), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 4, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 1, 2, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-28 22:28:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:28:04 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 22:28:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 22:28:06 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 22:28:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 22:28:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 22:28:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 22:28:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 22:28:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9994  0.9993  0.9992  0.9986  0.9981  0.9975  0.9974  0.9971  0.9969  0.9959  0.9957  0.9948  0.9942  0.9942  0.9931  0.9931
[17 : 32]:	0.9930  0.9922  0.9921  0.9916  0.9914  0.9909  0.9905  0.9903  0.9902  0.9901  0.9900  0.9893  0.9885  0.9884  0.9880  0.9878
[33 : 48]:	0.9873  0.9870  0.9859  0.9854  0.9853  0.9851  0.9839  0.9833  0.9832  0.9829  0.9827  0.9827  0.9813  0.9811  0.9806  0.9805
[49 : 64]:	0.9799  0.9796  0.9777  0.9770  0.9768  0.9766  0.9760  0.9759  0.9757  0.9727  0.9723  0.9716  0.9694  0.9689  0.9685  0.9685
2024-04-28 22:28:18 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:28:19 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #1: GFLOPs: 46.4288. Time: 4426.5854 us. Best GFLOPs: 46.4288
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #2: GFLOPs: 78.6305. Time: 2613.7571 us. Best GFLOPs: 78.6305
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #3: GFLOPs: 43.7822. Time: 4694.1637 us. Best GFLOPs: 78.6305
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #4: GFLOPs: 58.5709. Time: 3508.9228 us. Best GFLOPs: 78.6305
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #5: GFLOPs: 74.0634. Time: 2774.9311 us. Best GFLOPs: 78.6305
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:121] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #6: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(512), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(128) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(128) // T.int64(16) * T.int64(7) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(2) * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(128) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(128) // T.int64(16) * T.int64(7) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(2) * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 4, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 8, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 8, 1, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[128, 2])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l91)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b92 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b92)
b110 = sch.decompose_reduction(block=b92, loop=l94)
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #7: GFLOPs: 39.4394. Time: 5211.0607 us. Best GFLOPs: 78.6305
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #8: GFLOPs: 7.3688. Time: 27890.8678 us. Best GFLOPs: 78.6305
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #9: GFLOPs: 58.9225. Time: 3487.9850 us. Best GFLOPs: 78.6305
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:121] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #10: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(8)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(14) * T.int64(28) + oh_1 * T.int64(14) + oh_2_init * T.int64(14) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) // T.int64(2) * T.int64(8) + ow_1 * T.int64(8) + ow_2_init * T.int64(8) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(8)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(14) * T.int64(28) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                            v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) // T.int64(2) * T.int64(8) + ow_1 * T.int64(8) + ow_2 * T.int64(8) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(28), T.int64(8)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(14) * T.int64(28) + ax2)
                        v3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) // T.int64(2) * T.int64(8) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 4, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 1, 14])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 8])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #11: GFLOPs: 230.5466. Time: 891.4507 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #12: GFLOPs: 131.9340. Time: 1557.7555 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #13: GFLOPs: 3.2288. Time: 63652.6897 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #14: GFLOPs: 70.6820. Time: 2907.6829 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #15: GFLOPs: 27.0267. Time: 7604.3617 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #16: GFLOPs: 60.0306. Time: 3423.6017 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #17: GFLOPs: 54.0988. Time: 3798.9896 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #18: GFLOPs: 37.8361. Time: 5431.8697 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #19: GFLOPs: 3.8984. Time: 52719.1940 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #20: GFLOPs: 43.1536. Time: 4762.5465 us. Best GFLOPs: 230.5466
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #21: GFLOPs: 361.1538. Time: 569.0676 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #22: GFLOPs: 68.5386. Time: 2998.6172 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #23: GFLOPs: 98.9588. Time: 2076.8331 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:121] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #24: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(56), T.int64(14), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(16) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(28) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(56), T.int64(14), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(28) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(56), T.int64(28)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(56), ax2)
                        v3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(28) + ax3)
                        v4 = T.axis.spatial(T.int64(4), ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 4, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 56, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 14, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[4, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #25: GFLOPs: 115.5444. Time: 1778.7179 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #26: GFLOPs: 19.9635. Time: 10294.8222 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #27: GFLOPs: 88.0880. Time: 2333.1323 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #28: GFLOPs: 132.5926. Time: 1550.0180 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #29: GFLOPs: 80.5241. Time: 2552.2904 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #30: GFLOPs: 110.3735. Time: 1862.0491 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #31: GFLOPs: 40.9131. Time: 5023.3459 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:121] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #32: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(64), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(28)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(28) + ow_2_init * T.int64(28) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(28)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(8) * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(28) + ow_2 * T.int64(28) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 2, 2, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 28])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[8, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l91)
l92 = sch.fuse(l90, preserve_unit_iters=True)
sch.vectorize(loop=l92)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b93 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b93)
b111 = sch.decompose_reduction(block=b93, loop=l95)
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #33: GFLOPs: 33.1191. Time: 6205.5009 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #34: GFLOPs: 3.3106. Time: 62079.9657 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #35: GFLOPs: 24.0283. Time: 8553.2849 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #36: GFLOPs: 11.8918. Time: 17282.6332 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #37: GFLOPs: 67.5440. Time: 3042.7720 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #38: GFLOPs: 130.3367. Time: 1576.8460 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #39: GFLOPs: 44.1719. Time: 4652.7535 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #40: GFLOPs: 28.7590. Time: 7146.3267 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:121] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #41: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(448), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(4), T.int64(1), T.int64(8), T.int64(1), T.int64(4), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(224) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(8) * T.int64(8) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(224) // T.int64(112) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(7) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(16) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(4) + ow_2_init * T.int64(4) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(4), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(4), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(224) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(8) * T.int64(8) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(224) // T.int64(112) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(7) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(16) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(224) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(8) * T.int64(8) + ax1)
                        v2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(224) // T.int64(112) * T.int64(28) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(7) + ax2)
                        v3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(16) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(4) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 1, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 2, 1, 4])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[64, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l98, l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #42: GFLOPs: 114.8428. Time: 1789.5839 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #43: GFLOPs: 33.6128. Time: 6114.3618 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #44: GFLOPs: 87.0213. Time: 2361.7311 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #45: GFLOPs: 16.0210. Time: 12828.1899 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #46: GFLOPs: 77.1817. Time: 2662.8183 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #47: GFLOPs: 6.9240. Time: 29682.2388 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #48: GFLOPs: 32.7450. Time: 6276.4056 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #49: GFLOPs: 115.3944. Time: 1781.0296 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #50: GFLOPs: 42.8437. Time: 4796.9901 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #51: GFLOPs: 16.0228. Time: 12826.7687 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #52: GFLOPs: 69.5293. Time: 2955.8871 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #53: GFLOPs: 4.6439. Time: 44256.0673 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #54: GFLOPs: 21.8185. Time: 9419.5722 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #55: GFLOPs: 40.9538. Time: 5018.3577 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:121] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #56: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(4) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) * T.int64(4) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(2), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(4) + oh_1 * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) * T.int64(4) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(4)):
                for ax3_ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_global"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(14) * T.int64(4) + ax2)
                        v3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(14) * T.int64(4) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 2, 8, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 2, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[14, 2, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[128, 2])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l98, l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b101)
b124 = sch.decompose_reduction(block=b101, loop=l108)
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #57: GFLOPs: 36.1720. Time: 5681.7709 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #58: GFLOPs: 66.2530. Time: 3102.0599 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #59: GFLOPs: 28.5565. Time: 7196.9812 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #60: GFLOPs: 128.1453. Time: 1603.8118 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #61: GFLOPs: 188.7715. Time: 1088.7282 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #62: GFLOPs: 82.1207. Time: 2502.6699 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #63: GFLOPs: 2.2104. Time: 92977.7317 us. Best GFLOPs: 361.1538
2024-04-28 22:47:54 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #64: GFLOPs: 27.1073. Time: 7581.7544 us. Best GFLOPs: 361.1538
2024-04-28 23:29:27 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:29:27 [INFO] [evolutionary_search.cc:715] Picked top 58 candidate(s) from database
2024-04-28 23:29:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 23:29:29 [INFO] [evolutionary_search.cc:723] Sampled 454 candidate(s)
2024-04-28 23:29:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 23:29:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 23:29:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 23:29:49 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-28 23:29:51 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9851  0.9851  0.9832  0.9789  0.9789  0.9770  0.9763  0.9744  0.9425  0.9314  0.9314  0.9314  0.9309  0.9234  0.9175  0.9175
[17 : 32]:	0.9158  0.9096  0.9050  0.9050  0.9005  0.8939  0.8939  0.8856  0.8853  0.8742  0.8128  0.7534  0.7253  0.7253  0.7098  0.7074
[33 : 48]:	0.7074  0.6836  0.6835  0.6835  0.6815  0.6810  0.6773  0.6750  0.6749  0.6741  0.6713  0.6709  0.6693  0.6616  0.6603  0.6498
[49 : 64]:	0.6429  0.6393  0.6389  0.6378  0.6351  0.6345  0.6340  0.6327  0.6327  0.6303  0.6300  0.6280  0.6246  0.6229  0.6229  0.6209
2024-04-28 23:29:52 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:29:52 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #65: GFLOPs: 360.1985. Time: 570.5768 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #66: GFLOPs: 350.6348. Time: 586.1394 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #67: GFLOPs: 150.2652. Time: 1367.7209 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #68: GFLOPs: 349.4751. Time: 588.0844 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #69: GFLOPs: 359.8697. Time: 571.0980 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #70: GFLOPs: 141.0692. Time: 1456.8803 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #71: GFLOPs: 284.8009. Time: 721.6301 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #72: GFLOPs: 143.8946. Time: 1428.2740 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #73: GFLOPs: 139.7457. Time: 1470.6774 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #74: GFLOPs: 137.2855. Time: 1497.0326 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #75: GFLOPs: 137.0564. Time: 1499.5352 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #76: GFLOPs: 137.9699. Time: 1489.6070 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #77: GFLOPs: 78.1779. Time: 2628.8865 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #78: GFLOPs: 130.2353. Time: 1578.0735 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #79: GFLOPs: 118.4661. Time: 1734.8491 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #80: GFLOPs: 117.9963. Time: 1741.7576 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #81: GFLOPs: 147.2052. Time: 1396.1523 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #82: GFLOPs: 121.9966. Time: 1684.6441 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #83: GFLOPs: 104.5412. Time: 1965.9321 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #84: GFLOPs: 52.7357. Time: 3897.1906 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #85: GFLOPs: 147.7970. Time: 1390.5620 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #86: GFLOPs: 104.3614. Time: 1969.3196 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #87: GFLOPs: 103.2295. Time: 1990.9121 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #88: GFLOPs: 106.0472. Time: 1938.0131 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #89: GFLOPs: 138.3581. Time: 1485.4272 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #90: GFLOPs: 118.2465. Time: 1738.0721 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #91: GFLOPs: 217.9965. Time: 942.7715 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #92: GFLOPs: 134.3745. Time: 1529.4638 us. Best GFLOPs: 361.1538
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #93: GFLOPs: 376.1881. Time: 546.3249 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #94: GFLOPs: 375.0915. Time: 547.9220 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #95: GFLOPs: 142.9014. Time: 1438.2010 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #96: GFLOPs: 137.7301. Time: 1492.2002 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #97: GFLOPs: 150.1766. Time: 1368.5281 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #98: GFLOPs: 13.2098. Time: 15558.1693 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #99: GFLOPs: 223.9312. Time: 917.7859 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #100: GFLOPs: 206.2699. Time: 996.3687 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #101: GFLOPs: 130.0438. Time: 1580.3979 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #102: GFLOPs: 83.3469. Time: 2465.8503 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #103: GFLOPs: 184.7893. Time: 1112.1904 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #104: GFLOPs: 11.6897. Time: 17581.2923 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #105: GFLOPs: 74.2774. Time: 2766.9377 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #106: GFLOPs: 290.1207. Time: 708.3980 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #107: GFLOPs: 351.6572. Time: 584.4354 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #108: GFLOPs: 135.8130. Time: 1513.2634 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #109: GFLOPs: 150.6224. Time: 1364.4781 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #110: GFLOPs: 71.5143. Time: 2873.8451 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #111: GFLOPs: 135.4363. Time: 1517.4725 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #112: GFLOPs: 140.3729. Time: 1464.1064 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #113: GFLOPs: 87.0422. Time: 2361.1632 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #114: GFLOPs: 71.3156. Time: 2881.8509 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #115: GFLOPs: 11.3702. Time: 18075.3368 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #116: GFLOPs: 122.6889. Time: 1675.1386 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #117: GFLOPs: 54.2722. Time: 3786.8553 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #118: GFLOPs: 17.1197. Time: 12004.9219 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #119: GFLOPs: 151.1885. Time: 1359.3686 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #120: GFLOPs: 145.6653. Time: 1410.9116 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #121: GFLOPs: 146.2461. Time: 1405.3081 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #122: GFLOPs: 72.3016. Time: 2842.5487 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #123: GFLOPs: 91.1360. Time: 2255.1019 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #124: GFLOPs: 68.3250. Time: 3007.9892 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #125: GFLOPs: 164.4657. Time: 1249.6279 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #126: GFLOPs: 51.2784. Time: 4007.9394 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #127: GFLOPs: 44.0352. Time: 4667.1992 us. Best GFLOPs: 376.1881
2024-04-28 23:31:20 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #128: GFLOPs: 102.1475. Time: 2012.0016 us. Best GFLOPs: 376.1881
2024-04-29 00:32:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:32:03 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:32:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 00:32:05 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:32:10 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 00:32:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 00:32:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 00:32:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 00:32:28 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9940  0.9940  0.9940  0.9897  0.9897  0.9897  0.9760  0.9458  0.9458  0.9458  0.9458  0.9458  0.9458  0.9458  0.9458  0.9385
[17 : 32]:	0.9250  0.9250  0.9250  0.9155  0.9155  0.9155  0.9057  0.8944  0.8943  0.8830  0.8752  0.8312  0.8230  0.8230  0.8176  0.8159
[33 : 48]:	0.8159  0.8088  0.8088  0.8088  0.8037  0.8000  0.7994  0.7944  0.7885  0.7847  0.7812  0.7810  0.7596  0.7571  0.7539  0.7523
[49 : 64]:	0.7470  0.7403  0.7356  0.7246  0.7207  0.7156  0.6981  0.6946  0.6946  0.6942  0.6942  0.6914  0.6882  0.6882  0.6874  0.6694
2024-04-29 00:32:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:32:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #129: GFLOPs: 374.9470. Time: 548.1333 us. Best GFLOPs: 376.1881
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #130: GFLOPs: 151.3028. Time: 1358.3419 us. Best GFLOPs: 376.1881
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #131: GFLOPs: 370.0595. Time: 555.3726 us. Best GFLOPs: 376.1881
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #132: GFLOPs: 371.8717. Time: 552.6662 us. Best GFLOPs: 376.1881
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #133: GFLOPs: 381.3953. Time: 538.8658 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #134: GFLOPs: 370.5845. Time: 554.5858 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #135: GFLOPs: 134.6991. Time: 1525.7773 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #136: GFLOPs: 354.8746. Time: 579.1367 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #137: GFLOPs: 341.7089. Time: 601.4502 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #138: GFLOPs: 150.8659. Time: 1362.2757 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #139: GFLOPs: 363.9802. Time: 564.6485 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #140: GFLOPs: 374.6948. Time: 548.5022 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #141: GFLOPs: 358.8701. Time: 572.6888 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #142: GFLOPs: 354.3030. Time: 580.0710 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #143: GFLOPs: 356.1527. Time: 577.0583 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #144: GFLOPs: 179.7895. Time: 1143.1194 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #145: GFLOPs: 347.1438. Time: 592.0338 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #146: GFLOPs: 346.4289. Time: 593.2557 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #147: GFLOPs: 348.4764. Time: 589.7699 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #148: GFLOPs: 367.6128. Time: 559.0689 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #149: GFLOPs: 357.3369. Time: 575.1460 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #150: GFLOPs: 342.3701. Time: 600.2887 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #151: GFLOPs: 235.3893. Time: 873.1105 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #152: GFLOPs: 174.8318. Time: 1175.5352 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #153: GFLOPs: 342.9093. Time: 599.3447 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #154: GFLOPs: 135.8886. Time: 1512.4223 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #155: GFLOPs: 234.8567. Time: 875.0908 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #156: GFLOPs: 139.9349. Time: 1468.6891 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #157: GFLOPs: 143.7778. Time: 1429.4346 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #158: GFLOPs: 144.3353. Time: 1423.9126 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #159: GFLOPs: 111.2479. Time: 1847.4138 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #160: GFLOPs: 376.6383. Time: 545.6717 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #161: GFLOPs: 370.6055. Time: 554.5544 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #162: GFLOPs: 106.1705. Time: 1935.7623 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #163: GFLOPs: 106.7375. Time: 1925.4803 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #164: GFLOPs: 171.6002. Time: 1197.6725 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #165: GFLOPs: 139.9129. Time: 1468.9208 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #166: GFLOPs: 135.6844. Time: 1514.6977 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #167: GFLOPs: 114.4370. Time: 1795.9299 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #168: GFLOPs: 127.2805. Time: 1614.7086 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #169: GFLOPs: 126.0183. Time: 1630.8807 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #170: GFLOPs: 91.4544. Time: 2247.2488 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #171: GFLOPs: 126.7605. Time: 1621.3325 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #172: GFLOPs: 119.0336. Time: 1726.5794 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #173: GFLOPs: 126.9153. Time: 1619.3541 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #174: GFLOPs: 121.4994. Time: 1691.5384 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #175: GFLOPs: 285.2912. Time: 720.3900 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #176: GFLOPs: 129.3478. Time: 1588.9015 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #177: GFLOPs: 119.5522. Time: 1719.0887 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #178: GFLOPs: 148.2492. Time: 1386.3208 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #179: GFLOPs: 133.7220. Time: 1536.9262 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #180: GFLOPs: 121.0535. Time: 1697.7697 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #181: GFLOPs: 134.7043. Time: 1525.7190 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #182: GFLOPs: 115.8410. Time: 1774.1632 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #183: GFLOPs: 124.6243. Time: 1649.1241 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #184: GFLOPs: 51.3583. Time: 4001.7040 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #185: GFLOPs: 92.3637. Time: 2225.1263 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #186: GFLOPs: 174.9127. Time: 1174.9911 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #187: GFLOPs: 175.4099. Time: 1171.6605 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #188: GFLOPs: 120.7457. Time: 1702.0973 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #189: GFLOPs: 231.0016. Time: 889.6946 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #190: GFLOPs: 52.5561. Time: 3910.5084 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #191: GFLOPs: 42.6895. Time: 4814.3192 us. Best GFLOPs: 381.3953
2024-04-29 00:34:12 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #192: GFLOPs: 88.1575. Time: 2331.2911 us. Best GFLOPs: 381.3953
2024-04-29 01:32:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:32:08 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:32:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 01:32:10 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 01:32:15 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 01:32:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 01:32:25 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 01:32:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x6275898)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x5ca49f8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x64b0c78)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x719c2c8)]: 0 failure(s)
2024-04-29 01:32:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9658  0.9658  0.9546  0.9546  0.9544  0.9544  0.9112  0.9108  0.9108  0.9108  0.9108  0.9108  0.9108  0.9108  0.9108  0.9108
[17 : 32]:	0.9086  0.8738  0.8738  0.8738  0.8697  0.8658  0.8658  0.8658  0.8573  0.8573  0.8465  0.8212  0.7828  0.7828  0.7820  0.7820
[33 : 48]:	0.7811  0.7667  0.7420  0.7420  0.7420  0.7420  0.7411  0.7411  0.7411  0.7411  0.7366  0.7325  0.7276  0.7276  0.7216  0.7213
[49 : 64]:	0.7193  0.6603  0.6487  0.6487  0.6419  0.6333  0.6319  0.6296  0.6296  0.6142  0.6103  0.6103  0.6103  0.6103  0.5908  0.5908
2024-04-29 01:32:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:32:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:34:18 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #193: GFLOPs: 128.6940. Time: 1596.9736 us. Best GFLOPs: 381.3953
2024-04-29 01:34:18 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #194: GFLOPs: 343.9080. Time: 597.6042 us. Best GFLOPs: 381.3953
2024-04-29 01:34:18 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #195: GFLOPs: 371.7182. Time: 552.8944 us. Best GFLOPs: 381.3953
2024-04-29 01:34:18 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #196: GFLOPs: 360.6061. Time: 569.9319 us. Best GFLOPs: 381.3953
2024-04-29 01:34:18 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #197: GFLOPs: 381.8885. Time: 538.1699 us. Best GFLOPs: 381.8885
2024-04-29 01:34:18 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #198: GFLOPs: 362.2677. Time: 567.3178 us. Best GFLOPs: 381.8885
2024-04-29 01:34:18 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #199: GFLOPs: 361.8705. Time: 567.9404 us. Best GFLOPs: 381.8885
2024-04-29 01:34:18 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #200: GFLOPs: 369.4520. Time: 556.2858 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #201: GFLOPs: 357.4310. Time: 574.9945 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #202: GFLOPs: 353.1390. Time: 581.9830 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #203: GFLOPs: 358.4701. Time: 573.3279 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #204: GFLOPs: 361.2791. Time: 568.8701 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #205: GFLOPs: 364.8078. Time: 563.3677 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #206: GFLOPs: 152.5355. Time: 1347.3641 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #207: GFLOPs: 358.1691. Time: 573.8097 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #208: GFLOPs: 358.4731. Time: 573.3231 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #209: GFLOPs: 349.0132. Time: 588.8628 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #210: GFLOPs: 349.3390. Time: 588.3137 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #211: GFLOPs: 125.8112. Time: 1633.5666 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #212: GFLOPs: 348.1546. Time: 590.3151 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #213: GFLOPs: 349.1439. Time: 588.6423 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #214: GFLOPs: 381.4350. Time: 538.8098 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #215: GFLOPs: 374.4721. Time: 548.8283 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #216: GFLOPs: 150.8358. Time: 1362.5476 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #217: GFLOPs: 375.8503. Time: 546.8158 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #218: GFLOPs: 365.3787. Time: 562.4874 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #219: GFLOPs: 377.4673. Time: 544.4734 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #220: GFLOPs: 372.5059. Time: 551.7252 us. Best GFLOPs: 381.8885
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #221: GFLOPs: 392.6940. Time: 523.3614 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #222: GFLOPs: 218.0513. Time: 942.5344 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #223: GFLOPs: 336.8176. Time: 610.1845 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #224: GFLOPs: 347.9873. Time: 590.5988 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #225: GFLOPs: 379.3107. Time: 541.8273 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #226: GFLOPs: 330.1907. Time: 622.4309 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #227: GFLOPs: 283.2532. Time: 725.5731 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #228: GFLOPs: 254.5107. Time: 807.5138 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #229: GFLOPs: 257.2251. Time: 798.9925 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #230: GFLOPs: 257.3305. Time: 798.6653 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #231: GFLOPs: 353.8164. Time: 580.8688 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #232: GFLOPs: 150.7011. Time: 1363.7652 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #233: GFLOPs: 371.4035. Time: 553.3629 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #234: GFLOPs: 352.9620. Time: 582.2749 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #235: GFLOPs: 286.6747. Time: 716.9132 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #236: GFLOPs: 385.8188. Time: 532.6876 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #237: GFLOPs: 306.5210. Time: 670.4952 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #238: GFLOPs: 276.3837. Time: 743.6072 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #239: GFLOPs: 306.2517. Time: 671.0849 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #240: GFLOPs: 332.4691. Time: 618.1654 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #241: GFLOPs: 358.2456. Time: 573.6872 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #242: GFLOPs: 197.0973. Time: 1042.7385 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #243: GFLOPs: 216.4128. Time: 949.6706 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #244: GFLOPs: 216.2448. Time: 950.4087 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #245: GFLOPs: 108.5399. Time: 1893.5061 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #246: GFLOPs: 201.7315. Time: 1018.7843 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #247: GFLOPs: 208.5319. Time: 985.5611 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #248: GFLOPs: 287.2605. Time: 715.4513 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #249: GFLOPs: 284.6879. Time: 721.9165 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #250: GFLOPs: 126.8526. Time: 1620.1548 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #251: GFLOPs: 208.1053. Time: 987.5811 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #252: GFLOPs: 118.7052. Time: 1731.3548 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #253: GFLOPs: 216.5094. Time: 949.2469 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #254: GFLOPs: 1.1664. Time: 176205.0833 us. Best GFLOPs: 392.6940
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:121] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #255: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(32), T.int64(64), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(32), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(2), T.int64(28), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(8) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(8) * T.int64(8) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + ow_2_init * T.int64(28) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(28), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(8) * T.int64(8) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + ow_2 * T.int64(28) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(256), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 2, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 4, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 28])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l91)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b92 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b92)
b110 = sch.decompose_reduction(block=b92, loop=l94)
2024-04-29 01:34:19 [INFO] [task_scheduler.cc:131] [Task #67: fused_nn_contrib_conv2d_NCHWc_4] Trial #256: GFLOPs: 146.1195. Time: 1406.5262 us. Best GFLOPs: 392.6940
