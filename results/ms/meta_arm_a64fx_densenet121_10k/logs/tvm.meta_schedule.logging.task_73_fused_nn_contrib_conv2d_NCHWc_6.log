2024-04-28 20:48:14 [INFO] [task_scheduler.cc:160] Initializing Task #73: "fused_nn_contrib_conv2d_NCHWc_6"
2024-04-28 20:48:14 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4), T.int64(1024), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
2024-04-28 20:48:14 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 20:48:14 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(128), oc_chunk_0 * T.int64(128) + oc_chunk_1 * T.int64(64) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(7), T.int64(14), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(128), oc_chunk_1 * T.int64(64) + ax1)
                        v2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + ax2)
                        v3, v4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 2, 32, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[64, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:48:14 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(4)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(128), oc_chunk_0 * T.int64(128) + oc_chunk_1 * T.int64(64) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(128), T.int64(7), T.int64(14), T.int64(4)):
                    with T.block("conv2d_NCHWc_global"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + ax2)
                        v3, v4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 2, 32, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[64, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:48:14 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(2), T.int64(4)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(128), oc_chunk_0 * T.int64(128) + oc_chunk_1 * T.int64(64) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 2, 32, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[64, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-28 22:34:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:34:42 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 22:34:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 22:34:45 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 22:34:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 22:34:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 22:34:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 22:34:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 22:34:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9988  0.9984  0.9979  0.9974  0.9973  0.9965  0.9965  0.9960  0.9953  0.9952  0.9943  0.9932  0.9928  0.9927  0.9915  0.9900
[17 : 32]:	0.9896  0.9894  0.9889  0.9888  0.9882  0.9875  0.9874  0.9867  0.9866  0.9865  0.9855  0.9852  0.9845  0.9845  0.9842  0.9841
[33 : 48]:	0.9830  0.9828  0.9827  0.9826  0.9826  0.9815  0.9810  0.9810  0.9810  0.9809  0.9802  0.9801  0.9797  0.9796  0.9795  0.9780
[49 : 64]:	0.9771  0.9768  0.9767  0.9759  0.9758  0.9754  0.9753  0.9753  0.9753  0.9750  0.9748  0.9746  0.9739  0.9737  0.9735  0.9731
2024-04-28 22:34:57 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:34:57 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #1: GFLOPs: 31.2968. Time: 6566.8417 us. Best GFLOPs: 31.2968
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #2: GFLOPs: 6.1018. Time: 33682.2437 us. Best GFLOPs: 31.2968
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #3: GFLOPs: 2.4178. Time: 85002.0333 us. Best GFLOPs: 31.2968
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #4: GFLOPs: 29.0472. Time: 7075.4171 us. Best GFLOPs: 31.2968
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #5: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(64) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + oh_1 * T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(64) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(64), T.int64(7), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(4) * T.int64(64) + ax1)
                        v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax2)
                        v3 = T.axis.spatial(T.int64(14), ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 8, 1, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1024, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #6: GFLOPs: 5.4503. Time: 37708.4533 us. Best GFLOPs: 31.2968
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #7: GFLOPs: 31.8002. Time: 6462.8895 us. Best GFLOPs: 31.8002
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #8: GFLOPs: 37.1546. Time: 5531.5062 us. Best GFLOPs: 37.1546
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #9: GFLOPs: 3.0927. Time: 66454.3660 us. Best GFLOPs: 37.1546
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #10: GFLOPs: 58.5392. Time: 3510.8244 us. Best GFLOPs: 58.5392
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #11: GFLOPs: 14.5434. Time: 14131.5700 us. Best GFLOPs: 58.5392
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #12: GFLOPs: 74.5403. Time: 2757.1768 us. Best GFLOPs: 74.5403
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #13: GFLOPs: 6.3710. Time: 32258.8985 us. Best GFLOPs: 74.5403
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #14: GFLOPs: 133.1351. Time: 1543.7023 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #15: GFLOPs: 122.1516. Time: 1682.5067 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #16: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(14), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(8) + ax1)
                        v2 = T.axis.spatial(T.int64(14), ax2)
                        v3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[16, 2, 4, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l98, l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b101)
b124 = sch.decompose_reduction(block=b101, loop=l108)
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #17: GFLOPs: 29.5306. Time: 6959.5987 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #18: GFLOPs: 63.1764. Time: 3253.1284 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #19: GFLOPs: 125.5783. Time: 1636.5952 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #20: GFLOPs: 114.9940. Time: 1787.2314 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #21: GFLOPs: 4.5995. Time: 44683.4530 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #22: GFLOPs: 98.9024. Time: 2078.0174 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #23: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(1), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ax2)
                        v3 = T.axis.spatial(T.int64(14), ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 1, 8, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #24: GFLOPs: 88.4104. Time: 2324.6226 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #25: GFLOPs: 22.0422. Time: 9323.9559 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #26: GFLOPs: 82.7059. Time: 2484.9597 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #27: GFLOPs: 111.2532. Time: 1847.3261 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #28: GFLOPs: 28.0920. Time: 7315.9931 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #29: GFLOPs: 9.5479. Time: 21525.1902 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #30: GFLOPs: 10.5620. Time: 19458.5305 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #31: GFLOPs: 58.5523. Time: 3510.0385 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #32: GFLOPs: 30.4847. Time: 6741.7769 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #33: GFLOPs: 12.3258. Time: 16674.0120 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #34: GFLOPs: 2.9723. Time: 69145.5167 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #35: GFLOPs: 3.9880. Time: 51535.1550 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #36: GFLOPs: 29.8778. Time: 6878.7101 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #37: GFLOPs: 79.9418. Time: 2570.8822 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #38: GFLOPs: 66.8538. Time: 3074.1844 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #39: GFLOPs: 54.5260. Time: 3769.2264 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #40: GFLOPs: 25.1916. Time: 8158.3228 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #41: GFLOPs: 1.8677. Time: 110041.1823 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #42: GFLOPs: 1.2514. Time: 164226.4377 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #43: GFLOPs: 49.7168. Time: 4133.8285 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #44: GFLOPs: 1.9927. Time: 103136.4300 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #45: GFLOPs: 29.1500. Time: 7050.4496 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #46: GFLOPs: 3.9980. Time: 51406.3000 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #47: GFLOPs: 47.5626. Time: 4321.0598 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #48: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(64), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(7), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(128), oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(14) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(128), oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(14) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 64, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1024, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l91)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b92 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b92)
b110 = sch.decompose_reduction(block=b92, loop=l94)
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #49: GFLOPs: 26.0742. Time: 7882.1665 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #50: GFLOPs: 50.3712. Time: 4080.1232 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #51: GFLOPs: 30.3577. Time: 6769.9691 us. Best GFLOPs: 133.1351
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #52: GFLOPs: 208.3192. Time: 986.5672 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #53: GFLOPs: 8.3008. Time: 24759.0834 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #54: GFLOPs: 163.9827. Time: 1253.3085 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #55: GFLOPs: 7.0254. Time: 29254.0340 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #56: GFLOPs: 86.7811. Time: 2368.2667 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #57: GFLOPs: 3.0888. Time: 66536.9633 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #58: GFLOPs: 35.3885. Time: 5807.5662 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #59: GFLOPs: 17.9178. Time: 11470.2078 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #60: GFLOPs: 116.3565. Time: 1766.3028 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #61: GFLOPs: 62.6463. Time: 3280.6560 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #62: GFLOPs: 2.1211. Time: 96895.6003 us. Best GFLOPs: 208.3192
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #63: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(448), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(1), T.int64(7)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(4) + ax2)
                        v3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 1, 8, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-28 22:48:39 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #64: GFLOPs: 45.8500. Time: 4482.4595 us. Best GFLOPs: 208.3192
2024-04-28 23:10:40 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:10:40 [INFO] [evolutionary_search.cc:715] Picked top 59 candidate(s) from database
2024-04-28 23:10:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:10:42 [INFO] [evolutionary_search.cc:723] Sampled 453 candidate(s)
2024-04-28 23:10:47 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:10:51 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:10:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:11:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:11:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9779  0.9491  0.9477  0.7739  0.7496  0.6830  0.6773  0.6737  0.6683  0.6561  0.6481  0.6479  0.6427  0.6414  0.6327  0.6319
[17 : 32]:	0.6311  0.6282  0.6190  0.6190  0.6168  0.6156  0.6151  0.6136  0.6102  0.6045  0.6029  0.5945  0.5936  0.5901  0.5886  0.5838
[33 : 48]:	0.5835  0.5835  0.5823  0.5777  0.5733  0.5732  0.5732  0.5727  0.5718  0.5703  0.5671  0.5655  0.5655  0.5646  0.5643  0.5641
[49 : 64]:	0.5632  0.5622  0.5584  0.5580  0.5576  0.5551  0.5543  0.5543  0.5543  0.5540  0.5539  0.5525  0.5504  0.5495  0.5486  0.5468
2024-04-28 23:11:04 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:11:04 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #65: GFLOPs: 214.3760. Time: 958.6938 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #66: GFLOPs: 48.9337. Time: 4199.9908 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #67: GFLOPs: 202.3117. Time: 1015.8627 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #68: GFLOPs: 118.7273. Time: 1731.0333 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #69: GFLOPs: 0.8217. Time: 250113.5227 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #70: GFLOPs: 180.8755. Time: 1136.2563 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #71: GFLOPs: 54.2473. Time: 3788.5953 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #72: GFLOPs: 174.6441. Time: 1176.7984 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #73: GFLOPs: 118.9129. Time: 1728.3311 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #74: GFLOPs: 57.2701. Time: 3588.6251 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #75: GFLOPs: 2.5275. Time: 81313.4413 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #76: GFLOPs: 88.5882. Time: 2319.9568 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #77: GFLOPs: 178.4065. Time: 1151.9808 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #78: GFLOPs: 148.9393. Time: 1379.8973 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #79: GFLOPs: 78.1505. Time: 2629.8085 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #80: GFLOPs: 60.5367. Time: 3394.9805 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #81: GFLOPs: 27.0522. Time: 7597.1855 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #82: GFLOPs: 103.0653. Time: 1994.0850 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #83: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(4), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(16) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(28) * T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(56) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(56) // T.int64(28) * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 2, 4, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1024, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l91)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b92 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b92)
b110 = sch.decompose_reduction(block=b92, loop=l94)
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #84: GFLOPs: 196.7832. Time: 1044.4024 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #85: GFLOPs: 109.5942. Time: 1875.2900 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #86: GFLOPs: 136.5522. Time: 1505.0725 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #87: GFLOPs: 89.7311. Time: 2290.4088 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #88: GFLOPs: 120.3818. Time: 1707.2423 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #89: GFLOPs: 143.5719. Time: 1431.4844 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #90: GFLOPs: 31.5272. Time: 6518.8391 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #91: GFLOPs: 132.5301. Time: 1550.7482 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #92: GFLOPs: 142.0531. Time: 1446.7892 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #93: GFLOPs: 3.9778. Time: 51667.4313 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #94: GFLOPs: 13.1049. Time: 15682.6924 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #95: GFLOPs: 40.4066. Time: 5086.3218 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #96: GFLOPs: 150.9153. Time: 1361.8296 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #97: GFLOPs: 10.6665. Time: 19267.8538 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #98: GFLOPs: 5.6924. Time: 36104.3687 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #99: GFLOPs: 112.0536. Time: 1834.1298 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #100: GFLOPs: 83.2865. Time: 2467.6388 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #101: GFLOPs: 61.1487. Time: 3361.0027 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #102: GFLOPs: 48.1787. Time: 4265.8018 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #103: GFLOPs: 91.9057. Time: 2236.2143 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #104: GFLOPs: 130.2828. Time: 1577.4980 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #105: GFLOPs: 197.0644. Time: 1042.9123 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #106: GFLOPs: 183.0053. Time: 1123.0327 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #107: GFLOPs: 58.3278. Time: 3523.5489 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #108: GFLOPs: 103.7283. Time: 1981.3382 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #109: GFLOPs: 146.0650. Time: 1407.0511 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #110: GFLOPs: 166.0189. Time: 1237.9366 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #111: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(4), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 2, 4, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1024, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l91)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b92 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b92)
b110 = sch.decompose_reduction(block=b92, loop=l94)
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #112: GFLOPs: 116.8753. Time: 1758.4633 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #113: GFLOPs: 110.7807. Time: 1855.2045 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #114: GFLOPs: 144.6612. Time: 1420.7048 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #115: GFLOPs: 98.9150. Time: 2077.7526 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #116: GFLOPs: 213.8748. Time: 960.9401 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #117: GFLOPs: 95.9662. Time: 2141.5961 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #118: GFLOPs: 114.7002. Time: 1791.8101 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #119: GFLOPs: 111.0559. Time: 1850.6070 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #120: GFLOPs: 111.9365. Time: 1836.0483 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #121: GFLOPs: 108.5146. Time: 1893.9474 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #122: GFLOPs: 153.9554. Time: 1334.9383 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #123: GFLOPs: 125.8338. Time: 1633.2720 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #124: GFLOPs: 3.9868. Time: 51550.3710 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #125: GFLOPs: 56.4238. Time: 3642.4521 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #126: GFLOPs: 20.1911. Time: 10178.7766 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #127: GFLOPs: 32.2412. Time: 6374.4799 us. Best GFLOPs: 214.3760
2024-04-28 23:12:34 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #128: GFLOPs: 31.0005. Time: 6629.5960 us. Best GFLOPs: 214.3760
2024-04-28 23:41:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:41:43 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:41:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:41:45 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:41:50 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:41:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:41:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:42:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-28 23:42:06 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9660  0.9660  0.9660  0.9660  0.9660  0.9413  0.9140  0.9086  0.9060  0.9060  0.9060  0.9054  0.8920  0.8792  0.8744  0.8744
[17 : 32]:	0.8553  0.8500  0.8463  0.8384  0.8384  0.8284  0.8198  0.8198  0.8198  0.8040  0.8040  0.8040  0.8040  0.8038  0.7982  0.7955
[33 : 48]:	0.7941  0.7940  0.7940  0.7940  0.7891  0.7890  0.7856  0.7844  0.7749  0.7744  0.7708  0.7708  0.7688  0.7643  0.7641  0.7619
[49 : 64]:	0.7605  0.7605  0.7579  0.7579  0.7543  0.7542  0.7503  0.7499  0.7489  0.7479  0.7469  0.7469  0.7425  0.7386  0.7371  0.7358
2024-04-28 23:42:06 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:42:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #129: GFLOPs: 216.7677. Time: 948.1157 us. Best GFLOPs: 216.7677
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #130: GFLOPs: 211.5939. Time: 971.2986 us. Best GFLOPs: 216.7677
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #131: GFLOPs: 169.9026. Time: 1209.6392 us. Best GFLOPs: 216.7677
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #132: GFLOPs: 177.8678. Time: 1155.4700 us. Best GFLOPs: 216.7677
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #133: GFLOPs: 215.9599. Time: 951.6625 us. Best GFLOPs: 216.7677
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #134: GFLOPs: 185.7983. Time: 1106.1505 us. Best GFLOPs: 216.7677
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #135: GFLOPs: 235.0310. Time: 874.4416 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #136: GFLOPs: 91.6454. Time: 2242.5676 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #137: GFLOPs: 115.3000. Time: 1782.4880 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #138: GFLOPs: 123.8478. Time: 1659.4631 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #139: GFLOPs: 111.6280. Time: 1841.1237 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #140: GFLOPs: 96.0045. Time: 2140.7415 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #141: GFLOPs: 165.5302. Time: 1241.5914 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #142: GFLOPs: 161.8413. Time: 1269.8917 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #143: GFLOPs: 59.8529. Time: 3433.7677 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #144: GFLOPs: 67.6103. Time: 3039.7868 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #145: GFLOPs: 107.2061. Time: 1917.0637 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #146: GFLOPs: 190.6346. Time: 1078.0883 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #147: GFLOPs: 70.3841. Time: 2919.9898 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #148: GFLOPs: 78.2276. Time: 2627.2158 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #149: GFLOPs: 75.4677. Time: 2723.2965 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #150: GFLOPs: 96.5855. Time: 2127.8652 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #151: GFLOPs: 119.5568. Time: 1719.0228 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #152: GFLOPs: 119.1338. Time: 1725.1264 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #153: GFLOPs: 146.7653. Time: 1400.3371 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #154: GFLOPs: 172.9981. Time: 1187.9950 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #155: GFLOPs: 169.8792. Time: 1209.8061 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #156: GFLOPs: 176.3618. Time: 1165.3370 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #157: GFLOPs: 182.3752. Time: 1126.9128 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #158: GFLOPs: 109.3762. Time: 1879.0270 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #159: GFLOPs: 112.6960. Time: 1823.6758 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #160: GFLOPs: 67.4127. Time: 3048.6963 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #161: GFLOPs: 97.6438. Time: 2104.8017 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #162: GFLOPs: 104.4818. Time: 1967.0488 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #163: GFLOPs: 102.7948. Time: 1999.3314 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #164: GFLOPs: 102.2806. Time: 2009.3823 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #165: GFLOPs: 160.4395. Time: 1280.9868 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #166: GFLOPs: 59.7777. Time: 3438.0880 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #167: GFLOPs: 134.3082. Time: 1530.2184 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #168: GFLOPs: 184.8952. Time: 1111.5533 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #169: GFLOPs: 91.6015. Time: 2243.6416 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #170: GFLOPs: 137.0915. Time: 1499.1510 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #171: GFLOPs: 122.9228. Time: 1671.9514 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #172: GFLOPs: 184.7273. Time: 1112.5638 us. Best GFLOPs: 235.0310
2024-04-28 23:43:41 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #173: GFLOPs: 169.0491. Time: 1215.7466 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #174: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused in T.parallel(T.int64(3136), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(98) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(98) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1024), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(2)):
                    for ax3_ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_global"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused // T.int64(98) * T.int64(4) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(7) * T.int64(2) + ax2)
                            v3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused % T.int64(98) // T.int64(14) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                            v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                            T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                            conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[32, 2, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[16, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b66)
l103 = sch.fuse(l101, l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b104)
b124 = sch.decompose_reduction(block=b104, loop=l108)
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #175: GFLOPs: 67.1983. Time: 3058.4261 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #176: GFLOPs: 91.7423. Time: 2240.1984 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #177: GFLOPs: 119.0756. Time: 1725.9704 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #178: GFLOPs: 117.1767. Time: 1753.9392 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #179: GFLOPs: 192.6044. Time: 1067.0620 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #180: GFLOPs: 188.9573. Time: 1087.6578 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #181: GFLOPs: 181.0752. Time: 1135.0028 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #182: GFLOPs: 134.0629. Time: 1533.0186 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #183: GFLOPs: 137.0673. Time: 1499.4165 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #184: GFLOPs: 67.1656. Time: 3059.9142 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #185: GFLOPs: 193.2544. Time: 1063.4730 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #186: GFLOPs: 86.2069. Time: 2384.0426 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #187: GFLOPs: 120.5593. Time: 1704.7289 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #188: GFLOPs: 158.8263. Time: 1293.9979 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #189: GFLOPs: 113.8525. Time: 1805.1512 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #190: GFLOPs: 124.0440. Time: 1656.8388 us. Best GFLOPs: 235.0310
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #191: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(64), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(4) * T.int64(8) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(7) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(4) * T.int64(8) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_global"):
                    v0 = T.axis.spatial(T.int64(1), ax0)
                    v1 = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(4) * T.int64(8) + ax1)
                    v2, v3 = T.axis.remap("SS", [ax2, ax3])
                    v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + ax4)
                    T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                    T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                    conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 2, 8, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1024, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-28 23:43:42 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #192: GFLOPs: 8.6597. Time: 23733.0884 us. Best GFLOPs: 235.0310
2024-04-29 00:27:44 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:27:44 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:27:46 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:27:46 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:27:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:27:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:28:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:28:04 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:28:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9440  0.8549  0.8293  0.8293  0.8281  0.8182  0.8142  0.8010  0.8010  0.8010  0.8010  0.8010  0.7970  0.7962  0.7832  0.7832
[17 : 32]:	0.7737  0.7712  0.7667  0.7663  0.7600  0.7549  0.7549  0.7514  0.7458  0.7394  0.7386  0.7353  0.7347  0.7306  0.7251  0.7236
[33 : 48]:	0.7236  0.7186  0.7146  0.7131  0.7131  0.7111  0.7111  0.7101  0.7047  0.7047  0.7034  0.7011  0.6943  0.6939  0.6914  0.6889
[49 : 64]:	0.6842  0.6819  0.6771  0.6771  0.6771  0.6754  0.6754  0.6691  0.6653  0.6563  0.6557  0.6557  0.6503  0.6503  0.6496  0.6483
2024-04-29 00:28:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:28:07 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #193: GFLOPs: 83.9239. Time: 2448.8949 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #194: GFLOPs: 88.7964. Time: 2314.5184 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #195: GFLOPs: 139.0956. Time: 1477.5518 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #196: GFLOPs: 154.3667. Time: 1331.3813 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #197: GFLOPs: 184.8157. Time: 1112.0314 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #198: GFLOPs: 169.8062. Time: 1210.3263 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #199: GFLOPs: 226.5947. Time: 906.9976 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #200: GFLOPs: 130.0207. Time: 1580.6786 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #201: GFLOPs: 176.5758. Time: 1163.9245 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #202: GFLOPs: 200.5736. Time: 1024.6659 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #203: GFLOPs: 174.6212. Time: 1176.9529 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #204: GFLOPs: 202.0530. Time: 1017.1631 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #205: GFLOPs: 57.6576. Time: 3564.5096 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #206: GFLOPs: 145.0566. Time: 1416.8329 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #207: GFLOPs: 213.9985. Time: 960.3846 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #208: GFLOPs: 172.4208. Time: 1191.9726 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #209: GFLOPs: 149.0838. Time: 1378.5591 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #210: GFLOPs: 188.6511. Time: 1089.4233 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #211: GFLOPs: 135.4247. Time: 1517.6030 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #212: GFLOPs: 180.5146. Time: 1138.5276 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #213: GFLOPs: 120.1612. Time: 1710.3759 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #214: GFLOPs: 74.0227. Time: 2776.4593 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #215: GFLOPs: 87.3198. Time: 2353.6581 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #216: GFLOPs: 176.4098. Time: 1165.0198 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #217: GFLOPs: 176.3083. Time: 1165.6903 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #218: GFLOPs: 121.9198. Time: 1685.7056 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #219: GFLOPs: 126.9940. Time: 1618.3507 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #220: GFLOPs: 109.6947. Time: 1873.5711 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #221: GFLOPs: 128.4856. Time: 1599.5639 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #222: GFLOPs: 165.5070. Time: 1241.7656 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #223: GFLOPs: 33.2326. Time: 6184.3220 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #224: GFLOPs: 214.3809. Time: 958.6718 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #225: GFLOPs: 190.7713. Time: 1077.3157 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #226: GFLOPs: 160.8062. Time: 1278.0660 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #227: GFLOPs: 196.6251. Time: 1045.2424 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #228: GFLOPs: 128.3198. Time: 1601.6304 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #229: GFLOPs: 181.7736. Time: 1130.6421 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #230: GFLOPs: 96.8919. Time: 2121.1365 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #231: GFLOPs: 67.3594. Time: 3051.1104 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #232: GFLOPs: 99.1890. Time: 2072.0121 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #233: GFLOPs: 150.2577. Time: 1367.7897 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #234: GFLOPs: 119.0851. Time: 1725.8327 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #235: GFLOPs: 182.6564. Time: 1125.1776 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #236: GFLOPs: 22.0327. Time: 9328.0146 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #237: GFLOPs: 92.2105. Time: 2228.8227 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #238: GFLOPs: 30.5968. Time: 6717.0763 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #239: GFLOPs: 139.5308. Time: 1472.9428 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #240: GFLOPs: 85.0891. Time: 2415.3617 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #241: GFLOPs: 163.2323. Time: 1259.0698 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #242: GFLOPs: 173.5584. Time: 1184.1597 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #243: GFLOPs: 92.3718. Time: 2224.9302 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #244: GFLOPs: 140.4590. Time: 1463.2089 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #245: GFLOPs: 140.3992. Time: 1463.8329 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #246: GFLOPs: 115.2419. Time: 1783.3865 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #247: GFLOPs: 182.6036. Time: 1125.5028 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #248: GFLOPs: 174.3384. Time: 1178.8618 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #249: GFLOPs: 134.1815. Time: 1531.6635 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #250: GFLOPs: 166.1891. Time: 1236.6691 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #251: GFLOPs: 79.6674. Time: 2579.7349 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #252: GFLOPs: 86.3202. Time: 2380.9137 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #253: GFLOPs: 150.4675. Time: 1365.8824 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #254: GFLOPs: 68.3105. Time: 3008.6302 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #255: GFLOPs: 77.6746. Time: 2645.9222 us. Best GFLOPs: 235.0310
2024-04-29 00:29:36 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #256: GFLOPs: 47.8267. Time: 4297.1982 us. Best GFLOPs: 235.0310
2024-04-29 00:56:18 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:56:19 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:56:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:56:20 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:56:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:56:29 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:56:34 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:56:38 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 00:56:41 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9335  0.8939  0.8939  0.8503  0.8503  0.8360  0.8309  0.8259  0.8086  0.8086  0.8086  0.8086  0.8086  0.8041  0.8040  0.8033
[17 : 32]:	0.8033  0.7970  0.7873  0.7873  0.7827  0.7768  0.7578  0.7570  0.7570  0.7555  0.7459  0.7459  0.7407  0.7400  0.7389  0.7389
[33 : 48]:	0.7389  0.7389  0.7387  0.7368  0.7363  0.7229  0.7205  0.7114  0.7114  0.7075  0.7075  0.7075  0.7019  0.7016  0.7012  0.7006
[49 : 64]:	0.7006  0.6993  0.6984  0.6972  0.6945  0.6945  0.6868  0.6860  0.6860  0.6834  0.6806  0.6771  0.6751  0.6728  0.6728  0.6699
2024-04-29 00:56:41 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:56:41 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #257: GFLOPs: 107.4590. Time: 1912.5509 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #258: GFLOPs: 213.6913. Time: 961.7654 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #259: GFLOPs: 226.2158. Time: 908.5169 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #260: GFLOPs: 193.5219. Time: 1062.0033 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #261: GFLOPs: 184.9235. Time: 1111.3833 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #262: GFLOPs: 137.8489. Time: 1490.9141 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #263: GFLOPs: 202.5034. Time: 1014.9012 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #264: GFLOPs: 152.7596. Time: 1345.3880 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #265: GFLOPs: 191.8132. Time: 1071.4638 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #266: GFLOPs: 192.3520. Time: 1068.4627 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #267: GFLOPs: 186.5218. Time: 1101.8601 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #268: GFLOPs: 188.3290. Time: 1091.2864 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #269: GFLOPs: 198.1970. Time: 1036.9528 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #270: GFLOPs: 185.5972. Time: 1107.3494 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #271: GFLOPs: 184.0286. Time: 1116.7877 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #272: GFLOPs: 165.6030. Time: 1241.0454 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #273: GFLOPs: 163.6609. Time: 1255.7726 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #274: GFLOPs: 196.8659. Time: 1043.9638 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #275: GFLOPs: 142.0781. Time: 1446.5342 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #276: GFLOPs: 147.5343. Time: 1393.0379 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #277: GFLOPs: 155.3721. Time: 1322.7655 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #278: GFLOPs: 101.7798. Time: 2019.2707 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #279: GFLOPs: 116.9831. Time: 1756.8427 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #280: GFLOPs: 113.4922. Time: 1810.8805 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #281: GFLOPs: 182.8512. Time: 1123.9790 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #282: GFLOPs: 95.7811. Time: 2145.7351 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #283: GFLOPs: 164.1075. Time: 1252.3556 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #284: GFLOPs: 182.6072. Time: 1125.4808 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #285: GFLOPs: 170.0412. Time: 1208.6538 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #286: GFLOPs: 153.1832. Time: 1341.6671 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #287: GFLOPs: 155.7466. Time: 1319.5851 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #288: GFLOPs: 169.5670. Time: 1212.0337 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #289: GFLOPs: 189.6282. Time: 1083.8099 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #290: GFLOPs: 212.7585. Time: 965.9819 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #291: GFLOPs: 190.8195. Time: 1077.0433 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #292: GFLOPs: 131.2800. Time: 1565.5160 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #293: GFLOPs: 149.8376. Time: 1371.6240 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #294: GFLOPs: 189.9482. Time: 1081.9841 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #295: GFLOPs: 134.1490. Time: 1532.0344 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #296: GFLOPs: 195.1865. Time: 1052.9461 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #297: GFLOPs: 111.8801. Time: 1836.9743 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #298: GFLOPs: 166.9643. Time: 1230.9275 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #299: GFLOPs: 221.0715. Time: 929.6580 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #300: GFLOPs: 231.8064. Time: 886.6058 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #301: GFLOPs: 153.5186. Time: 1338.7358 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #302: GFLOPs: 144.2853. Time: 1424.4064 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #303: GFLOPs: 147.7024. Time: 1391.4526 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #304: GFLOPs: 188.7771. Time: 1088.6959 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #305: GFLOPs: 188.8704. Time: 1088.1585 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #306: GFLOPs: 70.6610. Time: 2908.5497 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #307: GFLOPs: 189.8734. Time: 1082.4104 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #308: GFLOPs: 152.5820. Time: 1346.9540 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #309: GFLOPs: 78.1166. Time: 2630.9493 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #310: GFLOPs: 166.4067. Time: 1235.0521 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #311: GFLOPs: 141.7849. Time: 1449.5255 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #312: GFLOPs: 206.1838. Time: 996.7846 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #313: GFLOPs: 216.5894. Time: 948.8965 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #314: GFLOPs: 156.0482. Time: 1317.0351 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #315: GFLOPs: 172.8030. Time: 1189.3361 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #316: GFLOPs: 118.2209. Time: 1738.4478 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #317: GFLOPs: 182.2455. Time: 1127.7144 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #318: GFLOPs: 8.7730. Time: 23426.5134 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #319: GFLOPs: 91.2985. Time: 2251.0862 us. Best GFLOPs: 235.0310
2024-04-29 00:58:06 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #320: GFLOPs: 52.4785. Time: 3916.2861 us. Best GFLOPs: 235.0310
2024-04-29 01:27:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:27:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:27:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 01:27:11 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 01:27:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 01:27:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 01:27:24 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 01:27:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xa23cc18)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x651f488)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x493ec58)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x85c5948)]: 0 failure(s)
2024-04-29 01:27:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8392  0.8148  0.8130  0.8130  0.8130  0.8105  0.8083  0.8035  0.8025  0.8025  0.8025  0.8025  0.8025  0.8018  0.8016  0.8016
[17 : 32]:	0.8011  0.7995  0.7955  0.7955  0.7955  0.7955  0.7877  0.7830  0.7783  0.7779  0.7735  0.7735  0.7725  0.7725  0.7712  0.7712
[33 : 48]:	0.7712  0.7712  0.7712  0.7708  0.7643  0.7643  0.7641  0.7625  0.7625  0.7586  0.7586  0.7577  0.7554  0.7543  0.7533  0.7523
[49 : 64]:	0.7523  0.7507  0.7507  0.7443  0.7440  0.7429  0.7429  0.7423  0.7325  0.7325  0.7301  0.7277  0.7277  0.7244  0.7232  0.7120
2024-04-29 01:27:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:27:32 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #321: GFLOPs: 104.3637. Time: 1969.2748 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #322: GFLOPs: 109.8207. Time: 1871.4221 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #323: GFLOPs: 170.8765. Time: 1202.7450 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #324: GFLOPs: 187.6121. Time: 1095.4565 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #325: GFLOPs: 206.6688. Time: 994.4459 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #326: GFLOPs: 161.5303. Time: 1272.3366 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #327: GFLOPs: 164.6685. Time: 1248.0889 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #328: GFLOPs: 173.6291. Time: 1183.6780 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #329: GFLOPs: 191.8547. Time: 1071.2319 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #330: GFLOPs: 176.6698. Time: 1163.3049 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #331: GFLOPs: 192.1297. Time: 1069.6988 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #332: GFLOPs: 214.5630. Time: 957.8580 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #333: GFLOPs: 212.7110. Time: 966.1978 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #334: GFLOPs: 193.1545. Time: 1064.0236 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #335: GFLOPs: 189.5720. Time: 1084.1310 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #336: GFLOPs: 189.1657. Time: 1086.4598 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #337: GFLOPs: 161.2553. Time: 1274.5060 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #338: GFLOPs: 168.4119. Time: 1220.3467 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #339: GFLOPs: 207.3086. Time: 991.3766 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #340: GFLOPs: 206.4589. Time: 995.4567 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #341: GFLOPs: 206.1607. Time: 996.8966 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #342: GFLOPs: 206.6139. Time: 994.7098 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #343: GFLOPs: 204.4887. Time: 1005.0478 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #344: GFLOPs: 107.2376. Time: 1916.5012 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #345: GFLOPs: 171.9075. Time: 1195.5316 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #346: GFLOPs: 182.0206. Time: 1129.1076 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #347: GFLOPs: 162.3408. Time: 1265.9842 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #348: GFLOPs: 162.1171. Time: 1267.7313 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #349: GFLOPs: 233.8099. Time: 879.0084 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #350: GFLOPs: 79.7242. Time: 2577.8978 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #351: GFLOPs: 48.3828. Time: 4247.8096 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #352: GFLOPs: 51.4481. Time: 3994.7254 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #353: GFLOPs: 118.2465. Time: 1738.0723 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #354: GFLOPs: 118.6570. Time: 1732.0588 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #355: GFLOPs: 118.4859. Time: 1734.5604 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #356: GFLOPs: 157.0125. Time: 1308.9458 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #357: GFLOPs: 187.0157. Time: 1098.9501 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #358: GFLOPs: 206.1951. Time: 996.7300 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #359: GFLOPs: 226.4435. Time: 907.6036 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #360: GFLOPs: 177.1052. Time: 1160.4450 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #361: GFLOPs: 172.5528. Time: 1191.0606 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #362: GFLOPs: 170.2740. Time: 1207.0013 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #363: GFLOPs: 152.7480. Time: 1345.4901 us. Best GFLOPs: 235.0310
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #364: GFLOPs: 269.4821. Time: 762.6513 us. Best GFLOPs: 269.4821
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #365: GFLOPs: 160.3635. Time: 1281.5937 us. Best GFLOPs: 269.4821
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #366: GFLOPs: 137.1628. Time: 1498.3724 us. Best GFLOPs: 269.4821
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #367: GFLOPs: 188.5751. Time: 1089.8625 us. Best GFLOPs: 269.4821
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #368: GFLOPs: 188.9630. Time: 1087.6253 us. Best GFLOPs: 269.4821
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #369: GFLOPs: 180.2652. Time: 1140.1031 us. Best GFLOPs: 269.4821
2024-04-29 01:29:13 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #370: GFLOPs: 214.8037. Time: 956.7847 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #371: GFLOPs: 173.5953. Time: 1183.9084 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #372: GFLOPs: 154.4570. Time: 1330.6023 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #373: GFLOPs: 95.6106. Time: 2149.5629 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #374: GFLOPs: 105.3046. Time: 1951.6802 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #375: GFLOPs: 142.3473. Time: 1443.7985 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #376: GFLOPs: 98.1997. Time: 2092.8867 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #377: GFLOPs: 219.6322. Time: 935.7501 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #378: GFLOPs: 205.6869. Time: 999.1929 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #379: GFLOPs: 154.5847. Time: 1329.5033 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #380: GFLOPs: 185.9669. Time: 1105.1477 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #381: GFLOPs: 183.1910. Time: 1121.8939 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:121] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #382: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(256), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(128), T.int64(256), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(32), T.int64(1), T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1024), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1024), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(128), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(32) + ax1)
                        v2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(7) + ax2)
                        v3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 32, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[1024, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l98, l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b101)
b124 = sch.decompose_reduction(block=b101, loop=l108)
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #383: GFLOPs: 45.7858. Time: 4488.7498 us. Best GFLOPs: 269.4821
2024-04-29 01:29:14 [INFO] [task_scheduler.cc:131] [Task #73: fused_nn_contrib_conv2d_NCHWc_6] Trial #384: GFLOPs: 84.8592. Time: 2421.9060 us. Best GFLOPs: 269.4821
