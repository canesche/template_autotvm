2024-04-28 20:48:08 [INFO] [task_scheduler.cc:160] Initializing Task #70: "fused_nn_contrib_conv2d_NCHWc_5"
2024-04-28 20:48:08 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4), T.int64(512), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
2024-04-28 20:48:08 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 20:48:08 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(14), T.int64(7), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(2), T.int64(2), T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(32) + ax1)
                        v2 = T.axis.spatial(T.int64(28), oh_1 * T.int64(2) + ax2)
                        v3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ax3)
                        v4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 32, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 1, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[64, 8])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:48:08 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(7), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(28), T.int64(14), T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(32) + ax1)
                        v2 = T.axis.spatial(T.int64(28), ax2)
                        v3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ax3)
                        v4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 32, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 1, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[64, 8])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:48:08 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(14), T.int64(7), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(28) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 32, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 1, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[64, 8])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-28 22:31:26 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:31:26 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 22:31:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 22:31:28 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 22:31:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 22:31:34 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 22:31:37 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 22:31:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 22:31:40 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9997  0.9994  0.9990  0.9972  0.9970  0.9952  0.9944  0.9942  0.9941  0.9939  0.9934  0.9932  0.9931  0.9919  0.9912  0.9910
[17 : 32]:	0.9902  0.9896  0.9892  0.9884  0.9875  0.9875  0.9868  0.9857  0.9846  0.9841  0.9825  0.9813  0.9813  0.9799  0.9796  0.9793
[33 : 48]:	0.9791  0.9789  0.9781  0.9778  0.9777  0.9775  0.9770  0.9763  0.9754  0.9753  0.9743  0.9741  0.9736  0.9731  0.9727  0.9723
[49 : 64]:	0.9717  0.9702  0.9701  0.9695  0.9694  0.9685  0.9680  0.9666  0.9665  0.9660  0.9653  0.9649  0.9631  0.9625  0.9621  0.9612
2024-04-28 22:31:40 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:31:40 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #1: GFLOPs: 11.4336. Time: 17975.1593 us. Best GFLOPs: 11.4336
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:121] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #2: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(14)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) * T.int64(16) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(2) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) * T.int64(16) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(2) * T.int64(2) + oh_1 * T.int64(2) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(2)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(28) * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(28) // T.int64(2) * T.int64(2) + ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 2, 4, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[14, 1, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 14])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #3: GFLOPs: 19.9841. Time: 10284.2023 us. Best GFLOPs: 19.9841
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:121] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #4: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(8), T.int64(4), T.int64(2)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(4), T.int64(2)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(4)):
                for ax3_ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(4) + ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[4, 1, 2, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 1, 4])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 2])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #5: GFLOPs: 11.4219. Time: 17993.5128 us. Best GFLOPs: 19.9841
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #6: GFLOPs: 71.7138. Time: 2865.8476 us. Best GFLOPs: 71.7138
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:121] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #7: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(7), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(14), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(32) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + oh_2_init * T.int64(14) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(32) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(28)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(32) + ax1)
                        v2 = T.axis.spatial(T.int64(28), ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 8, 2, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 1, 14])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #8: GFLOPs: 189.0628. Time: 1087.0510 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #9: GFLOPs: 73.5039. Time: 2796.0533 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #10: GFLOPs: 64.5517. Time: 3183.8203 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #11: GFLOPs: 58.5539. Time: 3509.9428 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #12: GFLOPs: 32.3776. Time: 6347.6192 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #13: GFLOPs: 114.8738. Time: 1789.1023 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #14: GFLOPs: 32.4105. Time: 6341.1860 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #15: GFLOPs: 54.5969. Time: 3764.3296 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #16: GFLOPs: 24.4758. Time: 8396.9014 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #17: GFLOPs: 56.8366. Time: 3615.9941 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #18: GFLOPs: 58.0787. Time: 3538.6606 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #19: GFLOPs: 4.9556. Time: 41472.4537 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #20: GFLOPs: 142.8956. Time: 1438.2591 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #21: GFLOPs: 3.9365. Time: 52208.7037 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #22: GFLOPs: 101.0917. Time: 2033.0154 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #23: GFLOPs: 34.0061. Time: 6043.6411 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #24: GFLOPs: 11.2924. Time: 18199.9232 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #25: GFLOPs: 2.7045. Time: 75991.0653 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #26: GFLOPs: 3.6328. Time: 56572.9343 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #27: GFLOPs: 3.6921. Time: 55664.4593 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #28: GFLOPs: 33.2793. Time: 6175.6341 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #29: GFLOPs: 104.5142. Time: 1966.4405 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #30: GFLOPs: 81.7634. Time: 2513.6055 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #31: GFLOPs: 82.1401. Time: 2502.0783 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #32: GFLOPs: 147.7418. Time: 1391.0813 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #33: GFLOPs: 7.8338. Time: 26235.1598 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #34: GFLOPs: 18.3674. Time: 11189.4421 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #35: GFLOPs: 6.1807. Time: 33251.9350 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #36: GFLOPs: 1.9533. Time: 105215.0113 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #37: GFLOPs: 45.3606. Time: 4530.8218 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #38: GFLOPs: 39.3138. Time: 5227.7092 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #39: GFLOPs: 4.8453. Time: 42416.2357 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #40: GFLOPs: 38.6874. Time: 5312.3416 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #41: GFLOPs: 45.7324. Time: 4493.9923 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #42: GFLOPs: 2.1236. Time: 96781.6927 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #43: GFLOPs: 6.9453. Time: 29591.2860 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #44: GFLOPs: 52.4770. Time: 3916.3985 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #45: GFLOPs: 77.5972. Time: 2648.5597 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #46: GFLOPs: 77.3313. Time: 2657.6679 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #47: GFLOPs: 120.2859. Time: 1708.6034 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #48: GFLOPs: 89.4183. Time: 2298.4213 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #49: GFLOPs: 119.3196. Time: 1722.4405 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #50: GFLOPs: 7.8563. Time: 26159.9938 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #51: GFLOPs: 67.0427. Time: 3065.5229 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #52: GFLOPs: 24.3010. Time: 8457.2931 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #53: GFLOPs: 20.5949. Time: 9979.2274 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #54: GFLOPs: 5.2612. Time: 39063.7507 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #55: GFLOPs: 99.1817. Time: 2072.1654 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #56: GFLOPs: 94.1940. Time: 2181.8895 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #57: GFLOPs: 92.8989. Time: 2212.3082 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #58: GFLOPs: 10.3057. Time: 19942.4760 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #59: GFLOPs: 63.0865. Time: 3257.7633 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:121] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #60: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(14)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(512), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(14)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(28)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(8) + ax1)
                        v2 = T.axis.spatial(T.int64(28), ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(14) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 1, 2, 4])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 14, 1, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 1, 14])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[512, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #61: GFLOPs: 54.4923. Time: 3771.5559 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:121] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #62: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(448), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(14) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(512), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(14) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[32, 1, 2, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[512, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, = sch.get_child_blocks(b63)
l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90 = sch.get_loops(block=b64)
l91 = sch.fuse(l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l91)
sch.annotate(block_or_loop=l91, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l91, ann_key="pragma_unroll_explicit", ann_val=1)
b92 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b92)
b110 = sch.decompose_reduction(block=b92, loop=l94)
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #63: GFLOPs: 5.4235. Time: 37894.4900 us. Best GFLOPs: 189.0628
2024-04-28 22:48:18 [INFO] [task_scheduler.cc:121] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #64: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(392), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(8), T.int64(4), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(28) * T.int64(4) + oh_2_init * T.int64(4) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(4) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(4), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(28) * T.int64(4) + oh_2 * T.int64(4) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(4) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(4), T.int64(4)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(196) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(16) + ax1)
                        v2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(196) // T.int64(28) * T.int64(4) + ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(4) + ax3)
                        v4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 2, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 1, 4])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[256, 2])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-28 23:08:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:08:49 [INFO] [evolutionary_search.cc:715] Picked top 58 candidate(s) from database
2024-04-28 23:08:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 23:08:51 [INFO] [evolutionary_search.cc:723] Sampled 454 candidate(s)
2024-04-28 23:08:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 23:09:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 23:09:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 23:09:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-28 23:09:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8637  0.8564  0.8491  0.8429  0.7970  0.7803  0.7651  0.7573  0.7379  0.7292  0.7199  0.7146  0.6889  0.6888  0.6735  0.6659
[17 : 32]:	0.6624  0.6607  0.6607  0.6591  0.6580  0.6580  0.6532  0.6527  0.6478  0.6475  0.6473  0.6473  0.6384  0.6348  0.6316  0.6220
[33 : 48]:	0.6202  0.6180  0.6143  0.6112  0.6109  0.6044  0.6026  0.6017  0.5996  0.5985  0.5974  0.5968  0.5955  0.5955  0.5954  0.5945
[49 : 64]:	0.5942  0.5930  0.5930  0.5868  0.5868  0.5864  0.5857  0.5853  0.5838  0.5826  0.5825  0.5822  0.5822  0.5757  0.5757  0.5739
2024-04-28 23:09:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:09:12 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #65: GFLOPs: 198.9048. Time: 1033.2626 us. Best GFLOPs: 198.9048
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #66: GFLOPs: 215.7203. Time: 952.7193 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #67: GFLOPs: 205.2398. Time: 1001.3694 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #68: GFLOPs: 56.0296. Time: 3668.0742 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #69: GFLOPs: 207.4999. Time: 990.4625 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #70: GFLOPs: 146.4597. Time: 1403.2586 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #71: GFLOPs: 125.6287. Time: 1635.9388 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #72: GFLOPs: 144.5477. Time: 1421.8205 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #73: GFLOPs: 156.1610. Time: 1316.0833 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #74: GFLOPs: 185.8021. Time: 1106.1278 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #75: GFLOPs: 66.0450. Time: 3111.8293 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #76: GFLOPs: 48.0073. Time: 4281.0348 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #77: GFLOPs: 169.3739. Time: 1213.4155 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #78: GFLOPs: 136.1984. Time: 1508.9821 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #79: GFLOPs: 146.0635. Time: 1407.0652 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #80: GFLOPs: 95.3138. Time: 2156.2553 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #81: GFLOPs: 187.7138. Time: 1094.8630 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #82: GFLOPs: 142.8733. Time: 1438.4838 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #83: GFLOPs: 142.8150. Time: 1439.0708 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #84: GFLOPs: 64.0517. Time: 3208.6742 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #85: GFLOPs: 33.6540. Time: 6106.8797 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #86: GFLOPs: 21.8633. Time: 9400.2647 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #87: GFLOPs: 89.6363. Time: 2292.8313 us. Best GFLOPs: 215.7203
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #88: GFLOPs: 239.9906. Time: 856.3705 us. Best GFLOPs: 239.9906
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #89: GFLOPs: 286.1594. Time: 718.2043 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #90: GFLOPs: 2.3595. Time: 87102.7170 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #91: GFLOPs: 91.7571. Time: 2239.8365 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #92: GFLOPs: 92.3583. Time: 2225.2552 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #93: GFLOPs: 45.9616. Time: 4471.5772 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #94: GFLOPs: 52.3854. Time: 3923.2470 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #95: GFLOPs: 126.9280. Time: 1619.1923 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #96: GFLOPs: 103.4256. Time: 1987.1371 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #97: GFLOPs: 158.7318. Time: 1294.7682 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #98: GFLOPs: 147.2276. Time: 1395.9397 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #99: GFLOPs: 96.0553. Time: 2139.6108 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #100: GFLOPs: 70.0028. Time: 2935.8945 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #101: GFLOPs: 91.8514. Time: 2237.5366 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #102: GFLOPs: 43.7381. Time: 4698.8941 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #103: GFLOPs: 80.8244. Time: 2542.8069 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #104: GFLOPs: 155.1356. Time: 1324.7819 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #105: GFLOPs: 79.7048. Time: 2578.5248 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #106: GFLOPs: 101.1019. Time: 2032.8099 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #107: GFLOPs: 1.8958. Time: 108409.0477 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #108: GFLOPs: 180.0523. Time: 1141.4512 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #109: GFLOPs: 104.5550. Time: 1965.6718 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #110: GFLOPs: 121.7965. Time: 1687.4126 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #111: GFLOPs: 91.5374. Time: 2245.2129 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #112: GFLOPs: 102.1500. Time: 2011.9525 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #113: GFLOPs: 96.4887. Time: 2129.9996 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #114: GFLOPs: 11.9669. Time: 17174.1087 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #115: GFLOPs: 9.3146. Time: 22064.4152 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #116: GFLOPs: 122.0110. Time: 1684.4452 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #117: GFLOPs: 109.4517. Time: 1877.7308 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #118: GFLOPs: 243.3868. Time: 844.4209 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #119: GFLOPs: 198.5275. Time: 1035.2263 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #120: GFLOPs: 107.7356. Time: 1907.6423 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #121: GFLOPs: 146.1025. Time: 1406.6899 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #122: GFLOPs: 108.0410. Time: 1902.2500 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #123: GFLOPs: 201.7068. Time: 1018.9089 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #124: GFLOPs: 20.5806. Time: 9986.1285 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #125: GFLOPs: 85.6992. Time: 2398.1651 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #126: GFLOPs: 17.2873. Time: 11888.5494 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #127: GFLOPs: 10.1044. Time: 20339.7292 us. Best GFLOPs: 286.1594
2024-04-28 23:10:40 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #128: GFLOPs: 69.2958. Time: 2965.8500 us. Best GFLOPs: 286.1594
2024-04-29 00:05:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:05:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:05:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:05:50 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:05:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:06:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:06:04 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:06:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:06:11 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8721  0.8672  0.8325  0.8264  0.8246  0.8229  0.7775  0.7724  0.7643  0.7489  0.7485  0.7431  0.7368  0.7367  0.7362  0.7354
[17 : 32]:	0.7323  0.7317  0.7243  0.7179  0.7174  0.7104  0.7050  0.7018  0.6924  0.6893  0.6871  0.6868  0.6867  0.6867  0.6839  0.6811
[33 : 48]:	0.6810  0.6780  0.6769  0.6757  0.6744  0.6740  0.6726  0.6707  0.6657  0.6654  0.6639  0.6617  0.6615  0.6590  0.6581  0.6578
[49 : 64]:	0.6538  0.6529  0.6488  0.6454  0.6444  0.6439  0.6423  0.6387  0.6354  0.6341  0.6330  0.6298  0.6278  0.6266  0.6265  0.6255
2024-04-29 00:06:11 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:06:12 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #129: GFLOPs: 157.0649. Time: 1308.5096 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #130: GFLOPs: 213.2016. Time: 963.9743 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #131: GFLOPs: 196.6954. Time: 1044.8689 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #132: GFLOPs: 226.3590. Time: 907.9422 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #133: GFLOPs: 162.0898. Time: 1267.9447 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #134: GFLOPs: 156.7160. Time: 1311.4223 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #135: GFLOPs: 75.9095. Time: 2707.4452 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #136: GFLOPs: 145.4293. Time: 1413.2019 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #137: GFLOPs: 202.8434. Time: 1013.1998 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #138: GFLOPs: 161.8382. Time: 1269.9160 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #139: GFLOPs: 162.7297. Time: 1262.9591 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #140: GFLOPs: 201.9124. Time: 1017.8718 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #141: GFLOPs: 137.0735. Time: 1499.3478 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #142: GFLOPs: 173.2296. Time: 1186.4075 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #143: GFLOPs: 163.1056. Time: 1260.0483 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #144: GFLOPs: 142.6581. Time: 1440.6534 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #145: GFLOPs: 150.0260. Time: 1369.9017 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #146: GFLOPs: 200.1541. Time: 1026.8133 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #147: GFLOPs: 81.3394. Time: 2526.7067 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #148: GFLOPs: 157.0610. Time: 1308.5416 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #149: GFLOPs: 165.3528. Time: 1242.9236 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #150: GFLOPs: 172.5528. Time: 1191.0612 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #151: GFLOPs: 177.9392. Time: 1155.0065 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #152: GFLOPs: 129.4918. Time: 1587.1348 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #153: GFLOPs: 273.8819. Time: 750.3996 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #154: GFLOPs: 145.6954. Time: 1410.6199 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #155: GFLOPs: 270.2528. Time: 760.4765 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #156: GFLOPs: 230.9472. Time: 889.9042 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #157: GFLOPs: 194.0959. Time: 1058.8628 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #158: GFLOPs: 239.8045. Time: 857.0352 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #159: GFLOPs: 172.8234. Time: 1189.1960 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #160: GFLOPs: 146.5721. Time: 1402.1833 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #161: GFLOPs: 147.6976. Time: 1391.4982 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #162: GFLOPs: 182.5378. Time: 1125.9084 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #163: GFLOPs: 185.7390. Time: 1106.5040 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #164: GFLOPs: 149.8395. Time: 1371.6066 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #165: GFLOPs: 76.9742. Time: 2669.9956 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #166: GFLOPs: 170.9388. Time: 1202.3066 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:121] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #167: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(448), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(28)):
                for ax3_ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("conv2d_NCHWc_global"):
                        v0 = T.axis.spatial(T.int64(1), ax0)
                        v1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + ax1)
                        v2 = T.axis.spatial(T.int64(28), ax2)
                        v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                        v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                        T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                        conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 4, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 14, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[8, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #168: GFLOPs: 177.9659. Time: 1154.8333 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #169: GFLOPs: 196.3712. Time: 1046.5940 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #170: GFLOPs: 189.7133. Time: 1083.3235 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #171: GFLOPs: 132.7901. Time: 1547.7127 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #172: GFLOPs: 133.7736. Time: 1536.3342 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #173: GFLOPs: 213.7262. Time: 961.6084 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #174: GFLOPs: 212.1084. Time: 968.9426 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #175: GFLOPs: 179.5647. Time: 1144.5504 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #176: GFLOPs: 123.1147. Time: 1669.3455 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #177: GFLOPs: 167.2690. Time: 1228.6849 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #178: GFLOPs: 138.9469. Time: 1479.1330 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #179: GFLOPs: 101.9812. Time: 2015.2825 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #180: GFLOPs: 211.6587. Time: 971.0012 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #181: GFLOPs: 277.4020. Time: 740.8775 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #182: GFLOPs: 141.9117. Time: 1448.2313 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #183: GFLOPs: 209.3576. Time: 981.6737 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #184: GFLOPs: 151.4096. Time: 1357.3837 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #185: GFLOPs: 199.5646. Time: 1029.8464 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #186: GFLOPs: 152.6433. Time: 1346.4125 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #187: GFLOPs: 152.2835. Time: 1349.5940 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #188: GFLOPs: 153.4824. Time: 1339.0519 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #189: GFLOPs: 206.9244. Time: 993.2172 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #190: GFLOPs: 110.3486. Time: 1862.4702 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #191: GFLOPs: 3.5959. Time: 57154.2380 us. Best GFLOPs: 286.1594
2024-04-29 00:07:49 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #192: GFLOPs: 2.4692. Time: 83234.7903 us. Best GFLOPs: 286.1594
2024-04-29 00:49:39 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:49:40 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:49:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:49:42 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:49:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:49:51 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:49:55 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:50:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 00:50:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9872  0.9812  0.9812  0.9753  0.9489  0.8483  0.8432  0.8320  0.8237  0.8237  0.8237  0.8182  0.8062  0.8040  0.7926  0.7897
[17 : 32]:	0.7857  0.7790  0.7779  0.7676  0.7637  0.7469  0.7414  0.7397  0.7395  0.7382  0.7381  0.7381  0.7381  0.7381  0.7372  0.7372
[33 : 48]:	0.7372  0.7310  0.7278  0.7260  0.7249  0.7246  0.7244  0.7238  0.7237  0.7237  0.7227  0.7227  0.7209  0.7178  0.7159  0.7158
[49 : 64]:	0.7116  0.7114  0.7066  0.7045  0.7009  0.7000  0.6993  0.6992  0.6962  0.6943  0.6937  0.6925  0.6924  0.6924  0.6893  0.6891
2024-04-29 00:50:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:50:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #193: GFLOPs: 286.6850. Time: 716.8874 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #194: GFLOPs: 286.0855. Time: 718.3897 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #195: GFLOPs: 178.3661. Time: 1152.2417 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #196: GFLOPs: 224.1276. Time: 916.9817 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #197: GFLOPs: 275.6314. Time: 745.6366 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #198: GFLOPs: 101.1747. Time: 2031.3461 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #199: GFLOPs: 256.5571. Time: 801.0728 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #200: GFLOPs: 165.3274. Time: 1243.1146 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #201: GFLOPs: 243.2826. Time: 844.7825 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #202: GFLOPs: 207.6939. Time: 989.5375 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #203: GFLOPs: 182.4977. Time: 1126.1558 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #204: GFLOPs: 129.8249. Time: 1583.0628 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #205: GFLOPs: 237.9885. Time: 863.5749 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #206: GFLOPs: 200.0792. Time: 1027.1975 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #207: GFLOPs: 184.2365. Time: 1115.5277 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #208: GFLOPs: 139.9623. Time: 1468.4022 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #209: GFLOPs: 276.5134. Time: 743.2582 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #210: GFLOPs: 190.5152. Time: 1078.7639 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #211: GFLOPs: 255.2643. Time: 805.1300 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #212: GFLOPs: 276.1493. Time: 744.2382 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #213: GFLOPs: 177.3852. Time: 1158.6135 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #214: GFLOPs: 165.8579. Time: 1239.1383 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #215: GFLOPs: 269.8371. Time: 761.6479 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #216: GFLOPs: 209.5720. Time: 980.6697 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #217: GFLOPs: 242.5513. Time: 847.3296 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #218: GFLOPs: 201.3251. Time: 1020.8407 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #219: GFLOPs: 151.8256. Time: 1353.6643 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #220: GFLOPs: 174.6483. Time: 1176.7699 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #221: GFLOPs: 192.6975. Time: 1066.5466 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #222: GFLOPs: 191.6381. Time: 1072.4430 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #223: GFLOPs: 197.1609. Time: 1042.4017 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #224: GFLOPs: 193.5439. Time: 1061.8824 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #225: GFLOPs: 205.3339. Time: 1000.9105 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #226: GFLOPs: 204.1462. Time: 1006.7339 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #227: GFLOPs: 243.1446. Time: 845.2621 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #228: GFLOPs: 155.6567. Time: 1320.3469 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #229: GFLOPs: 268.0742. Time: 766.6567 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #230: GFLOPs: 179.8824. Time: 1142.5292 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #231: GFLOPs: 215.7048. Time: 952.7879 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #232: GFLOPs: 241.2144. Time: 852.0258 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #233: GFLOPs: 228.3641. Time: 899.9701 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #234: GFLOPs: 230.5107. Time: 891.5894 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #235: GFLOPs: 233.1069. Time: 881.6593 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #236: GFLOPs: 231.9675. Time: 885.9900 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #237: GFLOPs: 154.6511. Time: 1328.9327 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #238: GFLOPs: 163.1708. Time: 1259.5445 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #239: GFLOPs: 221.8209. Time: 926.5171 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #240: GFLOPs: 75.9719. Time: 2705.2225 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #241: GFLOPs: 211.8031. Time: 970.3393 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #242: GFLOPs: 271.3462. Time: 757.4120 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #243: GFLOPs: 189.1496. Time: 1086.5520 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #244: GFLOPs: 212.7617. Time: 965.9674 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #245: GFLOPs: 210.4430. Time: 976.6107 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #246: GFLOPs: 232.7055. Time: 883.1801 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #247: GFLOPs: 164.0536. Time: 1252.7670 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #248: GFLOPs: 209.4785. Time: 981.1073 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #249: GFLOPs: 202.4332. Time: 1015.2531 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #250: GFLOPs: 185.4389. Time: 1108.2942 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #251: GFLOPs: 145.9730. Time: 1407.9377 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #252: GFLOPs: 246.5728. Time: 833.5102 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #253: GFLOPs: 190.4269. Time: 1079.2639 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #254: GFLOPs: 9.5735. Time: 21467.7446 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #255: GFLOPs: 95.3737. Time: 2154.9012 us. Best GFLOPs: 286.6850
2024-04-29 00:51:39 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #256: GFLOPs: 75.1685. Time: 2734.1377 us. Best GFLOPs: 286.6850
2024-04-29 01:07:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:07:25 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:07:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 01:07:27 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 01:07:32 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 01:07:36 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 01:07:40 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 01:07:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x60d5328)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x85ac868)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x58ee028)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x99c7278)]: 0 failure(s)
2024-04-29 01:07:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9059  0.8809  0.8747  0.8630  0.8550  0.8487  0.8487  0.8355  0.8338  0.8300  0.8293  0.8210  0.8209  0.8209  0.8208  0.8206
[17 : 32]:	0.8139  0.8130  0.8089  0.8080  0.8073  0.8063  0.8059  0.8006  0.7984  0.7950  0.7928  0.7856  0.7833  0.7824  0.7824  0.7747
[33 : 48]:	0.7744  0.7744  0.7715  0.7715  0.7714  0.7714  0.7669  0.7669  0.7669  0.7663  0.7540  0.7540  0.7517  0.7502  0.7468  0.7461
[49 : 64]:	0.7457  0.7441  0.7432  0.7431  0.7422  0.7421  0.7411  0.7393  0.7387  0.7370  0.7349  0.7343  0.7325  0.7310  0.7303  0.7302
2024-04-29 01:07:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:07:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #257: GFLOPs: 140.8719. Time: 1458.9204 us. Best GFLOPs: 286.6850
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #258: GFLOPs: 287.7819. Time: 714.1550 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #259: GFLOPs: 217.0555. Time: 946.8587 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #260: GFLOPs: 185.2523. Time: 1109.4107 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #261: GFLOPs: 221.2493. Time: 928.9107 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #262: GFLOPs: 102.2443. Time: 2010.0964 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #263: GFLOPs: 100.9513. Time: 2035.8423 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #264: GFLOPs: 260.3169. Time: 789.5027 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #265: GFLOPs: 212.7996. Time: 965.7957 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #266: GFLOPs: 234.1789. Time: 877.6233 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #267: GFLOPs: 279.9573. Time: 734.1152 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #268: GFLOPs: 254.4677. Time: 807.6502 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #269: GFLOPs: 160.2135. Time: 1282.7935 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #270: GFLOPs: 259.2476. Time: 792.7590 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #271: GFLOPs: 144.9170. Time: 1418.1975 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #272: GFLOPs: 145.3365. Time: 1414.1041 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #273: GFLOPs: 147.1136. Time: 1397.0222 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #274: GFLOPs: 178.2434. Time: 1153.0354 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #275: GFLOPs: 142.3424. Time: 1443.8490 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #276: GFLOPs: 172.8783. Time: 1188.8186 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #277: GFLOPs: 189.3689. Time: 1085.2940 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #278: GFLOPs: 153.8501. Time: 1335.8513 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #279: GFLOPs: 197.3752. Time: 1041.2699 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #280: GFLOPs: 219.9738. Time: 934.2972 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #281: GFLOPs: 197.6277. Time: 1039.9395 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #282: GFLOPs: 217.3753. Time: 945.4658 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #283: GFLOPs: 152.3037. Time: 1349.4154 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #284: GFLOPs: 267.4331. Time: 768.4946 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #285: GFLOPs: 181.2230. Time: 1134.0774 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #286: GFLOPs: 162.4475. Time: 1265.1531 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #287: GFLOPs: 95.6531. Time: 2148.6062 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #288: GFLOPs: 212.4591. Time: 967.3434 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #289: GFLOPs: 192.9644. Time: 1065.0714 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #290: GFLOPs: 192.0132. Time: 1070.3476 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #291: GFLOPs: 172.2490. Time: 1193.1615 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #292: GFLOPs: 172.0531. Time: 1194.5198 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #293: GFLOPs: 222.3692. Time: 924.2328 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #294: GFLOPs: 176.6846. Time: 1163.2080 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #295: GFLOPs: 195.8638. Time: 1049.3053 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #296: GFLOPs: 192.1286. Time: 1069.7050 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #297: GFLOPs: 164.3599. Time: 1250.4324 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #298: GFLOPs: 176.4246. Time: 1164.9217 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #299: GFLOPs: 218.4587. Time: 940.7769 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #300: GFLOPs: 232.9420. Time: 882.2835 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #301: GFLOPs: 106.8100. Time: 1924.1724 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #302: GFLOPs: 156.8487. Time: 1310.3131 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #303: GFLOPs: 214.2329. Time: 959.3338 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #304: GFLOPs: 217.5552. Time: 944.6839 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #305: GFLOPs: 187.7819. Time: 1094.4660 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #306: GFLOPs: 271.4645. Time: 757.0820 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #307: GFLOPs: 167.1157. Time: 1229.8122 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:121] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #308: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(128), T.int64(28), T.int64(28), T.int64(4)), "float32"), p1: T.Buffer((T.int64(64), T.int64(128), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), conv2d_NCHWc: T.Buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc_global = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(3136), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(392) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(56) // T.int64(14) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(392) // T.int64(56) * T.int64(4) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(392) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(56) // T.int64(14) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(392) // T.int64(56) * T.int64(4) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc_global[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(4)):
                    for ax3_ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_global"):
                            v0 = T.axis.spatial(T.int64(1), ax0)
                            v1 = T.axis.spatial(T.int64(64), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(392) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(56) // T.int64(14) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(392) // T.int64(56) * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                            v4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc_global[v0, v1, v2, v3, v4])
                            T.writes(conv2d_NCHWc[v0, v1, v2, v3, v4])
                            conv2d_NCHWc[v0, v1, v2, v3, v4] = conv2d_NCHWc_global[v0, v1, v2, v3, v4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[8, 4, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 2, 2])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 2, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[8, 64])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="global")
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b66)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b103)
b122 = sch.decompose_reduction(block=b103, loop=l106)
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #309: GFLOPs: 216.9642. Time: 947.2573 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #310: GFLOPs: 123.7002. Time: 1661.4436 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #311: GFLOPs: 267.4776. Time: 768.3669 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #312: GFLOPs: 175.2683. Time: 1172.6073 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #313: GFLOPs: 169.5446. Time: 1212.1936 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #314: GFLOPs: 131.1780. Time: 1566.7325 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #315: GFLOPs: 152.4679. Time: 1347.9618 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #316: GFLOPs: 233.2599. Time: 881.0810 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #317: GFLOPs: 279.3816. Time: 735.6278 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #318: GFLOPs: 81.9964. Time: 2506.4631 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #319: GFLOPs: 90.9098. Time: 2260.7115 us. Best GFLOPs: 287.7819
2024-04-29 01:09:27 [INFO] [task_scheduler.cc:131] [Task #70: fused_nn_contrib_conv2d_NCHWc_5] Trial #320: GFLOPs: 212.8802. Time: 965.4299 us. Best GFLOPs: 287.7819
