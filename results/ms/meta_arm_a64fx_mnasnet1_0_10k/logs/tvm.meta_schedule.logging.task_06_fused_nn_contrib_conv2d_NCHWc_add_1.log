2024-04-29 02:09:08 [INFO] [task_scheduler.cc:160] Initializing Task #6: "fused_nn_contrib_conv2d_NCHWc_add_1"
2024-04-29 02:09:08 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(12), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(12), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4), T.int64(48), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
2024-04-29 02:09:08 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 02:09:08 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(12), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(12), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(4), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(6), oc_chunk_0 * T.int64(6) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(6) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(56) + ow_2 * T.int64(4) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(48), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)):
                with T.block("T_add"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 6])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 14, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 4])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[48, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-29 02:09:08 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(12), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(12), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), oc_chunk_0 * T.int64(6) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(6) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(56) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(48), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(14), T.int64(56), T.int64(2)):
                    with T.block("T_add"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(56), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 6])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 14, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 4])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[48, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:09:08 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(12), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(12), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(6), T.int64(1), T.int64(4), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), oc_chunk_0 * T.int64(6) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(6) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), ow_0 * T.int64(56) + ow_1 * T.int64(56) + ow_2 * T.int64(4) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(48), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(6), T.int64(14), T.int64(56), T.int64(4)):
                    with T.block("T_add"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(56), oh_0 * T.int64(14) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 6])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 14, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 4])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[48, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:20:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:20:04 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:20:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 02:20:06 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 02:20:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 02:20:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 02:20:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 02:20:18 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 02:20:19 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9998  0.9990  0.9989  0.9988  0.9988  0.9977  0.9975  0.9960  0.9953  0.9950  0.9950  0.9941  0.9938  0.9934  0.9932
[17 : 32]:	0.9928  0.9926  0.9919  0.9915  0.9915  0.9913  0.9912  0.9894  0.9891  0.9882  0.9881  0.9865  0.9863  0.9857  0.9857  0.9855
[33 : 48]:	0.9847  0.9844  0.9842  0.9841  0.9832  0.9828  0.9821  0.9821  0.9810  0.9810  0.9807  0.9803  0.9801  0.9800  0.9799  0.9796
[49 : 64]:	0.9794  0.9793  0.9786  0.9783  0.9783  0.9779  0.9776  0.9771  0.9765  0.9760  0.9755  0.9755  0.9751  0.9751  0.9747  0.9743
2024-04-29 02:20:19 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:20:19 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #1: GFLOPs: 20.1642. Time: 362.0571 us. Best GFLOPs: 20.1642
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #2: GFLOPs: 39.1586. Time: 186.4371 us. Best GFLOPs: 39.1586
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #3: GFLOPs: 26.5088. Time: 275.4034 us. Best GFLOPs: 39.1586
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #4: GFLOPs: 1.8948. Time: 3852.9337 us. Best GFLOPs: 39.1586
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #5: GFLOPs: 30.6150. Time: 238.4650 us. Best GFLOPs: 39.1586
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #6: GFLOPs: 15.6030. Time: 467.8981 us. Best GFLOPs: 39.1586
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #7: GFLOPs: 1.4988. Time: 4871.0166 us. Best GFLOPs: 39.1586
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #8: GFLOPs: 42.7537. Time: 170.7597 us. Best GFLOPs: 42.7537
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #9: GFLOPs: 6.6614. Time: 1095.9517 us. Best GFLOPs: 42.7537
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #10: GFLOPs: 2.5376. Time: 2876.9389 us. Best GFLOPs: 42.7537
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #11: GFLOPs: 6.3779. Time: 1144.6726 us. Best GFLOPs: 42.7537
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #12: GFLOPs: 12.8647. Time: 567.4918 us. Best GFLOPs: 42.7537
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #13: GFLOPs: 42.3613. Time: 172.3416 us. Best GFLOPs: 42.7537
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #14: GFLOPs: 15.7927. Time: 462.2768 us. Best GFLOPs: 42.7537
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #15: GFLOPs: 38.3001. Time: 190.6157 us. Best GFLOPs: 42.7537
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #16: GFLOPs: 59.3356. Time: 123.0393 us. Best GFLOPs: 59.3356
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #17: GFLOPs: 66.9726. Time: 109.0089 us. Best GFLOPs: 66.9726
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #18: GFLOPs: 48.8038. Time: 149.5910 us. Best GFLOPs: 66.9726
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #19: GFLOPs: 34.8679. Time: 209.3791 us. Best GFLOPs: 66.9726
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #20: GFLOPs: 74.1455. Time: 98.4633 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #21: GFLOPs: 2.2618. Time: 3227.7957 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #22: GFLOPs: 9.6189. Time: 758.9865 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #23: GFLOPs: 20.3834. Time: 358.1636 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #24: GFLOPs: 61.0772. Time: 119.5308 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #25: GFLOPs: 27.5283. Time: 265.2034 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #26: GFLOPs: 16.7744. Time: 435.2224 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #27: GFLOPs: 31.4413. Time: 232.1982 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #28: GFLOPs: 2.3534. Time: 3102.0916 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #29: GFLOPs: 16.1710. Time: 451.4618 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #30: GFLOPs: 14.4935. Time: 503.7156 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #31: GFLOPs: 21.3572. Time: 341.8338 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #32: GFLOPs: 26.5551. Time: 274.9227 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #33: GFLOPs: 29.1517. Time: 250.4347 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #34: GFLOPs: 36.2879. Time: 201.1857 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #35: GFLOPs: 1.3139. Time: 5556.4392 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #36: GFLOPs: 2.1746. Time: 3357.1586 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #37: GFLOPs: 34.9981. Time: 208.6000 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #38: GFLOPs: 8.3955. Time: 869.5860 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:121] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #39: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(12), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(12), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(672), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(224) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(224) // T.int64(32) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(224) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(224) // T.int64(32) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(8) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(48), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1176)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_add"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(6), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(12544))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(12544) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[3, 1, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 4, 2, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 2, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[3, 16])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, b65 = sch.get_child_blocks(b63)
l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91 = sch.get_loops(block=b64)
l92 = sch.fuse(l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l92)
l93 = sch.fuse(l91, preserve_unit_iters=True)
sch.vectorize(loop=l93)
sch.annotate(block_or_loop=l92, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l92, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b65)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #40: GFLOPs: 40.1127. Time: 182.0024 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #41: GFLOPs: 15.6569. Time: 466.2881 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #42: GFLOPs: 1.4425. Time: 5061.2223 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #43: GFLOPs: 14.5260. Time: 502.5881 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:121] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #44: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(12), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(12), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(96), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(28), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(28) + oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(28) + ow_2_init * T.int64(28) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(4) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(28), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(16) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(28) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(28) + ow_2 * T.int64(28) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(4) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(48), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1176)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_add"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(6), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(12544))
                    v_ax2 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(12544) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(56), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[6, 1, 1, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 4, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 28])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[12, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
sch.enter_postproc()
b63 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b63, ann_key="meta_schedule.unroll_explicit")
b64, b65 = sch.get_child_blocks(b63)
l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91 = sch.get_loops(block=b64)
l92 = sch.fuse(l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l92)
sch.annotate(block_or_loop=l92, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l92, ann_key="pragma_unroll_explicit", ann_val=1)
l93, l94, l95, l96, l97 = sch.get_loops(block=b65)
l98 = sch.fuse(l93, l94, l95, l96, l97, preserve_unit_iters=True)
l99, l100 = sch.split(loop=l98, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l99)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #45: GFLOPs: 8.9347. Time: 817.1047 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:121] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #46: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(12), T.int64(56), T.int64(56), T.int64(4)), "float32"), p1: T.Buffer((T.int64(6), T.int64(12), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(6), T.int64(56), T.int64(56), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(128), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(3), T.int64(7), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(64) * T.int64(3) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_2_init * T.int64(4) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(64) // T.int64(8) * T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(7), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(64) * T.int64(3) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + oh_2 * T.int64(4) + oh_3)
                    v_ow = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(64) // T.int64(8) * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(48), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(3), T.int64(28), T.int64(7), T.int64(1)):
                with T.block("T_add"):
                    v_ax0 = T.axis.spatial(T.int64(1), ax0)
                    v_ax1 = T.axis.spatial(T.int64(6), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(64) * T.int64(3) + ax1)
                    v_ax2 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(28) + ax2)
                    v_ax3 = T.axis.spatial(T.int64(56), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(64) // T.int64(8) * T.int64(7) + ax3)
                    v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + ax4)
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 3, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 7, 4])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 1, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[48, 1])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #47: GFLOPs: 10.2027. Time: 715.5589 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #48: GFLOPs: 27.7810. Time: 262.7911 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #49: GFLOPs: 13.1430. Time: 555.4743 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #50: GFLOPs: 21.3551. Time: 341.8665 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #51: GFLOPs: 31.9764. Time: 228.3126 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #52: GFLOPs: 18.7258. Time: 389.8684 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #53: GFLOPs: 13.7994. Time: 529.0545 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #54: GFLOPs: 26.1028. Time: 279.6867 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #55: GFLOPs: 8.9191. Time: 818.5333 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #56: GFLOPs: 2.2248. Time: 3281.5373 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #57: GFLOPs: 29.5323. Time: 247.2074 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #58: GFLOPs: 17.6516. Time: 413.5953 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #59: GFLOPs: 50.8661. Time: 143.5259 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #60: GFLOPs: 1.9527. Time: 3738.8014 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #61: GFLOPs: 31.7861. Time: 229.6790 us. Best GFLOPs: 74.1455
2024-04-29 03:11:14 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #62: GFLOPs: 10.6718. Time: 684.1039 us. Best GFLOPs: 74.1455
2024-04-29 03:11:15 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #63: GFLOPs: 76.6577. Time: 95.2365 us. Best GFLOPs: 76.6577
2024-04-29 03:11:15 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #64: GFLOPs: 32.0934. Time: 227.4800 us. Best GFLOPs: 76.6577
2024-04-29 03:53:39 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:53:39 [INFO] [evolutionary_search.cc:715] Picked top 61 candidate(s) from database
2024-04-29 03:53:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 03:53:41 [INFO] [evolutionary_search.cc:723] Sampled 451 candidate(s)
2024-04-29 03:53:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 03:53:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 03:53:57 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 03:54:02 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 03:54:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9912  0.8897  0.8868  0.8707  0.8524  0.8480  0.8407  0.8367  0.8191  0.8191  0.8115  0.8060  0.8009  0.7927  0.7925  0.7921
[17 : 32]:	0.7912  0.7893  0.7893  0.7858  0.7849  0.7821  0.7796  0.7796  0.7777  0.7761  0.7734  0.7719  0.7680  0.7662  0.7659  0.7591
[33 : 48]:	0.7577  0.7571  0.7564  0.7518  0.7493  0.7492  0.7460  0.7445  0.7430  0.7413  0.7408  0.7384  0.7383  0.7380  0.7376  0.7363
[49 : 64]:	0.7320  0.7317  0.7271  0.7270  0.7268  0.7267  0.7246  0.7245  0.7241  0.7224  0.7215  0.7184  0.7178  0.7164  0.7146  0.7145
2024-04-29 03:54:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:54:06 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #65: GFLOPs: 62.5799. Time: 116.6606 us. Best GFLOPs: 76.6577
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #66: GFLOPs: 47.8875. Time: 152.4532 us. Best GFLOPs: 76.6577
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #67: GFLOPs: 99.8038. Time: 73.1496 us. Best GFLOPs: 99.8038
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #68: GFLOPs: 104.4065. Time: 69.9249 us. Best GFLOPs: 104.4065
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #69: GFLOPs: 55.6739. Time: 131.1317 us. Best GFLOPs: 104.4065
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #70: GFLOPs: 79.7119. Time: 91.5875 us. Best GFLOPs: 104.4065
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #71: GFLOPs: 67.4123. Time: 108.2979 us. Best GFLOPs: 104.4065
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #72: GFLOPs: 107.9713. Time: 67.6162 us. Best GFLOPs: 107.9713
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #73: GFLOPs: 106.1553. Time: 68.7729 us. Best GFLOPs: 107.9713
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #74: GFLOPs: 115.7780. Time: 63.0570 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #75: GFLOPs: 94.1454. Time: 77.5461 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #76: GFLOPs: 80.5779. Time: 90.6031 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #77: GFLOPs: 91.0582. Time: 80.1752 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #78: GFLOPs: 109.0933. Time: 66.9208 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #79: GFLOPs: 89.2822. Time: 81.7701 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #80: GFLOPs: 97.9703. Time: 74.5186 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #81: GFLOPs: 101.1096. Time: 72.2049 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #82: GFLOPs: 87.3680. Time: 83.5616 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #83: GFLOPs: 90.6097. Time: 80.5720 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #84: GFLOPs: 40.9439. Time: 178.3074 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #85: GFLOPs: 73.3016. Time: 99.5968 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #86: GFLOPs: 98.0715. Time: 74.4417 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #87: GFLOPs: 65.0712. Time: 112.1941 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #88: GFLOPs: 79.9489. Time: 91.3160 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #89: GFLOPs: 44.1329. Time: 165.4234 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #90: GFLOPs: 62.4337. Time: 116.9337 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #91: GFLOPs: 89.3608. Time: 81.6981 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #92: GFLOPs: 88.4507. Time: 82.5387 us. Best GFLOPs: 115.7780
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #93: GFLOPs: 147.9353. Time: 49.3500 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #94: GFLOPs: 48.9092. Time: 149.2686 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #95: GFLOPs: 63.3069. Time: 115.3208 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #96: GFLOPs: 76.2413. Time: 95.7567 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #97: GFLOPs: 61.2581. Time: 119.1779 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #98: GFLOPs: 53.5774. Time: 136.2627 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #99: GFLOPs: 102.3573. Time: 71.3247 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #100: GFLOPs: 61.2118. Time: 119.2679 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #101: GFLOPs: 75.6784. Time: 96.4688 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #102: GFLOPs: 124.3901. Time: 58.6912 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #103: GFLOPs: 71.1577. Time: 102.5976 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #104: GFLOPs: 76.1074. Time: 95.9251 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #105: GFLOPs: 146.5624. Time: 49.8123 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #106: GFLOPs: 50.9960. Time: 143.1605 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #107: GFLOPs: 57.4142. Time: 127.1567 us. Best GFLOPs: 147.9353
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #108: GFLOPs: 150.1476. Time: 48.6229 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #109: GFLOPs: 97.3885. Time: 74.9637 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #110: GFLOPs: 63.8196. Time: 114.3945 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #111: GFLOPs: 76.7966. Time: 95.0643 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #112: GFLOPs: 102.5881. Time: 71.1643 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #113: GFLOPs: 43.7056. Time: 167.0406 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #114: GFLOPs: 53.7619. Time: 135.7952 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #115: GFLOPs: 103.0562. Time: 70.8411 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #116: GFLOPs: 95.5131. Time: 76.4356 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #117: GFLOPs: 126.0707. Time: 57.9088 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #118: GFLOPs: 95.6037. Time: 76.3632 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #119: GFLOPs: 64.2270. Time: 113.6688 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #120: GFLOPs: 57.7379. Time: 126.4439 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #121: GFLOPs: 83.1802. Time: 87.7686 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #122: GFLOPs: 99.9189. Time: 73.0653 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #123: GFLOPs: 95.2349. Time: 76.6590 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #124: GFLOPs: 47.7938. Time: 152.7521 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #125: GFLOPs: 77.6318. Time: 94.0415 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #126: GFLOPs: 67.1547. Time: 108.7134 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #127: GFLOPs: 43.7897. Time: 166.7199 us. Best GFLOPs: 150.1476
2024-04-29 03:55:29 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #128: GFLOPs: 49.2550. Time: 148.2207 us. Best GFLOPs: 150.1476
2024-04-29 06:27:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:27:05 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:27:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 06:27:07 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:27:12 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 06:27:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 06:27:23 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 06:27:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33a3c58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x50b1e58)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3470ad8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3537228)]: 0 failure(s)
2024-04-29 06:27:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9988  0.9988  0.9951  0.9951  0.9895  0.9895  0.9858  0.9565  0.9533  0.9468  0.9468  0.9239  0.9173  0.9164  0.9105  0.9002
[17 : 32]:	0.8800  0.8771  0.8764  0.8723  0.8723  0.8508  0.8482  0.8417  0.8383  0.8360  0.8342  0.8323  0.8318  0.8317  0.8317  0.8252
[33 : 48]:	0.8150  0.8117  0.7914  0.7868  0.7845  0.7745  0.7699  0.7699  0.7695  0.7662  0.7655  0.7632  0.7575  0.7381  0.7370  0.7313
[49 : 64]:	0.7299  0.7288  0.7288  0.7272  0.7272  0.7272  0.7248  0.7229  0.7221  0.7213  0.7204  0.7201  0.7188  0.7146  0.7146  0.7131
2024-04-29 06:27:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:27:31 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #129: GFLOPs: 32.2516. Time: 226.3643 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #130: GFLOPs: 33.3416. Time: 218.9642 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #131: GFLOPs: 58.7474. Time: 124.2712 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #132: GFLOPs: 58.8407. Time: 124.0740 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #133: GFLOPs: 95.5645. Time: 76.3946 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #134: GFLOPs: 93.3786. Time: 78.1828 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #135: GFLOPs: 59.7503. Time: 122.1854 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #136: GFLOPs: 126.6145. Time: 57.6601 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #137: GFLOPs: 102.8870. Time: 70.9575 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #138: GFLOPs: 110.7568. Time: 65.9157 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #139: GFLOPs: 97.4083. Time: 74.9485 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #140: GFLOPs: 102.2726. Time: 71.3838 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #141: GFLOPs: 104.2102. Time: 70.0565 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #142: GFLOPs: 60.9365. Time: 119.8067 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #143: GFLOPs: 122.7522. Time: 59.4743 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #144: GFLOPs: 120.6954. Time: 60.4879 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #145: GFLOPs: 68.6620. Time: 106.3267 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #146: GFLOPs: 121.3848. Time: 60.1443 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #147: GFLOPs: 72.3996. Time: 100.8377 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #148: GFLOPs: 109.4119. Time: 66.7259 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #149: GFLOPs: 117.4941. Time: 62.1360 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #150: GFLOPs: 128.2024. Time: 56.9459 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #151: GFLOPs: 94.1662. Time: 77.5289 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #152: GFLOPs: 110.3743. Time: 66.1441 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #153: GFLOPs: 69.1615. Time: 105.5588 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #154: GFLOPs: 102.9905. Time: 70.8862 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #155: GFLOPs: 111.8177. Time: 65.2903 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #156: GFLOPs: 90.0404. Time: 81.0815 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #157: GFLOPs: 70.9284. Time: 102.9292 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #158: GFLOPs: 90.6494. Time: 80.5368 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #159: GFLOPs: 87.2199. Time: 83.7034 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #160: GFLOPs: 95.0048. Time: 76.8447 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #161: GFLOPs: 105.9991. Time: 68.8743 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #162: GFLOPs: 54.4629. Time: 134.0473 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #163: GFLOPs: 88.9342. Time: 82.0900 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #164: GFLOPs: 124.0704. Time: 58.8424 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #165: GFLOPs: 67.1519. Time: 108.7178 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #166: GFLOPs: 122.2525. Time: 59.7175 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #167: GFLOPs: 51.7310. Time: 141.1263 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #168: GFLOPs: 59.6734. Time: 122.3428 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #169: GFLOPs: 61.2873. Time: 119.1211 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #170: GFLOPs: 54.0659. Time: 135.0317 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #171: GFLOPs: 99.1777. Time: 73.6114 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #172: GFLOPs: 128.9643. Time: 56.6095 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #173: GFLOPs: 112.6436. Time: 64.8116 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #174: GFLOPs: 113.1576. Time: 64.5172 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #175: GFLOPs: 145.8134. Time: 50.0682 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #176: GFLOPs: 101.3945. Time: 72.0020 us. Best GFLOPs: 150.1476
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #177: GFLOPs: 158.0539. Time: 46.1906 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #178: GFLOPs: 76.8836. Time: 94.9567 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #179: GFLOPs: 71.5317. Time: 102.0611 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #180: GFLOPs: 65.3332. Time: 111.7443 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #181: GFLOPs: 90.9481. Time: 80.2722 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #182: GFLOPs: 67.1517. Time: 108.7182 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #183: GFLOPs: 118.7503. Time: 61.4786 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #184: GFLOPs: 108.5401. Time: 67.2619 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #185: GFLOPs: 58.7075. Time: 124.3555 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #186: GFLOPs: 103.0995. Time: 70.8113 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #187: GFLOPs: 89.4845. Time: 81.5852 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #188: GFLOPs: 115.5933. Time: 63.1577 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #189: GFLOPs: 132.7279. Time: 55.0043 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #190: GFLOPs: 77.8369. Time: 93.7937 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #191: GFLOPs: 2.8726. Time: 2541.4293 us. Best GFLOPs: 158.0539
2024-04-29 06:29:08 [INFO] [task_scheduler.cc:131] [Task #6: fused_nn_contrib_conv2d_NCHWc_add_1] Trial #192: GFLOPs: 2.4339. Time: 2999.5783 us. Best GFLOPs: 158.0539
