2024-04-29 02:10:58 [INFO] [task_scheduler.cc:160] Initializing Task #32: "fused_nn_contrib_conv2d_NCHWc_add_6"
2024-04-29 02:10:58 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4), T.int64(1152), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
2024-04-29 02:10:58 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 02:10:58 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(288), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(20), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + oc_chunk_1 * T.int64(20) + oc_chunk_2 * T.int64(20) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_0 + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(4) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)):
                with T.block("T_add"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 1, 20])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[288, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v62 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v62)
2024-04-29 02:10:58 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(288), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(20), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + oc_chunk_1 * T.int64(20) + oc_chunk_2 * T.int64(20) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(20), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + oc_chunk_1 * T.int64(20) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), ow_1 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 1, 20])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[288, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:10:58 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(288), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(20), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + oc_chunk_1 * T.int64(20) + oc_chunk_2 * T.int64(20) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(40), T.int64(1), T.int64(7), T.int64(2)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), oc_chunk_0 * T.int64(40) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 2, 1, 20])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[7, 1, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[288, 4])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 03:03:52 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:03:52 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 03:03:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:03:54 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 03:03:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:04:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:04:03 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:04:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:04:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9996  0.9994  0.9993  0.9989  0.9985  0.9980  0.9974  0.9960  0.9957  0.9956  0.9955  0.9948  0.9947  0.9943  0.9941  0.9940
[17 : 32]:	0.9936  0.9922  0.9918  0.9912  0.9909  0.9903  0.9901  0.9901  0.9901  0.9899  0.9891  0.9884  0.9881  0.9879  0.9878  0.9863
[33 : 48]:	0.9858  0.9855  0.9853  0.9852  0.9852  0.9850  0.9849  0.9848  0.9842  0.9842  0.9839  0.9836  0.9833  0.9826  0.9814  0.9807
[49 : 64]:	0.9804  0.9803  0.9798  0.9797  0.9793  0.9790  0.9789  0.9787  0.9787  0.9783  0.9782  0.9777  0.9773  0.9766  0.9765  0.9761
2024-04-29 03:04:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:04:07 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #1: GFLOPs: 58.7084. Time: 615.6256 us. Best GFLOPs: 58.7084
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #2: GFLOPs: 58.4120. Time: 618.7494 us. Best GFLOPs: 58.7084
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #3: GFLOPs: 24.0405. Time: 1503.3964 us. Best GFLOPs: 58.7084
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #4: GFLOPs: 122.5052. Time: 295.0274 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #5: GFLOPs: 17.2326. Time: 2097.3302 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #6: GFLOPs: 78.2540. Time: 461.8603 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #7: GFLOPs: 53.7812. Time: 672.0270 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #8: GFLOPs: 90.9041. Time: 397.5883 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #9: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(20), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(7), oh_1 * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(7), ow_1 * T.int64(7) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(4) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(7), oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(7), ow_1 * T.int64(7) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(36) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(4), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(28)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[20, 2, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 36])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #10: GFLOPs: 121.5715. Time: 297.2933 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #11: GFLOPs: 3.8018. Time: 9506.6047 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #12: GFLOPs: 18.4758. Time: 1956.2063 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #13: GFLOPs: 63.4119. Time: 569.9620 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #14: GFLOPs: 3.5298. Time: 10239.1330 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #15: GFLOPs: 25.2038. Time: 1434.0045 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #16: GFLOPs: 19.2097. Time: 1881.4615 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #17: GFLOPs: 68.2158. Time: 529.8243 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #18: GFLOPs: 11.6924. Time: 3091.0984 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #19: GFLOPs: 7.5511. Time: 4786.3670 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #20: GFLOPs: 8.2194. Time: 4397.1860 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #21: GFLOPs: 110.9814. Time: 325.6617 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #22: GFLOPs: 68.3598. Time: 528.7086 us. Best GFLOPs: 122.5052
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #23: GFLOPs: 125.5092. Time: 287.9662 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #24: GFLOPs: 57.2953. Time: 630.8088 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #25: GFLOPs: 50.2456. Time: 719.3144 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #26: GFLOPs: 55.7484. Time: 648.3128 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #27: GFLOPs: 78.8497. Time: 458.3707 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #28: GFLOPs: 4.3512. Time: 8306.3388 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #29: GFLOPs: 15.1756. Time: 2381.6174 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #30: GFLOPs: 12.9412. Time: 2792.8227 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #31: GFLOPs: 13.0608. Time: 2767.2470 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #32: GFLOPs: 91.9489. Time: 393.0705 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #33: GFLOPs: 4.3587. Time: 8292.0473 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #34: GFLOPs: 56.0974. Time: 644.2800 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #35: GFLOPs: 54.8855. Time: 658.5059 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #36: GFLOPs: 75.6944. Time: 477.4779 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #37: GFLOPs: 4.6547. Time: 7764.6813 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #38: GFLOPs: 29.4116. Time: 1228.8502 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #39: GFLOPs: 44.1953. Time: 817.7888 us. Best GFLOPs: 125.5092
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #40: GFLOPs: 134.5413. Time: 268.6342 us. Best GFLOPs: 134.5413
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #41: GFLOPs: 1.6800. Time: 21513.0750 us. Best GFLOPs: 134.5413
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #42: GFLOPs: 35.4342. Time: 1019.9873 us. Best GFLOPs: 134.5413
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #43: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(5), T.int64(7), T.int64(7), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(40) + oc_chunk_1 * T.int64(40) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(7), oh_1 * T.int64(7) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(7), ow_1 * T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(7), T.int64(7), T.int64(2), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(40) + oc_chunk_1 * T.int64(40) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_1 * T.int64(7) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(40), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(28)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(40) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 1, 5, 8])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 7, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[24, 48])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l46, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l98, l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b101)
b124 = sch.decompose_reduction(block=b101, loop=l108)
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #44: GFLOPs: 52.0975. Time: 693.7460 us. Best GFLOPs: 134.5413
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #45: GFLOPs: 90.4636. Time: 399.5244 us. Best GFLOPs: 134.5413
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #46: GFLOPs: 154.1982. Time: 234.3892 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #47: GFLOPs: 62.6839. Time: 576.5820 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #48: GFLOPs: 52.7430. Time: 685.2554 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #49: GFLOPs: 96.4710. Time: 374.6454 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #50: GFLOPs: 114.3479. Time: 316.0740 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #51: GFLOPs: 33.0811. Time: 1092.5378 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #52: GFLOPs: 1.9347. Time: 18681.1363 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #53: GFLOPs: 82.1330. Time: 440.0475 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #54: GFLOPs: 72.2699. Time: 500.1030 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #55: GFLOPs: 78.1570. Time: 462.4332 us. Best GFLOPs: 154.1982
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #56: GFLOPs: 175.8642. Time: 205.5131 us. Best GFLOPs: 175.8642
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #57: GFLOPs: 8.4270. Time: 4288.8600 us. Best GFLOPs: 175.8642
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #58: GFLOPs: 4.1621. Time: 8683.6876 us. Best GFLOPs: 175.8642
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #59: GFLOPs: 15.8258. Time: 2283.7663 us. Best GFLOPs: 175.8642
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #60: GFLOPs: 113.4572. Time: 318.5554 us. Best GFLOPs: 175.8642
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #61: GFLOPs: 48.2249. Time: 749.4545 us. Best GFLOPs: 175.8642
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #62: GFLOPs: 5.1611. Time: 7002.9056 us. Best GFLOPs: 175.8642
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #63: GFLOPs: 13.5802. Time: 2661.3950 us. Best GFLOPs: 175.8642
2024-04-29 03:12:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #64: GFLOPs: 52.9580. Time: 682.4726 us. Best GFLOPs: 175.8642
2024-04-29 03:27:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:27:01 [INFO] [evolutionary_search.cc:715] Picked top 62 candidate(s) from database
2024-04-29 03:27:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:27:04 [INFO] [evolutionary_search.cc:723] Sampled 450 candidate(s)
2024-04-29 03:27:09 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:27:14 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:27:19 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:27:24 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:27:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9111  0.8640  0.8586  0.8562  0.8539  0.8521  0.8330  0.8121  0.8069  0.7913  0.7846  0.7822  0.7821  0.7680  0.7644  0.7603
[17 : 32]:	0.7592  0.7572  0.7491  0.7428  0.7428  0.7428  0.7394  0.7390  0.7376  0.7329  0.7328  0.7326  0.7326  0.7299  0.7284  0.7254
[33 : 48]:	0.7238  0.7225  0.7197  0.7159  0.7142  0.7107  0.7101  0.7101  0.7100  0.7099  0.7096  0.7082  0.7060  0.7054  0.7031  0.7025
[49 : 64]:	0.7022  0.7013  0.7011  0.7001  0.6990  0.6990  0.6987  0.6966  0.6894  0.6887  0.6882  0.6850  0.6836  0.6803  0.6784  0.6777
2024-04-29 03:27:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:27:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #65: GFLOPs: 67.0086. Time: 539.3698 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #66: GFLOPs: 68.8306. Time: 525.0923 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #67: GFLOPs: 105.4589. Time: 342.7155 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #68: GFLOPs: 118.1742. Time: 305.8400 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #69: GFLOPs: 97.8447. Time: 369.3855 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #70: GFLOPs: 80.6212. Time: 448.2990 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #71: GFLOPs: 97.1093. Time: 372.1828 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #72: GFLOPs: 127.6701. Time: 283.0920 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #73: GFLOPs: 141.9439. Time: 254.6245 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #74: GFLOPs: 108.2344. Time: 333.9270 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #75: GFLOPs: 116.5517. Time: 310.0977 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #76: GFLOPs: 113.7719. Time: 317.6743 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #77: GFLOPs: 127.8490. Time: 282.6961 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #78: GFLOPs: 142.7304. Time: 253.2214 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #79: GFLOPs: 110.8001. Time: 326.1948 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #80: GFLOPs: 53.0072. Time: 681.8389 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #81: GFLOPs: 78.6549. Time: 459.5059 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #82: GFLOPs: 52.8924. Time: 683.3197 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #83: GFLOPs: 116.1986. Time: 311.0398 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #84: GFLOPs: 124.1002. Time: 291.2357 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #85: GFLOPs: 111.7520. Time: 323.4162 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #86: GFLOPs: 125.9758. Time: 286.8995 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #87: GFLOPs: 78.5642. Time: 460.0363 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #88: GFLOPs: 66.9121. Time: 540.1474 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #89: GFLOPs: 81.7842. Time: 441.9241 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #90: GFLOPs: 71.0829. Time: 508.4544 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #91: GFLOPs: 113.5703. Time: 318.2383 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #92: GFLOPs: 122.1426. Time: 295.9033 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #93: GFLOPs: 108.3700. Time: 333.5094 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #94: GFLOPs: 129.5197. Time: 279.0495 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #95: GFLOPs: 79.5792. Time: 454.1690 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #96: GFLOPs: 94.4781. Time: 382.5478 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #97: GFLOPs: 132.4363. Time: 272.9041 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #98: GFLOPs: 114.3471. Time: 316.0761 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #99: GFLOPs: 109.7354. Time: 329.3594 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #100: GFLOPs: 96.4520. Time: 374.7192 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #101: GFLOPs: 110.7780. Time: 326.2597 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #102: GFLOPs: 115.2051. Time: 313.7223 us. Best GFLOPs: 175.8642
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #103: GFLOPs: 186.6808. Time: 193.6053 us. Best GFLOPs: 186.6808
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #104: GFLOPs: 189.3325. Time: 190.8938 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #105: GFLOPs: 85.8273. Time: 421.1060 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #106: GFLOPs: 92.7962. Time: 389.4816 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #107: GFLOPs: 134.9406. Time: 267.8392 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #108: GFLOPs: 138.4133. Time: 261.1193 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #109: GFLOPs: 51.9101. Time: 696.2504 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #110: GFLOPs: 188.6709. Time: 191.5632 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #111: GFLOPs: 142.7623. Time: 253.1650 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #112: GFLOPs: 87.9772. Time: 410.8153 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #113: GFLOPs: 115.6642. Time: 312.4771 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #114: GFLOPs: 155.8038. Time: 231.9738 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #115: GFLOPs: 69.0636. Time: 523.3208 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #116: GFLOPs: 106.7283. Time: 338.6392 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #117: GFLOPs: 113.4311. Time: 318.6286 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #118: GFLOPs: 57.9644. Time: 623.5273 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #119: GFLOPs: 94.9455. Time: 380.6646 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #120: GFLOPs: 113.2961. Time: 319.0083 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #121: GFLOPs: 155.5150. Time: 232.4045 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #122: GFLOPs: 136.6359. Time: 264.5162 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #123: GFLOPs: 174.8745. Time: 206.6762 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #124: GFLOPs: 53.2701. Time: 678.4744 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #125: GFLOPs: 139.7017. Time: 258.7113 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #126: GFLOPs: 10.6901. Time: 3380.9132 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #127: GFLOPs: 53.0435. Time: 681.3726 us. Best GFLOPs: 189.3325
2024-04-29 03:28:47 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #128: GFLOPs: 8.1679. Time: 4424.9107 us. Best GFLOPs: 189.3325
2024-04-29 03:51:51 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:51:52 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 03:51:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:51:54 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 03:51:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:52:04 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:52:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:52:14 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 03:52:17 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8764  0.8638  0.8638  0.8638  0.8607  0.8444  0.8369  0.8311  0.8311  0.7982  0.7978  0.7937  0.7888  0.7832  0.7832  0.7518
[17 : 32]:	0.7510  0.7466  0.7466  0.7464  0.7450  0.7424  0.7412  0.7393  0.7387  0.7319  0.7319  0.7295  0.7268  0.7256  0.7183  0.7139
[33 : 48]:	0.7138  0.7128  0.7115  0.7105  0.7082  0.7082  0.7042  0.7042  0.7041  0.6997  0.6983  0.6972  0.6957  0.6957  0.6957  0.6948
[49 : 64]:	0.6947  0.6937  0.6937  0.6929  0.6885  0.6885  0.6857  0.6854  0.6853  0.6845  0.6839  0.6821  0.6816  0.6801  0.6764  0.6757
2024-04-29 03:52:17 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:52:17 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #129: GFLOPs: 41.6976. Time: 866.7749 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #130: GFLOPs: 52.6207. Time: 686.8470 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #131: GFLOPs: 99.2334. Time: 364.2162 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #132: GFLOPs: 95.4031. Time: 378.8390 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #133: GFLOPs: 185.2596. Time: 195.0905 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #134: GFLOPs: 96.2283. Time: 375.5900 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #135: GFLOPs: 65.6384. Time: 550.6288 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #136: GFLOPs: 157.7033. Time: 229.1798 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #137: GFLOPs: 155.3438. Time: 232.6607 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #138: GFLOPs: 70.8868. Time: 509.8609 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #139: GFLOPs: 75.1732. Time: 480.7884 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #140: GFLOPs: 125.5600. Time: 287.8497 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #141: GFLOPs: 176.3522. Time: 204.9444 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #142: GFLOPs: 177.1691. Time: 203.9995 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #143: GFLOPs: 189.1667. Time: 191.0611 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #144: GFLOPs: 101.6568. Time: 355.5336 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #145: GFLOPs: 102.6314. Time: 352.1574 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #146: GFLOPs: 167.3957. Time: 215.9100 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #147: GFLOPs: 106.7799. Time: 338.4756 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #148: GFLOPs: 106.3957. Time: 339.6979 us. Best GFLOPs: 189.3325
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #149: GFLOPs: 195.3797. Time: 184.9854 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #150: GFLOPs: 136.2518. Time: 265.2618 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #151: GFLOPs: 90.5656. Time: 399.0741 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #152: GFLOPs: 165.7178. Time: 218.0960 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #153: GFLOPs: 193.9465. Time: 186.3525 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #154: GFLOPs: 140.5487. Time: 257.1521 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #155: GFLOPs: 108.7269. Time: 332.4146 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #156: GFLOPs: 94.2951. Time: 383.2903 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #157: GFLOPs: 186.7250. Time: 193.5595 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #158: GFLOPs: 46.2177. Time: 782.0035 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #159: GFLOPs: 142.9846. Time: 252.7713 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #160: GFLOPs: 111.0982. Time: 325.3194 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #161: GFLOPs: 132.0662. Time: 273.6688 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #162: GFLOPs: 109.5105. Time: 330.0360 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #163: GFLOPs: 115.2860. Time: 313.5021 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #164: GFLOPs: 168.0313. Time: 215.0933 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #165: GFLOPs: 134.5796. Time: 268.5578 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #166: GFLOPs: 135.4739. Time: 266.7850 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #167: GFLOPs: 184.0416. Time: 196.3817 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #168: GFLOPs: 129.6449. Time: 278.7799 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #169: GFLOPs: 86.8663. Time: 416.0694 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #170: GFLOPs: 126.8572. Time: 284.9062 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #171: GFLOPs: 96.0695. Time: 376.2109 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #172: GFLOPs: 128.0660. Time: 282.2171 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #173: GFLOPs: 134.3178. Time: 269.0813 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #174: GFLOPs: 134.9734. Time: 267.7742 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #175: GFLOPs: 135.7274. Time: 266.2868 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #176: GFLOPs: 147.8945. Time: 244.3796 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #177: GFLOPs: 97.8341. Time: 369.4253 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #178: GFLOPs: 170.6087. Time: 211.8439 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #179: GFLOPs: 171.5341. Time: 210.7009 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #180: GFLOPs: 106.9967. Time: 337.7899 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #181: GFLOPs: 125.9496. Time: 286.9592 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #182: GFLOPs: 133.4995. Time: 270.7306 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #183: GFLOPs: 174.2765. Time: 207.3854 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #184: GFLOPs: 128.6010. Time: 281.0428 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #185: GFLOPs: 144.4780. Time: 250.1586 us. Best GFLOPs: 195.3797
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #186: GFLOPs: 200.3942. Time: 180.3565 us. Best GFLOPs: 200.3942
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #187: GFLOPs: 119.7483. Time: 301.8198 us. Best GFLOPs: 200.3942
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #188: GFLOPs: 102.9398. Time: 351.1024 us. Best GFLOPs: 200.3942
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #189: GFLOPs: 139.0125. Time: 259.9940 us. Best GFLOPs: 200.3942
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #190: GFLOPs: 96.1774. Time: 375.7891 us. Best GFLOPs: 200.3942
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #191: GFLOPs: 161.6132. Time: 223.6351 us. Best GFLOPs: 200.3942
2024-04-29 03:53:39 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #192: GFLOPs: 123.8848. Time: 291.7420 us. Best GFLOPs: 200.3942
2024-04-29 04:27:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:27:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 04:27:53 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 04:27:53 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 04:27:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 04:28:03 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 04:28:08 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 04:28:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 04:28:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9180  0.8793  0.8708  0.8684  0.8637  0.8621  0.8596  0.8584  0.8523  0.8489  0.8412  0.8398  0.8343  0.8312  0.8273  0.8218
[17 : 32]:	0.8046  0.7900  0.7697  0.7695  0.7694  0.7661  0.7648  0.7645  0.7637  0.7637  0.7623  0.7598  0.7595  0.7592  0.7541  0.7531
[33 : 48]:	0.7516  0.7476  0.7465  0.7451  0.7419  0.7418  0.7374  0.7345  0.7345  0.7343  0.7341  0.7341  0.7321  0.7319  0.7266  0.7200
[49 : 64]:	0.7197  0.7074  0.7074  0.7053  0.6985  0.6984  0.6949  0.6947  0.6934  0.6906  0.6864  0.6860  0.6831  0.6810  0.6806  0.6788
2024-04-29 04:28:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:28:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #193: GFLOPs: 93.0178. Time: 388.5534 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #194: GFLOPs: 91.2777. Time: 395.9611 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #195: GFLOPs: 89.0880. Time: 405.6931 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #196: GFLOPs: 88.4735. Time: 408.5108 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #197: GFLOPs: 193.8277. Time: 186.4667 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #198: GFLOPs: 164.2828. Time: 220.0012 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #199: GFLOPs: 179.3023. Time: 201.5724 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #200: GFLOPs: 173.1783. Time: 208.7005 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #201: GFLOPs: 156.5995. Time: 230.7951 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #202: GFLOPs: 171.3344. Time: 210.9465 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #203: GFLOPs: 158.0803. Time: 228.6332 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #204: GFLOPs: 183.2625. Time: 197.2165 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #205: GFLOPs: 170.7720. Time: 211.6413 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #206: GFLOPs: 186.4772. Time: 193.8167 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #207: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(140), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(7), ow_2_init * T.int64(7) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(36) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(7)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 5, 4, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 36])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #208: GFLOPs: 155.4820. Time: 232.4539 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #209: GFLOPs: 80.2218. Time: 450.5311 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #210: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(560), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(16) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(16) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("T_add"):
                    v_ax0 = T.axis.spatial(T.int64(1), ax0)
                    v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(112) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(2) * T.int64(4) + ax1)
                    v_ax2 = T.axis.spatial(T.int64(7), ax2)
                    v_ax3 = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(112) // T.int64(16) + ax3)
                    v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) // T.int64(8) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) + ax4)
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[5, 4, 2, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[36, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
b100 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l101, l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b100)
b118 = sch.decompose_reduction(block=b100, loop=l102)
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #211: GFLOPs: 153.9758. Time: 234.7278 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #212: GFLOPs: 150.3860. Time: 240.3308 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #213: GFLOPs: 179.2443. Time: 201.6376 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #214: GFLOPs: 175.5031. Time: 205.9359 us. Best GFLOPs: 200.3942
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #215: GFLOPs: 225.5495. Time: 160.2416 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #216: GFLOPs: 105.8810. Time: 341.3492 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #217: GFLOPs: 151.8769. Time: 237.9717 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #218: GFLOPs: 152.7197. Time: 236.6583 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #219: GFLOPs: 155.1781. Time: 232.9092 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #220: GFLOPs: 125.2599. Time: 288.5393 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #221: GFLOPs: 165.3389. Time: 218.5959 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #222: GFLOPs: 151.2153. Time: 239.0129 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #223: GFLOPs: 121.6232. Time: 297.1671 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #224: GFLOPs: 101.7698. Time: 355.1387 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #225: GFLOPs: 106.6787. Time: 338.7968 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #226: GFLOPs: 185.2608. Time: 195.0893 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #227: GFLOPs: 152.0469. Time: 237.7056 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #228: GFLOPs: 180.2648. Time: 200.4962 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #229: GFLOPs: 220.8892. Time: 163.6223 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #230: GFLOPs: 91.2002. Time: 396.2974 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #231: GFLOPs: 156.3107. Time: 231.2216 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #232: GFLOPs: 131.7565. Time: 274.3121 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #233: GFLOPs: 132.6054. Time: 272.5560 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #234: GFLOPs: 190.2137. Time: 190.0094 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #235: GFLOPs: 151.7787. Time: 238.1256 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #236: GFLOPs: 118.8946. Time: 303.9869 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #237: GFLOPs: 184.4922. Time: 195.9021 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #238: GFLOPs: 154.9252. Time: 233.2893 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #239: GFLOPs: 154.0513. Time: 234.6128 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #240: GFLOPs: 140.3578. Time: 257.5019 us. Best GFLOPs: 225.5495
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #241: GFLOPs: 253.7202. Time: 142.4498 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #242: GFLOPs: 135.1440. Time: 267.4363 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #243: GFLOPs: 131.2690. Time: 275.3309 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #244: GFLOPs: 138.7922. Time: 260.4066 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #245: GFLOPs: 191.0119. Time: 189.2155 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #246: GFLOPs: 167.5500. Time: 215.7112 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #247: GFLOPs: 136.9812. Time: 263.8494 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #248: GFLOPs: 67.4321. Time: 535.9817 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #249: GFLOPs: 150.1981. Time: 240.6315 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #250: GFLOPs: 84.7512. Time: 426.4531 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #251: GFLOPs: 134.6042. Time: 268.5088 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #252: GFLOPs: 192.6146. Time: 187.6410 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #253: GFLOPs: 140.5193. Time: 257.2060 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #254: GFLOPs: 4.8395. Time: 7468.1878 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #255: GFLOPs: 34.9474. Time: 1034.1951 us. Best GFLOPs: 253.7202
2024-04-29 04:29:48 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #256: GFLOPs: 64.6516. Time: 559.0335 us. Best GFLOPs: 253.7202
2024-04-29 05:01:54 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:01:55 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:01:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:01:57 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:02:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:02:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:02:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:02:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:02:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8718  0.8608  0.8317  0.7701  0.7701  0.7524  0.7322  0.7303  0.7265  0.7261  0.7261  0.7234  0.7231  0.7209  0.7177  0.7155
[17 : 32]:	0.7147  0.7065  0.7011  0.7007  0.7007  0.6981  0.6913  0.6911  0.6896  0.6878  0.6843  0.6832  0.6831  0.6824  0.6789  0.6784
[33 : 48]:	0.6768  0.6750  0.6743  0.6739  0.6732  0.6726  0.6718  0.6696  0.6675  0.6645  0.6644  0.6628  0.6626  0.6599  0.6598  0.6581
[49 : 64]:	0.6550  0.6479  0.6473  0.6469  0.6465  0.6450  0.6450  0.6448  0.6434  0.6397  0.6393  0.6381  0.6381  0.6349  0.6342  0.6341
2024-04-29 05:02:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:02:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #257: GFLOPs: 228.5191. Time: 158.1592 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #258: GFLOPs: 197.1868. Time: 183.2901 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #259: GFLOPs: 125.3423. Time: 288.3496 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #260: GFLOPs: 199.8896. Time: 180.8118 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #261: GFLOPs: 201.8349. Time: 179.0691 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #262: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(140), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(1)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[5, 2, 4, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[36, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #263: GFLOPs: 89.5449. Time: 403.6234 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #264: GFLOPs: 143.8333. Time: 251.2798 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #265: GFLOPs: 248.5206. Time: 145.4302 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #266: GFLOPs: 177.9099. Time: 203.1500 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #267: GFLOPs: 185.3078. Time: 195.0398 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #268: GFLOPs: 127.8344. Time: 282.7282 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #269: GFLOPs: 204.2038. Time: 176.9918 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #270: GFLOPs: 82.7288. Time: 436.8782 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #271: GFLOPs: 103.8307. Time: 348.0898 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #272: GFLOPs: 158.2527. Time: 228.3841 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #273: GFLOPs: 186.3618. Time: 193.9367 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #274: GFLOPs: 178.8557. Time: 202.0757 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #275: GFLOPs: 194.0888. Time: 186.2158 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #276: GFLOPs: 178.8982. Time: 202.0277 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #277: GFLOPs: 105.3028. Time: 343.2237 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #278: GFLOPs: 168.7623. Time: 214.1615 us. Best GFLOPs: 253.7202
2024-04-29 05:03:54 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #279: GFLOPs: 144.9298. Time: 249.3787 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #280: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(70), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[2, 5, 4, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[36, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=490)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #281: GFLOPs: 158.4291. Time: 228.1298 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #282: GFLOPs: 172.1776. Time: 209.9135 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #283: GFLOPs: 174.1989. Time: 207.4778 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #284: GFLOPs: 178.7297. Time: 202.2182 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #285: GFLOPs: 204.0574. Time: 177.1188 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #286: GFLOPs: 178.7084. Time: 202.2423 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #287: GFLOPs: 120.3031. Time: 300.4278 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #288: GFLOPs: 168.4175. Time: 214.6000 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #289: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(140), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(1)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[5, 2, 4, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[36, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #290: GFLOPs: 177.3728. Time: 203.7651 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #291: GFLOPs: 182.8766. Time: 197.6327 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #292: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(140), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(1)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[5, 2, 4, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[36, 32])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l99, preserve_unit_iters=True)
sch.vectorize(loop=l100)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #293: GFLOPs: 137.0402. Time: 263.7358 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #294: GFLOPs: 131.4803. Time: 274.8883 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #295: GFLOPs: 176.0629. Time: 205.2812 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #296: GFLOPs: 152.3250. Time: 237.2716 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #297: GFLOPs: 163.0948. Time: 221.6036 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #298: GFLOPs: 244.7890. Time: 147.6472 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #299: GFLOPs: 192.1191. Time: 188.1250 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #300: GFLOPs: 168.1046. Time: 214.9994 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #301: GFLOPs: 183.0788. Time: 197.4145 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #302: GFLOPs: 95.1852. Time: 379.7061 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #303: GFLOPs: 102.0722. Time: 354.0867 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #304: GFLOPs: 183.0076. Time: 197.4913 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #305: GFLOPs: 171.9577. Time: 210.1819 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #306: GFLOPs: 215.2734. Time: 167.8907 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #307: GFLOPs: 167.9683. Time: 215.1739 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #308: GFLOPs: 114.8429. Time: 314.7115 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #309: GFLOPs: 179.3545. Time: 201.5137 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #310: GFLOPs: 163.7365. Time: 220.7351 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #311: GFLOPs: 156.0789. Time: 231.5649 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #312: GFLOPs: 157.0727. Time: 230.0999 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #313: GFLOPs: 71.2324. Time: 507.3871 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #314: GFLOPs: 192.3733. Time: 187.8764 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #315: GFLOPs: 68.8318. Time: 525.0831 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #316: GFLOPs: 193.2250. Time: 187.0483 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #317: GFLOPs: 160.1846. Time: 225.6297 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #318: GFLOPs: 25.0973. Time: 1440.0924 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #319: GFLOPs: 75.4979. Time: 478.7204 us. Best GFLOPs: 253.7202
2024-04-29 05:03:55 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #320: GFLOPs: 18.4172. Time: 1962.4214 us. Best GFLOPs: 253.7202
2024-04-29 05:29:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:29:57 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:29:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:29:59 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:30:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:30:09 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:30:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:30:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 05:30:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9478  0.9087  0.8355  0.8297  0.8269  0.8208  0.8195  0.8123  0.8123  0.8056  0.8036  0.8000  0.7973  0.7944  0.7885  0.7880
[17 : 32]:	0.7835  0.7824  0.7736  0.7722  0.7677  0.7485  0.7442  0.7440  0.7430  0.7416  0.7323  0.7323  0.7317  0.7286  0.7275  0.7265
[33 : 48]:	0.7229  0.7220  0.7205  0.7177  0.7153  0.7117  0.7073  0.7052  0.7018  0.6969  0.6957  0.6957  0.6910  0.6883  0.6849  0.6838
[49 : 64]:	0.6829  0.6829  0.6829  0.6825  0.6825  0.6819  0.6817  0.6806  0.6805  0.6795  0.6795  0.6794  0.6794  0.6794  0.6785  0.6785
2024-04-29 05:30:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:30:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #321: GFLOPs: 247.6350. Time: 145.9503 us. Best GFLOPs: 253.7202
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #322: GFLOPs: 259.9048. Time: 139.0601 us. Best GFLOPs: 259.9048
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #323: GFLOPs: 248.0059. Time: 145.7320 us. Best GFLOPs: 259.9048
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #324: GFLOPs: 185.2186. Time: 195.1338 us. Best GFLOPs: 259.9048
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #325: GFLOPs: 201.7486. Time: 179.1457 us. Best GFLOPs: 259.9048
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #326: GFLOPs: 157.8063. Time: 229.0302 us. Best GFLOPs: 259.9048
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #327: GFLOPs: 112.5175. Time: 321.2158 us. Best GFLOPs: 259.9048
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #328: GFLOPs: 174.6692. Time: 206.9192 us. Best GFLOPs: 259.9048
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #329: GFLOPs: 173.3985. Time: 208.4355 us. Best GFLOPs: 259.9048
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #330: GFLOPs: 260.9936. Time: 138.4800 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #331: GFLOPs: 204.2141. Time: 176.9829 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #332: GFLOPs: 241.5133. Time: 149.6497 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #333: GFLOPs: 146.3556. Time: 246.9492 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #334: GFLOPs: 156.5702. Time: 230.8383 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #335: GFLOPs: 245.3796. Time: 147.2918 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #336: GFLOPs: 159.5699. Time: 226.4989 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #337: GFLOPs: 209.0493. Time: 172.8893 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #338: GFLOPs: 138.7842. Time: 260.4215 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #339: GFLOPs: 189.6875. Time: 190.5365 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #340: GFLOPs: 241.2152. Time: 149.8347 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #341: GFLOPs: 205.8298. Time: 175.5936 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #342: GFLOPs: 180.9797. Time: 199.7042 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #343: GFLOPs: 213.7495. Time: 169.0876 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #344: GFLOPs: 240.1632. Time: 150.4910 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #345: GFLOPs: 179.7732. Time: 201.0444 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #346: GFLOPs: 202.5678. Time: 178.4212 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #347: GFLOPs: 177.0592. Time: 204.1261 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #348: GFLOPs: 230.4566. Time: 156.8295 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #349: GFLOPs: 175.8779. Time: 205.4971 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #350: GFLOPs: 230.4334. Time: 156.8453 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #351: GFLOPs: 113.4616. Time: 318.5430 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #352: GFLOPs: 128.3409. Time: 281.6124 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #353: GFLOPs: 214.7451. Time: 168.3037 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #354: GFLOPs: 139.8969. Time: 258.3503 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #355: GFLOPs: 184.4684. Time: 195.9274 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #356: GFLOPs: 172.5144. Time: 209.5037 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #357: GFLOPs: 158.5960. Time: 227.8898 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #358: GFLOPs: 238.8035. Time: 151.3478 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #359: GFLOPs: 169.4174. Time: 213.3335 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #360: GFLOPs: 144.9320. Time: 249.3749 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #361: GFLOPs: 204.7180. Time: 176.5473 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #362: GFLOPs: 154.6736. Time: 233.6689 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #363: GFLOPs: 145.5802. Time: 248.2645 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #364: GFLOPs: 162.7534. Time: 222.0684 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #365: GFLOPs: 116.9303. Time: 309.0934 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #366: GFLOPs: 145.2766. Time: 248.7833 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #367: GFLOPs: 172.8113. Time: 209.1437 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #368: GFLOPs: 168.3476. Time: 214.6891 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #369: GFLOPs: 87.9694. Time: 410.8520 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #370: GFLOPs: 183.3998. Time: 197.0689 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #371: GFLOPs: 180.8510. Time: 199.8463 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #372: GFLOPs: 173.3462. Time: 208.4983 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #373: GFLOPs: 171.6226. Time: 210.5923 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #374: GFLOPs: 186.6065. Time: 193.6824 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #375: GFLOPs: 127.4756. Time: 283.5241 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #376: GFLOPs: 184.5143. Time: 195.8786 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #377: GFLOPs: 185.8910. Time: 194.4280 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #378: GFLOPs: 178.1705. Time: 202.8529 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #379: GFLOPs: 188.1559. Time: 192.0875 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #380: GFLOPs: 143.8643. Time: 251.2257 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #381: GFLOPs: 145.0573. Time: 249.1595 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #382: GFLOPs: 76.6207. Time: 471.7052 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #383: GFLOPs: 25.4979. Time: 1417.4656 us. Best GFLOPs: 260.9936
2024-04-29 05:31:44 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #384: GFLOPs: 0.8000. Time: 45175.8093 us. Best GFLOPs: 260.9936
2024-04-29 06:13:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:13:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:13:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 06:13:11 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:13:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 06:13:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 06:13:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 06:13:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 06:13:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9792  0.9696  0.9486  0.8936  0.8086  0.7949  0.7881  0.7870  0.7836  0.7799  0.7769  0.7642  0.7634  0.7598  0.7498  0.7201
[17 : 32]:	0.7189  0.7185  0.7168  0.7157  0.7088  0.7065  0.7030  0.7014  0.7004  0.7004  0.7004  0.6994  0.6994  0.6983  0.6976  0.6976
[33 : 48]:	0.6955  0.6955  0.6952  0.6952  0.6939  0.6914  0.6903  0.6893  0.6892  0.6875  0.6867  0.6856  0.6851  0.6851  0.6840  0.6831
[49 : 64]:	0.6818  0.6813  0.6801  0.6800  0.6800  0.6794  0.6788  0.6788  0.6759  0.6724  0.6717  0.6712  0.6711  0.6693  0.6693  0.6690
2024-04-29 06:13:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:13:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #385: GFLOPs: 261.2698. Time: 138.3337 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #386: GFLOPs: 259.3949. Time: 139.3335 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #387: GFLOPs: 260.5696. Time: 138.7053 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #388: GFLOPs: 207.9312. Time: 173.8190 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #389: GFLOPs: 211.4049. Time: 170.9629 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #390: GFLOPs: 235.7004. Time: 153.3404 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #391: GFLOPs: 238.7983. Time: 151.3512 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #392: GFLOPs: 243.7117. Time: 148.2998 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #393: GFLOPs: 244.5729. Time: 147.7776 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #394: GFLOPs: 161.6572. Time: 223.5743 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #395: GFLOPs: 201.5753. Time: 179.2997 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #396: GFLOPs: 233.6932. Time: 154.6575 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #397: GFLOPs: 240.0979. Time: 150.5319 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #398: GFLOPs: 187.7260. Time: 192.5274 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #399: GFLOPs: 173.8253. Time: 207.9237 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #400: GFLOPs: 233.2219. Time: 154.9700 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #401: GFLOPs: 179.9633. Time: 200.8320 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #402: GFLOPs: 197.3643. Time: 183.1254 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #403: GFLOPs: 88.8090. Time: 406.9678 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #404: GFLOPs: 218.4198. Time: 165.4722 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #405: GFLOPs: 168.1088. Time: 214.9940 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #406: GFLOPs: 229.7295. Time: 157.3259 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #407: GFLOPs: 86.8083. Time: 416.3472 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #408: GFLOPs: 187.8809. Time: 192.3687 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #409: GFLOPs: 173.3424. Time: 208.5029 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #410: GFLOPs: 187.2316. Time: 193.0358 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #411: GFLOPs: 187.9458. Time: 192.3022 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #412: GFLOPs: 181.7445. Time: 198.8638 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #413: GFLOPs: 182.5871. Time: 197.9461 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #414: GFLOPs: 182.5445. Time: 197.9922 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #415: GFLOPs: 188.5828. Time: 191.6527 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #416: GFLOPs: 179.7621. Time: 201.0569 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #417: GFLOPs: 187.5367. Time: 192.7218 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #418: GFLOPs: 184.0305. Time: 196.3935 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #419: GFLOPs: 181.7488. Time: 198.8591 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #420: GFLOPs: 176.9577. Time: 204.2432 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #421: GFLOPs: 178.0415. Time: 202.9999 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #422: GFLOPs: 189.8447. Time: 190.3788 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #423: GFLOPs: 169.9251. Time: 212.6961 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #424: GFLOPs: 191.5640. Time: 188.6701 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #425: GFLOPs: 193.6496. Time: 186.6381 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #426: GFLOPs: 170.0434. Time: 212.5481 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #427: GFLOPs: 196.0418. Time: 184.3607 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #428: GFLOPs: 146.2419. Time: 247.1413 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #429: GFLOPs: 89.5279. Time: 403.7001 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #430: GFLOPs: 89.0918. Time: 405.6760 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #431: GFLOPs: 165.8282. Time: 217.9509 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #432: GFLOPs: 168.8514. Time: 214.0486 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #433: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(280), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(36) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[40, 1, 1, 2])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 36])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #434: GFLOPs: 122.2053. Time: 295.7514 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #435: GFLOPs: 184.5013. Time: 195.8924 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #436: GFLOPs: 157.0185. Time: 230.1792 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #437: GFLOPs: 178.1138. Time: 202.9175 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #438: GFLOPs: 138.2839. Time: 261.3637 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #439: GFLOPs: 159.5030. Time: 226.5939 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #440: GFLOPs: 136.0800. Time: 265.5967 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #441: GFLOPs: 150.0636. Time: 240.8472 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #442: GFLOPs: 165.5084. Time: 218.3720 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #443: GFLOPs: 176.4495. Time: 204.8314 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #444: GFLOPs: 140.4909. Time: 257.2580 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #445: GFLOPs: 193.1024. Time: 187.1670 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #446: GFLOPs: 15.0400. Time: 2403.0798 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #447: GFLOPs: 53.2046. Time: 679.3091 us. Best GFLOPs: 261.2698
2024-04-29 06:15:16 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #448: GFLOPs: 155.2168. Time: 232.8512 us. Best GFLOPs: 261.2698
2024-04-29 07:05:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:05:58 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:06:00 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 07:06:00 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:06:05 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 07:06:10 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 07:06:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 07:06:20 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5945768)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x51bb328)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5903d08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x57392f8)]: 0 failure(s)
2024-04-29 07:06:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9405  0.9116  0.9039  0.9031  0.8908  0.8894  0.8894  0.8812  0.8774  0.8774  0.8746  0.8672  0.8626  0.8526  0.8311  0.8311
[17 : 32]:	0.8218  0.8217  0.8059  0.8008  0.7983  0.7947  0.7912  0.7839  0.7616  0.7615  0.7589  0.7536  0.7533  0.7481  0.7432  0.7414
[33 : 48]:	0.7377  0.7334  0.7331  0.7309  0.7264  0.7223  0.7223  0.7223  0.7218  0.7213  0.7202  0.7198  0.7175  0.7096  0.7087  0.7084
[49 : 64]:	0.7042  0.7039  0.7036  0.7034  0.7026  0.7002  0.6997  0.6997  0.6993  0.6983  0.6983  0.6979  0.6972  0.6968  0.6961  0.6954
2024-04-29 07:06:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:06:23 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #449: GFLOPs: 129.2291. Time: 279.6769 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #450: GFLOPs: 117.1160. Time: 308.6034 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #451: GFLOPs: 85.9615. Time: 420.4485 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #452: GFLOPs: 114.5372. Time: 315.5516 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #453: GFLOPs: 248.2052. Time: 145.6150 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #454: GFLOPs: 233.8344. Time: 154.5641 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #455: GFLOPs: 233.1221. Time: 155.0364 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #456: GFLOPs: 233.7823. Time: 154.5985 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #457: GFLOPs: 244.7467. Time: 147.6727 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #458: GFLOPs: 244.9383. Time: 147.5572 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #459: GFLOPs: 234.3606. Time: 154.2170 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #460: GFLOPs: 242.2837. Time: 149.1739 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #461: GFLOPs: 157.4935. Time: 229.4851 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #462: GFLOPs: 182.0568. Time: 198.5227 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #463: GFLOPs: 174.8387. Time: 206.7185 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #464: GFLOPs: 174.7652. Time: 206.8054 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #465: GFLOPs: 176.7741. Time: 204.4553 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #466: GFLOPs: 199.5649. Time: 181.1060 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #467: GFLOPs: 202.8862. Time: 178.1413 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #468: GFLOPs: 229.0932. Time: 157.7629 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #469: GFLOPs: 215.1785. Time: 167.9647 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #470: GFLOPs: 214.7049. Time: 168.3352 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #471: GFLOPs: 251.6759. Time: 143.6069 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #472: GFLOPs: 221.8546. Time: 162.9103 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #473: GFLOPs: 215.1140. Time: 168.0151 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #474: GFLOPs: 229.5672. Time: 157.4371 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #475: GFLOPs: 228.5568. Time: 158.1331 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #476: GFLOPs: 191.9801. Time: 188.2612 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #477: GFLOPs: 173.9981. Time: 207.7172 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #478: GFLOPs: 245.0680. Time: 147.4791 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #479: GFLOPs: 160.2527. Time: 225.5337 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #480: GFLOPs: 254.9493. Time: 141.7631 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #481: GFLOPs: 37.0726. Time: 974.9094 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #482: GFLOPs: 159.2519. Time: 226.9511 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #483: GFLOPs: 173.1771. Time: 208.7019 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #484: GFLOPs: 122.7302. Time: 294.4867 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #485: GFLOPs: 145.4661. Time: 248.4592 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #486: GFLOPs: 104.7036. Time: 345.1878 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #487: GFLOPs: 82.5458. Time: 437.8464 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #488: GFLOPs: 82.4975. Time: 438.1029 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #489: GFLOPs: 183.9888. Time: 196.4380 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #490: GFLOPs: 247.2902. Time: 146.1538 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #491: GFLOPs: 46.7922. Time: 772.4019 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #492: GFLOPs: 228.4009. Time: 158.2410 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #493: GFLOPs: 54.0893. Time: 668.1984 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #494: GFLOPs: 191.2450. Time: 188.9848 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #495: GFLOPs: 228.4088. Time: 158.2356 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #496: GFLOPs: 185.9866. Time: 194.3280 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #497: GFLOPs: 191.1914. Time: 189.0378 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #498: GFLOPs: 179.1502. Time: 201.7435 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #499: GFLOPs: 217.7092. Time: 166.0123 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #500: GFLOPs: 233.2234. Time: 154.9690 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #501: GFLOPs: 105.6178. Time: 342.1999 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #502: GFLOPs: 203.8996. Time: 177.2558 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #503: GFLOPs: 189.8153. Time: 190.4083 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #504: GFLOPs: 186.4253. Time: 193.8707 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:121] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #505: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(288), T.int64(7), T.int64(7), T.int64(4)), "float32"), p1: T.Buffer((T.int64(80), T.int64(288), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(80), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(80), T.int64(7), T.int64(7), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(280), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(7), oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(36), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(7), oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(1152), ic_0 * T.int64(36) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_add"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(80), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(7), ax2)
                        v_ax3 = T.axis.spatial(T.int64(7), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l2, l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b0)
v10, v11, v12, v13 = sch.sample_perfect_tile(loop=l2, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l14, l15, l16, l17 = sch.split(loop=l2, factors=[v10, v11, v12, v13], preserve_unit_iters=True)
v18, v19, v20, v21 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[40, 1, 2, 1])
l22, l23, l24, l25 = sch.split(loop=l3, factors=[v18, v19, v20, v21], preserve_unit_iters=True)
v26, v27, v28, v29 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 7])
l30, l31, l32, l33 = sch.split(loop=l4, factors=[v26, v27, v28, v29], preserve_unit_iters=True)
v34, v35, v36, v37 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 1])
l38, l39, l40, l41 = sch.split(loop=l5, factors=[v34, v35, v36, v37], preserve_unit_iters=True)
v42, v43, v44, v45 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l46, l47, l48, l49 = sch.split(loop=l6, factors=[v42, v43, v44, v45], preserve_unit_iters=True)
v50, v51 = sch.sample_perfect_tile(loop=l7, n=2, max_innermost_factor=64, decision=[32, 36])
l52, l53 = sch.split(loop=l7, factors=[v50, v51], preserve_unit_iters=True)
v54, v55 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 1])
l56, l57 = sch.split(loop=l8, factors=[v54, v55], preserve_unit_iters=True)
v58, v59 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l60, l61 = sch.split(loop=l9, factors=[v58, v59], preserve_unit_iters=True)
sch.reorder(l14, l22, l30, l38, l46, l15, l23, l31, l39, l47, l52, l56, l60, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49)
b62, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b62, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b66)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #506: GFLOPs: 183.2555. Time: 197.2241 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #507: GFLOPs: 120.0521. Time: 301.0560 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #508: GFLOPs: 132.5699. Time: 272.6290 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #509: GFLOPs: 233.3519. Time: 154.8837 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #510: GFLOPs: 74.5733. Time: 484.6559 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #511: GFLOPs: 11.7063. Time: 3087.4205 us. Best GFLOPs: 261.2698
2024-04-29 07:08:15 [INFO] [task_scheduler.cc:131] [Task #32: fused_nn_contrib_conv2d_NCHWc_add_6] Trial #512: GFLOPs: 0.6251. Time: 57816.1577 us. Best GFLOPs: 261.2698
