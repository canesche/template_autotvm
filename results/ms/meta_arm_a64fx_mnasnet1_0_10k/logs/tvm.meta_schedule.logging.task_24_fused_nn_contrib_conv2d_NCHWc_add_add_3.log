2024-04-29 02:10:24 [INFO] [task_scheduler.cc:160] Initializing Task #24: "fused_nn_contrib_conv2d_NCHWc_add_add_3"
2024-04-29 02:10:24 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        T_add_1 = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4), T.int64(576), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add_1[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add_1"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add_1[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T_add_1[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
2024-04-29 02:10:24 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 02:10:24 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(4), T.int64(7), T.int64(2), T.int64(1), T.int64(576), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + oc_chunk_1 * T.int64(3) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(576), ic_0 + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("T_add_1"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 1, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[576, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 02:10:24 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(4), T.int64(7), T.int64(2), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(576), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + oc_chunk_1 * T.int64(3) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(3), T.int64(2), T.int64(7), T.int64(1)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + oc_chunk_1 * T.int64(3) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 1, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[576, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 02:10:24 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(2), T.int64(1), T.int64(576), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + oc_chunk_1 * T.int64(3) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(12), T.int64(14), T.int64(14), T.int64(1)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), oc_chunk_0 * T.int64(12) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 4, 1, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[576, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 02:50:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:50:31 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:50:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 02:50:34 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 02:50:37 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 02:50:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 02:50:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 02:50:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 02:50:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9992  0.9986  0.9983  0.9970  0.9968  0.9956  0.9951  0.9936  0.9929  0.9926  0.9925  0.9923  0.9908  0.9905  0.9904  0.9898
[17 : 32]:	0.9896  0.9891  0.9888  0.9881  0.9879  0.9869  0.9856  0.9854  0.9854  0.9846  0.9843  0.9843  0.9838  0.9837  0.9836  0.9829
[33 : 48]:	0.9824  0.9822  0.9810  0.9810  0.9808  0.9806  0.9806  0.9803  0.9800  0.9800  0.9794  0.9790  0.9778  0.9767  0.9749  0.9747
[49 : 64]:	0.9746  0.9743  0.9739  0.9727  0.9716  0.9714  0.9710  0.9701  0.9692  0.9688  0.9676  0.9675  0.9675  0.9674  0.9673  0.9672
2024-04-29 02:50:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:50:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #1: GFLOPs: 54.1979. Time: 400.6363 us. Best GFLOPs: 54.1979
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #2: GFLOPs: 65.0907. Time: 333.5909 us. Best GFLOPs: 65.0907
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #3: GFLOPs: 121.7136. Time: 178.3997 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #4: GFLOPs: 89.2456. Time: 243.3023 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #5: GFLOPs: 68.2540. Time: 318.1303 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #6: GFLOPs: 80.2298. Time: 270.6435 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #7: GFLOPs: 65.4684. Time: 331.6665 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #8: GFLOPs: 40.9224. Time: 530.6054 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #9: GFLOPs: 28.0272. Time: 774.7352 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #10: GFLOPs: 4.1285. Time: 5259.4839 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #11: GFLOPs: 109.6389. Time: 198.0471 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #12: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(21), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(7) * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(7) * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(18) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(8), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(7) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(7) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[3, 1, 4, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 18])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #13: GFLOPs: 51.8488. Time: 418.7885 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #14: GFLOPs: 7.5730. Time: 2867.2352 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #15: GFLOPs: 6.1851. Time: 3510.6232 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #16: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(3), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(12) + oc_chunk_1 * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(14), T.int64(2), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(12) + oc_chunk_1 * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(24) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(12) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[24, 24])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #17: GFLOPs: 46.7845. Time: 464.1206 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #18: GFLOPs: 7.5221. Time: 2886.6492 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #19: GFLOPs: 6.9378. Time: 3129.7778 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #20: GFLOPs: 49.8739. Time: 435.3717 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #21: GFLOPs: 20.2273. Time: 1073.4857 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #22: GFLOPs: 16.7820. Time: 1293.8688 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #23: GFLOPs: 67.9036. Time: 319.7719 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #24: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(12), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(32) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[6, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[18, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #25: GFLOPs: 4.2459. Time: 5114.0306 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #26: GFLOPs: 36.4964. Time: 594.9531 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #27: GFLOPs: 59.0081. Time: 367.9779 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #28: GFLOPs: 57.4622. Time: 377.8771 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #29: GFLOPs: 3.8222. Time: 5680.9996 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #30: GFLOPs: 59.1316. Time: 367.2089 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #31: GFLOPs: 45.6108. Time: 476.0645 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #32: GFLOPs: 1.4666. Time: 14805.9343 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #33: GFLOPs: 80.1890. Time: 270.7811 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #34: GFLOPs: 93.1131. Time: 233.1968 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #35: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(12), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(72), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(14)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(4) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[6, 1, 2, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[72, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #36: GFLOPs: 31.1144. Time: 697.8664 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #37: GFLOPs: 52.6856. Time: 412.1364 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #38: GFLOPs: 116.7145. Time: 186.0409 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #39: GFLOPs: 76.7439. Time: 282.9367 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #40: GFLOPs: 26.8244. Time: 809.4757 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #41: GFLOPs: 7.5457. Time: 2877.6069 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #42: GFLOPs: 2.5524. Time: 8507.2953 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #43: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(7), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(12) + oc_chunk_1 * T.int64(6) + oc_chunk_2_init * T.int64(3) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(9), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(12) + oc_chunk_1 * T.int64(6) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(12) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 2, 2, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[9, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #44: GFLOPs: 47.2981. Time: 459.0806 us. Best GFLOPs: 121.7136
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #45: GFLOPs: 125.0705. Time: 173.6114 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #46: GFLOPs: 62.8790. Time: 345.3246 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #47: GFLOPs: 111.6819. Time: 194.4242 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #48: GFLOPs: 58.7912. Time: 369.3353 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #49: GFLOPs: 13.1310. Time: 1653.6171 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #50: GFLOPs: 9.3238. Time: 2328.8321 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #51: GFLOPs: 96.5353. Time: 224.9297 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #52: GFLOPs: 58.8567. Time: 368.9244 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #53: GFLOPs: 9.3852. Time: 2313.6096 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #54: GFLOPs: 2.9778. Time: 7291.8366 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #55: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(336), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(14) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(14) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(18) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(1)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(14) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[12, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 18])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #56: GFLOPs: 101.5323. Time: 213.8596 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #57: GFLOPs: 3.0199. Time: 7190.1920 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #58: GFLOPs: 80.9847. Time: 268.1206 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #59: GFLOPs: 0.9376. Time: 23157.5582 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #60: GFLOPs: 2.2556. Time: 9626.6753 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #61: GFLOPs: 37.0721. Time: 585.7148 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #62: GFLOPs: 72.5182. Time: 299.4236 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #63: GFLOPs: 55.5406. Time: 390.9509 us. Best GFLOPs: 125.0705
2024-04-29 03:12:13 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #64: GFLOPs: 27.5560. Time: 787.9843 us. Best GFLOPs: 125.0705
2024-04-29 03:28:47 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:28:47 [INFO] [evolutionary_search.cc:715] Picked top 58 candidate(s) from database
2024-04-29 03:28:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 03:28:49 [INFO] [evolutionary_search.cc:723] Sampled 454 candidate(s)
2024-04-29 03:28:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 03:29:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 03:29:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 03:29:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 03:29:14 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9700  0.9698  0.9612  0.8359  0.8173  0.8015  0.7984  0.7928  0.7928  0.7928  0.7928  0.7883  0.7858  0.7847  0.7833  0.7783
[17 : 32]:	0.7780  0.7778  0.7772  0.7651  0.7640  0.7597  0.7586  0.7582  0.7541  0.7541  0.7523  0.7518  0.7499  0.7472  0.7443  0.7407
[33 : 48]:	0.7406  0.7400  0.7391  0.7390  0.7380  0.7380  0.7374  0.7372  0.7370  0.7310  0.7310  0.7303  0.7273  0.7237  0.7236  0.7196
[49 : 64]:	0.7191  0.7165  0.7158  0.7148  0.7146  0.7146  0.7143  0.7142  0.7142  0.7131  0.7130  0.7130  0.7116  0.7108  0.7103  0.7103
2024-04-29 03:29:15 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:29:15 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #65: GFLOPs: 123.5465. Time: 175.7530 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #66: GFLOPs: 120.7060. Time: 179.8889 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #67: GFLOPs: 117.8734. Time: 184.2118 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #68: GFLOPs: 79.9201. Time: 271.6923 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #69: GFLOPs: 109.6685. Time: 197.9937 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #70: GFLOPs: 117.1204. Time: 185.3961 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #71: GFLOPs: 82.5693. Time: 262.9750 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #72: GFLOPs: 117.4348. Time: 184.8998 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #73: GFLOPs: 115.7777. Time: 187.5462 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #74: GFLOPs: 58.1277. Time: 373.5513 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #75: GFLOPs: 115.3016. Time: 188.3205 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #76: GFLOPs: 75.4150. Time: 287.9225 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #77: GFLOPs: 119.8697. Time: 181.1438 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #78: GFLOPs: 75.9603. Time: 285.8554 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #79: GFLOPs: 29.8580. Time: 727.2318 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #80: GFLOPs: 54.6736. Time: 397.1505 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #81: GFLOPs: 82.2152. Time: 264.1076 us. Best GFLOPs: 125.0705
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #82: GFLOPs: 126.5332. Time: 171.6045 us. Best GFLOPs: 126.5332
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #83: GFLOPs: 127.8744. Time: 169.8047 us. Best GFLOPs: 127.8744
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #84: GFLOPs: 78.6552. Time: 276.0613 us. Best GFLOPs: 127.8744
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #85: GFLOPs: 47.4962. Time: 457.1660 us. Best GFLOPs: 127.8744
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #86: GFLOPs: 67.2028. Time: 323.1067 us. Best GFLOPs: 127.8744
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #87: GFLOPs: 166.9935. Time: 130.0270 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #88: GFLOPs: 111.0187. Time: 195.5856 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #89: GFLOPs: 46.2394. Time: 469.5920 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #90: GFLOPs: 38.0967. Time: 569.9615 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #91: GFLOPs: 88.7437. Time: 244.6784 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #92: GFLOPs: 104.8927. Time: 207.0083 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #93: GFLOPs: 60.5718. Time: 358.4784 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #94: GFLOPs: 96.5400. Time: 224.9189 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #95: GFLOPs: 99.3830. Time: 218.4848 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #96: GFLOPs: 160.0479. Time: 135.6698 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #97: GFLOPs: 37.4142. Time: 580.3590 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #98: GFLOPs: 45.7064. Time: 475.0682 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #99: GFLOPs: 97.3853. Time: 222.9665 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #100: GFLOPs: 149.8436. Time: 144.9088 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #101: GFLOPs: 120.9449. Time: 179.5335 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #102: GFLOPs: 130.4711. Time: 166.4251 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #103: GFLOPs: 78.2495. Time: 277.4925 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #104: GFLOPs: 84.8639. Time: 255.8645 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #105: GFLOPs: 114.6400. Time: 189.4074 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #106: GFLOPs: 80.6847. Time: 269.1176 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #107: GFLOPs: 99.9703. Time: 217.2011 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #108: GFLOPs: 74.3747. Time: 291.9494 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #109: GFLOPs: 110.0667. Time: 197.2774 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #110: GFLOPs: 122.5887. Time: 177.1261 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #111: GFLOPs: 119.1867. Time: 182.1820 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #112: GFLOPs: 103.2054. Time: 210.3928 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #113: GFLOPs: 141.5060. Time: 153.4470 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #114: GFLOPs: 133.2298. Time: 162.9790 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #115: GFLOPs: 85.9701. Time: 252.5723 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #116: GFLOPs: 76.6179. Time: 283.4018 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #117: GFLOPs: 64.0456. Time: 339.0347 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #118: GFLOPs: 49.1284. Time: 441.9777 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #119: GFLOPs: 73.9906. Time: 293.4650 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #120: GFLOPs: 105.8178. Time: 205.1986 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #121: GFLOPs: 118.2895. Time: 183.5638 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #122: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(48), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(7), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(8) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_1 + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(288), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(8) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(14), T.int64(7), T.int64(1)):
                with T.block("T_add_1"):
                    v_ax0 = T.axis.spatial(T.int64(1), ax0)
                    v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(8) * T.int64(4) + ax1)
                    v_ax2 = T.axis.spatial(T.int64(14), ax2)
                    v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(8) // T.int64(4) * T.int64(7) + ax3)
                    v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(4) + ax4)
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[6, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[288, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123 = sch.get_loops(block=b101)
b124 = sch.decompose_reduction(block=b101, loop=l108)
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #123: GFLOPs: 75.4561. Time: 287.7655 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #124: GFLOPs: 59.3199. Time: 366.0436 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #125: GFLOPs: 82.8779. Time: 261.9960 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #126: GFLOPs: 134.5848. Time: 161.3381 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #127: GFLOPs: 0.6612. Time: 32839.8015 us. Best GFLOPs: 166.9935
2024-04-29 03:30:46 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #128: GFLOPs: 121.9011. Time: 178.1252 us. Best GFLOPs: 166.9935
2024-04-29 04:21:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:21:49 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 04:21:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 04:21:51 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 04:21:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 04:22:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 04:22:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 04:22:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 04:22:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8675  0.7923  0.7923  0.7775  0.7775  0.7612  0.7611  0.7245  0.7221  0.7221  0.7210  0.7175  0.7175  0.7172  0.7165  0.7126
[17 : 32]:	0.7109  0.7090  0.7033  0.7033  0.7019  0.7014  0.6995  0.6988  0.6971  0.6933  0.6926  0.6910  0.6907  0.6907  0.6895  0.6885
[33 : 48]:	0.6857  0.6838  0.6833  0.6809  0.6799  0.6798  0.6784  0.6783  0.6758  0.6758  0.6743  0.6703  0.6697  0.6692  0.6692  0.6687
[49 : 64]:	0.6679  0.6663  0.6617  0.6600  0.6597  0.6592  0.6582  0.6573  0.6565  0.6561  0.6555  0.6520  0.6488  0.6463  0.6462  0.6458
2024-04-29 04:22:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:22:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #129: GFLOPs: 79.8981. Time: 271.7671 us. Best GFLOPs: 166.9935
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #130: GFLOPs: 34.5835. Time: 627.8619 us. Best GFLOPs: 166.9935
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #131: GFLOPs: 142.5675. Time: 152.3044 us. Best GFLOPs: 166.9935
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #132: GFLOPs: 44.6685. Time: 486.1073 us. Best GFLOPs: 166.9935
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #133: GFLOPs: 159.5604. Time: 136.0843 us. Best GFLOPs: 166.9935
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #134: GFLOPs: 127.5565. Time: 170.2278 us. Best GFLOPs: 166.9935
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #135: GFLOPs: 214.2308. Time: 101.3564 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #136: GFLOPs: 138.9895. Time: 156.2252 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #137: GFLOPs: 136.6629. Time: 158.8848 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #138: GFLOPs: 136.0713. Time: 159.5756 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #139: GFLOPs: 121.1186. Time: 179.2761 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #140: GFLOPs: 113.9358. Time: 190.5781 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #141: GFLOPs: 140.3292. Time: 154.7338 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #142: GFLOPs: 131.6605. Time: 164.9217 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #143: GFLOPs: 144.6562. Time: 150.1053 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #144: GFLOPs: 205.7259. Time: 105.5466 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #145: GFLOPs: 128.4614. Time: 169.0287 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #146: GFLOPs: 181.8276. Time: 119.4189 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #147: GFLOPs: 129.9563. Time: 167.0844 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #148: GFLOPs: 94.0674. Time: 230.8310 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #149: GFLOPs: 113.0538. Time: 192.0649 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #150: GFLOPs: 140.4675. Time: 154.5814 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #151: GFLOPs: 160.3254. Time: 135.4349 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #152: GFLOPs: 122.3516. Time: 177.4695 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #153: GFLOPs: 131.0382. Time: 165.7048 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #154: GFLOPs: 99.7038. Time: 217.7817 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #155: GFLOPs: 117.1378. Time: 185.3685 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #156: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(392), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(3) + oc_chunk_2_init * T.int64(3) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(9), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(3) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(64) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(294)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_add_1"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(24), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(784))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(784) // T.int64(56))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(56) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 8, 1, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[9, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #157: GFLOPs: 153.6918. Time: 141.2805 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #158: GFLOPs: 126.8921. Time: 171.1191 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #159: GFLOPs: 126.0831. Time: 172.2171 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #160: GFLOPs: 126.6969. Time: 171.3828 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #161: GFLOPs: 117.9025. Time: 184.1663 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #162: GFLOPs: 124.1304. Time: 174.9263 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #163: GFLOPs: 126.6877. Time: 171.3952 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #164: GFLOPs: 117.2601. Time: 185.1751 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #165: GFLOPs: 84.0727. Time: 258.2723 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #166: GFLOPs: 95.1602. Time: 228.1802 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #167: GFLOPs: 105.7987. Time: 205.2356 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #168: GFLOPs: 108.4865. Time: 200.1509 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #169: GFLOPs: 105.8193. Time: 205.1957 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #170: GFLOPs: 96.0790. Time: 225.9980 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #171: GFLOPs: 125.2876. Time: 173.3106 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #172: GFLOPs: 121.9453. Time: 178.0607 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #173: GFLOPs: 106.5734. Time: 203.7437 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #174: GFLOPs: 116.2005. Time: 186.8637 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #175: GFLOPs: 116.5740. Time: 186.2651 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #176: GFLOPs: 106.5617. Time: 203.7662 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #177: GFLOPs: 92.6047. Time: 234.4769 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #178: GFLOPs: 88.9708. Time: 244.0537 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #179: GFLOPs: 115.9908. Time: 187.2017 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #180: GFLOPs: 124.8377. Time: 173.9352 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #181: GFLOPs: 152.6789. Time: 142.2178 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #182: GFLOPs: 109.4759. Time: 198.3419 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #183: GFLOPs: 100.1803. Time: 216.7458 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #184: GFLOPs: 61.6392. Time: 352.2704 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #185: GFLOPs: 130.3786. Time: 166.5431 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #186: GFLOPs: 153.9088. Time: 141.0814 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #187: GFLOPs: 68.3673. Time: 317.6030 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #188: GFLOPs: 106.2992. Time: 204.2693 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #189: GFLOPs: 115.4931. Time: 188.0083 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #190: GFLOPs: 68.8130. Time: 315.5461 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #191: GFLOPs: 19.7432. Time: 1099.8069 us. Best GFLOPs: 214.2308
2024-04-29 04:23:52 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #192: GFLOPs: 118.4556. Time: 183.3064 us. Best GFLOPs: 214.2308
2024-04-29 05:22:17 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:22:18 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:22:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:22:20 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:22:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:22:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:22:36 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:22:42 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:22:45 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9163  0.8749  0.7429  0.7259  0.6706  0.6693  0.6639  0.6639  0.6543  0.6535  0.6458  0.6412  0.6382  0.6304  0.6284  0.6230
[17 : 32]:	0.6200  0.6195  0.6167  0.6156  0.6147  0.6142  0.6136  0.6099  0.6098  0.6093  0.6093  0.6090  0.6079  0.6079  0.6064  0.6044
[33 : 48]:	0.6044  0.6036  0.5998  0.5998  0.5980  0.5946  0.5935  0.5925  0.5923  0.5915  0.5909  0.5906  0.5895  0.5856  0.5836  0.5820
[49 : 64]:	0.5804  0.5800  0.5783  0.5783  0.5779  0.5769  0.5769  0.5769  0.5762  0.5756  0.5747  0.5730  0.5724  0.5715  0.5712  0.5708
2024-04-29 05:22:46 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:22:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #193: GFLOPs: 89.4309. Time: 242.7981 us. Best GFLOPs: 214.2308
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #194: GFLOPs: 215.0481. Time: 100.9712 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #195: GFLOPs: 178.8829. Time: 121.3848 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #196: GFLOPs: 135.1976. Time: 160.6068 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #197: GFLOPs: 112.9748. Time: 192.1991 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #198: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(168), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(18), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(7) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(18) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[12, 1, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 18])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #199: GFLOPs: 189.8728. Time: 114.3590 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #200: GFLOPs: 197.3505. Time: 110.0259 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #201: GFLOPs: 136.8135. Time: 158.7100 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #202: GFLOPs: 97.8496. Time: 221.9085 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #203: GFLOPs: 137.4782. Time: 157.9426 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #204: GFLOPs: 129.8621. Time: 167.2056 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #205: GFLOPs: 152.0556. Time: 142.8008 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #206: GFLOPs: 113.2575. Time: 191.7194 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #207: GFLOPs: 189.1346. Time: 114.8054 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #208: GFLOPs: 140.8196. Time: 154.1949 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #209: GFLOPs: 147.5936. Time: 147.1180 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #210: GFLOPs: 140.2395. Time: 154.8327 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #211: GFLOPs: 141.2233. Time: 153.7541 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #212: GFLOPs: 139.8646. Time: 155.2477 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #213: GFLOPs: 113.8520. Time: 190.7183 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #214: GFLOPs: 89.2992. Time: 243.1564 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #215: GFLOPs: 128.5082. Time: 168.9672 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #216: GFLOPs: 138.6582. Time: 156.5985 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #217: GFLOPs: 118.8172. Time: 182.7484 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #218: GFLOPs: 128.5397. Time: 168.9257 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #219: GFLOPs: 122.2837. Time: 177.5679 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #220: GFLOPs: 119.8844. Time: 181.1217 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #221: GFLOPs: 125.3981. Time: 173.1578 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #222: GFLOPs: 124.2493. Time: 174.7588 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #223: GFLOPs: 116.1439. Time: 186.9548 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #224: GFLOPs: 125.3353. Time: 173.2446 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #225: GFLOPs: 124.7357. Time: 174.0774 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #226: GFLOPs: 161.9941. Time: 134.0399 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #227: GFLOPs: 128.6566. Time: 168.7722 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #228: GFLOPs: 138.8980. Time: 156.3281 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #229: GFLOPs: 100.7423. Time: 215.5367 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #230: GFLOPs: 128.3668. Time: 169.1533 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #231: GFLOPs: 174.3827. Time: 124.5173 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #232: GFLOPs: 114.3271. Time: 189.9258 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #233: GFLOPs: 117.5302. Time: 184.7496 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #234: GFLOPs: 93.1440. Time: 233.1193 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #235: GFLOPs: 127.9207. Time: 169.7432 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #236: GFLOPs: 98.1480. Time: 221.2339 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #237: GFLOPs: 170.4954. Time: 127.3563 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #238: GFLOPs: 128.9390. Time: 168.4026 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #239: GFLOPs: 159.4956. Time: 136.1395 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #240: GFLOPs: 118.0810. Time: 183.8879 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #241: GFLOPs: 141.1276. Time: 153.8584 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #242: GFLOPs: 89.1969. Time: 243.4353 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #243: GFLOPs: 165.0680. Time: 131.5438 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #244: GFLOPs: 70.1769. Time: 309.4133 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #245: GFLOPs: 103.1575. Time: 210.4904 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #246: GFLOPs: 76.2383. Time: 284.8132 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #247: GFLOPs: 124.1408. Time: 174.9116 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #248: GFLOPs: 122.9756. Time: 176.5689 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #249: GFLOPs: 117.1701. Time: 185.3174 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #250: GFLOPs: 133.6542. Time: 162.4616 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #251: GFLOPs: 127.0699. Time: 170.8797 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #252: GFLOPs: 3.1722. Time: 6844.9851 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #253: GFLOPs: 128.2849. Time: 169.2613 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #254: GFLOPs: 4.9698. Time: 4369.1093 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #255: GFLOPs: 51.7712. Time: 419.4158 us. Best GFLOPs: 215.0481
2024-04-29 05:24:21 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #256: GFLOPs: 34.9480. Time: 621.3130 us. Best GFLOPs: 215.0481
2024-04-29 05:39:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:39:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:39:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:39:34 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:39:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:39:45 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:39:51 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:39:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 05:39:59 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8934  0.8294  0.8283  0.8221  0.7885  0.7784  0.7747  0.7684  0.7672  0.7672  0.7548  0.7415  0.7369  0.7361  0.7340  0.7273
[17 : 32]:	0.7271  0.7207  0.7159  0.7093  0.7075  0.7030  0.6981  0.6964  0.6947  0.6936  0.6916  0.6912  0.6911  0.6902  0.6798  0.6791
[33 : 48]:	0.6784  0.6759  0.6750  0.6750  0.6748  0.6710  0.6690  0.6671  0.6635  0.6629  0.6626  0.6593  0.6584  0.6569  0.6495  0.6436
[49 : 64]:	0.6435  0.6427  0.6418  0.6396  0.6343  0.6336  0.6285  0.6278  0.6277  0.6254  0.6249  0.6247  0.6233  0.6220  0.6212  0.6204
2024-04-29 05:39:59 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:40:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #257: GFLOPs: 198.0676. Time: 109.6275 us. Best GFLOPs: 215.0481
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #258: GFLOPs: 176.0354. Time: 123.3483 us. Best GFLOPs: 215.0481
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #259: GFLOPs: 174.3657. Time: 124.5294 us. Best GFLOPs: 215.0481
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #260: GFLOPs: 196.4066. Time: 110.5547 us. Best GFLOPs: 215.0481
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #261: GFLOPs: 189.0892. Time: 114.8329 us. Best GFLOPs: 215.0481
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #262: GFLOPs: 181.1038. Time: 119.8962 us. Best GFLOPs: 215.0481
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #263: GFLOPs: 228.4356. Time: 95.0538 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #264: GFLOPs: 152.5693. Time: 142.3200 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #265: GFLOPs: 113.5907. Time: 191.1570 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #266: GFLOPs: 112.7650. Time: 192.5568 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #267: GFLOPs: 158.2472. Time: 137.2136 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #268: GFLOPs: 155.5757. Time: 139.5698 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #269: GFLOPs: 165.4401. Time: 131.2479 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #270: GFLOPs: 221.6327. Time: 97.9714 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #271: GFLOPs: 174.9894. Time: 124.0856 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #272: GFLOPs: 159.8444. Time: 135.8425 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #273: GFLOPs: 103.1523. Time: 210.5011 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #274: GFLOPs: 146.8103. Time: 147.9029 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #275: GFLOPs: 141.3614. Time: 153.6039 us. Best GFLOPs: 228.4356
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #276: GFLOPs: 278.3736. Time: 78.0019 us. Best GFLOPs: 278.3736
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #277: GFLOPs: 279.0837. Time: 77.8034 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #278: GFLOPs: 149.4292. Time: 145.3107 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #279: GFLOPs: 148.0966. Time: 146.6183 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #280: GFLOPs: 141.4685. Time: 153.4877 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #281: GFLOPs: 205.1330. Time: 105.8516 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #282: GFLOPs: 160.9789. Time: 134.8852 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #283: GFLOPs: 157.3771. Time: 137.9722 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #284: GFLOPs: 158.1983. Time: 137.2560 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #285: GFLOPs: 133.1433. Time: 163.0849 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #286: GFLOPs: 171.5144. Time: 126.5996 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #287: GFLOPs: 141.1292. Time: 153.8566 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #288: GFLOPs: 111.8413. Time: 194.1472 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #289: GFLOPs: 92.6153. Time: 234.4500 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #290: GFLOPs: 74.2045. Time: 292.6194 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #291: GFLOPs: 164.8721. Time: 131.7001 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #292: GFLOPs: 166.1937. Time: 130.6527 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #293: GFLOPs: 150.0153. Time: 144.7430 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #294: GFLOPs: 215.2617. Time: 100.8710 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #295: GFLOPs: 190.6379. Time: 113.9001 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #296: GFLOPs: 168.3827. Time: 128.9543 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #297: GFLOPs: 166.4538. Time: 130.4486 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #298: GFLOPs: 107.3372. Time: 202.2939 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #299: GFLOPs: 108.9228. Time: 199.3490 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #300: GFLOPs: 105.2552. Time: 206.2955 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #301: GFLOPs: 99.4226. Time: 218.3977 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #302: GFLOPs: 149.0288. Time: 145.7011 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #303: GFLOPs: 75.5969. Time: 287.2295 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #304: GFLOPs: 113.8243. Time: 190.7647 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #305: GFLOPs: 154.2393. Time: 140.7791 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #306: GFLOPs: 156.2087. Time: 139.0042 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #307: GFLOPs: 87.8097. Time: 247.2808 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #308: GFLOPs: 139.6427. Time: 155.4944 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #309: GFLOPs: 163.3319. Time: 132.9420 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #310: GFLOPs: 112.9570. Time: 192.2294 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #311: GFLOPs: 88.0490. Time: 246.6088 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #312: GFLOPs: 116.6479. Time: 186.1471 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #313: GFLOPs: 152.5783. Time: 142.3117 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #314: GFLOPs: 163.6957. Time: 132.6465 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #315: GFLOPs: 130.3517. Time: 166.5775 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #316: GFLOPs: 103.6090. Time: 209.5732 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #317: GFLOPs: 109.6099. Time: 198.0995 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #318: GFLOPs: 75.0755. Time: 289.2243 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #319: GFLOPs: 56.1223. Time: 386.8994 us. Best GFLOPs: 279.0837
2024-04-29 05:41:24 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #320: GFLOPs: 53.6773. Time: 404.5221 us. Best GFLOPs: 279.0837
2024-04-29 07:10:28 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:10:29 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 07:10:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 07:10:31 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 07:10:36 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 07:10:42 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 07:10:47 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 07:10:52 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x637dd88)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4b0b8b8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4e2b868)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x47fa5b8)]: 0 failure(s)
2024-04-29 07:10:56 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9840  0.9573  0.8986  0.8404  0.8404  0.8400  0.8154  0.8082  0.8051  0.7800  0.7796  0.7732  0.7612  0.7507  0.7422  0.7373
[17 : 32]:	0.7255  0.7113  0.7066  0.6963  0.6954  0.6929  0.6929  0.6923  0.6827  0.6775  0.6769  0.6748  0.6727  0.6696  0.6583  0.6576
[33 : 48]:	0.6561  0.6520  0.6396  0.6360  0.6298  0.6275  0.6264  0.6234  0.6231  0.6231  0.6224  0.6167  0.6165  0.6163  0.6156  0.6077
[49 : 64]:	0.6070  0.6049  0.6041  0.6023  0.5997  0.5959  0.5953  0.5949  0.5945  0.5920  0.5892  0.5887  0.5869  0.5852  0.5826  0.5820
2024-04-29 07:10:56 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:10:56 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #321: GFLOPs: 272.6488. Time: 79.6397 us. Best GFLOPs: 279.0837
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #322: GFLOPs: 285.8146. Time: 75.9711 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #323: GFLOPs: 151.0183. Time: 143.7817 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #324: GFLOPs: 285.7604. Time: 75.9856 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #325: GFLOPs: 282.0216. Time: 76.9929 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #326: GFLOPs: 172.3845. Time: 125.9607 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #327: GFLOPs: 277.5006. Time: 78.2473 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #328: GFLOPs: 172.9682. Time: 125.5356 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #329: GFLOPs: 172.7052. Time: 125.7267 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #330: GFLOPs: 133.6440. Time: 162.4739 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #331: GFLOPs: 139.3295. Time: 155.8440 us. Best GFLOPs: 285.8146
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #332: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(196), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(12) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(12), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(48), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(12) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(48) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(2)):
                for ax3_ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_add_1"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(24), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(12) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 3, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[12, 48])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #333: GFLOPs: 293.5469. Time: 73.9700 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #334: GFLOPs: 138.5369. Time: 156.7356 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #335: GFLOPs: 169.0091. Time: 128.4763 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #336: GFLOPs: 182.0464. Time: 119.2754 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #337: GFLOPs: 179.3553. Time: 121.0651 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #338: GFLOPs: 136.7809. Time: 158.7478 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #339: GFLOPs: 173.4700. Time: 125.1724 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #340: GFLOPs: 154.2797. Time: 140.7422 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #341: GFLOPs: 154.1419. Time: 140.8681 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #342: GFLOPs: 215.4561. Time: 100.7800 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #343: GFLOPs: 215.1982. Time: 100.9008 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #344: GFLOPs: 222.2425. Time: 97.7026 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #345: GFLOPs: 110.0490. Time: 197.3090 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #346: GFLOPs: 188.9208. Time: 114.9353 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #347: GFLOPs: 229.3686. Time: 94.6671 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #348: GFLOPs: 217.8016. Time: 99.6947 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #349: GFLOPs: 177.7768. Time: 122.1400 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #350: GFLOPs: 216.6708. Time: 100.2150 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #351: GFLOPs: 219.4789. Time: 98.9328 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #352: GFLOPs: 159.1877. Time: 136.4029 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #353: GFLOPs: 135.0406. Time: 160.7936 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #354: GFLOPs: 153.4956. Time: 141.4611 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #355: GFLOPs: 230.4884. Time: 94.2072 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #356: GFLOPs: 160.2141. Time: 135.5290 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #357: GFLOPs: 174.5677. Time: 124.3853 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #358: GFLOPs: 143.0326. Time: 151.8092 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #359: GFLOPs: 156.5219. Time: 138.7261 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #360: GFLOPs: 146.5529. Time: 148.1626 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #361: GFLOPs: 148.9071. Time: 145.8202 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #362: GFLOPs: 134.8202. Time: 161.0564 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #363: GFLOPs: 189.0994. Time: 114.8267 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #364: GFLOPs: 147.4427. Time: 147.2685 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #365: GFLOPs: 155.3953. Time: 139.7318 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #366: GFLOPs: 167.0030. Time: 130.0196 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #367: GFLOPs: 155.1231. Time: 139.9770 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #368: GFLOPs: 139.0681. Time: 156.1370 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #369: GFLOPs: 107.2531. Time: 202.4525 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #370: GFLOPs: 168.0952. Time: 129.1748 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #371: GFLOPs: 260.7100. Time: 83.2867 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #372: GFLOPs: 150.6739. Time: 144.1104 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #373: GFLOPs: 171.2271. Time: 126.8121 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #374: GFLOPs: 142.0050. Time: 152.9077 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #375: GFLOPs: 104.2737. Time: 208.2373 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #376: GFLOPs: 143.1081. Time: 151.7291 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #377: GFLOPs: 145.2083. Time: 149.5346 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #378: GFLOPs: 159.2140. Time: 136.3804 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #379: GFLOPs: 74.5898. Time: 291.1076 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #380: GFLOPs: 166.0863. Time: 130.7373 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #381: GFLOPs: 108.0282. Time: 201.0000 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:121] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #382: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(144), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(24), T.int64(144), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(4)), "float32"), p3: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32"), T_add: T.Buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(24), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_1 * T.int64(24) + oc_chunk_2_init * T.int64(3) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(1), T.int64(24), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(24), oc_chunk_1 * T.int64(24) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(576), ic_0 * T.int64(24) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(24), T.int64(7)):
                for ax3_ax4_fused in T.vectorized(T.int64(56)):
                    with T.block("T_add_1"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4] + p3[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4]
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 8, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[24, 24])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #383: GFLOPs: 154.1638. Time: 140.8480 us. Best GFLOPs: 293.5469
2024-04-29 07:12:41 [INFO] [task_scheduler.cc:131] [Task #24: fused_nn_contrib_conv2d_NCHWc_add_add_3] Trial #384: GFLOPs: 3.5856. Time: 6055.8728 us. Best GFLOPs: 293.5469
