2024-04-29 17:02:33 [INFO] [task_scheduler.cc:160] Initializing Task #14: "fused_nn_avg_pool2d"
2024-04-29 17:02:33 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pool_sum = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)))
        for ax0, ax1, ax2, ax3, rv0, rv1 in T.grid(T.int64(1), T.int64(512), T.int64(7), T.int64(7), T.int64(1), T.int64(1)):
            with T.block("pool_sum"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_rv0, v_rv1 = T.axis.remap("SSSSRR", [ax0, ax1, ax2, ax3, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1])
                T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3])
                with T.init():
                    pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(0)
                pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(512), T.int64(7), T.int64(7)):
            with T.block("pool_avg"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"schedule_rule": "meta_schedule.pool_avg"})
                pool_avg[v_ax0, v_ax1, v_ax2, v_ax3] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(6) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(6) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
2024-04-29 17:02:33 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-29 17:02:33 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            pool_sum = T.alloc_buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)))
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                    for rv0, rv1 in T.grid(T.int64(1), T.int64(1)):
                        with T.block("pool_sum"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) // T.int64(49))
                            v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49) // T.int64(7))
                            v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(512) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                            v_rv0, v_rv1 = T.axis.remap("RR", [rv0, rv1])
                            T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1])
                            T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(0)
                            pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1]
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    with T.block("pool_avg"):
                        v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_ax1 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) // T.int64(49))
                        v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49) // T.int64(7))
                        v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(32) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                        T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3])
                        T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3])
                        pool_avg[v_ax0, v_ax1, v_ax2, v_ax3] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(6) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(6) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
b0 = sch.get_block(name="pool_sum", func_name="main")
b1 = sch.get_block(name="pool_avg", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b1, ann_key="schedule_rule")
v3 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v3)
l4, l5, l6, l7 = sch.get_loops(block=b1)
l8 = sch.fuse(l4, l5, l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
l12, l13, l14, l15, l16, l17 = sch.get_loops(block=b0)
l18 = sch.fuse(l12, l13, l14, l15, preserve_unit_iters=True)
v19 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l20, l21 = sch.split(loop=l18, factors=[None, v19], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
2024-04-29 17:39:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:39:29 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 17:39:30 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4a9d68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb5451e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7651828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9336a48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x74ac7c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7650f98)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb544d08)]: 0 failure(s)
2024-04-29 17:39:30 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 17:39:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4a9d68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb5451e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7651828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9336a48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x74ac7c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7650f98)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb544d08)]: 0 failure(s)
2024-04-29 17:39:31 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4a9d68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb5451e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7651828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9336a48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x74ac7c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7650f98)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb544d08)]: 0 failure(s)
2024-04-29 17:39:32 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4a9d68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb5451e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7651828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9336a48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x74ac7c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7650f98)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb544d08)]: 0 failure(s)
2024-04-29 17:39:32 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4a9d68)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0xb5451e8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x7651828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x9336a48)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x74ac7c8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x7650f98)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb544d08)]: 0 failure(s)
2024-04-29 17:39:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9985  0.9917  0.9875  0.9791  0.9742  0.9741  0.9728  0.9711  0.9652  0.9614  0.9543  0.9541  0.9526  0.9348  0.9345  0.9335
[17 : 32]:	0.9275  0.9166  0.9165  0.9091  0.8808  0.8676  0.8583  0.8575  0.8497  0.8429  0.8404  0.8253  0.8238  0.8215  0.8151  0.8119
[33 : 48]:	0.8114  0.8064  0.7831  0.7810  0.7734  0.7733  0.7685  0.7678  0.7655  0.7640  0.7627  0.7621  0.7535  0.7429  0.7418  0.7317
[49 : 64]:	0.7212  0.7212  0.7166  0.7118  0.7065  0.7052  0.6928  0.6759  0.6699  0.6667  0.6646  0.6638  0.6600  0.6575  0.6540  0.6529
2024-04-29 17:39:32 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:39:32 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #1: GFLOPs: 67.4657. Time: 5.9498 us. Best GFLOPs: 67.4657
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #2: GFLOPs: 67.0019. Time: 5.9910 us. Best GFLOPs: 67.4657
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #3: GFLOPs: 69.0472. Time: 5.8135 us. Best GFLOPs: 69.0472
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #4: GFLOPs: 70.7624. Time: 5.6726 us. Best GFLOPs: 70.7624
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #5: GFLOPs: 70.4220. Time: 5.7000 us. Best GFLOPs: 70.7624
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #6: GFLOPs: 70.5777. Time: 5.6875 us. Best GFLOPs: 70.7624
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #7: GFLOPs: 72.3296. Time: 5.5497 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #8: GFLOPs: 69.0714. Time: 5.8115 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #9: GFLOPs: 69.2086. Time: 5.8000 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #10: GFLOPs: 69.9742. Time: 5.7365 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #11: GFLOPs: 66.7907. Time: 6.0099 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #12: GFLOPs: 64.3246. Time: 6.2403 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #13: GFLOPs: 69.4775. Time: 5.7775 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #14: GFLOPs: 68.1773. Time: 5.8877 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #15: GFLOPs: 69.2307. Time: 5.7981 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #16: GFLOPs: 68.1764. Time: 5.8878 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #17: GFLOPs: 69.0156. Time: 5.8162 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #18: GFLOPs: 67.8909. Time: 5.9125 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #19: GFLOPs: 70.8546. Time: 5.6652 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #20: GFLOPs: 68.8649. Time: 5.8289 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #21: GFLOPs: 66.9787. Time: 5.9931 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #22: GFLOPs: 69.3295. Time: 5.7899 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #23: GFLOPs: 64.7959. Time: 6.1950 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #24: GFLOPs: 69.3186. Time: 5.7908 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #25: GFLOPs: 64.3279. Time: 6.2400 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #26: GFLOPs: 69.2088. Time: 5.8000 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #27: GFLOPs: 69.7341. Time: 5.7563 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #28: GFLOPs: 69.7555. Time: 5.7545 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #29: GFLOPs: 70.7517. Time: 5.6735 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #30: GFLOPs: 69.7146. Time: 5.7579 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #31: GFLOPs: 66.2683. Time: 6.0573 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #32: GFLOPs: 66.4714. Time: 6.0388 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #33: GFLOPs: 70.7491. Time: 5.6737 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #34: GFLOPs: 69.3011. Time: 5.7922 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #35: GFLOPs: 66.9925. Time: 5.9918 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #36: GFLOPs: 69.2724. Time: 5.7946 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #37: GFLOPs: 66.3842. Time: 6.0467 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #38: GFLOPs: 65.0095. Time: 6.1746 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #39: GFLOPs: 68.0488. Time: 5.8988 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #40: GFLOPs: 67.4626. Time: 5.9501 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #41: GFLOPs: 67.9723. Time: 5.9055 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #42: GFLOPs: 70.5794. Time: 5.6873 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #43: GFLOPs: 66.6037. Time: 6.0268 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #44: GFLOPs: 69.5243. Time: 5.7736 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #45: GFLOPs: 66.6278. Time: 6.0246 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #46: GFLOPs: 69.2877. Time: 5.7934 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #47: GFLOPs: 70.6096. Time: 5.6849 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #48: GFLOPs: 64.3060. Time: 6.2422 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #49: GFLOPs: 69.6449. Time: 5.7636 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #50: GFLOPs: 72.3137. Time: 5.5509 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #51: GFLOPs: 69.1861. Time: 5.8019 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #52: GFLOPs: 69.2569. Time: 5.7959 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #53: GFLOPs: 69.7823. Time: 5.7523 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #54: GFLOPs: 69.6915. Time: 5.7598 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #55: GFLOPs: 64.3058. Time: 6.2422 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #56: GFLOPs: 69.7477. Time: 5.7551 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #57: GFLOPs: 69.7933. Time: 5.7514 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #58: GFLOPs: 66.7464. Time: 6.0139 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #59: GFLOPs: 69.9517. Time: 5.7384 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #60: GFLOPs: 64.9145. Time: 6.1836 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #61: GFLOPs: 72.3226. Time: 5.5502 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #62: GFLOPs: 70.2063. Time: 5.7176 us. Best GFLOPs: 72.3296
2024-04-29 17:45:19 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_avg_pool2d] Trial #63: GFLOPs: 68.7288. Time: 5.8405 us. Best GFLOPs: 72.3296
