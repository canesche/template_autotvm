2024-04-29 17:02:26 [INFO] [task_scheduler.cc:160] Initializing Task #3: "fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2"
2024-04-29 17:02:26 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(114), T.int64(114)))
        input_tile = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)))
        B = T.alloc_buffer((T.int64(6), T.int64(6)))
        data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
        bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        A = T.alloc_buffer((T.int64(6), T.int64(4)))
        inverse = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)))
        conv2d_winograd = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)))
        for i0, i1, i2, i3 in T.grid(T.int64(1), T.int64(64), T.int64(114), T.int64(114)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3 = T.axis.remap("SSSS", [i0, i1, i2, i3])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3])
                data_pad[v_i0, v_i1, v_i2, v_i3] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(113) and T.int64(1) <= v_i3 and v_i3 < T.int64(113), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1)], T.float32(0))
        for ci, p, eps, nu in T.grid(T.int64(64), T.int64(784), T.int64(6), T.int64(6)):
            with T.block("input_tile"):
                v_ci, v_p, v_eps, v_nu = T.axis.remap("SSSS", [ci, p, eps, nu])
                T.reads(data_pad[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps, v_p % T.int64(28) * T.int64(4) + v_nu])
                T.writes(input_tile[v_ci, v_p, v_eps, v_nu])
                T.block_attr({"schedule_rule": "None"})
                input_tile[v_ci, v_p, v_eps, v_nu] = data_pad[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps, v_p % T.int64(28) * T.int64(4) + v_nu]
        for i, j in T.grid(T.int64(6), T.int64(6)):
            with T.block("B"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(B[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                B[v_i, v_j] = T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
        for eps, nu, ci, p, r_a, r_b in T.grid(T.int64(6), T.int64(6), T.int64(64), T.int64(784), T.int64(6), T.int64(6)):
            with T.block("data_pack"):
                v_eps, v_nu, v_ci, v_p, v_r_a, v_r_b = T.axis.remap("SSSSRR", [eps, nu, ci, p, r_a, r_b])
                T.reads(input_tile[v_ci, v_p, v_r_a, v_r_b], B[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_eps, v_nu):T.min(v_eps, v_nu) + (T.max(v_eps, v_nu) + T.int64(1) - T.min(v_eps, v_nu))])
                T.writes(data_pack[v_eps, v_nu, v_ci, v_p])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                with T.init():
                    data_pack[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                data_pack[v_eps, v_nu, v_ci, v_p] = data_pack[v_eps, v_nu, v_ci, v_p] + input_tile[v_ci, v_p, v_r_a, v_r_b] * B[v_r_a, v_eps] * B[v_r_b, v_nu]
        for eps, nu, co, p, ci in T.grid(T.int64(6), T.int64(6), T.int64(128), T.int64(784), T.int64(64)):
            with T.block("bgemm"):
                v_eps, v_nu, v_co, v_p, v_ci = T.axis.remap("SSSSR", [eps, nu, co, p, ci])
                T.reads(data_pack[v_eps, v_nu, v_ci, v_p], p1[v_eps, v_nu, v_ci, v_co])
                T.writes(bgemm[v_eps, v_nu, v_co, v_p])
                with T.init():
                    bgemm[v_eps, v_nu, v_co, v_p] = T.float32(0)
                bgemm[v_eps, v_nu, v_co, v_p] = bgemm[v_eps, v_nu, v_co, v_p] + data_pack[v_eps, v_nu, v_ci, v_p] * p1[v_eps, v_nu, v_ci, v_co]
        for i, j in T.grid(T.int64(6), T.int64(4)):
            with T.block("A"):
                v_i, v_j = T.axis.remap("SS", [i, j])
                T.reads()
                T.writes(A[v_i, v_j])
                T.block_attr({"schedule_rule": "None"})
                A[v_i, v_j] = T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(5) and v_j % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_i % T.int64(6) == T.int64(4) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_i % T.int64(6) == T.int64(3) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(2) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_i % T.int64(6) == T.int64(1) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_i % T.int64(6) == T.int64(0) and v_j % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
        for co, p, vh, vw, r_a, r_b in T.grid(T.int64(128), T.int64(784), T.int64(4), T.int64(4), T.int64(6), T.int64(6)):
            with T.block("inverse"):
                v_co, v_p, v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSSSRR", [co, p, vh, vw, r_a, r_b])
                T.reads(bgemm[v_r_a, v_r_b, v_co, v_p], A[T.min(v_r_a, v_r_b):T.min(v_r_a, v_r_b) + (T.max(v_r_a, v_r_b) + T.int64(1) - T.min(v_r_a, v_r_b)), T.min(v_vh, v_vw):T.min(v_vh, v_vw) + (T.max(v_vh, v_vw) + T.int64(1) - T.min(v_vh, v_vw))])
                T.writes(inverse[v_co, v_p, v_vh, v_vw])
                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                with T.init():
                    inverse[v_co, v_p, v_vh, v_vw] = T.float32(0)
                inverse[v_co, v_p, v_vh, v_vw] = inverse[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * A[v_r_a, v_vh] * A[v_r_b, v_vw]
        for n, co, h, w in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("conv2d_winograd"):
                v_n, v_co, v_h, v_w = T.axis.remap("SSSS", [n, co, h, w])
                T.reads(inverse[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)])
                T.writes(conv2d_winograd[v_n, v_co, v_h, v_w])
                conv2d_winograd[v_n, v_co, v_h, v_w] = inverse[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3], p2[v_ax0, v_ax1, T.int64(0), T.int64(0)])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3] = conv2d_winograd[v_ax0, v_ax1, v_ax2, v_ax3] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0)]
        for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(128), T.int64(112), T.int64(112)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3], T.float32(0))
2024-04-29 17:02:26 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 17:02:26 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            input_tile_local = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(24), thread="threadIdx.x"):
                        for ci_0 in range(T.int64(4)):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32256)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(5376))
                                    v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(5376) // T.int64(1792))
                                    v2 = T.axis.spatial(T.int64(64), ci_0 * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(1792) // T.int64(112))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36864)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(6144))
                                    v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(6144) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(64), ci_0 * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(128))
                                    v3 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(16), T.int64(3), T.int64(1), T.int64(8), T.int64(28)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused * T.int64(3) + eps_3 * T.int64(3) + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + eps_2_nu_2_co_2_p_2_fused // T.int64(8) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(8) // T.int64(4) * T.int64(64) + co_3 * T.int64(8) + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(28) + p_3 * T.int64(28) + p_4)
                                    v_ci = T.axis.reduce(T.int64(64), ci_0 * T.int64(16) + ci_1 * T.int64(16) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(3), T.int64(1), T.int64(64), T.int64(28)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused * T.int64(3) + ax0)
                                v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + eps_2_nu_2_co_2_p_2_fused // T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(8) // T.int64(4) * T.int64(64) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(28) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(98), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(1024) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 3])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 1, 3, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 2, 8, 8])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[7, 1, 4, 1, 28])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[4, 1, 16])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
2024-04-29 17:02:26 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            input_tile_local = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(24), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 2]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32256)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(5376))
                                    v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(5376) // T.int64(1792))
                                    v2 = T.axis.spatial(T.int64(64), ci_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(1792) // T.int64(112))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36864)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(6144))
                                    v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(6144) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(64), ci_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(128))
                                    v3 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(16), T.int64(3), T.int64(1), T.int64(8), T.int64(28)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused * T.int64(3) + eps_3 * T.int64(3) + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + eps_2_nu_2_co_2_p_2_fused // T.int64(8) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(8) // T.int64(4) * T.int64(64) + co_3 * T.int64(8) + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(28) + p_3 * T.int64(28) + p_4)
                                    v_ci = T.axis.reduce(T.int64(64), ci_0_fused * T.int64(16) + ci_1 * T.int64(16) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(3), T.int64(1), T.int64(64), T.int64(28)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused * T.int64(3) + ax0)
                                v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + eps_2_nu_2_co_2_p_2_fused // T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(8) // T.int64(4) * T.int64(64) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(28) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(784), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(128), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(128) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 3])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 1, 3, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 2, 8, 8])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[7, 1, 4, 1, 28])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[4, 1, 16])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=2)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-29 17:02:26 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            input_tile_local = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)), scope="local")
            data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
            bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
            inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
            data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="local")
            bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
            data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="shared")
            p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), scope="shared")
            for ci_p_fused_0 in T.thread_binding(T.int64(49), thread="blockIdx.x"):
                for ci_p_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                        with T.block("input_tile"):
                            v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax0)
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax1)
                            v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                            T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                            T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                            T.block_attr({"schedule_rule": "None"})
                            input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                    for eps in T.unroll(T.int64(6)):
                        for nu in T.unroll(T.int64(6)):
                            for r_a in T.unroll(T.int64(6)):
                                for r_b in T.unroll(T.int64(6)):
                                    with T.block("data_pack"):
                                        v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                        v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784))
                                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) % T.int64(784))
                                        v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                        T.reads(input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                        T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                        with T.init():
                                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                                        data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                        with T.block("data_pack_local"):
                            v0, v1 = T.axis.remap("SS", [ax0, ax1])
                            v2 = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(1024) + ci_p_fused_1) // T.int64(784) + ax2)
                            v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(240) + ci_p_fused_1) % T.int64(784) + ax3)
                            T.reads(data_pack_local[v0, v1, v2, v3])
                            T.writes(data_pack[v0, v1, v2, v3])
                            data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
            for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x"):
                for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(2), thread="vthread.x"):
                    for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(24), thread="threadIdx.x"):
                        for ci_0_fused in T.serial(T.int64(4), annotations={"software_pipeline_async_stages": [0], "software_pipeline_order": [0, 1, 2], "software_pipeline_stage": [0, 0, 3]}):
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(32256)):
                                with T.block("data_pack_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(5376))
                                    v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(5376) // T.int64(1792))
                                    v2 = T.axis.spatial(T.int64(64), ci_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(1792) // T.int64(112))
                                    v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + ax0_ax1_ax2_ax3_fused % T.int64(112))
                                    T.reads(data_pack[v0, v1, v2, v3])
                                    T.writes(data_pack_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 3})
                                    data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                            for ax0_ax1_ax2_ax3_fused in range(T.int64(36864)):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), ax0_ax1_ax2_ax3_fused // T.int64(6144))
                                    v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + ax0_ax1_ax2_ax3_fused % T.int64(6144) // T.int64(2048))
                                    v2 = T.axis.spatial(T.int64(64), ci_0_fused * T.int64(16) + ax0_ax1_ax2_ax3_fused % T.int64(2048) // T.int64(128))
                                    v3 = T.axis.spatial(T.int64(128), ax0_ax1_ax2_ax3_fused % T.int64(128))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    T.block_attr({"meta_schedule.cooperative_fetch": 1})
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                            for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(16), T.int64(3), T.int64(1), T.int64(8), T.int64(28)):
                                with T.block("bgemm"):
                                    v_eps = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused * T.int64(3) + eps_3 * T.int64(3) + eps_4)
                                    v_nu = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + eps_2_nu_2_co_2_p_2_fused // T.int64(8) + nu_3 + nu_4)
                                    v_co = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(8) // T.int64(4) * T.int64(64) + co_3 * T.int64(8) + co_4)
                                    v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(28) + p_3 * T.int64(28) + p_4)
                                    v_ci = T.axis.reduce(T.int64(64), ci_0_fused * T.int64(16) + ci_1 * T.int64(16) + ci_2)
                                    T.reads(data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                    T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                    T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                    with T.init():
                                        bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                                    bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                        for ax0, ax1, ax2, ax3 in T.grid(T.int64(3), T.int64(1), T.int64(64), T.int64(28)):
                            with T.block("bgemm_local"):
                                v0 = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused * T.int64(3) + ax0)
                                v1 = T.axis.spatial(T.int64(6), eps_0_nu_0_co_0_p_0_fused // T.int64(7) * T.int64(3) + eps_2_nu_2_co_2_p_2_fused // T.int64(8) + ax1)
                                v2 = T.axis.spatial(T.int64(128), eps_2_nu_2_co_2_p_2_fused % T.int64(8) // T.int64(4) * T.int64(64) + ax2)
                                v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused % T.int64(7) * T.int64(112) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(28) + ax3)
                                T.reads(bgemm_local[v0, v1, v2, v3])
                                T.writes(bgemm[v0, v1, v2, v3])
                                bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
            for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(196), thread="blockIdx.x"):
                for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                    for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                        for ax2 in T.unroll(T.int64(4)):
                            for ax3 in T.unroll(T.int64(4)):
                                for ax4 in T.unroll(T.int64(6)):
                                    for ax5 in T.unroll(T.int64(6)):
                                        with T.block("inverse"):
                                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                            v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                            v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                            T.reads(bgemm[v_r_a, v_r_b, v_co, v_p])
                                            T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                            with T.init():
                                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                                            inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                    for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                        with T.block("conv2d_winograd"):
                            v_n = T.axis.spatial(T.int64(1), T.int64(0))
                            v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) // T.int64(784))
                            v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                            v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(512) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                            T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                            T.writes(T_relu[v_n, v_co, v_h, v_w])
                            T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 1, 3])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[2, 1, 3, 1, 1])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 1, 2, 8, 8])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[7, 1, 4, 1, 28])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[4, 1, 16])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
l119 = sch.fuse(l90, preserve_unit_iters=True)
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_stage", ann_val=[0, 0, 3])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_order", ann_val=[0, 1, 2])
sch.annotate(block_or_loop=l119, ann_key="software_pipeline_async_stages", ann_val=[0])
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v120 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v120)
l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b3)
l127 = sch.fuse(l121, l122, l123, l124, preserve_unit_iters=True)
v128 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=4)
l129, l130 = sch.split(loop=l127, factors=[None, v128], preserve_unit_iters=True)
sch.bind(loop=l129, thread_axis="blockIdx.x")
sch.bind(loop=l130, thread_axis="threadIdx.x")
2024-04-29 17:10:48 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:10:48 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 17:10:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 501 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:11:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1010 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:11:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1514 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:11:24 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:11:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2513 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:11:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 3015 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:11:43 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-04-29 17:12:04 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 133 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:12:24 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 132 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:12:44 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:13:04 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 148 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 17:13:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9993  0.9983  0.9976  0.9944  0.9926  0.9922  0.9912  0.9907  0.9903  0.9885  0.9878  0.9866  0.9859  0.9856  0.9852  0.9849
[17 : 32]:	0.9840  0.9824  0.9811  0.9807  0.9794  0.9791  0.9788  0.9780  0.9770  0.9759  0.9757  0.9757  0.9754  0.9753  0.9751  0.9748
[33 : 48]:	0.9746  0.9743  0.9741  0.9731  0.9719  0.9713  0.9710  0.9708  0.9702  0.9700  0.9693  0.9693  0.9680  0.9680  0.9679  0.9676
[49 : 64]:	0.9667  0.9661  0.9657  0.9657  0.9647  0.9645  0.9640  0.9631  0.9628  0.9627  0.9620  0.9617  0.9611  0.9610  0.9608  0.9603
2024-04-29 17:13:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:13:05 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #1: GFLOPs: 6698.6534. Time: 124.5214 us. Best GFLOPs: 6698.6534
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #2: GFLOPs: 3534.1222. Time: 236.0206 us. Best GFLOPs: 6698.6534
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #3: GFLOPs: 5801.7719. Time: 143.7709 us. Best GFLOPs: 6698.6534
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #4: GFLOPs: 1939.8323. Time: 429.9989 us. Best GFLOPs: 6698.6534
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #5: GFLOPs: 969.4728. Time: 860.3912 us. Best GFLOPs: 6698.6534
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #6: GFLOPs: 5535.5400. Time: 150.6855 us. Best GFLOPs: 6698.6534
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #7: GFLOPs: 6050.0434. Time: 137.8710 us. Best GFLOPs: 6698.6534
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #8: GFLOPs: 8048.3464. Time: 103.6394 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #9: GFLOPs: 188.3280. Time: 4429.1116 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #10: GFLOPs: 5470.3766. Time: 152.4805 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #11: GFLOPs: 1027.3857. Time: 811.8916 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #12: GFLOPs: 7646.7861. Time: 109.0819 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #13: GFLOPs: 6718.9649. Time: 124.1450 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #14: GFLOPs: 747.0188. Time: 1116.6061 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #15: GFLOPs: 3529.7913. Time: 236.3102 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #16: GFLOPs: 5451.8317. Time: 152.9992 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #17: GFLOPs: 7775.1417. Time: 107.2811 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #18: GFLOPs: 493.3585. Time: 1690.7093 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #19: GFLOPs: 6291.9689. Time: 132.5699 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #20: GFLOPs: 476.8513. Time: 1749.2369 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #21: GFLOPs: 5407.4293. Time: 154.2555 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #22: GFLOPs: 364.8807. Time: 2286.0231 us. Best GFLOPs: 8048.3464
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #23: GFLOPs: 8148.2432. Time: 102.3688 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #24: GFLOPs: 7549.8156. Time: 110.4829 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #25: GFLOPs: 1879.1275. Time: 443.8900 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #26: GFLOPs: 3356.0058. Time: 248.5472 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #27: GFLOPs: 5368.3341. Time: 155.3789 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #28: GFLOPs: 155.5753. Time: 5361.5562 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #29: GFLOPs: 4557.8611. Time: 183.0082 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #30: GFLOPs: 1012.0709. Time: 824.1773 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #31: GFLOPs: 5526.2506. Time: 150.9388 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #32: GFLOPs: 6966.6350. Time: 119.7315 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #33: GFLOPs: 407.7779. Time: 2045.5398 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #34: GFLOPs: 2376.9392. Time: 350.9243 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #35: GFLOPs: 1090.0431. Time: 765.2228 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #36: GFLOPs: 826.9964. Time: 1008.6208 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #37: GFLOPs: 4558.0704. Time: 182.9998 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #38: GFLOPs: 5328.8902. Time: 156.5290 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #39: GFLOPs: 1851.4962. Time: 450.5145 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #40: GFLOPs: 5209.3226. Time: 160.1217 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #41: GFLOPs: 5390.6335. Time: 154.7361 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #42: GFLOPs: 7989.5716. Time: 104.4018 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #43: GFLOPs: 8097.2400. Time: 103.0136 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #44: GFLOPs: 7120.4339. Time: 117.1454 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #45: GFLOPs: 794.2677. Time: 1050.1823 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #46: GFLOPs: 6158.2141. Time: 135.4493 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #47: GFLOPs: 1846.3532. Time: 451.7694 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #48: GFLOPs: 1023.3235. Time: 815.1145 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #49: GFLOPs: 5403.3665. Time: 154.3715 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #50: GFLOPs: 5433.7010. Time: 153.5097 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #51: GFLOPs: 7177.8177. Time: 116.2088 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #52: GFLOPs: 7222.7652. Time: 115.4857 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #53: GFLOPs: 5420.6382. Time: 153.8796 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #54: GFLOPs: 6727.5067. Time: 123.9874 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #55: GFLOPs: 775.4690. Time: 1075.6404 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #56: GFLOPs: 574.3603. Time: 1452.2694 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #57: GFLOPs: 1254.2808. Time: 665.0232 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #58: GFLOPs: 3052.8400. Time: 273.2295 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #59: GFLOPs: 888.9785. Time: 938.2969 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #60: GFLOPs: 1095.4556. Time: 761.4419 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #61: GFLOPs: 7790.8054. Time: 107.0654 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #62: GFLOPs: 923.2751. Time: 903.4423 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #63: GFLOPs: 122.9957. Time: 6781.7474 us. Best GFLOPs: 8148.2432
2024-04-29 17:45:00 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #64: GFLOPs: 293.0300. Time: 2846.5539 us. Best GFLOPs: 8148.2432
2024-04-29 18:19:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 18:19:03 [INFO] [evolutionary_search.cc:715] Picked top 64 candidate(s) from database
2024-04-29 18:19:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 440 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:19:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 878 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:19:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1316 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:19:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1755 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:19:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2197 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:19:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2633 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:19:51 [INFO] [evolutionary_search.cc:723] Sampled 55 candidate(s)
2024-04-29 18:20:11 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 134 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:20:33 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 101 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:20:56 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 100 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:21:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 104 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 18:21:24 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0383  1.0278  1.0167  1.0094  1.0076  1.0046  1.0028  1.0027  1.0024  1.0024  1.0024  1.0024  0.9994  0.9971  0.9945  0.9937
[17 : 32]:	0.9932  0.9872  0.9872  0.9851  0.9850  0.9846  0.9796  0.9785  0.9783  0.9780  0.9740  0.9740  0.9739  0.9734  0.9734  0.9698
[33 : 48]:	0.9688  0.9683  0.9675  0.9656  0.9631  0.9619  0.9618  0.9608  0.9592  0.9576  0.9550  0.9549  0.9545  0.9537  0.9531  0.9499
[49 : 64]:	0.9496  0.9473  0.9471  0.9469  0.9459  0.9455  0.9446  0.9430  0.9421  0.9419  0.9417  0.9407  0.9402  0.9401  0.9401  0.9396
2024-04-29 18:21:24 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 18:21:24 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #65: GFLOPs: 9006.2199. Time: 92.6166 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #66: GFLOPs: 5621.4715. Time: 148.3821 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #67: GFLOPs: 8206.7478. Time: 101.6390 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #68: GFLOPs: 8433.0210. Time: 98.9119 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #69: GFLOPs: 8168.8225. Time: 102.1109 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #70: GFLOPs: 7850.5093. Time: 106.2512 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #71: GFLOPs: 7854.4727. Time: 106.1976 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #72: GFLOPs: 8141.0555. Time: 102.4592 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #73: GFLOPs: 8132.7185. Time: 102.5642 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #74: GFLOPs: 7994.8378. Time: 104.3331 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #75: GFLOPs: 8146.2264. Time: 102.3941 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #76: GFLOPs: 7994.9603. Time: 104.3315 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #77: GFLOPs: 8240.5285. Time: 101.2224 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #78: GFLOPs: 8075.7873. Time: 103.2872 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #79: GFLOPs: 7739.3649. Time: 107.7770 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #80: GFLOPs: 7981.1052. Time: 104.5126 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #81: GFLOPs: 6801.6186. Time: 122.6364 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #82: GFLOPs: 8171.2490. Time: 102.0806 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #83: GFLOPs: 8976.6848. Time: 92.9214 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #84: GFLOPs: 5405.9072. Time: 154.2990 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #85: GFLOPs: 5444.8387. Time: 153.1957 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #86: GFLOPs: 7027.8344. Time: 118.6889 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #87: GFLOPs: 6511.4895. Time: 128.1006 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #88: GFLOPs: 8004.9773. Time: 104.2009 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #89: GFLOPs: 4720.3382. Time: 176.7089 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #90: GFLOPs: 8233.7596. Time: 101.3056 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #91: GFLOPs: 2522.6128. Time: 330.6595 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #92: GFLOPs: 2497.3778. Time: 334.0007 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #93: GFLOPs: 8426.4886. Time: 98.9885 us. Best GFLOPs: 9006.2199
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #94: GFLOPs: 9741.4895. Time: 85.6261 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #95: GFLOPs: 9676.3366. Time: 86.2026 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #96: GFLOPs: 8659.3449. Time: 96.3267 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #97: GFLOPs: 7891.7759. Time: 105.6956 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #98: GFLOPs: 8793.8422. Time: 94.8534 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #99: GFLOPs: 8544.5034. Time: 97.6213 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #100: GFLOPs: 5390.9662. Time: 154.7266 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #101: GFLOPs: 8137.9312. Time: 102.4985 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #102: GFLOPs: 2475.6745. Time: 336.9287 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #103: GFLOPs: 8925.3742. Time: 93.4556 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #104: GFLOPs: 8910.4788. Time: 93.6118 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #105: GFLOPs: 2520.4593. Time: 330.9420 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #106: GFLOPs: 5697.5138. Time: 146.4017 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #107: GFLOPs: 5672.8987. Time: 147.0370 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #108: GFLOPs: 9017.2775. Time: 92.5031 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #109: GFLOPs: 5751.9872. Time: 145.0152 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #110: GFLOPs: 5790.9725. Time: 144.0390 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #111: GFLOPs: 2508.7034. Time: 332.4928 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #112: GFLOPs: 8523.7006. Time: 97.8596 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #113: GFLOPs: 7848.3487. Time: 106.2804 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #114: GFLOPs: 5695.4650. Time: 146.4544 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #115: GFLOPs: 8774.2584. Time: 95.0651 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #116: GFLOPs: 8022.3216. Time: 103.9756 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #117: GFLOPs: 5718.0531. Time: 145.8758 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #118: GFLOPs: 5732.5419. Time: 145.5071 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #119: GFLOPs: 7560.6180. Time: 110.3251 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #120: GFLOPs: 2590.9012. Time: 321.9443 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #121: GFLOPs: 8021.6527. Time: 103.9843 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #122: GFLOPs: 9223.2500. Time: 90.4373 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #123: GFLOPs: 7562.5682. Time: 110.2966 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #124: GFLOPs: 7399.3706. Time: 112.7293 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #125: GFLOPs: 7934.0472. Time: 105.1325 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #126: GFLOPs: 648.3426. Time: 1286.5510 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #127: GFLOPs: 192.3684. Time: 4336.0853 us. Best GFLOPs: 9741.4895
2024-04-29 18:22:39 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #128: GFLOPs: 562.3640. Time: 1483.2490 us. Best GFLOPs: 9741.4895
2024-04-29 19:24:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 19:24:44 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 19:24:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 408 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:24:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 814 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:25:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1215 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:25:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1615 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:25:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2019 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:25:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2426 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:25:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2821 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:25:41 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 3229 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:25:41 [INFO] [evolutionary_search.cc:723] Sampled 51 candidate(s)
2024-04-29 19:26:02 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 118 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:26:27 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 151 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:26:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 152 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:27:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 122 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 19:27:22 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9723  0.9623  0.9576  0.9576  0.9538  0.9538  0.9533  0.9484  0.9472  0.9460  0.9426  0.9415  0.9394  0.9390  0.9368  0.9330
[17 : 32]:	0.9321  0.9283  0.9281  0.9281  0.9269  0.9258  0.9258  0.9192  0.9186  0.9186  0.9180  0.9176  0.9176  0.9175  0.9172  0.9171
[33 : 48]:	0.9160  0.9150  0.9133  0.9129  0.9116  0.9110  0.9108  0.9104  0.9101  0.9085  0.9080  0.9075  0.9070  0.9054  0.9050  0.9049
[49 : 64]:	0.9040  0.9035  0.9025  0.9022  0.9020  0.9019  0.9019  0.9014  0.9014  0.9014  0.9013  0.9009  0.9009  0.9004  0.8998  0.8997
2024-04-29 19:27:22 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 19:27:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #129: GFLOPs: 9157.9617. Time: 91.0820 us. Best GFLOPs: 9741.4895
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #130: GFLOPs: 9578.2900. Time: 87.0850 us. Best GFLOPs: 9741.4895
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #131: GFLOPs: 9791.5763. Time: 85.1881 us. Best GFLOPs: 9791.5763
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #132: GFLOPs: 9807.1144. Time: 85.0531 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #133: GFLOPs: 9402.4559. Time: 88.7136 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #134: GFLOPs: 9401.8054. Time: 88.7197 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #135: GFLOPs: 7714.0452. Time: 108.1308 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #136: GFLOPs: 8165.6226. Time: 102.1509 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #137: GFLOPs: 8633.4963. Time: 96.6151 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #138: GFLOPs: 9051.3525. Time: 92.1548 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #139: GFLOPs: 8778.0492. Time: 95.0241 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #140: GFLOPs: 8592.4011. Time: 97.0772 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #141: GFLOPs: 9599.4623. Time: 86.8930 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #142: GFLOPs: 8821.3739. Time: 94.5574 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #143: GFLOPs: 7048.4306. Time: 118.3421 us. Best GFLOPs: 9807.1144
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #144: GFLOPs: 9842.6215. Time: 84.7463 us. Best GFLOPs: 9842.6215
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #145: GFLOPs: 5297.6325. Time: 157.4526 us. Best GFLOPs: 9842.6215
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #146: GFLOPs: 9086.6850. Time: 91.7965 us. Best GFLOPs: 9842.6215
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #147: GFLOPs: 7323.0881. Time: 113.9036 us. Best GFLOPs: 9842.6215
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #148: GFLOPs: 10060.1467. Time: 82.9139 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #149: GFLOPs: 9998.6159. Time: 83.4241 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #150: GFLOPs: 7820.3349. Time: 106.6611 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #151: GFLOPs: 7820.0292. Time: 106.6653 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #152: GFLOPs: 9510.6758. Time: 87.7042 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #153: GFLOPs: 9381.3368. Time: 88.9133 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #154: GFLOPs: 9373.5221. Time: 88.9874 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #155: GFLOPs: 9344.7370. Time: 89.2616 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #156: GFLOPs: 9290.0253. Time: 89.7873 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #157: GFLOPs: 9404.4053. Time: 88.6952 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #158: GFLOPs: 9518.2979. Time: 87.6339 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #159: GFLOPs: 6238.5027. Time: 133.7061 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #160: GFLOPs: 9310.8056. Time: 89.5869 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #161: GFLOPs: 9115.4310. Time: 91.5070 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #162: GFLOPs: 7688.3085. Time: 108.4928 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #163: GFLOPs: 7374.3454. Time: 113.1118 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #164: GFLOPs: 9205.8744. Time: 90.6080 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #165: GFLOPs: 9032.0782. Time: 92.3515 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #166: GFLOPs: 8197.7125. Time: 101.7510 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #167: GFLOPs: 9231.3324. Time: 90.3581 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #168: GFLOPs: 9911.9826. Time: 84.1533 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #169: GFLOPs: 7474.7113. Time: 111.5930 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #170: GFLOPs: 8488.4777. Time: 98.2657 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #171: GFLOPs: 7021.3533. Time: 118.7984 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #172: GFLOPs: 8442.8402. Time: 98.7968 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #173: GFLOPs: 9386.5993. Time: 88.8635 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #174: GFLOPs: 9364.9340. Time: 89.0691 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #175: GFLOPs: 9196.7925. Time: 90.6975 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #176: GFLOPs: 7197.1233. Time: 115.8971 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #177: GFLOPs: 8591.7449. Time: 97.0846 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #178: GFLOPs: 5319.7231. Time: 156.7987 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #179: GFLOPs: 7645.3289. Time: 109.1027 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #180: GFLOPs: 8901.9140. Time: 93.7019 us. Best GFLOPs: 10060.1467
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #181: GFLOPs: 10281.1914. Time: 81.1312 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #182: GFLOPs: 6973.9403. Time: 119.6061 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #183: GFLOPs: 7359.1600. Time: 113.3452 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #184: GFLOPs: 7229.4276. Time: 115.3792 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #185: GFLOPs: 6380.8383. Time: 130.7235 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #186: GFLOPs: 6383.3950. Time: 130.6712 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #187: GFLOPs: 8607.3009. Time: 96.9091 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #188: GFLOPs: 7197.1242. Time: 115.8971 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #189: GFLOPs: 9027.4609. Time: 92.3987 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #190: GFLOPs: 6453.6754. Time: 129.2482 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #191: GFLOPs: 860.1822. Time: 969.7083 us. Best GFLOPs: 10281.1914
2024-04-29 19:28:35 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #192: GFLOPs: 1011.1955. Time: 824.8908 us. Best GFLOPs: 10281.1914
2024-04-29 20:14:00 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:14:04 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:14:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:14:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 808 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:14:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1210 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:14:33 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1617 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:14:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2020 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:14:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2421 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:14:55 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2826 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:15:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 3227 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:15:01 [INFO] [evolutionary_search.cc:723] Sampled 53 candidate(s)
2024-04-29 20:15:23 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 112 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:15:47 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 129 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:16:11 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:16:36 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 126 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:16:41 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.6316  0.9863  0.9743  0.9731  0.9722  0.9665  0.9622  0.9578  0.9558  0.9520  0.9498  0.9486  0.9443  0.9399  0.9390  0.9383
[17 : 32]:	0.9380  0.9374  0.9371  0.9367  0.9350  0.9343  0.9337  0.9317  0.9315  0.9314  0.9309  0.9304  0.9297  0.9293  0.9292  0.9292
[33 : 48]:	0.9288  0.9283  0.9275  0.9262  0.9261  0.9248  0.9243  0.9233  0.9227  0.9221  0.9221  0.9217  0.9211  0.9210  0.9204  0.9193
[49 : 64]:	0.9176  0.9164  0.9140  0.9129  0.9117  0.9111  0.9094  0.9088  0.9077  0.9072  0.9069  0.9050  0.9050  0.9049  0.9047  0.9045
2024-04-29 20:16:42 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:16:42 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #193: GFLOPs: 1615.5313. Time: 516.3167 us. Best GFLOPs: 10281.1914
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #194: GFLOPs: 10715.4292. Time: 77.8434 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #195: GFLOPs: 10229.1750. Time: 81.5438 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #196: GFLOPs: 10163.1666. Time: 82.0734 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #197: GFLOPs: 10165.1302. Time: 82.0576 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #198: GFLOPs: 10021.4762. Time: 83.2338 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #199: GFLOPs: 9833.5403. Time: 84.8246 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #200: GFLOPs: 10269.1985. Time: 81.2260 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #201: GFLOPs: 10021.5802. Time: 83.2330 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #202: GFLOPs: 10314.6954. Time: 80.8677 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #203: GFLOPs: 8821.5273. Time: 94.5557 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #204: GFLOPs: 10248.1421. Time: 81.3929 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #205: GFLOPs: 9889.1684. Time: 84.3474 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #206: GFLOPs: 10484.0952. Time: 79.5611 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #207: GFLOPs: 9673.4428. Time: 86.2284 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #208: GFLOPs: 10575.2326. Time: 78.8754 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #209: GFLOPs: 9383.9001. Time: 88.8890 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #210: GFLOPs: 9762.0046. Time: 85.4462 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #211: GFLOPs: 9545.8531. Time: 87.3810 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #212: GFLOPs: 9714.1078. Time: 85.8675 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #213: GFLOPs: 9871.9408. Time: 84.4946 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #214: GFLOPs: 10477.0434. Time: 79.6146 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #215: GFLOPs: 9279.3938. Time: 89.8901 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #216: GFLOPs: 9661.9884. Time: 86.3307 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #217: GFLOPs: 9260.9181. Time: 90.0695 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #218: GFLOPs: 9447.8143. Time: 88.2877 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #219: GFLOPs: 9447.8143. Time: 88.2877 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #220: GFLOPs: 9686.1297. Time: 86.1155 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #221: GFLOPs: 9902.0295. Time: 84.2379 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #222: GFLOPs: 9722.7322. Time: 85.7913 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #223: GFLOPs: 9776.7124. Time: 85.3176 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #224: GFLOPs: 10380.4212. Time: 80.3557 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #225: GFLOPs: 10011.1324. Time: 83.3198 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #226: GFLOPs: 9673.2211. Time: 86.2304 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #227: GFLOPs: 9741.1048. Time: 85.6295 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #228: GFLOPs: 10102.4908. Time: 82.5664 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #229: GFLOPs: 9867.4118. Time: 84.5334 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #230: GFLOPs: 10099.0582. Time: 82.5944 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #231: GFLOPs: 10249.7647. Time: 81.3800 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #232: GFLOPs: 9991.5769. Time: 83.4829 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #233: GFLOPs: 8758.0180. Time: 95.2414 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #234: GFLOPs: 9448.2328. Time: 88.2838 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #235: GFLOPs: 9447.4289. Time: 88.2913 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #236: GFLOPs: 9795.0260. Time: 85.1581 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #237: GFLOPs: 9689.9063. Time: 86.0819 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #238: GFLOPs: 9460.6986. Time: 88.1675 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #239: GFLOPs: 10025.0111. Time: 83.2045 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #240: GFLOPs: 7333.0874. Time: 113.7482 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #241: GFLOPs: 10119.8443. Time: 82.4248 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #242: GFLOPs: 9601.8980. Time: 86.8709 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #243: GFLOPs: 9653.0404. Time: 86.4107 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #244: GFLOPs: 7832.9219. Time: 106.4897 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #245: GFLOPs: 9209.5401. Time: 90.5719 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #246: GFLOPs: 8634.2741. Time: 96.6064 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #247: GFLOPs: 9310.6404. Time: 89.5884 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #248: GFLOPs: 10470.8957. Time: 79.6614 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #249: GFLOPs: 8370.2464. Time: 99.6537 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #250: GFLOPs: 6095.5430. Time: 136.8419 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #251: GFLOPs: 8631.1932. Time: 96.6408 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #252: GFLOPs: 9004.6182. Time: 92.6331 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #253: GFLOPs: 8893.3054. Time: 93.7926 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #254: GFLOPs: 2234.4486. Time: 373.3028 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #255: GFLOPs: 4516.6458. Time: 184.6782 us. Best GFLOPs: 10715.4292
2024-04-29 20:18:18 [INFO] [task_scheduler.cc:121] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #256: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(112), T.int64(112)), "float32"), p1: T.Buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), "float32"), p2: T.Buffer((T.int64(1), T.int64(128), T.int64(1), T.int64(1)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(128), T.int64(112), T.int64(112)), "float32")):
        T.func_attr({"layout_free_buffers": [1], "tir.noalias": T.bool(True)})
        # with T.block("root"):
        input_tile_local = T.alloc_buffer((T.int64(64), T.int64(784), T.int64(6), T.int64(6)), scope="local")
        data_pack = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)))
        bgemm = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)))
        inverse_local = T.alloc_buffer((T.int64(128), T.int64(784), T.int64(4), T.int64(4)), scope="local")
        data_pack_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="local")
        bgemm_local = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(128), T.int64(784)), scope="local")
        data_pack_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(784)), scope="shared")
        p1_shared = T.alloc_buffer((T.int64(6), T.int64(6), T.int64(64), T.int64(128)), scope="shared")
        for ci_p_fused_0 in T.thread_binding(T.int64(1568), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for ci_p_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(6), T.int64(6)):
                    with T.block("input_tile"):
                        v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784) + ax0)
                        v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784) + ax1)
                        v_eps, v_nu = T.axis.remap("SS", [ax2, ax3])
                        T.reads(p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)])
                        T.writes(input_tile_local[v_ci, v_p, v_eps, v_nu])
                        T.block_attr({"schedule_rule": "None"})
                        input_tile_local[v_ci, v_p, v_eps, v_nu] = T.if_then_else(T.int64(1) <= v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps and v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps < T.int64(113) and T.int64(1) <= v_p % T.int64(28) * T.int64(4) + v_nu and v_p % T.int64(28) * T.int64(4) + v_nu < T.int64(113), p0[v_p // T.int64(784), v_ci, v_p % T.int64(784) // T.int64(28) * T.int64(4) + v_eps - T.int64(1), v_p % T.int64(28) * T.int64(4) + v_nu - T.int64(1)], T.float32(0))
                for eps in T.unroll(T.int64(6)):
                    for nu in T.unroll(T.int64(6)):
                        with T.block("data_pack_init"):
                            v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                            v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784))
                            v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784))
                            T.reads()
                            T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                            T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                            data_pack_local[v_eps, v_nu, v_ci, v_p] = T.float32(0)
                        for r_a in T.unroll(T.int64(6)):
                            for r_b in T.unroll(T.int64(6)):
                                with T.block("data_pack_update"):
                                    v_eps, v_nu = T.axis.remap("SS", [eps, nu])
                                    v_ci = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784))
                                    v_p = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784))
                                    v_r_a, v_r_b = T.axis.remap("RR", [r_a, r_b])
                                    T.reads(data_pack_local[v_eps, v_nu, v_ci, v_p], input_tile_local[v_ci, v_p, v_r_a, v_r_b])
                                    T.writes(data_pack_local[v_eps, v_nu, v_ci, v_p])
                                    T.block_attr({"schedule_rule": "conv2d_nchw_winograd_data_pack"})
                                    data_pack_local[v_eps, v_nu, v_ci, v_p] = data_pack_local[v_eps, v_nu, v_ci, v_p] + input_tile_local[v_ci, v_p, v_r_a, v_r_b] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_eps % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_eps % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_eps % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_eps % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_eps % T.int64(6) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_nu % T.int64(6) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(5), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(4), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(5), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(4), T.float32(-0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(3), T.float32(2), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(2), T.float32(2.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_nu % T.int64(6) == T.int64(0), T.float32(1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(5), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(4), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(2), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(1), T.float32(-2.5), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_nu % T.int64(6) == T.int64(0), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(5), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(4), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(3), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(2), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_nu % T.int64(6) == T.int64(0), T.float32(-1.5), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(5), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(4), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_nu % T.int64(6) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))))))))))))))
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(6), T.int64(6), T.int64(1), T.int64(1)):
                    with T.block("data_pack_local"):
                        v0, v1 = T.axis.remap("SS", [ax0, ax1])
                        v2 = T.axis.spatial(T.int64(64), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) // T.int64(784) + ax2)
                        v3 = T.axis.spatial(T.int64(784), (ci_p_fused_0 * T.int64(32) + ci_p_fused_1) % T.int64(784) + ax3)
                        T.reads(data_pack_local[v0, v1, v2, v3])
                        T.writes(data_pack[v0, v1, v2, v3])
                        data_pack[v0, v1, v2, v3] = data_pack_local[v0, v1, v2, v3]
        for eps_0_nu_0_co_0_p_0_fused in T.thread_binding(T.int64(14), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for eps_1_nu_1_co_1_p_1_fused in T.thread_binding(T.int64(16), thread="vthread.x"):
                for eps_2_nu_2_co_2_p_2_fused in T.thread_binding(T.int64(96), thread="threadIdx.x"):
                    for eps_3_init, nu_3_init, co_3_init, p_3_init, eps_4_init, nu_4_init, co_4_init, p_4_init in T.grid(T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(7)):
                        with T.block("bgemm_init"):
                            v_eps = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(8) * T.int64(3) + eps_3_init + eps_4_init)
                            v_nu = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(32) * T.int64(2) + nu_3_init * T.int64(2) + nu_4_init)
                            v_co = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused % T.int64(32) // T.int64(4) * T.int64(4) + co_3_init * T.int64(4) + co_4_init)
                            v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(56) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(7) + p_3_init * T.int64(7) + p_4_init)
                            T.reads()
                            T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                            T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                            bgemm_local[v_eps, v_nu, v_co, v_p] = T.float32(0)
                    for ci_0 in range(T.int64(64)):
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(6)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(96), thread="threadIdx.x"):
                                for ax0_ax1_ax2_ax3_fused_2 in T.vectorized(T.int64(4)):
                                    with T.block("data_pack_shared"):
                                        v0 = T.axis.spatial(T.int64(6), (ax0_ax1_ax2_ax3_fused_0 * T.int64(384) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) // T.int64(336))
                                        v1 = T.axis.spatial(T.int64(6), (ax0_ax1_ax2_ax3_fused_0 * T.int64(384) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(336) // T.int64(56))
                                        v2 = T.axis.spatial(T.int64(64), ci_0)
                                        v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(56) + (ax0_ax1_ax2_ax3_fused_0 * T.int64(384) + ax0_ax1_ax2_ax3_fused_1 * T.int64(4) + ax0_ax1_ax2_ax3_fused_2) % T.int64(56))
                                        T.where((ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1) * T.int64(4) + ax0_ax1_ax2_ax3_fused_2 < T.int64(2016))
                                        T.reads(data_pack[v0, v1, v2, v3])
                                        T.writes(data_pack_shared[v0, v1, v2, v3])
                                        data_pack_shared[v0, v1, v2, v3] = data_pack[v0, v1, v2, v3]
                        for ax0_ax1_ax2_ax3_fused_0 in range(T.int64(48)):
                            for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(96), thread="threadIdx.x"):
                                with T.block("p1_shared"):
                                    v0 = T.axis.spatial(T.int64(6), (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1) // T.int64(768))
                                    v1 = T.axis.spatial(T.int64(6), (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1) % T.int64(768) // T.int64(128))
                                    v2 = T.axis.spatial(T.int64(64), ci_0)
                                    v3 = T.axis.spatial(T.int64(128), (ax0_ax1_ax2_ax3_fused_0 * T.int64(96) + ax0_ax1_ax2_ax3_fused_1) % T.int64(128))
                                    T.reads(p1[v0, v1, v2, v3])
                                    T.writes(p1_shared[v0, v1, v2, v3])
                                    p1_shared[v0, v1, v2, v3] = p1[v0, v1, v2, v3]
                        for ci_1, eps_3, nu_3, co_3, p_3, ci_2, eps_4, nu_4, co_4, p_4 in T.grid(T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(7)):
                            with T.block("bgemm_update"):
                                v_eps = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(8) * T.int64(3) + eps_3 + eps_4)
                                v_nu = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(32) * T.int64(2) + nu_3 * T.int64(2) + nu_4)
                                v_co = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused % T.int64(32) // T.int64(4) * T.int64(4) + co_3 * T.int64(4) + co_4)
                                v_p = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(56) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(7) + p_3 * T.int64(7) + p_4)
                                v_ci = T.axis.reduce(T.int64(64), ci_0 + ci_1 + ci_2)
                                T.reads(bgemm_local[v_eps, v_nu, v_co, v_p], data_pack_shared[v_eps, v_nu, v_ci, v_p], p1_shared[v_eps, v_nu, v_ci, v_co])
                                T.writes(bgemm_local[v_eps, v_nu, v_co, v_p])
                                T.block_attr({"meta_schedule.thread_extent_high_inclusive": 1024, "meta_schedule.thread_extent_low_inclusive": 32, "meta_schedule.tiling_structure": "SSSRRSRS"})
                                bgemm_local[v_eps, v_nu, v_co, v_p] = bgemm_local[v_eps, v_nu, v_co, v_p] + data_pack_shared[v_eps, v_nu, v_ci, v_p] * p1_shared[v_eps, v_nu, v_ci, v_co]
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(3), T.int64(2), T.int64(4), T.int64(7)):
                        with T.block("bgemm_local"):
                            v0 = T.axis.spatial(T.int64(6), eps_1_nu_1_co_1_p_1_fused // T.int64(8) * T.int64(3) + ax0)
                            v1 = T.axis.spatial(T.int64(6), eps_2_nu_2_co_2_p_2_fused // T.int64(32) * T.int64(2) + ax1)
                            v2 = T.axis.spatial(T.int64(128), eps_1_nu_1_co_1_p_1_fused % T.int64(8) // T.int64(2) * T.int64(32) + eps_2_nu_2_co_2_p_2_fused % T.int64(32) // T.int64(4) * T.int64(4) + ax2)
                            v3 = T.axis.spatial(T.int64(784), eps_0_nu_0_co_0_p_0_fused * T.int64(56) + eps_1_nu_1_co_1_p_1_fused % T.int64(2) * T.int64(28) + eps_2_nu_2_co_2_p_2_fused % T.int64(4) * T.int64(7) + ax3)
                            T.reads(bgemm_local[v0, v1, v2, v3])
                            T.writes(bgemm[v0, v1, v2, v3])
                            bgemm[v0, v1, v2, v3] = bgemm_local[v0, v1, v2, v3]
        for n_co_h_0_w_0_fused_0 in T.thread_binding(T.int64(3136), thread="blockIdx.x", annotations={"pragma_auto_unroll_max_step": 1024, "pragma_unroll_explicit": 1}):
            for n_co_h_0_w_0_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                for ax0, ax1 in T.grid(T.int64(1), T.int64(1)):
                    for ax2 in T.unroll(T.int64(4)):
                        for ax3 in T.unroll(T.int64(4)):
                            with T.block("inverse_init"):
                                v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                v_vh, v_vw = T.axis.remap("SS", [ax2, ax3])
                                T.reads()
                                T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                inverse_local[v_co, v_p, v_vh, v_vw] = T.float32(0)
                            for ax4 in T.unroll(T.int64(6)):
                                for ax5 in T.unroll(T.int64(6)):
                                    with T.block("inverse_update"):
                                        v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(784) + ax0)
                                        v_p = T.axis.spatial(T.int64(784), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(784) + ax1)
                                        v_vh, v_vw, v_r_a, v_r_b = T.axis.remap("SSRR", [ax2, ax3, ax4, ax5])
                                        T.reads(inverse_local[v_co, v_p, v_vh, v_vw], bgemm[v_r_a, v_r_b, v_co, v_p])
                                        T.writes(inverse_local[v_co, v_p, v_vh, v_vw])
                                        T.block_attr({"schedule_rule": "conv2d_nchw_winograd_inverse"})
                                        inverse_local[v_co, v_p, v_vh, v_vw] = inverse_local[v_co, v_p, v_vh, v_vw] + bgemm[v_r_a, v_r_b, v_co, v_p] * T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(5) and v_vh % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_a % T.int64(6) == T.int64(4) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_a % T.int64(6) == T.int64(3) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(2) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_a % T.int64(6) == T.int64(1) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_a % T.int64(6) == T.int64(0) and v_vh % T.int64(4) == T.int64(0), T.float32(1), T.float32(0))))))))))))))))))))))))) * T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(5) and v_vw % T.int64(4) == T.int64(0), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(3), T.float32(-8), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(2), T.float32(4), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(1), T.float32(-2), T.Select(v_r_b % T.int64(6) == T.int64(4) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(3), T.float32(0.125), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(2), T.float32(0.25), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(1), T.float32(0.5), T.Select(v_r_b % T.int64(6) == T.int64(3) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(3), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(1), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(2) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(3), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(2), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(1), T.float32(-1), T.Select(v_r_b % T.int64(6) == T.int64(1) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(3), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(2), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(1), T.float32(0), T.Select(v_r_b % T.int64(6) == T.int64(0) and v_vw % T.int64(4) == T.int64(0), T.float32(1), T.float32(0)))))))))))))))))))))))))
                for h_1, w_1 in T.grid(T.int64(4), T.int64(4)):
                    with T.block("conv2d_winograd"):
                        v_n = T.axis.spatial(T.int64(1), T.int64(0))
                        v_co = T.axis.spatial(T.int64(128), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) // T.int64(784))
                        v_h = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(784) // T.int64(28) * T.int64(4) + h_1)
                        v_w = T.axis.spatial(T.int64(112), (n_co_h_0_w_0_fused_0 * T.int64(32) + n_co_h_0_w_0_fused_1) % T.int64(28) * T.int64(4) + w_1)
                        T.reads(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)], p2[v_n, v_co, T.int64(0), T.int64(0)])
                        T.writes(T_relu[v_n, v_co, v_h, v_w])
                        T_relu[v_n, v_co, v_h, v_w] = T.max(inverse_local[v_co, v_n * T.int64(784) + v_h // T.int64(4) * T.int64(28) + v_w // T.int64(4), v_h % T.int64(4), v_w % T.int64(4)] + p2[v_n, v_co, T.int64(0), T.int64(0)], T.float32(0))
b0 = sch.get_block(name="data_pack", func_name="main")
b1 = sch.get_block(name="bgemm", func_name="main")
b2 = sch.get_block(name="inverse", func_name="main")
b3 = sch.get_block(name="conv2d_winograd", func_name="main")
b4 = sch.get_block(name="T_add", func_name="main")
b5 = sch.get_block(name="T_relu", func_name="main")
b6 = sch.get_block(name="root", func_name="main")
b7, b8 = sch.get_producers(block=b2)
sch.compute_inline(block=b8)
b9, = sch.get_consumers(block=b2)
l10, l11, l12, l13 = sch.get_loops(block=b9)
l14, l15 = sch.split(loop=l12, factors=[None, 4], preserve_unit_iters=True)
l16, l17 = sch.split(loop=l13, factors=[None, 4], preserve_unit_iters=True)
sch.reorder(l14, l16, l15, l17)
sch.compute_at(block=b2, loop=l16, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="local")
l18, l19, l20, l21, l22, l23, l24, l25, l26, l27 = sch.get_loops(block=b2)
sch.unroll(loop=l24)
sch.unroll(loop=l25)
sch.unroll(loop=l26)
sch.unroll(loop=l27)
b28, b29 = sch.get_producers(block=b0)
sch.compute_inline(block=b29)
b30, = sch.get_producers(block=b28)
l31, l32, l33, l34, l35, l36 = sch.get_loops(block=b0)
sch.reorder(l33, l34, l31, l32, l35, l36)
sch.unroll(loop=l31)
sch.unroll(loop=l32)
sch.unroll(loop=l35)
sch.unroll(loop=l36)
l37 = sch.fuse(l33, l34, preserve_unit_iters=True)
v38 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l39, l40 = sch.split(loop=l37, factors=[None, v38], preserve_unit_iters=True)
sch.bind(loop=l39, thread_axis="blockIdx.x")
sch.bind(loop=l40, thread_axis="threadIdx.x")
b41 = sch.cache_write(block=b0, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b41, loop=l40, preserve_unit_loops=True, index=-1)
sch.compute_at(block=b28, loop=l40, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b28, buffer_index=0, storage_scope="local")
sch.compute_inline(block=b30)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSSRRSRS")
l42, l43, l44, l45, l46 = sch.get_loops(block=b1)
v47, v48, v49, v50, v51 = sch.sample_perfect_tile(loop=l42, n=5, max_innermost_factor=64, decision=[1, 2, 1, 3, 1])
l52, l53, l54, l55, l56 = sch.split(loop=l42, factors=[v47, v48, v49, v50, v51], preserve_unit_iters=True)
v57, v58, v59, v60, v61 = sch.sample_perfect_tile(loop=l43, n=5, max_innermost_factor=64, decision=[1, 1, 3, 1, 2])
l62, l63, l64, l65, l66 = sch.split(loop=l43, factors=[v57, v58, v59, v60, v61], preserve_unit_iters=True)
v67, v68, v69, v70, v71 = sch.sample_perfect_tile(loop=l44, n=5, max_innermost_factor=64, decision=[1, 4, 8, 1, 4])
l72, l73, l74, l75, l76 = sch.split(loop=l44, factors=[v67, v68, v69, v70, v71], preserve_unit_iters=True)
v77, v78, v79, v80, v81 = sch.sample_perfect_tile(loop=l45, n=5, max_innermost_factor=64, decision=[14, 2, 4, 1, 7])
l82, l83, l84, l85, l86 = sch.split(loop=l45, factors=[v77, v78, v79, v80, v81], preserve_unit_iters=True)
v87, v88, v89 = sch.sample_perfect_tile(loop=l46, n=3, max_innermost_factor=64, decision=[64, 1, 1])
l90, l91, l92 = sch.split(loop=l46, factors=[v87, v88, v89], preserve_unit_iters=True)
sch.reorder(l52, l62, l72, l82, l53, l63, l73, l83, l54, l64, l74, l84, l90, l91, l55, l65, l75, l85, l92, l56, l66, l76, l86)
l93 = sch.fuse(l52, l62, l72, l82, preserve_unit_iters=True)
sch.bind(loop=l93, thread_axis="blockIdx.x")
l94 = sch.fuse(l53, l63, l73, l83, preserve_unit_iters=True)
sch.bind(loop=l94, thread_axis="vthread.x")
l95 = sch.fuse(l54, l64, l74, l84, preserve_unit_iters=True)
sch.bind(loop=l95, thread_axis="threadIdx.x")
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_low_inclusive", ann_val=32)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.thread_extent_high_inclusive", ann_val=1024)
b96 = sch.cache_write(block=b1, write_buffer_index=0, storage_scope="local")
sch.reverse_compute_at(block=b96, loop=l95, preserve_unit_loops=True, index=-1)
b97 = sch.cache_read(block=b1, read_buffer_index=0, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b97, loop=l90, preserve_unit_loops=True, index=-1)
l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b97)
l106 = sch.fuse(l102, l103, l104, l105, preserve_unit_iters=True)
v107 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch", ann_val=v107)
b108 = sch.cache_read(block=b1, read_buffer_index=1, storage_scope="shared", consumer_blocks=[b1])
sch.compute_at(block=b108, loop=l90, preserve_unit_loops=True, index=-1)
l109, l110, l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b108)
l117 = sch.fuse(l113, l114, l115, l116, preserve_unit_iters=True)
v118 = sch.sample_categorical(candidates=[1, 2, 3, 4], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch", ann_val=v118)
sch.reverse_compute_inline(block=b5)
sch.reverse_compute_inline(block=b4)
v119 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b6, ann_key="meta_schedule.unroll_explicit", ann_val=v119)
l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b3)
l126 = sch.fuse(l120, l121, l122, l123, preserve_unit_iters=True)
v127 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=0)
l128, l129 = sch.split(loop=l126, factors=[None, v127], preserve_unit_iters=True)
sch.bind(loop=l128, thread_axis="blockIdx.x")
sch.bind(loop=l129, thread_axis="threadIdx.x")
sch.enter_postproc()
sch.unannotate(block_or_loop=b97, ann_key="meta_schedule.cooperative_fetch")
l130, l131, l132, l133, l134 = sch.get_loops(block=b97)
l135, l136, l137 = sch.split(loop=l134, factors=[None, 96, 4], preserve_unit_iters=True)
sch.vectorize(loop=l137)
sch.bind(loop=l136, thread_axis="threadIdx.x")
sch.unannotate(block_or_loop=b108, ann_key="meta_schedule.cooperative_fetch")
l138, l139, l140, l141, l142 = sch.get_loops(block=b108)
l143, l144 = sch.split(loop=l142, factors=[None, 96], preserve_unit_iters=True)
sch.bind(loop=l144, thread_axis="threadIdx.x")
b145 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b145, ann_key="meta_schedule.unroll_explicit")
b146, b147, b148, b149, b150, b151, b152, b153, b154 = sch.get_child_blocks(b145)
l155, l156, l157, l158, l159, l160 = sch.get_loops(block=b146)
l161, l162, l163, l164, l165, l166 = sch.get_loops(block=b147)
sch.annotate(block_or_loop=l161, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l161, ann_key="pragma_unroll_explicit", ann_val=1)
l167, l168, l169, l170, l171, l172 = sch.get_loops(block=b148)
l173, l174, l175, l176, l177, l178, l179 = sch.get_loops(block=b149)
l180, l181, l182, l183, l184, l185 = sch.get_loops(block=b150)
l186, l187, l188, l189, l190, l191, l192, l193, l194, l195, l196, l197, l198, l199 = sch.get_loops(block=b151)
sch.annotate(block_or_loop=l186, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l186, ann_key="pragma_unroll_explicit", ann_val=1)
l200, l201, l202, l203, l204, l205, l206 = sch.get_loops(block=b152)
l207, l208, l209, l210, l211, l212, l213, l214 = sch.get_loops(block=b153)
sch.annotate(block_or_loop=l207, ann_key="pragma_auto_unroll_max_step", ann_val=1024)
sch.annotate(block_or_loop=l207, ann_key="pragma_unroll_explicit", ann_val=1)
l215, l216, l217, l218 = sch.get_loops(block=b154)
b219 = sch.get_block(name="data_pack", func_name="main")
l220, l221, l222, l223, l224, l225 = sch.get_loops(block=b219)
b226 = sch.decompose_reduction(block=b219, loop=l224)
b227 = sch.get_block(name="bgemm", func_name="main")
l228, l229, l230, l231, l232, l233, l234, l235, l236, l237, l238, l239, l240, l241 = sch.get_loops(block=b227)
b242 = sch.decompose_reduction(block=b227, loop=l231)
b243 = sch.get_block(name="inverse", func_name="main")
l244, l245, l246, l247, l248, l249, l250, l251 = sch.get_loops(block=b243)
b252 = sch.decompose_reduction(block=b243, loop=l250)
2024-04-29 20:51:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 20:51:37 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 20:51:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:51:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:51:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:52:05 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1607 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:52:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2011 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:52:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2416 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:52:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:52:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 3223 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:52:34 [INFO] [evolutionary_search.cc:723] Sampled 57 candidate(s)
2024-04-29 20:52:55 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 124 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:53:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 105 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:53:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 113 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:54:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 129 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 20:54:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9887  0.9821  0.9820  0.9666  0.9661  0.9648  0.9641  0.9631  0.9622  0.9621  0.9612  0.9609  0.9594  0.9586  0.9584  0.9577
[17 : 32]:	0.9570  0.9543  0.9526  0.9526  0.9512  0.9503  0.9495  0.9494  0.9489  0.9486  0.9482  0.9472  0.9468  0.9464  0.9457  0.9457
[33 : 48]:	0.9456  0.9450  0.9432  0.9421  0.9421  0.9419  0.9416  0.9412  0.9404  0.9401  0.9398  0.9394  0.9384  0.9377  0.9376  0.9376
[49 : 64]:	0.9368  0.9361  0.9356  0.9352  0.9351  0.9350  0.9347  0.9347  0.9346  0.9343  0.9343  0.9343  0.9342  0.9335  0.9334  0.9331
2024-04-29 20:54:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 20:54:12 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #257: GFLOPs: 10381.9803. Time: 80.3436 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #258: GFLOPs: 10462.5931. Time: 79.7246 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #259: GFLOPs: 10388.3504. Time: 80.2943 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #260: GFLOPs: 10156.3630. Time: 82.1284 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #261: GFLOPs: 10418.3424. Time: 80.0632 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #262: GFLOPs: 10308.1324. Time: 80.9192 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #263: GFLOPs: 10202.8761. Time: 81.7540 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #264: GFLOPs: 10357.3857. Time: 80.5344 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #265: GFLOPs: 10446.5291. Time: 79.8472 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #266: GFLOPs: 10491.2968. Time: 79.5065 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #267: GFLOPs: 10597.9038. Time: 78.7067 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #268: GFLOPs: 10164.6747. Time: 82.0612 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #269: GFLOPs: 9636.5622. Time: 86.5584 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #270: GFLOPs: 9509.9835. Time: 87.7105 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #271: GFLOPs: 10426.0303. Time: 80.0042 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #272: GFLOPs: 9728.7868. Time: 85.7379 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #273: GFLOPs: 10641.8065. Time: 78.3820 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #274: GFLOPs: 10515.7162. Time: 79.3218 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #275: GFLOPs: 10218.2548. Time: 81.6309 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #276: GFLOPs: 10271.5401. Time: 81.2075 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #277: GFLOPs: 10227.8669. Time: 81.5542 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #278: GFLOPs: 10337.9037. Time: 80.6862 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #279: GFLOPs: 10121.0825. Time: 82.4147 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #280: GFLOPs: 10133.3823. Time: 82.3147 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #281: GFLOPs: 10243.8886. Time: 81.4267 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #282: GFLOPs: 9961.2659. Time: 83.7369 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #283: GFLOPs: 10711.8551. Time: 77.8694 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #284: GFLOPs: 10472.1529. Time: 79.6518 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #285: GFLOPs: 10104.3890. Time: 82.5508 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #286: GFLOPs: 10360.2260. Time: 80.5123 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #287: GFLOPs: 10373.3609. Time: 80.4104 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #288: GFLOPs: 9970.9078. Time: 83.6560 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #289: GFLOPs: 9247.4542. Time: 90.2006 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #290: GFLOPs: 9804.8249. Time: 85.0730 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #291: GFLOPs: 10203.2566. Time: 81.7509 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #292: GFLOPs: 10351.6914. Time: 80.5787 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #293: GFLOPs: 10328.8909. Time: 80.7566 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #294: GFLOPs: 10196.8174. Time: 81.8026 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #295: GFLOPs: 10319.0544. Time: 80.8336 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #296: GFLOPs: 10359.4521. Time: 80.5183 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #297: GFLOPs: 10331.5165. Time: 80.7360 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #298: GFLOPs: 10184.6085. Time: 81.9006 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #299: GFLOPs: 9706.7330. Time: 85.9327 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #300: GFLOPs: 10145.8923. Time: 82.2132 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #301: GFLOPs: 10168.7774. Time: 82.0281 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #302: GFLOPs: 10331.8656. Time: 80.7333 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #303: GFLOPs: 10439.3277. Time: 79.9023 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #304: GFLOPs: 10440.2536. Time: 79.8952 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #305: GFLOPs: 10012.6693. Time: 83.3070 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #306: GFLOPs: 10252.0084. Time: 81.3622 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #307: GFLOPs: 9929.1521. Time: 84.0078 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #308: GFLOPs: 9853.7741. Time: 84.6504 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #309: GFLOPs: 10112.5715. Time: 82.4840 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #310: GFLOPs: 9783.7747. Time: 85.2560 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #311: GFLOPs: 10416.2254. Time: 80.0795 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #312: GFLOPs: 9907.8355. Time: 84.1885 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #313: GFLOPs: 9911.4738. Time: 84.1576 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #314: GFLOPs: 10407.9517. Time: 80.1431 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #315: GFLOPs: 10409.0197. Time: 80.1349 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #316: GFLOPs: 10118.6096. Time: 82.4348 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #317: GFLOPs: 9869.1908. Time: 84.5182 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #318: GFLOPs: 86.5457. Time: 9637.9810 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #319: GFLOPs: 9474.9269. Time: 88.0351 us. Best GFLOPs: 10715.4292
2024-04-29 20:55:23 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #320: GFLOPs: 775.9788. Time: 1074.9338 us. Best GFLOPs: 10715.4292
2024-04-29 21:47:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 21:47:44 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 21:47:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 401 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:47:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:48:06 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:48:13 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1606 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:48:20 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2012 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:48:27 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2415 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:48:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2820 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:48:34 [INFO] [evolutionary_search.cc:723] Sampled 50 candidate(s)
2024-04-29 21:48:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 111 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:49:18 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 136 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:49:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 174 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:50:07 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 144 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 21:50:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0050  0.9839  0.9820  0.9813  0.9806  0.9802  0.9795  0.9791  0.9784  0.9778  0.9765  0.9764  0.9764  0.9760  0.9755  0.9754
[17 : 32]:	0.9750  0.9747  0.9742  0.9742  0.9738  0.9738  0.9736  0.9731  0.9731  0.9730  0.9726  0.9726  0.9723  0.9718  0.9717  0.9716
[33 : 48]:	0.9714  0.9714  0.9714  0.9700  0.9696  0.9680  0.9680  0.9678  0.9670  0.9669  0.9668  0.9667  0.9665  0.9664  0.9658  0.9652
[49 : 64]:	0.9646  0.9642  0.9635  0.9634  0.9622  0.9619  0.9611  0.9610  0.9603  0.9600  0.9599  0.9587  0.9581  0.9566  0.9550  0.9546
2024-04-29 21:50:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 21:50:13 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #321: GFLOPs: 10632.2803. Time: 78.4522 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #322: GFLOPs: 10469.3644. Time: 79.6730 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #323: GFLOPs: 10361.2984. Time: 80.5040 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #324: GFLOPs: 10588.5373. Time: 78.7763 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #325: GFLOPs: 10522.4349. Time: 79.2712 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #326: GFLOPs: 10522.3838. Time: 79.2716 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #327: GFLOPs: 10535.8105. Time: 79.1705 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #328: GFLOPs: 10183.4250. Time: 81.9101 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #329: GFLOPs: 10171.7156. Time: 82.0044 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #330: GFLOPs: 10588.1719. Time: 78.7790 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #331: GFLOPs: 10267.4259. Time: 81.2400 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #332: GFLOPs: 10436.5764. Time: 79.9233 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #333: GFLOPs: 10475.8876. Time: 79.6234 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #334: GFLOPs: 10516.5067. Time: 79.3159 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #335: GFLOPs: 10472.9591. Time: 79.6457 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #336: GFLOPs: 9677.2365. Time: 86.1946 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #337: GFLOPs: 10022.9189. Time: 83.2218 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #338: GFLOPs: 10514.1685. Time: 79.3335 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #339: GFLOPs: 10362.3982. Time: 80.4954 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #340: GFLOPs: 10348.9101. Time: 80.6004 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #341: GFLOPs: 10350.9077. Time: 80.5848 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #342: GFLOPs: 10403.5283. Time: 80.1772 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #343: GFLOPs: 10439.7650. Time: 79.8989 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #344: GFLOPs: 10379.4499. Time: 80.3632 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #345: GFLOPs: 10001.0224. Time: 83.4041 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #346: GFLOPs: 10333.1760. Time: 80.7231 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #347: GFLOPs: 10152.6419. Time: 82.1585 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #348: GFLOPs: 10010.4227. Time: 83.3257 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #349: GFLOPs: 10154.6062. Time: 82.1426 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #350: GFLOPs: 10355.2557. Time: 80.5510 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #351: GFLOPs: 10146.9713. Time: 82.2044 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #352: GFLOPs: 10551.0408. Time: 79.0563 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #353: GFLOPs: 9960.2979. Time: 83.7451 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #354: GFLOPs: 10496.4702. Time: 79.4673 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #355: GFLOPs: 10471.6438. Time: 79.6557 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #356: GFLOPs: 10473.3790. Time: 79.6425 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #357: GFLOPs: 10383.3007. Time: 80.3334 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #358: GFLOPs: 10016.2701. Time: 83.2771 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #359: GFLOPs: 10122.9206. Time: 82.3997 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #360: GFLOPs: 10484.7373. Time: 79.5562 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #361: GFLOPs: 9357.3929. Time: 89.1408 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #362: GFLOPs: 10134.5418. Time: 82.3052 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #363: GFLOPs: 10101.7807. Time: 82.5722 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #364: GFLOPs: 10006.2122. Time: 83.3608 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #365: GFLOPs: 10134.5544. Time: 82.3051 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #366: GFLOPs: 10133.8666. Time: 82.3107 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #367: GFLOPs: 10466.9826. Time: 79.6911 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #368: GFLOPs: 10362.9086. Time: 80.4915 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #369: GFLOPs: 10228.0620. Time: 81.5527 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #370: GFLOPs: 10138.6256. Time: 82.2721 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #371: GFLOPs: 10103.8558. Time: 82.5552 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #372: GFLOPs: 10137.9938. Time: 82.2772 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #373: GFLOPs: 10194.2033. Time: 81.8235 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #374: GFLOPs: 10393.8693. Time: 80.2517 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #375: GFLOPs: 10342.6732. Time: 80.6490 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #376: GFLOPs: 9977.4952. Time: 83.6007 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #377: GFLOPs: 10466.0068. Time: 79.6986 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #378: GFLOPs: 9695.4821. Time: 86.0324 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #379: GFLOPs: 10393.1907. Time: 80.2570 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #380: GFLOPs: 10245.4512. Time: 81.4143 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #381: GFLOPs: 10108.8392. Time: 82.5145 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #382: GFLOPs: 371.1879. Time: 2247.1793 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #383: GFLOPs: 49.7350. Time: 16771.4132 us. Best GFLOPs: 10715.4292
2024-04-29 21:51:26 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #384: GFLOPs: 825.3154. Time: 1010.6752 us. Best GFLOPs: 10715.4292
2024-04-29 22:33:25 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 22:33:28 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 22:33:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 400 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:33:43 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 800 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:33:50 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1205 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:33:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1609 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:34:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2012 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:34:11 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2416 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:34:18 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2822 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:34:25 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 3226 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:34:25 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-29 22:34:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 182 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:35:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 192 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:35:35 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 170 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:35:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 128 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 22:36:03 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9948  0.9928  0.9846  0.9773  0.9771  0.9752  0.9751  0.9747  0.9743  0.9741  0.9738  0.9732  0.9729  0.9729  0.9728  0.9727
[17 : 32]:	0.9727  0.9724  0.9722  0.9712  0.9711  0.9708  0.9707  0.9703  0.9701  0.9700  0.9700  0.9699  0.9698  0.9696  0.9694  0.9692
[33 : 48]:	0.9691  0.9690  0.9689  0.9689  0.9688  0.9687  0.9686  0.9686  0.9684  0.9683  0.9681  0.9680  0.9672  0.9668  0.9666  0.9664
[49 : 64]:	0.9662  0.9657  0.9655  0.9654  0.9652  0.9649  0.9642  0.9642  0.9639  0.9637  0.9637  0.9637  0.9636  0.9636  0.9634  0.9630
2024-04-29 22:36:04 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 22:36:04 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #385: GFLOPs: 9839.1757. Time: 84.7760 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #386: GFLOPs: 9801.5395. Time: 85.1015 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #387: GFLOPs: 9586.1341. Time: 87.0138 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #388: GFLOPs: 9226.4710. Time: 90.4057 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #389: GFLOPs: 10520.3992. Time: 79.2865 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #390: GFLOPs: 10331.5165. Time: 80.7360 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #391: GFLOPs: 10521.3379. Time: 79.2794 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #392: GFLOPs: 10469.8604. Time: 79.6692 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #393: GFLOPs: 10584.5326. Time: 78.8061 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #394: GFLOPs: 10470.6861. Time: 79.6630 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #395: GFLOPs: 10588.7023. Time: 78.7751 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #396: GFLOPs: 10185.0338. Time: 81.8972 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #397: GFLOPs: 10446.3657. Time: 79.8484 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #398: GFLOPs: 10378.2422. Time: 80.3726 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #399: GFLOPs: 10184.0373. Time: 81.9052 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #400: GFLOPs: 10451.2000. Time: 79.8115 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #401: GFLOPs: 10516.2090. Time: 79.3181 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #402: GFLOPs: 10523.3227. Time: 79.2645 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #403: GFLOPs: 10518.3016. Time: 79.3023 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #404: GFLOPs: 10185.7569. Time: 81.8914 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #405: GFLOPs: 7168.1846. Time: 116.3650 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #406: GFLOPs: 10333.6576. Time: 80.7193 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #407: GFLOPs: 10078.5454. Time: 82.7625 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #408: GFLOPs: 10207.3030. Time: 81.7185 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #409: GFLOPs: 10472.8897. Time: 79.6462 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #410: GFLOPs: 10184.4179. Time: 81.9022 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #411: GFLOPs: 10590.6325. Time: 78.7607 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #412: GFLOPs: 10116.1234. Time: 82.4551 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #413: GFLOPs: 9247.3679. Time: 90.2014 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #414: GFLOPs: 10592.2485. Time: 78.7487 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #415: GFLOPs: 10349.2642. Time: 80.5976 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #416: GFLOPs: 10304.7407. Time: 80.9458 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #417: GFLOPs: 10378.3420. Time: 80.3718 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #418: GFLOPs: 10119.8091. Time: 82.4251 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #419: GFLOPs: 10139.3690. Time: 82.2660 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #420: GFLOPs: 10139.6827. Time: 82.2635 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #421: GFLOPs: 10323.3359. Time: 80.8000 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #422: GFLOPs: 10287.0801. Time: 81.0848 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #423: GFLOPs: 9074.6429. Time: 91.9183 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #424: GFLOPs: 9074.2840. Time: 91.9219 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #425: GFLOPs: 10184.9564. Time: 81.8978 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #426: GFLOPs: 10492.2159. Time: 79.4995 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #427: GFLOPs: 7280.5556. Time: 114.5690 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #428: GFLOPs: 10425.4955. Time: 80.0083 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #429: GFLOPs: 10281.8710. Time: 81.1259 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #430: GFLOPs: 10095.4734. Time: 82.6237 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #431: GFLOPs: 10354.6084. Time: 80.5560 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #432: GFLOPs: 10352.5414. Time: 80.5721 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #433: GFLOPs: 10401.9625. Time: 80.1893 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #434: GFLOPs: 10138.0619. Time: 82.2767 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #435: GFLOPs: 10435.7870. Time: 79.9294 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #436: GFLOPs: 9983.5106. Time: 83.5504 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #437: GFLOPs: 10139.9502. Time: 82.2613 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #438: GFLOPs: 9069.4377. Time: 91.9711 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #439: GFLOPs: 10404.7056. Time: 80.1681 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #440: GFLOPs: 10471.8162. Time: 79.6544 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #441: GFLOPs: 10484.1134. Time: 79.5609 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #442: GFLOPs: 10142.5368. Time: 82.2404 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #443: GFLOPs: 8969.7572. Time: 92.9931 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #444: GFLOPs: 8969.1137. Time: 92.9998 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #445: GFLOPs: 9752.1771. Time: 85.5323 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #446: GFLOPs: 109.7780. Time: 7598.2993 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #447: GFLOPs: 1728.2376. Time: 482.6453 us. Best GFLOPs: 10715.4292
2024-04-29 22:37:14 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #448: GFLOPs: 4854.0241. Time: 171.8421 us. Best GFLOPs: 10715.4292
2024-04-29 23:22:57 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 23:23:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 23:23:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 407 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:23:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 807 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:23:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1214 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:23:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1615 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:23:38 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2019 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:23:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2423 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:23:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2825 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:23:59 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 3233 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:24:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 3638 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:24:07 [INFO] [evolutionary_search.cc:723] Sampled 52 candidate(s)
2024-04-29 23:24:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 211 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:25:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 262 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:25:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 254 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:25:54 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 174 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-29 23:26:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9902  0.9880  0.9865  0.9861  0.9844  0.9840  0.9835  0.9794  0.9793  0.9789  0.9789  0.9782  0.9772  0.9760  0.9753  0.9752
[17 : 32]:	0.9748  0.9748  0.9745  0.9741  0.9726  0.9722  0.9722  0.9722  0.9722  0.9714  0.9710  0.9710  0.9702  0.9699  0.9697  0.9697
[33 : 48]:	0.9695  0.9695  0.9693  0.9690  0.9690  0.9690  0.9688  0.9688  0.9687  0.9687  0.9686  0.9685  0.9685  0.9685  0.9683  0.9683
[49 : 64]:	0.9683  0.9683  0.9679  0.9679  0.9679  0.9679  0.9675  0.9675  0.9675  0.9675  0.9674  0.9674  0.9671  0.9671  0.9669  0.9669
2024-04-29 23:26:00 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 23:26:00 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #449: GFLOPs: 10579.5510. Time: 78.8432 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #450: GFLOPs: 10595.4550. Time: 78.7249 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #451: GFLOPs: 10335.6197. Time: 80.7040 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #452: GFLOPs: 10305.6070. Time: 80.9390 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #453: GFLOPs: 10376.6105. Time: 80.3852 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #454: GFLOPs: 10415.4590. Time: 80.0854 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #455: GFLOPs: 10269.6613. Time: 81.2223 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #456: GFLOPs: 10360.0750. Time: 80.5135 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #457: GFLOPs: 10540.9514. Time: 79.1319 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #458: GFLOPs: 10471.0994. Time: 79.6598 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #459: GFLOPs: 10468.7298. Time: 79.6778 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #460: GFLOPs: 10467.8765. Time: 79.6843 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #461: GFLOPs: 384.0181. Time: 2172.1001 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #462: GFLOPs: 10426.8276. Time: 79.9980 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #463: GFLOPs: 10422.0550. Time: 80.0347 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #464: GFLOPs: 10332.5466. Time: 80.7280 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #465: GFLOPs: 10302.7336. Time: 80.9616 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #466: GFLOPs: 10304.2614. Time: 80.9496 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #467: GFLOPs: 10333.2792. Time: 80.7223 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #468: GFLOPs: 10305.3545. Time: 80.9410 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #469: GFLOPs: 10583.6778. Time: 78.8125 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #470: GFLOPs: 10384.8729. Time: 80.3212 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #471: GFLOPs: 10432.1368. Time: 79.9573 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #472: GFLOPs: 10502.0594. Time: 79.4250 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #473: GFLOPs: 10519.3748. Time: 79.2942 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #474: GFLOPs: 10147.9142. Time: 82.1968 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #475: GFLOPs: 10445.3377. Time: 79.8563 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #476: GFLOPs: 10536.0185. Time: 79.1690 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #477: GFLOPs: 10504.9626. Time: 79.4030 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #478: GFLOPs: 10389.7150. Time: 80.2838 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #479: GFLOPs: 10477.0967. Time: 79.6142 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #480: GFLOPs: 10471.3064. Time: 79.6582 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #481: GFLOPs: 10387.5255. Time: 80.3007 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #482: GFLOPs: 10619.4230. Time: 78.5472 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #483: GFLOPs: 10470.7900. Time: 79.6622 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #484: GFLOPs: 10519.1869. Time: 79.2957 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #485: GFLOPs: 10400.7371. Time: 80.1987 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #486: GFLOPs: 10313.9442. Time: 80.8736 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #487: GFLOPs: 10436.8786. Time: 79.9210 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #488: GFLOPs: 10582.6575. Time: 78.8201 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #489: GFLOPs: 10428.1292. Time: 79.9881 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #490: GFLOPs: 10284.7462. Time: 81.1032 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #491: GFLOPs: 10470.8133. Time: 79.6620 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #492: GFLOPs: 10588.7023. Time: 78.7751 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #493: GFLOPs: 10380.4002. Time: 80.3558 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #494: GFLOPs: 10379.0691. Time: 80.3662 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #495: GFLOPs: 10554.0741. Time: 79.0335 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #496: GFLOPs: 10409.0668. Time: 80.1345 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #497: GFLOPs: 10311.2912. Time: 80.8944 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #498: GFLOPs: 10459.9282. Time: 79.7449 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #499: GFLOPs: 10399.6956. Time: 80.2068 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #500: GFLOPs: 10402.1688. Time: 80.1877 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #501: GFLOPs: 10283.1229. Time: 81.1160 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #502: GFLOPs: 10298.4077. Time: 80.9956 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #503: GFLOPs: 10468.0016. Time: 79.6834 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #504: GFLOPs: 10094.9865. Time: 82.6277 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #505: GFLOPs: 10096.2848. Time: 82.6171 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #506: GFLOPs: 10388.2431. Time: 80.2952 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #507: GFLOPs: 10360.0609. Time: 80.5136 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #508: GFLOPs: 10548.7783. Time: 79.0732 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #509: GFLOPs: 9980.6904. Time: 83.5740 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #510: GFLOPs: 7049.3975. Time: 118.3258 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #511: GFLOPs: 842.6789. Time: 989.8501 us. Best GFLOPs: 10715.4292
2024-04-29 23:27:12 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #512: GFLOPs: 1138.3393. Time: 732.7567 us. Best GFLOPs: 10715.4292
2024-04-30 00:14:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 00:14:08 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 00:14:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 403 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:14:22 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 802 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:14:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1203 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:14:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1605 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:14:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2009 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:14:51 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2415 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:14:58 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2816 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:14:58 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-30 00:15:23 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 245 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:15:50 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 270 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:16:16 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 212 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:16:43 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 219 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:16:48 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0022  0.9984  0.9955  0.9908  0.9866  0.9862  0.9818  0.9802  0.9797  0.9785  0.9782  0.9778  0.9777  0.9776  0.9774  0.9769
[17 : 32]:	0.9768  0.9765  0.9759  0.9754  0.9752  0.9752  0.9732  0.9732  0.9731  0.9728  0.9727  0.9726  0.9725  0.9723  0.9723  0.9721
[33 : 48]:	0.9715  0.9714  0.9714  0.9713  0.9712  0.9711  0.9710  0.9709  0.9708  0.9708  0.9706  0.9700  0.9700  0.9695  0.9691  0.9687
[49 : 64]:	0.9686  0.9685  0.9685  0.9685  0.9676  0.9674  0.9670  0.9668  0.9668  0.9665  0.9660  0.9651  0.9650  0.9649  0.9647  0.9646
2024-04-30 00:16:48 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 00:16:48 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #513: GFLOPs: 10159.6172. Time: 82.1021 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #514: GFLOPs: 10140.3847. Time: 82.2578 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #515: GFLOPs: 10202.8027. Time: 81.7546 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #516: GFLOPs: 10149.7259. Time: 82.1821 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #517: GFLOPs: 10543.0613. Time: 79.1161 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #518: GFLOPs: 10457.7904. Time: 79.7612 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #519: GFLOPs: 10521.1409. Time: 79.2809 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #520: GFLOPs: 10533.6228. Time: 79.1870 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #521: GFLOPs: 10531.2547. Time: 79.2048 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #522: GFLOPs: 10542.5866. Time: 79.1197 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #523: GFLOPs: 10470.6861. Time: 79.6630 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #524: GFLOPs: 10231.5592. Time: 81.5248 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #525: GFLOPs: 10525.7484. Time: 79.2462 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #526: GFLOPs: 10592.3959. Time: 78.7476 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #527: GFLOPs: 10565.1256. Time: 78.9509 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #528: GFLOPs: 10484.2843. Time: 79.5596 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #529: GFLOPs: 10448.5255. Time: 79.8319 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #530: GFLOPs: 10402.9725. Time: 80.1815 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #531: GFLOPs: 10381.0350. Time: 80.3509 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #532: GFLOPs: 10533.4499. Time: 79.1883 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #533: GFLOPs: 10412.4123. Time: 80.1088 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #534: GFLOPs: 10450.2739. Time: 79.8186 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #535: GFLOPs: 10474.5093. Time: 79.6339 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #536: GFLOPs: 10471.9261. Time: 79.6535 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #537: GFLOPs: 10359.9242. Time: 80.5147 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #538: GFLOPs: 10430.3345. Time: 79.9711 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #539: GFLOPs: 10490.2450. Time: 79.5144 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #540: GFLOPs: 10313.6387. Time: 80.8760 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #541: GFLOPs: 10486.4593. Time: 79.5431 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #542: GFLOPs: 10428.2327. Time: 79.9873 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #543: GFLOPs: 10240.3747. Time: 81.4546 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #544: GFLOPs: 10427.1284. Time: 79.9957 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #545: GFLOPs: 10490.3747. Time: 79.5134 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #546: GFLOPs: 10281.6021. Time: 81.1280 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #547: GFLOPs: 10407.8913. Time: 80.1436 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #548: GFLOPs: 10400.8126. Time: 80.1981 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #549: GFLOPs: 10487.7945. Time: 79.5330 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #550: GFLOPs: 10488.5158. Time: 79.5275 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #551: GFLOPs: 10358.6351. Time: 80.5247 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #552: GFLOPs: 10509.3103. Time: 79.3702 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #553: GFLOPs: 10469.0499. Time: 79.6754 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #554: GFLOPs: 10444.5210. Time: 79.8625 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #555: GFLOPs: 10427.9236. Time: 79.9896 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #556: GFLOPs: 10470.8900. Time: 79.6614 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #557: GFLOPs: 10471.5401. Time: 79.6565 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #558: GFLOPs: 10300.8398. Time: 80.9765 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #559: GFLOPs: 10401.9336. Time: 80.1895 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #560: GFLOPs: 10400.9244. Time: 80.1973 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #561: GFLOPs: 10379.7858. Time: 80.3606 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #562: GFLOPs: 10298.8131. Time: 80.9924 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #563: GFLOPs: 10198.4746. Time: 81.7893 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #564: GFLOPs: 10331.5451. Time: 80.7358 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #565: GFLOPs: 10351.0595. Time: 80.5836 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #566: GFLOPs: 10317.8232. Time: 80.8432 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #567: GFLOPs: 10349.5966. Time: 80.5950 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #568: GFLOPs: 10305.3561. Time: 80.9410 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #569: GFLOPs: 10340.9619. Time: 80.6623 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #570: GFLOPs: 10334.5976. Time: 80.7120 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #571: GFLOPs: 10434.7450. Time: 79.9373 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #572: GFLOPs: 10386.9816. Time: 80.3049 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #573: GFLOPs: 10531.8657. Time: 79.2002 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #574: GFLOPs: 290.4872. Time: 2871.4715 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #575: GFLOPs: 2621.2064. Time: 318.2221 us. Best GFLOPs: 10715.4292
2024-04-30 00:17:58 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #576: GFLOPs: 6496.1197. Time: 128.4037 us. Best GFLOPs: 10715.4292
2024-04-30 00:54:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 00:54:11 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 00:54:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 399 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:54:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 801 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:54:34 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1204 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:54:42 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 1611 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:54:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2010 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:54:57 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2411 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:55:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 2816 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:55:04 [INFO] [evolutionary_search.cc:723] Sampled 54 candidate(s)
2024-04-30 00:55:31 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 290 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:56:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 250 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:56:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 282 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:56:57 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x5de6438)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x764c678)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb542298)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4a65268)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x5d80678)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x76a87d8)]: 219 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb52a298)]: 0 failure(s)
2024-04-30 00:57:02 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9843  0.9838  0.9836  0.9827  0.9808  0.9805  0.9800  0.9792  0.9790  0.9787  0.9786  0.9786  0.9779  0.9777  0.9773  0.9773
[17 : 32]:	0.9765  0.9764  0.9763  0.9763  0.9762  0.9761  0.9759  0.9754  0.9752  0.9752  0.9752  0.9752  0.9750  0.9750  0.9750  0.9749
[33 : 48]:	0.9748  0.9746  0.9744  0.9743  0.9743  0.9741  0.9741  0.9737  0.9737  0.9734  0.9734  0.9730  0.9728  0.9727  0.9726  0.9725
[49 : 64]:	0.9724  0.9724  0.9719  0.9713  0.9711  0.9711  0.9711  0.9711  0.9711  0.9711  0.9710  0.9709  0.9709  0.9709  0.9708  0.9708
2024-04-30 00:57:03 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 00:57:03 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #577: GFLOPs: 10646.2333. Time: 78.3494 us. Best GFLOPs: 10715.4292
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #578: GFLOPs: 10599.2981. Time: 78.6963 us. Best GFLOPs: 10715.4292
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #579: GFLOPs: 10580.0545. Time: 78.8395 us. Best GFLOPs: 10715.4292
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #580: GFLOPs: 10692.5440. Time: 78.0100 us. Best GFLOPs: 10715.4292
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #581: GFLOPs: 10712.3648. Time: 77.8657 us. Best GFLOPs: 10715.4292
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #582: GFLOPs: 10600.7122. Time: 78.6858 us. Best GFLOPs: 10715.4292
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #583: GFLOPs: 10562.0250. Time: 78.9740 us. Best GFLOPs: 10715.4292
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #584: GFLOPs: 10619.8446. Time: 78.5441 us. Best GFLOPs: 10715.4292
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #585: GFLOPs: 10738.1214. Time: 77.6789 us. Best GFLOPs: 10738.1214
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #586: GFLOPs: 10632.7134. Time: 78.4490 us. Best GFLOPs: 10738.1214
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #587: GFLOPs: 10601.4150. Time: 78.6806 us. Best GFLOPs: 10738.1214
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #588: GFLOPs: 10739.2072. Time: 77.6711 us. Best GFLOPs: 10739.2072
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #589: GFLOPs: 10488.1457. Time: 79.5303 us. Best GFLOPs: 10739.2072
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #590: GFLOPs: 10756.4904. Time: 77.5463 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #591: GFLOPs: 10679.3562. Time: 78.1064 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #592: GFLOPs: 10613.9418. Time: 78.5878 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #593: GFLOPs: 10474.4747. Time: 79.6341 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #594: GFLOPs: 10689.2544. Time: 78.0341 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #595: GFLOPs: 9907.2102. Time: 84.1938 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #596: GFLOPs: 10594.5110. Time: 78.7319 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #597: GFLOPs: 10689.9212. Time: 78.0292 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #598: GFLOPs: 10477.9785. Time: 79.6075 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #599: GFLOPs: 10436.6793. Time: 79.9225 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #600: GFLOPs: 10677.5819. Time: 78.1194 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #601: GFLOPs: 10472.2362. Time: 79.6512 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #602: GFLOPs: 10485.2582. Time: 79.5522 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #603: GFLOPs: 10571.2466. Time: 78.9052 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #604: GFLOPs: 10587.7336. Time: 78.7823 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #605: GFLOPs: 10617.8745. Time: 78.5586 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #606: GFLOPs: 10485.5226. Time: 79.5502 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #607: GFLOPs: 10674.9034. Time: 78.1390 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #608: GFLOPs: 10604.5932. Time: 78.6570 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #609: GFLOPs: 10622.8349. Time: 78.5220 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #610: GFLOPs: 10560.2459. Time: 78.9873 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #611: GFLOPs: 10465.2105. Time: 79.7046 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #612: GFLOPs: 10431.4173. Time: 79.9628 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #613: GFLOPs: 10402.9073. Time: 80.1820 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #614: GFLOPs: 10564.1684. Time: 78.9580 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #615: GFLOPs: 10636.2550. Time: 78.4229 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #616: GFLOPs: 10559.9124. Time: 78.9898 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #617: GFLOPs: 10614.7889. Time: 78.5815 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #618: GFLOPs: 10606.2874. Time: 78.6445 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #619: GFLOPs: 10619.5528. Time: 78.5462 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #620: GFLOPs: 10575.1465. Time: 78.8761 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #621: GFLOPs: 10583.6561. Time: 78.8126 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #622: GFLOPs: 10480.1597. Time: 79.5909 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #623: GFLOPs: 10461.2748. Time: 79.7346 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #624: GFLOPs: 10619.4721. Time: 78.5468 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #625: GFLOPs: 10344.6616. Time: 80.6335 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #626: GFLOPs: 10630.8304. Time: 78.4629 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #627: GFLOPs: 10418.2903. Time: 80.0636 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #628: GFLOPs: 10559.5225. Time: 78.9928 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #629: GFLOPs: 10599.4531. Time: 78.6952 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #630: GFLOPs: 10449.6615. Time: 79.8232 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #631: GFLOPs: 10501.4547. Time: 79.4296 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #632: GFLOPs: 10495.6396. Time: 79.4736 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #633: GFLOPs: 9600.6459. Time: 86.8823 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #634: GFLOPs: 10560.3504. Time: 78.9866 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #635: GFLOPs: 10298.1454. Time: 80.9977 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #636: GFLOPs: 10428.7118. Time: 79.9836 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #637: GFLOPs: 10497.2946. Time: 79.4610 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #638: GFLOPs: 639.0849. Time: 1305.1878 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #639: GFLOPs: 573.2190. Time: 1455.1609 us. Best GFLOPs: 10756.4904
2024-04-30 00:58:22 [INFO] [task_scheduler.cc:131] [Task #3: fused_nn_contrib_conv2d_winograd_without_weight_transform_add_nn_relu_2] Trial #640: GFLOPs: 5617.2737. Time: 148.4930 us. Best GFLOPs: 10756.4904
