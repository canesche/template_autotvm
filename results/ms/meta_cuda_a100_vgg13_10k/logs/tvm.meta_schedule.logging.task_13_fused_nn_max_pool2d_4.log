2024-04-29 17:02:33 [INFO] [task_scheduler.cc:160] Initializing Task #13: "fused_nn_max_pool2d_4"
2024-04-29 17:02:33 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        for ax0, ax1, ax2, ax3, rv0, rv1 in T.grid(T.int64(1), T.int64(512), T.int64(7), T.int64(7), T.int64(2), T.int64(2)):
            with T.block("pool_max"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_rv0, v_rv1 = T.axis.remap("SSSSRR", [ax0, ax1, ax2, ax3, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                T.block_attr({"schedule_rule": "meta_schedule.pool_max"})
                with T.init():
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
2024-04-29 17:02:33 [INFO] [task_scheduler.cc:164] Total 2 design space(s) generated
2024-04-29 17:02:33 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            for ax0_ax1_ax2_ax3_fused_0 in T.thread_binding(T.int64(25), thread="blockIdx.x"):
                for ax0_ax1_ax2_ax3_fused_1 in T.thread_binding(T.int64(1024), thread="threadIdx.x"):
                    for rv0, rv1 in T.grid(T.int64(2), T.int64(2)):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(512), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) // T.int64(49))
                            v_ax2 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) % T.int64(49) // T.int64(7))
                            v_ax3 = T.axis.spatial(T.int64(7), (ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1) % T.int64(7))
                            v_rv0, v_rv1 = T.axis.remap("RR", [rv0, rv1])
                            T.where(ax0_ax1_ax2_ax3_fused_0 * T.int64(1024) + ax0_ax1_ax2_ax3_fused_1 < T.int64(25088))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v2)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l3, l4, l5, l6, preserve_unit_iters=True)
v10 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512, 1024], probs=[0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666], decision=5)
l11, l12 = sch.split(loop=l9, factors=[None, v10], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="blockIdx.x")
sch.bind(loop=l12, thread_axis="threadIdx.x")
2024-04-29 17:02:33 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(512), T.int64(14), T.int64(14)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(512), T.int64(7), T.int64(7)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 1024})
            for ax0_ax1_ax2_ax3_fused in T.thread_binding(T.int64(25088), thread="blockIdx.x"):
                for rv0_rv1_fused_0 in range(T.int64(1)):
                    for rv0_rv1_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                        with T.block("pool_max"):
                            v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_ax1 = T.axis.spatial(T.int64(512), ax0_ax1_ax2_ax3_fused // T.int64(49))
                            v_ax2 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(49) // T.int64(7))
                            v_ax3 = T.axis.spatial(T.int64(7), ax0_ax1_ax2_ax3_fused % T.int64(7))
                            v_rv0 = T.axis.reduce(T.int64(2), (rv0_rv1_fused_0 * T.int64(64) + rv0_rv1_fused_1) // T.int64(2))
                            v_rv1 = T.axis.reduce(T.int64(2), (rv0_rv1_fused_0 * T.int64(64) + rv0_rv1_fused_1) % T.int64(2))
                            T.where(rv0_rv1_fused_0 * T.int64(64) + rv0_rv1_fused_1 < T.int64(4))
                            T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
                            T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3])
                            with T.init():
                                pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.float32(-3.4028234663852886e+38)
                            pool_max[v_ax0, v_ax1, v_ax2, v_ax3] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3], p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1])
b0 = sch.get_block(name="pool_max", func_name="main")
b1 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b0, ann_key="schedule_rule")
v2 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=4)
l3, l4, l5, l6, l7, l8 = sch.get_loops(block=b0)
l9 = sch.fuse(l7, l8, preserve_unit_iters=True)
l10, l11 = sch.split(loop=l9, factors=[None, v2], preserve_unit_iters=True)
sch.bind(loop=l11, thread_axis="threadIdx.x")
v12 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=4)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.unroll_explicit", ann_val=v12)
l13, l14, l15, l16, l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l13, l14, l15, l16, preserve_unit_iters=True)
sch.bind(loop=l19, thread_axis="blockIdx.x")
2024-04-29 17:38:28 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 17:38:28 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 17:38:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4bcc78)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7659308)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb54db08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4547748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x93abae8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb4e4a38)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb54dad8)]: 0 failure(s)
2024-04-29 17:38:28 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 17:38:28 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4bcc78)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7659308)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb54db08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4547748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x93abae8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb4e4a38)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb54dad8)]: 0 failure(s)
2024-04-29 17:38:29 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4bcc78)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7659308)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb54db08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4547748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x93abae8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb4e4a38)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb54dad8)]: 0 failure(s)
2024-04-29 17:38:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4bcc78)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7659308)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb54db08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4547748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x93abae8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb4e4a38)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb54dad8)]: 0 failure(s)
2024-04-29 17:38:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0xb4bcc78)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x7659308)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0xb54db08)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x4547748)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x93abae8)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0xb4e4a38)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0xb54dad8)]: 0 failure(s)
2024-04-29 17:38:29 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9939  0.9847  0.9705  0.9618  0.9613  0.9595  0.9509  0.8997  0.8820  0.8769  0.8539  0.8516  0.8483  0.8432  0.8398  0.8241
[17 : 32]:	0.8224  0.7893  0.7853  0.7715  0.7461  0.7303  0.7251  0.7136  0.6735  0.6601  0.6453  0.6440  0.6028  0.5734  0.5725  0.5663
[33 : 48]:	0.5650  0.5613  0.5611  0.5519  0.5070  0.4919  0.4743  0.4345  0.4267  0.4140  0.4131  0.3951  0.3943  0.3707  0.3597  0.3451
[49 : 64]:	0.3331  0.3228  0.2938  0.2938  0.2666  0.2603  0.2118  0.2116  0.1898  0.1892  0.1858  0.1693  0.1680  0.1408  0.1165  0.1158
2024-04-29 17:38:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 17:38:29 [INFO] [evolutionary_search.cc:730] Sending 61 candidates(s) for measurement
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #1: GFLOPs: 4.5937. Time: 21.8456 us. Best GFLOPs: 4.5937
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #2: GFLOPs: 4.5953. Time: 21.8382 us. Best GFLOPs: 4.5953
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #3: GFLOPs: 1.9578. Time: 51.2588 us. Best GFLOPs: 4.5953
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #4: GFLOPs: 4.6522. Time: 21.5710 us. Best GFLOPs: 4.6522
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #5: GFLOPs: 35.2739. Time: 2.8449 us. Best GFLOPs: 35.2739
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #6: GFLOPs: 4.5940. Time: 21.8444 us. Best GFLOPs: 35.2739
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #7: GFLOPs: 29.3562. Time: 3.4184 us. Best GFLOPs: 35.2739
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #8: GFLOPs: 4.6069. Time: 21.7829 us. Best GFLOPs: 35.2739
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #9: GFLOPs: 35.2766. Time: 2.8447 us. Best GFLOPs: 35.2766
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #10: GFLOPs: 35.2767. Time: 2.8447 us. Best GFLOPs: 35.2767
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #11: GFLOPs: 4.6517. Time: 21.5733 us. Best GFLOPs: 35.2767
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #12: GFLOPs: 4.5949. Time: 21.8400 us. Best GFLOPs: 35.2767
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #13: GFLOPs: 31.7696. Time: 3.1587 us. Best GFLOPs: 35.2767
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #14: GFLOPs: 29.3588. Time: 3.4181 us. Best GFLOPs: 35.2767
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #15: GFLOPs: 4.6079. Time: 21.7784 us. Best GFLOPs: 35.2767
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #16: GFLOPs: 31.7192. Time: 3.1638 us. Best GFLOPs: 35.2767
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #17: GFLOPs: 4.6520. Time: 21.5718 us. Best GFLOPs: 35.2767
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #18: GFLOPs: 35.2798. Time: 2.8445 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #19: GFLOPs: 35.2773. Time: 2.8447 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #20: GFLOPs: 3.7269. Time: 26.9262 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #21: GFLOPs: 4.6876. Time: 21.4079 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #22: GFLOPs: 4.6520. Time: 21.5720 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #23: GFLOPs: 3.7269. Time: 26.9267 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #24: GFLOPs: 3.7274. Time: 26.9226 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #25: GFLOPs: 31.7843. Time: 3.1573 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #26: GFLOPs: 4.5952. Time: 21.8386 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #27: GFLOPs: 4.5932. Time: 21.8482 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #28: GFLOPs: 34.5963. Time: 2.9007 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #29: GFLOPs: 31.7676. Time: 3.1589 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #30: GFLOPs: 1.9578. Time: 51.2582 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #31: GFLOPs: 4.5955. Time: 21.8372 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #32: GFLOPs: 4.6090. Time: 21.7730 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #33: GFLOPs: 1.9579. Time: 51.2539 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #34: GFLOPs: 4.7245. Time: 21.2410 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #35: GFLOPs: 29.4757. Time: 3.4046 us. Best GFLOPs: 35.2798
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #36: GFLOPs: 35.2810. Time: 2.8444 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #37: GFLOPs: 35.2810. Time: 2.8444 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #38: GFLOPs: 30.7071. Time: 3.2680 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #39: GFLOPs: 4.6084. Time: 21.7758 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #40: GFLOPs: 4.7241. Time: 21.2428 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #41: GFLOPs: 29.3525. Time: 3.4189 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #42: GFLOPs: 4.6871. Time: 21.4105 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #43: GFLOPs: 4.6073. Time: 21.7809 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #44: GFLOPs: 30.7027. Time: 3.2685 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #45: GFLOPs: 30.6482. Time: 3.2743 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #46: GFLOPs: 4.6880. Time: 21.4062 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #47: GFLOPs: 35.2789. Time: 2.8445 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #48: GFLOPs: 30.6866. Time: 3.2702 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #49: GFLOPs: 34.5943. Time: 2.9008 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #50: GFLOPs: 4.5942. Time: 21.8431 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #51: GFLOPs: 35.2531. Time: 2.8466 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #52: GFLOPs: 4.7248. Time: 21.2395 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #53: GFLOPs: 34.5957. Time: 2.9007 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #54: GFLOPs: 3.7272. Time: 26.9242 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #55: GFLOPs: 4.7243. Time: 21.2416 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #56: GFLOPs: 35.2779. Time: 2.8446 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #57: GFLOPs: 4.6523. Time: 21.5704 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #58: GFLOPs: 3.7271. Time: 26.9249 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #59: GFLOPs: 31.7632. Time: 3.1594 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #60: GFLOPs: 1.9577. Time: 51.2595 us. Best GFLOPs: 35.2810
2024-04-29 17:45:17 [INFO] [task_scheduler.cc:131] [Task #13: fused_nn_max_pool2d_4] Trial #61: GFLOPs: 29.3611. Time: 3.4179 us. Best GFLOPs: 35.2810
