2024-04-28 23:45:51 [INFO] [task_scheduler.cc:160] Initializing Task #27: "fused_nn_softmax"
2024-04-28 23:45:51 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
        T_softmax_exp = T.alloc_buffer((T.int64(1), T.int64(1000)))
        T_softmax_expsum = T.alloc_buffer((T.int64(1),))
        for i0, k in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_maxelem"):
                v_i0, v_k = T.axis.remap("SR", [i0, k])
                T.reads(p0[v_i0, v_k])
                T.writes(T_softmax_maxelem[v_i0])
                with T.init():
                    T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
        for i0, i1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_exp"):
                v_i0, v_i1 = T.axis.remap("SS", [i0, i1])
                T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0])
                T.writes(T_softmax_exp[v_i0, v_i1])
                T_softmax_exp[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0])
        for i0, k in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_expsum"):
                v_i0, v_k = T.axis.remap("SR", [i0, k])
                T.reads(T_softmax_exp[v_i0, v_k])
                T.writes(T_softmax_expsum[v_i0])
                with T.init():
                    T_softmax_expsum[v_i0] = T.float32(0)
                T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T_softmax_exp[v_i0, v_k]
        for i0, i1 in T.grid(T.int64(1), T.int64(1000)):
            with T.block("T_softmax_norm"):
                v_i0, v_i1 = T.axis.remap("SS", [i0, i1])
                T.reads(T_softmax_exp[v_i0, v_i1], T_softmax_expsum[v_i0])
                T.writes(T_softmax_norm[v_i0, v_i1])
                T.block_attr({"axis": 1})
                T_softmax_norm[v_i0, v_i1] = T_softmax_exp[v_i0, v_i1] / T_softmax_expsum[v_i0]
2024-04-28 23:45:51 [INFO] [task_scheduler.cc:164] Total 4 design space(s) generated
2024-04-28 23:45:51 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 16})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum = T.alloc_buffer((T.int64(1),))
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum[v_i0])
                            with T.init():
                                T_softmax_expsum[v_i0] = T.float32(0)
                            T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
            for i0_i1_fused_0 in T.thread_binding(T.int64(32), thread="blockIdx.x"):
                for i0_i1_fused_1 in T.thread_binding(T.int64(32), thread="threadIdx.x"):
                    with T.block("T_softmax_norm"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(1000), i0_i1_fused_0 * T.int64(32) + i0_i1_fused_1)
                        T.where(i0_i1_fused_0 * T.int64(32) + i0_i1_fused_1 < T.int64(1000))
                        T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum[v_i0])
                        T.writes(T_softmax_norm[v_i0, v_i1])
                        T.block_attr({"axis": 1})
                        T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
v5 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v5)
l6, l7 = sch.get_loops(block=b3)
l8 = sch.fuse(l6, l7, preserve_unit_iters=True)
v9 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
l10, l11 = sch.split(loop=l8, factors=[None, v9], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="blockIdx.x")
sch.bind(loop=l11, thread_axis="threadIdx.x")
l12, l13 = sch.get_loops(block=b2)
l14 = sch.fuse(l12, preserve_unit_iters=True)
l15, l16 = sch.split(loop=l14, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="blockIdx.x")
sch.bind(loop=l16, thread_axis="threadIdx.x")
l17, l18 = sch.get_loops(block=b0)
l19 = sch.fuse(l17, preserve_unit_iters=True)
l20, l21 = sch.split(loop=l19, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
2024-04-28 23:45:51 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 64})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum = T.alloc_buffer((T.int64(1),))
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for k_0 in range(T.int64(2)):
                    for k_1 in T.thread_binding(T.int64(512), thread="threadIdx.x"):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k_0 * T.int64(512) + k_1)
                            T.where(k_0 * T.int64(512) + k_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum[v_i0])
                            with T.init():
                                T_softmax_expsum[v_i0] = T.float32(0)
                            T_softmax_expsum[v_i0] = T_softmax_expsum[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
            for i0_i1_fused_0 in T.thread_binding(T.int64(16), thread="blockIdx.x"):
                for i0_i1_fused_1 in T.thread_binding(T.int64(64), thread="threadIdx.x"):
                    with T.block("T_softmax_norm"):
                        v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                        v_i1 = T.axis.spatial(T.int64(1000), i0_i1_fused_0 * T.int64(64) + i0_i1_fused_1)
                        T.where(i0_i1_fused_0 * T.int64(64) + i0_i1_fused_1 < T.int64(1000))
                        T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum[v_i0])
                        T.writes(T_softmax_norm[v_i0, v_i1])
                        T.block_attr({"axis": 1})
                        T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
v5 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=7)
l6, l7 = sch.get_loops(block=b0)
l8, l9 = sch.split(loop=l7, factors=[None, v5], preserve_unit_iters=True)
sch.bind(loop=l9, thread_axis="threadIdx.x")
v10 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=2)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v10)
l11, l12 = sch.get_loops(block=b3)
l13 = sch.fuse(l11, l12, preserve_unit_iters=True)
v14 = sch.sample_categorical(candidates=[32, 64, 128, 256, 512], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=1)
l15, l16 = sch.split(loop=l13, factors=[None, v14], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="blockIdx.x")
sch.bind(loop=l16, thread_axis="threadIdx.x")
l17, l18 = sch.get_loops(block=b2)
l19 = sch.fuse(l17, preserve_unit_iters=True)
l20, l21 = sch.split(loop=l19, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
sch.bind(loop=l21, thread_axis="threadIdx.x")
l22, l23, l24 = sch.get_loops(block=b0)
l25 = sch.fuse(l22, preserve_unit_iters=True)
sch.bind(loop=l25, thread_axis="blockIdx.x")
2024-04-28 23:45:51 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 0})
            T_softmax_maxelem = T.alloc_buffer((T.int64(1),))
            T_softmax_expsum_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            for i0_fused_0 in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for i0_fused_1 in T.thread_binding(T.int64(1), thread="threadIdx.x"):
                    for k in range(T.int64(1000)):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_k = T.axis.reduce(T.int64(1000), k)
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem[v_i0])
                            with T.init():
                                T_softmax_maxelem[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem[v_i0] = T.max(T_softmax_maxelem[v_i0], p0[v_i0, v_k])
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(63)):
                    for ax1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(16) + ax1_1)
                            T.where(ax1_0 * T.int64(16) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem[v_i0])
                            T.writes(T_softmax_expsum_shared[v_i0])
                            with T.init():
                                T_softmax_expsum_shared[v_i0] = T.float32(0)
                            T_softmax_expsum_shared[v_i0] = T_softmax_expsum_shared[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem[v_i0])
                for i1_0 in range(T.int64(63)):
                    for i1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_norm"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_i1 = T.axis.spatial(T.int64(1000), i1_0 * T.int64(16) + i1_1)
                            T.where(i1_0 * T.int64(16) + i1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_i1], T_softmax_maxelem[v_i0], T_softmax_expsum_shared[v_i0])
                            T.writes(T_softmax_norm[v_i0, v_i1])
                            T.block_attr({"axis": 1})
                            T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem[v_i0]) / T_softmax_expsum_shared[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
b5, = sch.get_consumers(block=b2)
l6, l7 = sch.get_loops(block=b5)
v8 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=2)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="threadIdx.x")
sch.compute_at(block=b2, loop=l6, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="shared")
l11, l12, l13 = sch.get_loops(block=b2)
l14, l15 = sch.split(loop=l13, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="threadIdx.x")
v16 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=0)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v16)
l17, l18, l19 = sch.get_loops(block=b3)
l20 = sch.fuse(l17, preserve_unit_iters=True)
sch.bind(loop=l20, thread_axis="blockIdx.x")
l21, l22 = sch.get_loops(block=b0)
l23 = sch.fuse(l21, preserve_unit_iters=True)
l24, l25 = sch.split(loop=l23, factors=[None, 1], preserve_unit_iters=True)
sch.bind(loop=l24, thread_axis="blockIdx.x")
sch.bind(loop=l25, thread_axis="threadIdx.x")
2024-04-28 23:45:51 [INFO] [task_scheduler.cc:170] Design space #3:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1000)), "float32"), T_softmax_norm: T.Buffer((T.int64(1), T.int64(1000)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.unroll_explicit": 512})
            T_softmax_maxelem_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            T_softmax_expsum_shared = T.alloc_buffer((T.int64(1),), scope="shared")
            for i0_fused in T.thread_binding(T.int64(1), thread="blockIdx.x"):
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(63)):
                    for ax1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_maxelem"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(16) + ax1_1)
                            T.where(ax1_0 * T.int64(16) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k])
                            T.writes(T_softmax_maxelem_shared[v_i0])
                            with T.init():
                                T_softmax_maxelem_shared[v_i0] = T.float32(-3.4028234663852886e+38)
                            T_softmax_maxelem_shared[v_i0] = T.max(T_softmax_maxelem_shared[v_i0], p0[v_i0, v_k])
                for ax0, ax1_0 in T.grid(T.int64(1), T.int64(63)):
                    for ax1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_expsum"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_k = T.axis.reduce(T.int64(1000), ax1_0 * T.int64(16) + ax1_1)
                            T.where(ax1_0 * T.int64(16) + ax1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_k], T_softmax_maxelem_shared[v_i0])
                            T.writes(T_softmax_expsum_shared[v_i0])
                            with T.init():
                                T_softmax_expsum_shared[v_i0] = T.float32(0)
                            T_softmax_expsum_shared[v_i0] = T_softmax_expsum_shared[v_i0] + T.exp(p0[v_i0, v_k] - T_softmax_maxelem_shared[v_i0])
                for i1_0 in range(T.int64(63)):
                    for i1_1 in T.thread_binding(T.int64(16), thread="threadIdx.x"):
                        with T.block("T_softmax_norm"):
                            v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                            v_i1 = T.axis.spatial(T.int64(1000), i1_0 * T.int64(16) + i1_1)
                            T.where(i1_0 * T.int64(16) + i1_1 < T.int64(1000))
                            T.reads(p0[v_i0, v_i1], T_softmax_maxelem_shared[v_i0], T_softmax_expsum_shared[v_i0])
                            T.writes(T_softmax_norm[v_i0, v_i1])
                            T.block_attr({"axis": 1})
                            T_softmax_norm[v_i0, v_i1] = T.exp(p0[v_i0, v_i1] - T_softmax_maxelem_shared[v_i0]) / T_softmax_expsum_shared[v_i0]
b0 = sch.get_block(name="T_softmax_maxelem", func_name="main")
b1 = sch.get_block(name="T_softmax_exp", func_name="main")
b2 = sch.get_block(name="T_softmax_expsum", func_name="main")
b3 = sch.get_block(name="T_softmax_norm", func_name="main")
b4 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
b5, = sch.get_consumers(block=b2)
l6, l7 = sch.get_loops(block=b5)
v8 = sch.sample_categorical(candidates=[4, 8, 16, 32, 64, 128, 256, 512], probs=[0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125], decision=2)
l9, l10 = sch.split(loop=l7, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l10, thread_axis="threadIdx.x")
sch.compute_at(block=b2, loop=l6, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b2, buffer_index=0, storage_scope="shared")
l11, l12, l13 = sch.get_loops(block=b2)
l14, l15 = sch.split(loop=l13, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l15, thread_axis="threadIdx.x")
b16, b17 = sch.get_consumers(block=b0)
l18, l19, l20, l21 = sch.get_loops(block=b16)
sch.compute_at(block=b0, loop=l18, preserve_unit_loops=True, index=-1)
sch.set_scope(block=b0, buffer_index=0, storage_scope="shared")
l22, l23, l24 = sch.get_loops(block=b0)
l25, l26 = sch.split(loop=l24, factors=[None, v8], preserve_unit_iters=True)
sch.bind(loop=l26, thread_axis="threadIdx.x")
v27 = sch.sample_categorical(candidates=[0, 16, 64, 512, 1024], probs=[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], decision=3)
sch.annotate(block_or_loop=b4, ann_key="meta_schedule.unroll_explicit", ann_val=v27)
l28, l29, l30 = sch.get_loops(block=b3)
l31 = sch.fuse(l28, preserve_unit_iters=True)
sch.bind(loop=l31, thread_axis="blockIdx.x")
2024-04-29 00:20:07 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:20:07 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 00:20:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 00:20:07 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 00:20:08 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 00:20:08 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 00:20:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 00:20:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 00:20:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9978  0.9948  0.9866  0.9836  0.9788  0.9728  0.9715  0.9647  0.9540  0.9520  0.9428  0.9388  0.9376  0.9351  0.9262  0.9256
[17 : 32]:	0.9219  0.9186  0.9142  0.9127  0.9115  0.9113  0.9101  0.9077  0.9075  0.8988  0.8938  0.8893  0.8878  0.8872  0.8778  0.8770
[33 : 48]:	0.8761  0.8749  0.8687  0.8622  0.8489  0.8477  0.8464  0.8462  0.8374  0.8344  0.8273  0.8246  0.8231  0.8150  0.8144  0.8143
[49 : 64]:	0.8097  0.7989  0.7927  0.7780  0.7647  0.7635  0.7634  0.7594  0.7577  0.7547  0.7505  0.7429  0.7420  0.7410  0.7407  0.7300
2024-04-29 00:20:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:20:09 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #1: GFLOPs: 0.1086. Time: 36.8198 us. Best GFLOPs: 0.1086
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #2: GFLOPs: 0.1077. Time: 37.1493 us. Best GFLOPs: 0.1086
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #3: GFLOPs: 0.0861. Time: 46.4556 us. Best GFLOPs: 0.1086
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #4: GFLOPs: 0.1094. Time: 36.5645 us. Best GFLOPs: 0.1094
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #5: GFLOPs: 0.2416. Time: 16.5549 us. Best GFLOPs: 0.2416
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #6: GFLOPs: 0.1085. Time: 36.8629 us. Best GFLOPs: 0.2416
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #7: GFLOPs: 0.1339. Time: 29.8648 us. Best GFLOPs: 0.2416
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #8: GFLOPs: 0.1345. Time: 29.7445 us. Best GFLOPs: 0.2416
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #9: GFLOPs: 0.1082. Time: 36.9838 us. Best GFLOPs: 0.2416
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #10: GFLOPs: 0.1548. Time: 25.8320 us. Best GFLOPs: 0.2416
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #11: GFLOPs: 0.1058. Time: 37.8072 us. Best GFLOPs: 0.2416
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #12: GFLOPs: 1.1424. Time: 3.5014 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #13: GFLOPs: 0.1077. Time: 37.1488 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #14: GFLOPs: 0.1088. Time: 36.7763 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #15: GFLOPs: 0.1075. Time: 37.2114 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #16: GFLOPs: 0.2274. Time: 17.5930 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #17: GFLOPs: 0.0957. Time: 41.7859 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #18: GFLOPs: 0.2549. Time: 15.6927 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #19: GFLOPs: 0.7228. Time: 5.5337 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #20: GFLOPs: 0.2416. Time: 16.5586 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #21: GFLOPs: 0.2379. Time: 16.8163 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #22: GFLOPs: 0.1073. Time: 37.2715 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #23: GFLOPs: 0.1086. Time: 36.8345 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #24: GFLOPs: 0.1559. Time: 25.6590 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #25: GFLOPs: 0.1555. Time: 25.7230 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #26: GFLOPs: 0.1081. Time: 36.9929 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #27: GFLOPs: 0.1866. Time: 21.4334 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #28: GFLOPs: 0.1054. Time: 37.9376 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #29: GFLOPs: 0.1468. Time: 27.2512 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #30: GFLOPs: 0.1256. Time: 31.8381 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #31: GFLOPs: 0.1055. Time: 37.9247 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #32: GFLOPs: 0.1563. Time: 25.5992 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #33: GFLOPs: 0.2774. Time: 14.4196 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #34: GFLOPs: 0.1561. Time: 25.6213 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #35: GFLOPs: 0.4770. Time: 8.3852 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #36: GFLOPs: 0.1068. Time: 37.4591 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #37: GFLOPs: 0.1094. Time: 36.5609 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #38: GFLOPs: 0.9040. Time: 4.4246 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #39: GFLOPs: 0.1086. Time: 36.8231 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #40: GFLOPs: 0.0892. Time: 44.8476 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #41: GFLOPs: 0.1208. Time: 33.1127 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #42: GFLOPs: 1.1228. Time: 3.5625 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #43: GFLOPs: 0.1206. Time: 33.1647 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #44: GFLOPs: 0.0861. Time: 46.4825 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #45: GFLOPs: 0.1562. Time: 25.6158 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #46: GFLOPs: 0.9012. Time: 4.4387 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #47: GFLOPs: 0.0860. Time: 46.4948 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #48: GFLOPs: 0.1094. Time: 36.5509 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #49: GFLOPs: 0.1086. Time: 36.8489 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #50: GFLOPs: 0.1508. Time: 26.5169 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #51: GFLOPs: 0.1085. Time: 36.8550 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #52: GFLOPs: 0.2589. Time: 15.4508 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #53: GFLOPs: 0.1081. Time: 36.9992 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #54: GFLOPs: 0.1576. Time: 25.3844 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #55: GFLOPs: 0.1077. Time: 37.1260 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #56: GFLOPs: 0.1524. Time: 26.2540 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #57: GFLOPs: 0.1563. Time: 25.5949 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #58: GFLOPs: 0.1094. Time: 36.5517 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #59: GFLOPs: 0.0862. Time: 46.4191 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #60: GFLOPs: 1.0580. Time: 3.7808 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #61: GFLOPs: 0.3581. Time: 11.1691 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #62: GFLOPs: 1.0577. Time: 3.7816 us. Best GFLOPs: 1.1424
2024-04-29 00:21:57 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #63: GFLOPs: 0.1073. Time: 37.2873 us. Best GFLOPs: 1.1424
2024-04-29 02:50:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:50:15 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 02:50:16 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 02:50:16 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 02:50:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 02:50:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 02:50:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 02:50:22 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 02:50:23 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9612  0.9305  0.8775  0.8300  0.8294  0.8216  0.8205  0.8176  0.8060  0.7934  0.7867  0.7747  0.7129  0.7003  0.5598  0.5024
[17 : 32]:	0.4677  0.4490  0.3950  0.3912  0.3693  0.3637  0.3617  0.3599  0.3588  0.3535  0.3533  0.3479  0.3471  0.3414  0.3392  0.3336
[33 : 48]:	0.3291  0.3242  0.3176  0.3149  0.2866  0.2750  0.2641  0.2609  0.2520  0.2160  0.2105  0.1887  0.1845  0.1834  0.1788  0.1707
[49 : 64]:	0.1698  0.1663  0.1662  0.1659  0.1652  0.1641  0.1637  0.1629  0.1627  0.1596  0.1572  0.1569  0.1539  0.1528  0.1528  0.1525
2024-04-29 02:50:23 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:50:23 [INFO] [evolutionary_search.cc:730] Sending 62 candidates(s) for measurement
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #64: GFLOPs: 0.9702. Time: 4.1227 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #65: GFLOPs: 1.0688. Time: 3.7426 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #66: GFLOPs: 0.8696. Time: 4.5997 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #67: GFLOPs: 0.8694. Time: 4.6011 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #68: GFLOPs: 0.7533. Time: 5.3098 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #69: GFLOPs: 1.0450. Time: 3.8277 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #70: GFLOPs: 1.0440. Time: 3.8313 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #71: GFLOPs: 0.6561. Time: 6.0970 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #72: GFLOPs: 0.9735. Time: 4.1088 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #73: GFLOPs: 0.9736. Time: 4.1085 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #74: GFLOPs: 0.8794. Time: 4.5488 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #75: GFLOPs: 0.5077. Time: 7.8781 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #76: GFLOPs: 1.0927. Time: 3.6608 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #77: GFLOPs: 1.0923. Time: 3.6619 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #78: GFLOPs: 0.6923. Time: 5.7777 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #79: GFLOPs: 0.6923. Time: 5.7781 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #80: GFLOPs: 0.4541. Time: 8.8083 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #81: GFLOPs: 0.2217. Time: 18.0401 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #82: GFLOPs: 0.2562. Time: 15.6118 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #83: GFLOPs: 0.2515. Time: 15.9059 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #84: GFLOPs: 0.4816. Time: 8.3062 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #85: GFLOPs: 0.2562. Time: 15.6100 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #86: GFLOPs: 0.2479. Time: 16.1326 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #87: GFLOPs: 0.2522. Time: 15.8587 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #88: GFLOPs: 0.2487. Time: 16.0860 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #89: GFLOPs: 0.2356. Time: 16.9767 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #90: GFLOPs: 0.2315. Time: 17.2818 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #91: GFLOPs: 0.2521. Time: 15.8690 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #92: GFLOPs: 0.2490. Time: 16.0616 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #93: GFLOPs: 0.2799. Time: 14.2933 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #94: GFLOPs: 0.2250. Time: 17.7743 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #95: GFLOPs: 0.2776. Time: 14.4095 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #96: GFLOPs: 0.2521. Time: 15.8667 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #97: GFLOPs: 0.2191. Time: 18.2550 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #98: GFLOPs: 0.2191. Time: 18.2562 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #99: GFLOPs: 0.2778. Time: 14.3992 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #100: GFLOPs: 0.2150. Time: 18.6021 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #101: GFLOPs: 0.1829. Time: 21.8686 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #102: GFLOPs: 0.2288. Time: 17.4835 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #103: GFLOPs: 0.1949. Time: 20.5258 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #104: GFLOPs: 0.2477. Time: 16.1484 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #105: GFLOPs: 0.2160. Time: 18.5193 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #106: GFLOPs: 0.1496. Time: 26.7398 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #107: GFLOPs: 0.1124. Time: 35.5784 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #108: GFLOPs: 0.1070. Time: 37.3821 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #109: GFLOPs: 0.1066. Time: 37.5087 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #110: GFLOPs: 0.1439. Time: 27.8051 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #111: GFLOPs: 0.1508. Time: 26.5274 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #112: GFLOPs: 0.1067. Time: 37.5041 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #113: GFLOPs: 0.1066. Time: 37.5192 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #114: GFLOPs: 0.1066. Time: 37.5088 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #115: GFLOPs: 0.1067. Time: 37.5004 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #116: GFLOPs: 0.0720. Time: 55.5892 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #117: GFLOPs: 0.1069. Time: 37.4032 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #118: GFLOPs: 0.1075. Time: 37.2077 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #119: GFLOPs: 0.1068. Time: 37.4592 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #120: GFLOPs: 0.1067. Time: 37.4832 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #121: GFLOPs: 0.1074. Time: 37.2277 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #122: GFLOPs: 0.1066. Time: 37.5260 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #123: GFLOPs: 0.1073. Time: 37.2613 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #124: GFLOPs: 0.1082. Time: 36.9751 us. Best GFLOPs: 1.1424
2024-04-29 02:51:25 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #125: GFLOPs: 0.0856. Time: 46.7312 us. Best GFLOPs: 1.1424
2024-04-29 05:10:01 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:10:01 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:10:02 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 05:10:02 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:10:03 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 05:10:05 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 05:10:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 05:10:08 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x36ed758)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteCooperativeFetch(0x43cce28)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteUnboundBlock(0x45f9148)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a23d08)]: 0 failure(s)
Postproc #4 [meta_schedule.RewriteReductionBlock(0x174ef88)]: 0 failure(s)
Postproc #5 [meta_schedule.VerifyGPUCode(0x4878718)]: 0 failure(s)
Postproc #6 [meta_schedule.RewriteTensorize(0x43cc948)]: 0 failure(s)
2024-04-29 05:10:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.1906  0.1724  0.1688  0.1671  0.1653  0.1642  0.1636  0.1619  0.1608  0.1583  0.1535  0.1508  0.1489  0.1482  0.1449  0.1448
[17 : 32]:	0.1422  0.1414  0.1399  0.1369  0.1367  0.1363  0.1330  0.1322  0.1315  0.1314  0.1256  0.1254  0.1193  0.1182  0.1163  0.1151
[33 : 48]:	0.1133  0.1131  0.1116  0.1115  0.1115  0.1109  0.1107  0.1107  0.1087  0.1085  0.1078  0.1078  0.1077  0.1071  0.1057  0.1056
[49 : 64]:	0.1050  0.1048  0.1028  0.1026  0.0997  0.0960  0.0957  0.0922  0.0915  0.0898  0.0863  0.0849  0.0763  0.0762  0.0690  0.0672
2024-04-29 05:10:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:10:09 [INFO] [evolutionary_search.cc:730] Sending 62 candidates(s) for measurement
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #126: GFLOPs: 0.1894. Time: 21.1139 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #127: GFLOPs: 0.1547. Time: 25.8644 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #128: GFLOPs: 0.1098. Time: 36.4457 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #129: GFLOPs: 0.1544. Time: 25.9039 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #130: GFLOPs: 0.1097. Time: 36.4521 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #131: GFLOPs: 0.1102. Time: 36.3079 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #132: GFLOPs: 0.1095. Time: 36.5365 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #133: GFLOPs: 0.1548. Time: 25.8467 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #134: GFLOPs: 0.1105. Time: 36.2097 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #135: GFLOPs: 0.1099. Time: 36.3876 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #136: GFLOPs: 0.1101. Time: 36.3453 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #137: GFLOPs: 0.1089. Time: 36.7334 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #138: GFLOPs: 0.1104. Time: 36.2182 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #139: GFLOPs: 0.1100. Time: 36.3678 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #140: GFLOPs: 0.1105. Time: 36.2143 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #141: GFLOPs: 0.1099. Time: 36.3853 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #142: GFLOPs: 0.1558. Time: 25.6757 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #143: GFLOPs: 0.1513. Time: 26.4302 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #144: GFLOPs: 0.1358. Time: 29.4503 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #145: GFLOPs: 0.1558. Time: 25.6775 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #146: GFLOPs: 0.1097. Time: 36.4490 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #147: GFLOPs: 0.1561. Time: 25.6202 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #148: GFLOPs: 0.1099. Time: 36.3925 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #149: GFLOPs: 0.1092. Time: 36.6240 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #150: GFLOPs: 0.1100. Time: 36.3580 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #151: GFLOPs: 0.1091. Time: 36.6495 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #152: GFLOPs: 0.1101. Time: 36.3254 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #153: GFLOPs: 0.1103. Time: 36.2705 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #154: GFLOPs: 0.1555. Time: 25.7223 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #155: GFLOPs: 0.1102. Time: 36.2875 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #156: GFLOPs: 0.1105. Time: 36.2056 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #157: GFLOPs: 0.1104. Time: 36.2477 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #158: GFLOPs: 0.1093. Time: 36.5935 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #159: GFLOPs: 0.1089. Time: 36.7360 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #160: GFLOPs: 0.1099. Time: 36.4001 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #161: GFLOPs: 0.1105. Time: 36.2124 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #162: GFLOPs: 0.1105. Time: 36.2101 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #163: GFLOPs: 0.1102. Time: 36.3110 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #164: GFLOPs: 0.1093. Time: 36.5921 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #165: GFLOPs: 0.1103. Time: 36.2744 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #166: GFLOPs: 0.1100. Time: 36.3748 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #167: GFLOPs: 0.1093. Time: 36.5943 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #168: GFLOPs: 0.1088. Time: 36.7611 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #169: GFLOPs: 0.1836. Time: 21.7824 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #170: GFLOPs: 0.1105. Time: 36.2143 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #171: GFLOPs: 0.1354. Time: 29.5500 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #172: GFLOPs: 0.1104. Time: 36.2159 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #173: GFLOPs: 0.1103. Time: 36.2791 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #174: GFLOPs: 0.1469. Time: 27.2234 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #175: GFLOPs: 0.1091. Time: 36.6585 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #176: GFLOPs: 0.1098. Time: 36.4368 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #177: GFLOPs: 0.1091. Time: 36.6594 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #178: GFLOPs: 0.1464. Time: 27.3188 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #179: GFLOPs: 0.1104. Time: 36.2356 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #180: GFLOPs: 0.1105. Time: 36.2154 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #181: GFLOPs: 0.1104. Time: 36.2396 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #182: GFLOPs: 0.1100. Time: 36.3629 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #183: GFLOPs: 0.1479. Time: 27.0394 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #184: GFLOPs: 0.1572. Time: 25.4384 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #185: GFLOPs: 0.1107. Time: 36.1455 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #186: GFLOPs: 0.1104. Time: 36.2306 us. Best GFLOPs: 1.1424
2024-04-29 05:11:13 [INFO] [task_scheduler.cc:131] [Task #27: fused_nn_softmax] Trial #187: GFLOPs: 0.0871. Time: 45.9146 us. Best GFLOPs: 1.1424
