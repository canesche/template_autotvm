2024-04-29 01:54:31 [INFO] [task_scheduler.cc:160] Initializing Task #7: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5"
2024-04-29 01:54:31 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4), T.int64(64), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 01:54:31 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 01:54:31 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(55), T.int64(55), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(55), oh_0 + oh_1 + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(55), ow_0 + ow_1 + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[55, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[55, 1, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[2, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 01:54:31 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(55), T.int64(55), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), ow_0 + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), oc_chunk_1 + ax1)
                        v_ax2 = T.axis.spatial(T.int64(55), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(55), ow_0 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[55, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[55, 1, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[2, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 01:54:31 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(55), T.int64(55), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), oh_0 + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), ow_0 + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(55), oh_0 + ax2)
                        v_ax3 = T.axis.spatial(T.int64(55), ow_0 + ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[55, 1, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[55, 1, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[2, 32])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 02:05:36 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:05:36 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:05:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 02:05:39 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 02:05:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 02:05:44 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 02:05:47 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 02:05:50 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 02:05:51 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9995  0.9984  0.9981  0.9977  0.9974  0.9969  0.9962  0.9956  0.9954  0.9951  0.9945  0.9937  0.9935  0.9929  0.9927  0.9926
[17 : 32]:	0.9923  0.9922  0.9920  0.9916  0.9914  0.9910  0.9903  0.9903  0.9896  0.9881  0.9873  0.9866  0.9864  0.9863  0.9862  0.9860
[33 : 48]:	0.9857  0.9853  0.9849  0.9849  0.9846  0.9842  0.9841  0.9840  0.9838  0.9836  0.9834  0.9832  0.9831  0.9825  0.9819  0.9813
[49 : 64]:	0.9813  0.9812  0.9810  0.9810  0.9808  0.9798  0.9797  0.9797  0.9793  0.9788  0.9780  0.9774  0.9769  0.9767  0.9766  0.9756
2024-04-29 02:05:51 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:05:51 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #1: GFLOPs: 5.8011. Time: 1084.6256 us. Best GFLOPs: 5.8011
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #2: GFLOPs: 88.8850. Time: 70.7881 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #3: GFLOPs: 69.8268. Time: 90.1086 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #4: GFLOPs: 9.2661. Time: 679.0319 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #5: GFLOPs: 2.5742. Time: 2444.2622 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #6: GFLOPs: 53.7285. Time: 117.1072 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #7: GFLOPs: 1.2307. Time: 5112.6888 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #8: GFLOPs: 45.8897. Time: 137.1115 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #9: GFLOPs: 38.9196. Time: 161.6666 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #10: GFLOPs: 31.1142. Time: 202.2227 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #11: GFLOPs: 43.7222. Time: 143.9085 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #12: GFLOPs: 41.5331. Time: 151.4936 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #13: GFLOPs: 59.8506. Time: 105.1284 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #14: GFLOPs: 13.0793. Time: 481.0663 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #15: GFLOPs: 2.8449. Time: 2211.6546 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #16: GFLOPs: 59.1515. Time: 106.3709 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #17: GFLOPs: 42.9361. Time: 146.5433 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #18: GFLOPs: 61.2802. Time: 102.6759 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #19: GFLOPs: 62.8367. Time: 100.1326 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #20: GFLOPs: 29.7764. Time: 211.3082 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #21: GFLOPs: 8.6311. Time: 728.9940 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #22: GFLOPs: 59.7392. Time: 105.3245 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #23: GFLOPs: 69.7635. Time: 90.1904 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #24: GFLOPs: 80.5963. Time: 78.0681 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #25: GFLOPs: 27.1755. Time: 231.5320 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #26: GFLOPs: 44.5217. Time: 141.3242 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #27: GFLOPs: 58.6014. Time: 107.3694 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #28: GFLOPs: 20.6578. Time: 304.5826 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #29: GFLOPs: 5.0295. Time: 1251.0178 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #30: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(5), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(11), T.int64(11), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(5), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(5) + oh_2_init * T.int64(5) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(5), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                            v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(4), T.int64(55)):
                for ax3_ax4_fused in T.vectorized(T.int64(44)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 11, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 11, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #31: GFLOPs: 40.6775. Time: 154.6802 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #32: GFLOPs: 5.9475. Time: 1057.9211 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #33: GFLOPs: 54.9655. Time: 114.4718 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #34: GFLOPs: 69.5611. Time: 90.4529 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #35: GFLOPs: 55.1598. Time: 114.0686 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #36: GFLOPs: 26.0957. Time: 241.1124 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #37: GFLOPs: 1.9064. Time: 3300.3978 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #38: GFLOPs: 37.1948. Time: 169.1635 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #39: GFLOPs: 41.7150. Time: 150.8330 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #40: GFLOPs: 2.8216. Time: 2229.9208 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #41: GFLOPs: 19.0155. Time: 330.8872 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #42: GFLOPs: 10.2043. Time: 616.6045 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #43: GFLOPs: 13.6255. Time: 461.7824 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #44: GFLOPs: 32.9925. Time: 190.7099 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #45: GFLOPs: 50.3626. Time: 124.9339 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #46: GFLOPs: 2.9985. Time: 2098.4160 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #47: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(10), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(11), T.int64(4), T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(5) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(11) + oh_2_init * T.int64(11) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(5) * T.int64(11) + ow_1 * T.int64(11) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(11), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(5) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(11) + oh_2 * T.int64(11) + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(5) * T.int64(11) + ow_1 * T.int64(11) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(55)):
                for ax3_ax4_fused in T.vectorized(T.int64(44)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(5) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(55), ax2)
                        v_ax3 = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(5) * T.int64(11) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 5, 1, 11])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 11, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #48: GFLOPs: 18.7999. Time: 334.6828 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #49: GFLOPs: 22.1852. Time: 283.6125 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #50: GFLOPs: 2.4688. Time: 2548.5961 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #51: GFLOPs: 28.5283. Time: 220.5532 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #52: GFLOPs: 53.1092. Time: 118.4728 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #53: GFLOPs: 61.2734. Time: 102.6873 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #54: GFLOPs: 71.5010. Time: 87.9988 us. Best GFLOPs: 88.8850
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #55: GFLOPs: 89.4467. Time: 70.3436 us. Best GFLOPs: 89.4467
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:121] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #56: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(2), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(55), T.int64(5), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(11), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(55) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(55), ow_1 * T.int64(55) + ow_2_init * T.int64(11) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(55), T.int64(5), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(11), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(55) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), ow_1 * T.int64(55) + ow_2 * T.int64(11) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3 = T.axis.remap("SSSS", [ax0, ax1, ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 55, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 5, 11])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #57: GFLOPs: 4.4479. Time: 1414.6075 us. Best GFLOPs: 89.4467
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #58: GFLOPs: 20.0544. Time: 313.7463 us. Best GFLOPs: 89.4467
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #59: GFLOPs: 22.3868. Time: 281.0580 us. Best GFLOPs: 89.4467
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #60: GFLOPs: 36.2507. Time: 173.5690 us. Best GFLOPs: 89.4467
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #61: GFLOPs: 32.3865. Time: 194.2788 us. Best GFLOPs: 89.4467
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #62: GFLOPs: 3.1644. Time: 1988.3565 us. Best GFLOPs: 89.4467
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #63: GFLOPs: 13.6625. Time: 460.5293 us. Best GFLOPs: 89.4467
2024-04-29 02:32:11 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #64: GFLOPs: 87.7818. Time: 71.6778 us. Best GFLOPs: 89.4467
2024-04-29 03:30:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:30:02 [INFO] [evolutionary_search.cc:715] Picked top 61 candidate(s) from database
2024-04-29 03:30:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 03:30:04 [INFO] [evolutionary_search.cc:723] Sampled 451 candidate(s)
2024-04-29 03:30:10 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 03:30:15 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 03:30:20 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 03:30:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 03:30:28 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0622  0.9892  0.9730  0.9576  0.9576  0.9538  0.9247  0.9224  0.9186  0.9142  0.8941  0.8941  0.8855  0.8563  0.8563  0.8536
[17 : 32]:	0.8525  0.8451  0.8376  0.8294  0.8248  0.8063  0.8037  0.7999  0.7872  0.7866  0.7861  0.7817  0.7799  0.7775  0.7743  0.7738
[33 : 48]:	0.7737  0.7710  0.7694  0.7652  0.7635  0.7604  0.7588  0.7588  0.7577  0.7577  0.7573  0.7570  0.7567  0.7554  0.7548  0.7548
[49 : 64]:	0.7548  0.7548  0.7547  0.7545  0.7535  0.7481  0.7479  0.7461  0.7453  0.7442  0.7434  0.7432  0.7424  0.7423  0.7419  0.7401
2024-04-29 03:30:29 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:30:29 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #65: GFLOPs: 54.7924. Time: 114.8334 us. Best GFLOPs: 89.4467
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #66: GFLOPs: 28.1739. Time: 223.3269 us. Best GFLOPs: 89.4467
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #67: GFLOPs: 81.0279. Time: 77.6523 us. Best GFLOPs: 89.4467
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #68: GFLOPs: 45.4236. Time: 138.5183 us. Best GFLOPs: 89.4467
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #69: GFLOPs: 23.8286. Time: 264.0522 us. Best GFLOPs: 89.4467
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #70: GFLOPs: 37.9702. Time: 165.7088 us. Best GFLOPs: 89.4467
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #71: GFLOPs: 32.1247. Time: 195.8619 us. Best GFLOPs: 89.4467
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #72: GFLOPs: 112.2235. Time: 56.0667 us. Best GFLOPs: 112.2235
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #73: GFLOPs: 64.5677. Time: 97.4482 us. Best GFLOPs: 112.2235
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #74: GFLOPs: 119.4341. Time: 52.6818 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #75: GFLOPs: 111.4298. Time: 56.4661 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #76: GFLOPs: 88.3252. Time: 71.2368 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #77: GFLOPs: 72.5193. Time: 86.7631 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #78: GFLOPs: 93.3444. Time: 67.4063 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #79: GFLOPs: 80.4423. Time: 78.2176 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #80: GFLOPs: 59.2912. Time: 106.1204 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #81: GFLOPs: 82.6829. Time: 76.0979 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #82: GFLOPs: 74.8968. Time: 84.0089 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #83: GFLOPs: 53.4663. Time: 117.6817 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #84: GFLOPs: 77.9152. Time: 80.7545 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #85: GFLOPs: 94.7667. Time: 66.3946 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #86: GFLOPs: 81.4572. Time: 77.2430 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #87: GFLOPs: 57.7269. Time: 108.9959 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #88: GFLOPs: 40.7976. Time: 154.2248 us. Best GFLOPs: 119.4341
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #89: GFLOPs: 123.0929. Time: 51.1159 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #90: GFLOPs: 47.6617. Time: 132.0137 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #91: GFLOPs: 54.0171. Time: 116.4816 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #92: GFLOPs: 72.9252. Time: 86.2802 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #93: GFLOPs: 52.1608. Time: 120.6269 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #94: GFLOPs: 81.4739. Time: 77.2272 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #95: GFLOPs: 110.9046. Time: 56.7335 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #96: GFLOPs: 65.7454. Time: 95.7024 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #97: GFLOPs: 85.7626. Time: 73.3653 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #98: GFLOPs: 95.3443. Time: 65.9924 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #99: GFLOPs: 100.5841. Time: 62.5546 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #100: GFLOPs: 58.9276. Time: 106.7751 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #101: GFLOPs: 81.2442. Time: 77.4456 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #102: GFLOPs: 81.6867. Time: 77.0260 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #103: GFLOPs: 51.1481. Time: 123.0154 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #104: GFLOPs: 47.6132. Time: 132.1482 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #105: GFLOPs: 92.0372. Time: 68.3637 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #106: GFLOPs: 107.6638. Time: 58.4412 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #107: GFLOPs: 86.8096. Time: 72.4805 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #108: GFLOPs: 51.5071. Time: 122.1579 us. Best GFLOPs: 123.0929
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #109: GFLOPs: 161.0776. Time: 39.0619 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #110: GFLOPs: 58.8785. Time: 106.8642 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #111: GFLOPs: 57.5023. Time: 109.4216 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #112: GFLOPs: 62.6454. Time: 100.4383 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #113: GFLOPs: 60.5784. Time: 103.8655 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #114: GFLOPs: 56.9784. Time: 110.4278 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #115: GFLOPs: 84.1379. Time: 74.7820 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #116: GFLOPs: 54.5764. Time: 115.2879 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #117: GFLOPs: 94.4969. Time: 66.5842 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #118: GFLOPs: 108.6461. Time: 57.9128 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #119: GFLOPs: 105.9712. Time: 59.3746 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #120: GFLOPs: 85.0972. Time: 73.9390 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #121: GFLOPs: 132.5828. Time: 47.4571 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #122: GFLOPs: 42.8785. Time: 146.7400 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #123: GFLOPs: 64.7766. Time: 97.1338 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #124: GFLOPs: 98.9803. Time: 63.5682 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #125: GFLOPs: 36.4848. Time: 172.4553 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #126: GFLOPs: 55.5433. Time: 113.2809 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #127: GFLOPs: 14.5055. Time: 433.7668 us. Best GFLOPs: 161.0776
2024-04-29 03:31:58 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #128: GFLOPs: 59.6064. Time: 105.5591 us. Best GFLOPs: 161.0776
2024-04-29 05:47:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:47:50 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:47:52 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 05:47:52 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:47:57 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 05:48:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 05:48:07 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 05:48:13 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x352adf8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x345c5c8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x4247538)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x44078a8)]: 0 failure(s)
2024-04-29 05:48:16 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8938  0.8938  0.8938  0.8938  0.8208  0.8204  0.8138  0.7894  0.7893  0.7798  0.7767  0.7518  0.7344  0.7344  0.7319  0.7319
[17 : 32]:	0.7242  0.7092  0.7072  0.7047  0.7047  0.6962  0.6949  0.6908  0.6899  0.6882  0.6806  0.6804  0.6696  0.6662  0.6619  0.6582
[33 : 48]:	0.6521  0.6520  0.6511  0.6509  0.6427  0.6422  0.6422  0.6414  0.6398  0.6394  0.6389  0.6379  0.6344  0.6290  0.6280  0.6264
[49 : 64]:	0.6264  0.6264  0.6222  0.6221  0.6177  0.6160  0.6136  0.6130  0.6130  0.6121  0.6117  0.6109  0.6096  0.6090  0.6090  0.6048
2024-04-29 05:48:16 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:48:16 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #129: GFLOPs: 67.6436. Time: 93.0169 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #130: GFLOPs: 74.3578. Time: 84.6179 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #131: GFLOPs: 70.1297. Time: 89.7194 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #132: GFLOPs: 63.2994. Time: 99.4007 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #133: GFLOPs: 72.2986. Time: 87.0280 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #134: GFLOPs: 62.4687. Time: 100.7225 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #135: GFLOPs: 65.4031. Time: 96.2034 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #136: GFLOPs: 67.2060. Time: 93.6226 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #137: GFLOPs: 77.1703. Time: 81.5339 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #138: GFLOPs: 61.2718. Time: 102.6899 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #139: GFLOPs: 65.0360. Time: 96.7464 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #140: GFLOPs: 66.2491. Time: 94.9749 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #141: GFLOPs: 61.7494. Time: 101.8958 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #142: GFLOPs: 67.5747. Time: 93.1118 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #143: GFLOPs: 64.4943. Time: 97.5590 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #144: GFLOPs: 83.7041. Time: 75.1696 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #145: GFLOPs: 74.5287. Time: 84.4239 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #146: GFLOPs: 97.6628. Time: 64.4258 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #147: GFLOPs: 64.8128. Time: 97.0796 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #148: GFLOPs: 89.5185. Time: 70.2872 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #149: GFLOPs: 91.7891. Time: 68.5485 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #150: GFLOPs: 64.6059. Time: 97.3905 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #151: GFLOPs: 92.6970. Time: 67.8771 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #152: GFLOPs: 67.4382. Time: 93.3002 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #153: GFLOPs: 72.1235. Time: 87.2392 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #154: GFLOPs: 123.2178. Time: 51.0641 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #155: GFLOPs: 103.6629. Time: 60.6968 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #156: GFLOPs: 67.5703. Time: 93.1178 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #157: GFLOPs: 76.8025. Time: 81.9244 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #158: GFLOPs: 75.7322. Time: 83.0823 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #159: GFLOPs: 30.6723. Time: 205.1362 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #160: GFLOPs: 39.2364. Time: 160.3615 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #161: GFLOPs: 95.1167. Time: 66.1504 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #162: GFLOPs: 65.8578. Time: 95.5392 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #163: GFLOPs: 70.5240. Time: 89.2179 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #164: GFLOPs: 58.2796. Time: 107.9623 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #165: GFLOPs: 63.9537. Time: 98.3836 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #166: GFLOPs: 68.4371. Time: 91.9384 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #167: GFLOPs: 72.1697. Time: 87.1835 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #168: GFLOPs: 63.4321. Time: 99.1926 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #169: GFLOPs: 94.5802. Time: 66.5255 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #170: GFLOPs: 66.8081. Time: 94.1801 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #171: GFLOPs: 59.3690. Time: 105.9813 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #172: GFLOPs: 58.7999. Time: 107.0070 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #173: GFLOPs: 76.3312. Time: 82.4302 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #174: GFLOPs: 70.1625. Time: 89.6775 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #175: GFLOPs: 85.0780. Time: 73.9557 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #176: GFLOPs: 74.7764. Time: 84.1442 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #177: GFLOPs: 72.8702. Time: 86.3453 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #178: GFLOPs: 73.3274. Time: 85.8069 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #179: GFLOPs: 76.3413. Time: 82.4193 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #180: GFLOPs: 50.2968. Time: 125.0975 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #181: GFLOPs: 65.1869. Time: 96.5224 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #182: GFLOPs: 35.2342. Time: 178.5764 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #183: GFLOPs: 33.0137. Time: 190.5873 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #184: GFLOPs: 45.5486. Time: 138.1381 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #185: GFLOPs: 54.1206. Time: 116.2588 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #186: GFLOPs: 60.1610. Time: 104.5861 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #187: GFLOPs: 59.8407. Time: 105.1457 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #188: GFLOPs: 78.3098. Time: 80.3475 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #189: GFLOPs: 66.2960. Time: 94.9078 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #190: GFLOPs: 18.0405. Time: 348.7711 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #191: GFLOPs: 25.6130. Time: 245.6565 us. Best GFLOPs: 161.0776
2024-04-29 05:49:46 [INFO] [task_scheduler.cc:131] [Task #7: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_5] Trial #192: GFLOPs: 35.7638. Time: 175.9322 us. Best GFLOPs: 161.0776
