2024-04-29 01:54:35 [INFO] [task_scheduler.cc:160] Initializing Task #8: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6"
2024-04-29 01:54:35 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4), T.int64(128), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-29 01:54:35 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 01:54:35 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(55), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(2)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(55), oh_0 * T.int64(5) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                    v_ow = T.axis.spatial(T.int64(55), ow_0 * T.int64(55) + ow_1 * T.int64(55) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[11, 1, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 55, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-29 01:54:35 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 512, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(55), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), oh_0 * T.int64(5) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), ow_0 * T.int64(55) + ow_1 * T.int64(55) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(5), T.int64(55), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(55), oh_0 * T.int64(5) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(55), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[11, 1, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 55, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 01:54:35 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(55), T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(2)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_0 * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), oh_0 * T.int64(5) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), ow_0 * T.int64(55) + ow_1 * T.int64(55) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(5), T.int64(55), T.int64(2)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(55), oh_0 * T.int64(5) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(55), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[11, 1, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 55, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-29 02:07:11 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:07:11 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:07:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 02:07:14 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 02:07:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 02:07:19 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 02:07:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 02:07:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 02:07:26 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9997  0.9996  0.9992  0.9992  0.9992  0.9991  0.9989  0.9984  0.9983  0.9976  0.9974  0.9969  0.9962  0.9962  0.9961
[17 : 32]:	0.9953  0.9945  0.9930  0.9917  0.9914  0.9912  0.9906  0.9897  0.9895  0.9894  0.9891  0.9889  0.9883  0.9877  0.9874  0.9867
[33 : 48]:	0.9866  0.9865  0.9851  0.9834  0.9833  0.9814  0.9813  0.9812  0.9804  0.9801  0.9796  0.9793  0.9782  0.9768  0.9763  0.9748
[49 : 64]:	0.9747  0.9728  0.9728  0.9727  0.9704  0.9699  0.9690  0.9689  0.9684  0.9683  0.9677  0.9672  0.9671  0.9671  0.9648  0.9646
2024-04-29 02:07:26 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:07:26 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #1: GFLOPs: 42.2055. Time: 295.8667 us. Best GFLOPs: 42.2055
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #2: GFLOPs: 56.0522. Time: 222.7781 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #3: GFLOPs: 0.1463. Time: 85360.4590 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #4: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(10), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(5), T.int64(11), T.int64(2), T.int64(1), T.int64(2), T.int64(11), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(55), oh_2_init * T.int64(11) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(11) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(11), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(11), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(2)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), oh_2 * T.int64(11) + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(11) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(2) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(55)):
                for ax3_ax4_fused in T.vectorized(T.int64(44)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(55), ax2)
                        v_ax3 = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(2) * T.int64(11) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 5, 11])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 11, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #5: GFLOPs: 2.7221. Time: 4587.3750 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #6: GFLOPs: 1.8351. Time: 6804.7097 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #7: GFLOPs: 0.9862. Time: 12662.5364 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #8: GFLOPs: 1.9295. Time: 6471.7473 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #9: GFLOPs: 34.4613. Time: 362.3547 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #10: GFLOPs: 1.5657. Time: 7975.3897 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #11: GFLOPs: 12.3747. Time: 1009.0883 us. Best GFLOPs: 56.0522
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #12: GFLOPs: 81.1630. Time: 153.8534 us. Best GFLOPs: 81.1630
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #13: GFLOPs: 60.1833. Time: 207.4862 us. Best GFLOPs: 81.1630
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #14: GFLOPs: 8.4061. Time: 1485.5003 us. Best GFLOPs: 81.1630
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #15: GFLOPs: 1.1412. Time: 10942.3080 us. Best GFLOPs: 81.1630
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #16: GFLOPs: 3.4358. Time: 3634.4834 us. Best GFLOPs: 81.1630
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #17: GFLOPs: 1.2980. Time: 9620.4317 us. Best GFLOPs: 81.1630
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #18: GFLOPs: 92.0908. Time: 135.5966 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #19: GFLOPs: 6.5416. Time: 1908.8893 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #20: GFLOPs: 9.1538. Time: 1364.1551 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #21: GFLOPs: 25.1361. Time: 496.7833 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #22: GFLOPs: 27.7248. Time: 450.3982 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #23: GFLOPs: 1.6869. Time: 7402.4469 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #24: GFLOPs: 2.7361. Time: 4563.8171 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #25: GFLOPs: 71.8696. Time: 173.7481 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #26: GFLOPs: 9.6788. Time: 1290.1557 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #27: GFLOPs: 40.9253. Time: 305.1216 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #28: GFLOPs: 60.3821. Time: 206.8029 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #29: GFLOPs: 38.7406. Time: 322.3282 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #30: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(5), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(11), T.int64(1), T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(11) + oh_2_init * T.int64(11) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ow_1 * T.int64(11) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(11), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(11), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(11) + oh_2 * T.int64(11) + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ow_1 * T.int64(11) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(4), T.int64(55)):
                for ax3_ax4_fused in T.vectorized(T.int64(44)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 5, 1, 11])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 11, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #31: GFLOPs: 36.1555. Time: 345.3745 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #32: GFLOPs: 51.7856. Time: 241.1325 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #33: GFLOPs: 30.1879. Time: 413.6494 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #34: GFLOPs: 49.8996. Time: 250.2467 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #35: GFLOPs: 61.5528. Time: 202.8696 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #36: GFLOPs: 62.7567. Time: 198.9780 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #37: GFLOPs: 55.3588. Time: 225.5684 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #38: GFLOPs: 0.7592. Time: 16447.1136 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #39: GFLOPs: 52.6139. Time: 237.3367 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #40: GFLOPs: 69.2761. Time: 180.2527 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #41: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(22), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(4), T.int64(1), T.int64(1), T.int64(5), T.int64(11), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(11) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(11) * T.int64(5) + oh_1 * T.int64(5) + oh_2_init * T.int64(5) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(55), ow_1 * T.int64(55) + ow_2_init * T.int64(11) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(5), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(11), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(11) * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(11) * T.int64(5) + oh_1 * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), ow_1 * T.int64(55) + ow_2 * T.int64(11) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(2), T.int64(5), T.int64(55)):
                for ax4_fused in T.vectorized(T.int64(4)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(11) * T.int64(2) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(11) * T.int64(5) + ax2)
                        v_ax3, v_ax4 = T.axis.remap("SS", [ax3, ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[11, 1, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 5, 11])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #42: GFLOPs: 26.9902. Time: 462.6563 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #43: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(44), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(11)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(11) + oc_chunk_2_init + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(11) * T.int64(5) + oh_2_init * T.int64(5) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(55), ow_2_init * T.int64(11) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(11)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(11) + oc_chunk_2 + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(11) * T.int64(5) + oh_2 * T.int64(5) + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), ow_2 * T.int64(11) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(757)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(12100))
                    v_ax2 = T.axis.spatial(T.int64(55), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(12100) // T.int64(220))
                    v_ax3 = T.axis.spatial(T.int64(55), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(220) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.where(ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1 < T.int64(48400))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[4, 1, 1, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 11, 1, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 5, 11])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[128, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #44: GFLOPs: 20.0964. Time: 621.3656 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #45: GFLOPs: 8.3220. Time: 1500.5097 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #46: GFLOPs: 88.2326. Time: 141.5259 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #47: GFLOPs: 62.1753. Time: 200.8387 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #48: GFLOPs: 4.2385. Time: 2946.1560 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #49: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(5), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(11), T.int64(11), T.int64(2), T.int64(1), T.int64(1), T.int64(5), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(55) + oh_2_init * T.int64(5) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ow_1 * T.int64(11) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(11), T.int64(11), T.int64(2), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(5), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(4), oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(55), oh_1 * T.int64(55) + oh_2 * T.int64(5) + oh_3)
                            v_ow = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ow_1 * T.int64(11) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(4), T.int64(55)):
                for ax3_ax4_fused in T.vectorized(T.int64(44)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused * T.int64(11) + ax3_ax4_fused // T.int64(4))
                        v_ax4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 11, 5])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[5, 1, 11, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[2, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l100, l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #50: GFLOPs: 7.0509. Time: 1771.0135 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #51: GFLOPs: 62.1032. Time: 201.0716 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #52: GFLOPs: 4.5443. Time: 2747.8642 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #53: GFLOPs: 3.0053. Time: 4155.1129 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #54: GFLOPs: 2.2512. Time: 5546.8545 us. Best GFLOPs: 92.0908
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #55: GFLOPs: 127.0465. Time: 98.2885 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #56: GFLOPs: 55.2643. Time: 225.9540 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #57: GFLOPs: 60.2847. Time: 207.1371 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #58: GFLOPs: 41.0688. Time: 304.0554 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #59: GFLOPs: 45.5883. Time: 273.9125 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #60: GFLOPs: 1.1426. Time: 10928.5550 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #61: GFLOPs: 25.0401. Time: 498.6874 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #62: GFLOPs: 47.7505. Time: 261.5094 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #63: GFLOPs: 56.0743. Time: 222.6902 us. Best GFLOPs: 127.0465
2024-04-29 02:32:13 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #64: GFLOPs: 67.8972. Time: 183.9134 us. Best GFLOPs: 127.0465
2024-04-29 03:08:20 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 03:08:21 [INFO] [evolutionary_search.cc:715] Picked top 59 candidate(s) from database
2024-04-29 03:08:23 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 03:08:23 [INFO] [evolutionary_search.cc:723] Sampled 453 candidate(s)
2024-04-29 03:08:28 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 03:08:33 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 03:08:39 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 03:08:44 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 03:08:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9839  0.8878  0.8696  0.8641  0.8633  0.8592  0.8549  0.8503  0.8503  0.8412  0.8409  0.8392  0.8351  0.8335  0.8287  0.8282
[17 : 32]:	0.8119  0.8064  0.8064  0.8058  0.8026  0.8000  0.7989  0.7925  0.7920  0.7856  0.7798  0.7763  0.7746  0.7735  0.7697  0.7667
[33 : 48]:	0.7660  0.7655  0.7652  0.7648  0.7618  0.7618  0.7585  0.7573  0.7546  0.7482  0.7459  0.7450  0.7427  0.7391  0.7379  0.7379
[49 : 64]:	0.7339  0.7329  0.7324  0.7303  0.7279  0.7259  0.7248  0.7244  0.7228  0.7224  0.7222  0.7203  0.7195  0.7183  0.7138  0.7104
2024-04-29 03:08:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 03:08:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #65: GFLOPs: 83.3662. Time: 149.7872 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #66: GFLOPs: 57.2015. Time: 218.3019 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #67: GFLOPs: 98.1945. Time: 127.1680 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #68: GFLOPs: 97.9729. Time: 127.4557 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #69: GFLOPs: 101.3565. Time: 123.2007 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #70: GFLOPs: 31.3052. Time: 398.8860 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #71: GFLOPs: 47.7992. Time: 261.2427 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #72: GFLOPs: 27.8427. Time: 448.4905 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #73: GFLOPs: 51.7625. Time: 241.2404 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #74: GFLOPs: 32.1851. Time: 387.9813 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #75: GFLOPs: 44.7499. Time: 279.0444 us. Best GFLOPs: 127.0465
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #76: GFLOPs: 144.8614. Time: 86.2010 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #77: GFLOPs: 37.0535. Time: 337.0050 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #78: GFLOPs: 51.5668. Time: 242.1559 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #79: GFLOPs: 55.3443. Time: 225.6274 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #80: GFLOPs: 55.9961. Time: 223.0014 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #81: GFLOPs: 109.3538. Time: 114.1908 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #82: GFLOPs: 84.7058. Time: 147.4185 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #83: GFLOPs: 83.9889. Time: 148.6769 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #84: GFLOPs: 75.7805. Time: 164.7811 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #85: GFLOPs: 123.1655. Time: 101.3855 us. Best GFLOPs: 144.8614
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #86: GFLOPs: 145.9120. Time: 85.5804 us. Best GFLOPs: 145.9120
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #87: GFLOPs: 149.5949. Time: 83.4734 us. Best GFLOPs: 149.5949
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #88: GFLOPs: 141.7381. Time: 88.1005 us. Best GFLOPs: 149.5949
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #89: GFLOPs: 139.2703. Time: 89.6616 us. Best GFLOPs: 149.5949
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #90: GFLOPs: 180.6262. Time: 69.1328 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #91: GFLOPs: 119.1052. Time: 104.8418 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #92: GFLOPs: 97.5097. Time: 128.0612 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #93: GFLOPs: 179.1940. Time: 69.6854 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #94: GFLOPs: 36.0468. Time: 346.4167 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #95: GFLOPs: 118.0946. Time: 105.7390 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #96: GFLOPs: 118.7688. Time: 105.1387 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #97: GFLOPs: 65.7890. Time: 189.8069 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #98: GFLOPs: 74.5988. Time: 167.3915 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #99: GFLOPs: 113.5951. Time: 109.9272 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #100: GFLOPs: 64.7179. Time: 192.9481 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #101: GFLOPs: 51.2381. Time: 243.7094 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #102: GFLOPs: 42.1632. Time: 296.1632 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #103: GFLOPs: 74.2018. Time: 168.2871 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #104: GFLOPs: 124.0319. Time: 100.6774 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #105: GFLOPs: 113.7271. Time: 109.7997 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #106: GFLOPs: 109.9130. Time: 113.6099 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #107: GFLOPs: 166.1972. Time: 75.1348 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #108: GFLOPs: 91.1869. Time: 136.9407 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #109: GFLOPs: 40.0118. Time: 312.0877 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #110: GFLOPs: 60.8430. Time: 205.2364 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #111: GFLOPs: 74.9501. Time: 166.6068 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #112: GFLOPs: 125.4781. Time: 99.5169 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #113: GFLOPs: 63.1909. Time: 197.6108 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #114: GFLOPs: 54.4388. Time: 229.3804 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #115: GFLOPs: 68.5425. Time: 182.1818 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #116: GFLOPs: 103.3916. Time: 120.7757 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #117: GFLOPs: 49.9015. Time: 250.2367 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #118: GFLOPs: 113.3010. Time: 110.2126 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #119: GFLOPs: 98.2684. Time: 127.0724 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #120: GFLOPs: 171.0379. Time: 73.0084 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #121: GFLOPs: 118.4877. Time: 105.3881 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #122: GFLOPs: 55.9319. Time: 223.2571 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #123: GFLOPs: 54.8101. Time: 227.8266 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #124: GFLOPs: 157.9998. Time: 79.0330 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #125: GFLOPs: 90.0702. Time: 138.6385 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #126: GFLOPs: 38.0552. Time: 328.1340 us. Best GFLOPs: 180.6262
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:121] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #127: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(55), T.int64(55), T.int64(4)), "float32"), p1: T.Buffer((T.int64(4), T.int64(32), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(4), T.int64(55), T.int64(55), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(110), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(55)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(22) // T.int64(11) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(22) * T.int64(11) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(11) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(55), ow_2_init * T.int64(55) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(55)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(22) // T.int64(11) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(55), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(22) * T.int64(11) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(11) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(55), ow_2 * T.int64(55) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(128), ic_0 * T.int64(4) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(757)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(12100))
                    v_ax2 = T.axis.spatial(T.int64(55), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(12100) // T.int64(220))
                    v_ax3 = T.axis.spatial(T.int64(55), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(220) // T.int64(4))
                    v_ax4 = T.axis.spatial(T.int64(4), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(4))
                    T.where(ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1 < T.int64(48400))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 2, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[5, 11, 1, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 55])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 4])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-29 03:10:22 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #128: GFLOPs: 6.7031. Time: 1862.8976 us. Best GFLOPs: 180.6262
2024-04-29 04:28:08 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 04:28:09 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 04:28:10 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 04:28:10 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 04:28:16 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 04:28:21 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 04:28:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 04:28:31 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 04:28:34 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	1.0029  0.8983  0.8756  0.8663  0.8371  0.8192  0.8137  0.8126  0.8110  0.8006  0.7840  0.7780  0.7780  0.7745  0.7744  0.7729
[17 : 32]:	0.7697  0.7667  0.7666  0.7563  0.7563  0.7555  0.7555  0.7517  0.7517  0.7514  0.7500  0.7427  0.7409  0.7349  0.7306  0.7267
[33 : 48]:	0.7265  0.7219  0.7195  0.7181  0.7142  0.7139  0.7133  0.7130  0.7124  0.7074  0.7063  0.7046  0.7035  0.7018  0.7014  0.6882
[49 : 64]:	0.6846  0.6826  0.6824  0.6824  0.6805  0.6803  0.6800  0.6797  0.6788  0.6756  0.6755  0.6740  0.6738  0.6737  0.6697  0.6678
2024-04-29 04:28:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 04:28:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #129: GFLOPs: 64.1837. Time: 194.5541 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #130: GFLOPs: 57.1859. Time: 218.3614 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #131: GFLOPs: 96.5225. Time: 129.3708 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #132: GFLOPs: 99.3957. Time: 125.6312 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #133: GFLOPs: 163.6458. Time: 76.3063 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #134: GFLOPs: 103.9345. Time: 120.1449 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #135: GFLOPs: 148.9806. Time: 83.8176 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #136: GFLOPs: 79.2334. Time: 157.6003 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #137: GFLOPs: 145.1811. Time: 86.0112 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #138: GFLOPs: 93.4143. Time: 133.6755 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #139: GFLOPs: 130.0876. Time: 95.9907 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #140: GFLOPs: 101.6506. Time: 122.8443 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #141: GFLOPs: 94.9387. Time: 131.5290 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #142: GFLOPs: 108.7473. Time: 114.8277 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #143: GFLOPs: 150.2491. Time: 83.1100 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #144: GFLOPs: 94.9442. Time: 131.5215 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #145: GFLOPs: 126.0143. Time: 99.0935 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #146: GFLOPs: 93.6394. Time: 133.3542 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #147: GFLOPs: 110.5011. Time: 113.0052 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #148: GFLOPs: 84.1580. Time: 148.3780 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #149: GFLOPs: 150.7315. Time: 82.8440 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #150: GFLOPs: 77.8861. Time: 160.3265 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #151: GFLOPs: 135.2425. Time: 92.3319 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #152: GFLOPs: 90.8604. Time: 137.4327 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #153: GFLOPs: 89.7073. Time: 139.1994 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #154: GFLOPs: 133.1027. Time: 93.8163 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #155: GFLOPs: 164.5021. Time: 75.9090 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #156: GFLOPs: 131.0081. Time: 95.3163 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #157: GFLOPs: 164.1381. Time: 76.0774 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #158: GFLOPs: 93.7730. Time: 133.1642 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #159: GFLOPs: 113.5264. Time: 109.9938 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #160: GFLOPs: 130.7946. Time: 95.4718 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #161: GFLOPs: 123.8699. Time: 100.8090 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #162: GFLOPs: 109.8686. Time: 113.6558 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #163: GFLOPs: 123.5900. Time: 101.0373 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #164: GFLOPs: 73.0757. Time: 170.8804 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #165: GFLOPs: 123.5869. Time: 101.0398 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #166: GFLOPs: 161.3334. Time: 77.4000 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #167: GFLOPs: 141.0559. Time: 88.5266 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #168: GFLOPs: 53.8770. Time: 231.7723 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #169: GFLOPs: 117.7637. Time: 106.0361 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #170: GFLOPs: 121.0727. Time: 103.1380 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #171: GFLOPs: 152.8973. Time: 81.6705 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #172: GFLOPs: 77.8700. Time: 160.3595 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #173: GFLOPs: 39.8531. Time: 313.3310 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #174: GFLOPs: 100.9452. Time: 123.7028 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #175: GFLOPs: 130.5280. Time: 95.6668 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #176: GFLOPs: 107.0089. Time: 116.6931 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #177: GFLOPs: 100.7996. Time: 123.8815 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #178: GFLOPs: 168.2046. Time: 74.2382 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #179: GFLOPs: 94.8668. Time: 131.6287 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #180: GFLOPs: 80.4300. Time: 155.2555 us. Best GFLOPs: 180.6262
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #181: GFLOPs: 222.1629. Time: 56.2074 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #182: GFLOPs: 122.3941. Time: 102.0245 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #183: GFLOPs: 158.8683. Time: 78.6009 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #184: GFLOPs: 88.5953. Time: 140.9465 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #185: GFLOPs: 124.2767. Time: 100.4790 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #186: GFLOPs: 87.4603. Time: 142.7756 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #187: GFLOPs: 119.8771. Time: 104.1667 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #188: GFLOPs: 73.9782. Time: 168.7956 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #189: GFLOPs: 78.1390. Time: 159.8076 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #190: GFLOPs: 5.4144. Time: 2306.2808 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #191: GFLOPs: 66.1384. Time: 188.8040 us. Best GFLOPs: 222.1629
2024-04-29 04:30:00 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #192: GFLOPs: 43.5045. Time: 287.0322 us. Best GFLOPs: 222.1629
2024-04-29 05:49:53 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 05:49:54 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 05:49:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 05:49:56 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 05:50:01 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 05:50:06 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 05:50:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 05:50:17 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 05:50:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8569  0.8540  0.8012  0.7768  0.7759  0.7548  0.7509  0.7473  0.7435  0.7408  0.7165  0.6999  0.6991  0.6974  0.6880  0.6827
[17 : 32]:	0.6674  0.6674  0.6624  0.6624  0.6607  0.6607  0.6563  0.6546  0.6511  0.6448  0.6416  0.6386  0.6386  0.6367  0.6289  0.6259
[33 : 48]:	0.6207  0.6200  0.6194  0.6190  0.6186  0.6166  0.6166  0.6123  0.6123  0.6087  0.6038  0.6013  0.6007  0.5984  0.5981  0.5957
[49 : 64]:	0.5906  0.5836  0.5830  0.5821  0.5813  0.5811  0.5801  0.5764  0.5739  0.5725  0.5724  0.5723  0.5718  0.5715  0.5705  0.5678
2024-04-29 05:50:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 05:50:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #193: GFLOPs: 109.7539. Time: 113.7745 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #194: GFLOPs: 109.3261. Time: 114.2197 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #195: GFLOPs: 156.3681. Time: 79.8577 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #196: GFLOPs: 111.4748. Time: 112.0181 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #197: GFLOPs: 156.4941. Time: 79.7934 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #198: GFLOPs: 106.2592. Time: 117.5164 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #199: GFLOPs: 104.5281. Time: 119.4626 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #200: GFLOPs: 139.9147. Time: 89.2487 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #201: GFLOPs: 141.8165. Time: 88.0518 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #202: GFLOPs: 119.7033. Time: 104.3179 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #203: GFLOPs: 110.7098. Time: 112.7922 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #204: GFLOPs: 80.0503. Time: 155.9919 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #205: GFLOPs: 149.1217. Time: 83.7383 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #206: GFLOPs: 106.4824. Time: 117.2701 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #207: GFLOPs: 102.4414. Time: 121.8961 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #208: GFLOPs: 137.9332. Time: 90.5308 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #209: GFLOPs: 102.9589. Time: 121.2833 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #210: GFLOPs: 125.8214. Time: 99.2454 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #211: GFLOPs: 85.1318. Time: 146.6807 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #212: GFLOPs: 84.1710. Time: 148.3552 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #213: GFLOPs: 93.9542. Time: 132.9072 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #214: GFLOPs: 81.8288. Time: 152.6016 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #215: GFLOPs: 67.3786. Time: 185.3289 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #216: GFLOPs: 132.8003. Time: 94.0299 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #217: GFLOPs: 103.2311. Time: 120.9636 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #218: GFLOPs: 101.6951. Time: 122.7906 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #219: GFLOPs: 86.2338. Time: 144.8063 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #220: GFLOPs: 129.1593. Time: 96.6806 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #221: GFLOPs: 129.9266. Time: 96.1097 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #222: GFLOPs: 97.2887. Time: 128.3521 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #223: GFLOPs: 104.6728. Time: 119.2974 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #224: GFLOPs: 104.5527. Time: 119.4345 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #225: GFLOPs: 98.2995. Time: 127.0322 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #226: GFLOPs: 93.9076. Time: 132.9733 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #227: GFLOPs: 95.2190. Time: 131.1419 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #228: GFLOPs: 107.5435. Time: 116.1130 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #229: GFLOPs: 130.0370. Time: 96.0280 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #230: GFLOPs: 122.2851. Time: 102.1154 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #231: GFLOPs: 79.8927. Time: 156.2996 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #232: GFLOPs: 86.1569. Time: 144.9355 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #233: GFLOPs: 86.4998. Time: 144.3611 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #234: GFLOPs: 125.3758. Time: 99.5982 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #235: GFLOPs: 129.1107. Time: 96.7170 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #236: GFLOPs: 94.9994. Time: 131.4450 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #237: GFLOPs: 99.0255. Time: 126.1009 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #238: GFLOPs: 109.6066. Time: 113.9275 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #239: GFLOPs: 54.3463. Time: 229.7711 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #240: GFLOPs: 105.2489. Time: 118.6445 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #241: GFLOPs: 95.1637. Time: 131.2180 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #242: GFLOPs: 109.7432. Time: 113.7856 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #243: GFLOPs: 104.4519. Time: 119.5497 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #244: GFLOPs: 97.1548. Time: 128.5288 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #245: GFLOPs: 92.4712. Time: 135.0388 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #246: GFLOPs: 118.0590. Time: 105.7708 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #247: GFLOPs: 103.1845. Time: 121.0182 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #248: GFLOPs: 121.6939. Time: 102.6115 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #249: GFLOPs: 130.2702. Time: 95.8561 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #250: GFLOPs: 121.0371. Time: 103.1683 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #251: GFLOPs: 84.6136. Time: 147.5791 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #252: GFLOPs: 108.8460. Time: 114.7236 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #253: GFLOPs: 192.3005. Time: 64.9359 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #254: GFLOPs: 6.2888. Time: 1985.6345 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #255: GFLOPs: 11.0603. Time: 1129.0090 us. Best GFLOPs: 222.1629
2024-04-29 05:51:53 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #256: GFLOPs: 0.9615. Time: 12987.2090 us. Best GFLOPs: 222.1629
2024-04-29 06:08:04 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 06:08:05 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 06:08:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 06:08:07 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 06:08:12 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 06:08:17 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 06:08:22 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 06:08:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x39e54e8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x42de468)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x30ec978)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x439d718)]: 0 failure(s)
2024-04-29 06:08:30 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.7579  0.7579  0.7468  0.7259  0.6897  0.6897  0.6897  0.6881  0.6442  0.6438  0.6417  0.6384  0.6340  0.6252  0.6231  0.6207
[17 : 32]:	0.6199  0.6150  0.6124  0.6095  0.6093  0.6023  0.6023  0.5980  0.5966  0.5964  0.5942  0.5940  0.5900  0.5849  0.5841  0.5839
[33 : 48]:	0.5839  0.5837  0.5828  0.5828  0.5822  0.5741  0.5726  0.5716  0.5702  0.5686  0.5675  0.5618  0.5593  0.5593  0.5587  0.5570
[49 : 64]:	0.5569  0.5548  0.5536  0.5530  0.5524  0.5521  0.5512  0.5482  0.5480  0.5449  0.5431  0.5418  0.5410  0.5365  0.5362  0.5361
2024-04-29 06:08:30 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 06:08:30 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #257: GFLOPs: 69.7219. Time: 179.1002 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #258: GFLOPs: 143.2173. Time: 87.1906 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #259: GFLOPs: 133.9289. Time: 93.2376 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #260: GFLOPs: 130.1848. Time: 95.9191 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #261: GFLOPs: 121.3117. Time: 102.9348 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #262: GFLOPs: 115.7734. Time: 107.8589 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #263: GFLOPs: 123.9083. Time: 100.7777 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #264: GFLOPs: 131.1550. Time: 95.2095 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #265: GFLOPs: 135.9228. Time: 91.8698 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #266: GFLOPs: 122.1101. Time: 102.2618 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #267: GFLOPs: 122.0308. Time: 102.3283 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #268: GFLOPs: 131.0422. Time: 95.2914 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #269: GFLOPs: 118.0401. Time: 105.7878 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #270: GFLOPs: 136.7203. Time: 91.3339 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #271: GFLOPs: 115.0917. Time: 108.4979 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #272: GFLOPs: 97.2637. Time: 128.3850 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #273: GFLOPs: 120.2346. Time: 103.8570 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #274: GFLOPs: 112.8230. Time: 110.6796 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #275: GFLOPs: 75.9821. Time: 164.3439 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #276: GFLOPs: 113.5047. Time: 110.0149 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #277: GFLOPs: 73.4858. Time: 169.9267 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #278: GFLOPs: 139.7516. Time: 89.3528 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #279: GFLOPs: 126.1789. Time: 98.9642 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #280: GFLOPs: 114.1314. Time: 109.4107 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #281: GFLOPs: 139.4500. Time: 89.5461 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #282: GFLOPs: 127.1512. Time: 98.2075 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #283: GFLOPs: 71.2334. Time: 175.2997 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #284: GFLOPs: 68.3492. Time: 182.6972 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #285: GFLOPs: 55.7465. Time: 223.9996 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #286: GFLOPs: 111.1163. Time: 112.3795 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #287: GFLOPs: 88.5200. Time: 141.0665 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #288: GFLOPs: 68.5350. Time: 182.2019 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #289: GFLOPs: 97.3600. Time: 128.2580 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #290: GFLOPs: 65.9833. Time: 189.2479 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #291: GFLOPs: 154.4699. Time: 80.8391 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #292: GFLOPs: 109.2916. Time: 114.2558 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #293: GFLOPs: 100.0022. Time: 124.8692 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #294: GFLOPs: 106.4811. Time: 117.2716 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #295: GFLOPs: 51.5632. Time: 242.1727 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #296: GFLOPs: 119.8061. Time: 104.2284 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #297: GFLOPs: 132.8071. Time: 94.0251 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #298: GFLOPs: 110.9575. Time: 112.5404 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #299: GFLOPs: 100.5134. Time: 124.2342 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #300: GFLOPs: 149.5458. Time: 83.5008 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #301: GFLOPs: 52.5759. Time: 237.5080 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #302: GFLOPs: 52.5906. Time: 237.4415 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #303: GFLOPs: 139.9510. Time: 89.2255 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #304: GFLOPs: 103.0923. Time: 121.1264 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #305: GFLOPs: 103.8090. Time: 120.2901 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #306: GFLOPs: 94.2896. Time: 132.4345 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #307: GFLOPs: 107.4381. Time: 116.2270 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #308: GFLOPs: 106.6879. Time: 117.0442 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #309: GFLOPs: 119.1978. Time: 104.7603 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #310: GFLOPs: 67.2488. Time: 185.6865 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #311: GFLOPs: 97.4593. Time: 128.1274 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #312: GFLOPs: 94.0322. Time: 132.7971 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #313: GFLOPs: 103.7748. Time: 120.3297 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #314: GFLOPs: 92.8125. Time: 134.5422 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #315: GFLOPs: 128.6792. Time: 97.0413 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #316: GFLOPs: 73.4964. Time: 169.9021 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #317: GFLOPs: 120.2920. Time: 103.8074 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #318: GFLOPs: 48.1304. Time: 259.4451 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #319: GFLOPs: 55.0273. Time: 226.9272 us. Best GFLOPs: 222.1629
2024-04-29 06:10:11 [INFO] [task_scheduler.cc:131] [Task #8: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #320: GFLOPs: 124.0312. Time: 100.6779 us. Best GFLOPs: 222.1629
