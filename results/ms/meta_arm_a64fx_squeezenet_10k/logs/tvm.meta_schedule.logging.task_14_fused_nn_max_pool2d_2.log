2024-04-29 01:54:58 [INFO] [task_scheduler.cc:160] Initializing Task #14: "fused_nn_max_pool2d_2"
2024-04-29 01:54:58 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(27), T.int64(27), T.int64(4)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pad_temp = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)):
            with T.block("pad_temp"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(pad_temp[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                pad_temp[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.if_then_else(v_ax2 < T.int64(27) and v_ax3 < T.int64(27), p0[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(-3.4028234663852886e+38))
        for ax0, ax1, ax2, ax3, ax4, rv0, rv1 in T.grid(T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4), T.int64(3), T.int64(3)):
            with T.block("pool_max"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, v_rv0, v_rv1 = T.axis.remap("SSSSSRR", [ax0, ax1, ax2, ax3, ax4, rv0, rv1])
                T.reads(pad_temp[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1, v_ax4])
                T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.block_attr({"schedule_rule": "meta_schedule.pool_max"})
                with T.init():
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(-3.4028234663852886e+38)
                pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], pad_temp[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1, v_ax4])
2024-04-29 01:54:58 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-29 01:54:58 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(27), T.int64(27), T.int64(4)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            pad_temp = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            pool_max_rf = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4), T.int64(1)))
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)):
                with T.block("pad_temp"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T.writes(pad_temp[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    pad_temp[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.if_then_else(v_ax2 < T.int64(27) and v_ax3 < T.int64(27), p0[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(-3.4028234663852886e+38))
            for ax0, ax1, ax2, ax3, ax4, rv0_rv1_fused_0, rv0_rv1_fused_1 in T.grid(T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4), T.int64(1), T.int64(9)):
                with T.block("pool_max_rf"):
                    vrv0_rv1_fused_0, v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_1 = T.axis.remap("SSSSSSR", [rv0_rv1_fused_0, ax0, ax1, ax2, ax3, ax4, rv0_rv1_fused_1])
                    T.reads(pad_temp[v_ax0, v_ax1, v_ax2 * T.int64(2) + (vrv0_rv1_fused_0 * T.int64(9) + vrv0_rv1_fused_1) // T.int64(3), v_ax3 * T.int64(2) + (vrv0_rv1_fused_0 * T.int64(9) + vrv0_rv1_fused_1) % T.int64(3), v_ax4])
                    T.writes(pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_0])
                    with T.init():
                        pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_0] = T.float32(-3.4028234663852886e+38)
                    pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_0] = T.max(pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_0], pad_temp[v_ax0, v_ax1, v_ax2 * T.int64(2) + (vrv0_rv1_fused_0 * T.int64(9) + vrv0_rv1_fused_1) // T.int64(3), v_ax3 * T.int64(2) + (vrv0_rv1_fused_0 * T.int64(9) + vrv0_rv1_fused_1) % T.int64(3), v_ax4])
            for ax0, ax1, ax2, ax3, ax4, rv0_rv1_fused_0 in T.grid(T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4), T.int64(1)):
                with T.block("pool_max"):
                    vrv0_rv1_fused_0, v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("RSSSSS", [rv0_rv1_fused_0, ax0, ax1, ax2, ax3, ax4])
                    T.reads(pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_0])
                    T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T.block_attr({"meta_schedule.random_compute_producer": 1})
                    with T.init():
                        pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(-3.4028234663852886e+38)
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_0])
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="pool_max", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b1, ann_key="schedule_rule")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
l10 = sch.fuse(l8, l9, preserve_unit_iters=True)
v11, v12 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 9])
l13, l14 = sch.split(loop=l10, factors=[v11, v12], preserve_unit_iters=True)
b15 = sch.rfactor(loop=l13, factor_axis=5)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.random_compute_producer", ann_val=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v16 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v16)
l17 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l17, preserve_unit_loops=True, index=-1)
2024-04-29 01:54:58 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(27), T.int64(27), T.int64(4)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            pad_temp = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(28), T.int64(28), T.int64(4)))
            pool_max_rf = T.alloc_buffer((T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4), T.int64(9)))
            for ax0, ax1 in T.grid(T.int64(1), T.int64(64)):
                for ax0_1, ax1_1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(27), T.int64(27), T.int64(4)):
                    with T.block("pad_temp"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0_1)
                        v_ax1 = T.axis.spatial(T.int64(64), ax1 + ax1_1)
                        v_ax2 = T.axis.spatial(T.int64(28), ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), ax3)
                        v_ax4 = T.axis.spatial(T.int64(4), ax4)
                        T.reads(p0[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T.writes(pad_temp[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        pad_temp[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.if_then_else(v_ax2 < T.int64(27) and v_ax3 < T.int64(27), p0[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(-3.4028234663852886e+38))
                for ax2, ax3, ax4, rv0_rv1_fused_0, rv0_rv1_fused_1 in T.grid(T.int64(13), T.int64(13), T.int64(4), T.int64(1), T.int64(9)):
                    with T.block("pool_max_rf"):
                        vrv0_rv1_fused_1, v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_0 = T.axis.remap("SSSSSSR", [rv0_rv1_fused_1, ax0, ax1, ax2, ax3, ax4, rv0_rv1_fused_0])
                        T.reads(pad_temp[v_ax0, v_ax1, v_ax2 * T.int64(2) + (vrv0_rv1_fused_0 * T.int64(9) + vrv0_rv1_fused_1) // T.int64(3), v_ax3 * T.int64(2) + (vrv0_rv1_fused_0 * T.int64(9) + vrv0_rv1_fused_1) % T.int64(3), v_ax4])
                        T.writes(pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_1])
                        with T.init():
                            pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_1] = T.float32(-3.4028234663852886e+38)
                        pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_1] = T.max(pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_1], pad_temp[v_ax0, v_ax1, v_ax2 * T.int64(2) + (vrv0_rv1_fused_0 * T.int64(9) + vrv0_rv1_fused_1) // T.int64(3), v_ax3 * T.int64(2) + (vrv0_rv1_fused_0 * T.int64(9) + vrv0_rv1_fused_1) % T.int64(3), v_ax4])
            for ax0, ax1, ax2, ax3, ax4, rv0_rv1_fused_1 in T.grid(T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4), T.int64(9)):
                with T.block("pool_max"):
                    vrv0_rv1_fused_1, v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("RSSSSS", [rv0_rv1_fused_1, ax0, ax1, ax2, ax3, ax4])
                    T.reads(pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_1])
                    T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T.block_attr({"meta_schedule.random_compute_producer": 1})
                    with T.init():
                        pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(-3.4028234663852886e+38)
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], pool_max_rf[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, vrv0_rv1_fused_1])
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="pool_max", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b1, ann_key="schedule_rule")
l3, l4, l5, l6, l7, l8, l9 = sch.get_loops(block=b1)
l10 = sch.fuse(l8, l9, preserve_unit_iters=True)
v11, v12 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 9])
l13, l14 = sch.split(loop=l10, factors=[v11, v12], preserve_unit_iters=True)
b15 = sch.rfactor(loop=l14, factor_axis=5)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.random_compute_producer", ann_val=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v16 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v16)
l17 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l17, preserve_unit_loops=True, index=-1)
2024-04-29 01:54:58 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(64), T.int64(27), T.int64(27), T.int64(4)), "float32"), pool_max: T.Buffer((T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            for ax0, ax1, ax2, ax3, ax4, rv0, rv1 in T.grid(T.int64(1), T.int64(64), T.int64(13), T.int64(13), T.int64(4), T.int64(3), T.int64(3)):
                with T.block("pool_max"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, v_rv0, v_rv1 = T.axis.remap("SSSSSRR", [ax0, ax1, ax2, ax3, ax4, rv0, rv1])
                    T.reads(p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1, v_ax4])
                    T.writes(pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    with T.init():
                        pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(-3.4028234663852886e+38)
                    pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(pool_max[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.if_then_else(v_ax2 * T.int64(2) + v_rv0 < T.int64(27) and v_ax3 * T.int64(2) + v_rv1 < T.int64(27), p0[v_ax0, v_ax1, v_ax2 * T.int64(2) + v_rv0, v_ax3 * T.int64(2) + v_rv1, v_ax4], T.float32(-3.4028234663852886e+38)))
b0 = sch.get_block(name="pad_temp", func_name="main")
b1 = sch.get_block(name="pool_max", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b1, ann_key="schedule_rule")
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v3 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v3)
l4 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l4, preserve_unit_loops=True, index=-1)
2024-04-29 02:16:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 02:16:29 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-29 02:16:31 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 02:16:31 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-29 02:16:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 02:16:38 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 02:16:42 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 02:16:45 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 02:16:46 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9959  0.9911  0.9803  0.9796  0.9775  0.9692  0.9686  0.9657  0.9632  0.9606  0.9605  0.9597  0.9516  0.9494  0.9470  0.9316
[17 : 32]:	0.9276  0.9255  0.9214  0.9191  0.9164  0.9096  0.9088  0.9050  0.8997  0.8996  0.8901  0.8825  0.8689  0.8602  0.8432  0.8408
[33 : 48]:	0.8385  0.8384  0.8372  0.8091  0.8046  0.8004  0.8004  0.7927  0.7815  0.7789  0.7723  0.7686  0.7574  0.7566  0.7501  0.7501
[49 : 64]:	0.7487  0.7474  0.7467  0.7430  0.7429  0.7399  0.7387  0.7349  0.7306  0.7296  0.7250  0.7199  0.7188  0.7161  0.7142  0.7024
2024-04-29 02:16:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 02:16:47 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #1: GFLOPs: 3.6459. Time: 106.7985 us. Best GFLOPs: 3.6459
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #2: GFLOPs: 4.3354. Time: 89.8129 us. Best GFLOPs: 4.3354
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #3: GFLOPs: 8.0625. Time: 48.2949 us. Best GFLOPs: 8.0625
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #4: GFLOPs: 5.0974. Time: 76.3872 us. Best GFLOPs: 8.0625
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #5: GFLOPs: 18.6448. Time: 20.8838 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #6: GFLOPs: 8.9493. Time: 43.5091 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #7: GFLOPs: 16.4890. Time: 23.6143 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #8: GFLOPs: 5.7175. Time: 68.1020 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #9: GFLOPs: 6.7735. Time: 57.4856 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #10: GFLOPs: 8.0723. Time: 48.2360 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #11: GFLOPs: 8.8579. Time: 43.9582 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #12: GFLOPs: 18.5247. Time: 21.0193 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #13: GFLOPs: 6.6896. Time: 58.2066 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #14: GFLOPs: 8.6131. Time: 45.2075 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #15: GFLOPs: 14.2145. Time: 27.3930 us. Best GFLOPs: 18.6448
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #16: GFLOPs: 28.2967. Time: 13.7605 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #17: GFLOPs: 8.9523. Time: 43.4946 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #18: GFLOPs: 8.7225. Time: 44.6402 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #19: GFLOPs: 11.7146. Time: 33.2385 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #20: GFLOPs: 6.2411. Time: 62.3886 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #21: GFLOPs: 13.8811. Time: 28.0508 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #22: GFLOPs: 8.0505. Time: 48.3669 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #23: GFLOPs: 5.2989. Time: 73.4825 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #24: GFLOPs: 10.2720. Time: 37.9065 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #25: GFLOPs: 13.2472. Time: 29.3930 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #26: GFLOPs: 9.1240. Time: 42.6760 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #27: GFLOPs: 13.8487. Time: 28.1163 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #28: GFLOPs: 8.4129. Time: 46.2832 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #29: GFLOPs: 6.8473. Time: 56.8659 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #30: GFLOPs: 10.4129. Time: 37.3937 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #31: GFLOPs: 13.3622. Time: 29.1402 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #32: GFLOPs: 8.3896. Time: 46.4120 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #33: GFLOPs: 5.1233. Time: 76.0004 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #34: GFLOPs: 8.2222. Time: 47.3569 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #35: GFLOPs: 13.5732. Time: 28.6871 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #36: GFLOPs: 7.9567. Time: 48.9366 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #37: GFLOPs: 2.5107. Time: 155.0878 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #38: GFLOPs: 7.7182. Time: 50.4488 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #39: GFLOPs: 12.4111. Time: 31.3732 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #40: GFLOPs: 11.6602. Time: 33.3936 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #41: GFLOPs: 10.1054. Time: 38.5313 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #42: GFLOPs: 7.1637. Time: 54.3537 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #43: GFLOPs: 7.4799. Time: 52.0563 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #44: GFLOPs: 9.0232. Time: 43.1527 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #45: GFLOPs: 7.1933. Time: 54.1305 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #46: GFLOPs: 8.7462. Time: 44.5196 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #47: GFLOPs: 12.8226. Time: 30.3663 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #48: GFLOPs: 7.3068. Time: 53.2894 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #49: GFLOPs: 7.4746. Time: 52.0931 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #50: GFLOPs: 18.1101. Time: 21.5005 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #51: GFLOPs: 10.5239. Time: 36.9994 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #52: GFLOPs: 6.6331. Time: 58.7021 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #53: GFLOPs: 18.6368. Time: 20.8928 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #54: GFLOPs: 10.8948. Time: 35.7396 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #55: GFLOPs: 8.1803. Time: 47.5991 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #56: GFLOPs: 8.8117. Time: 44.1883 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #57: GFLOPs: 8.4306. Time: 46.1858 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #58: GFLOPs: 8.4530. Time: 46.0634 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #59: GFLOPs: 8.1392. Time: 47.8393 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #60: GFLOPs: 9.4673. Time: 41.1286 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #61: GFLOPs: 9.1018. Time: 42.7802 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #62: GFLOPs: 9.2254. Time: 42.2070 us. Best GFLOPs: 28.2967
2024-04-29 02:32:30 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #63: GFLOPs: 7.6447. Time: 50.9338 us. Best GFLOPs: 28.2967
2024-04-29 07:05:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 07:05:10 [INFO] [evolutionary_search.cc:715] Picked top 63 candidate(s) from database
2024-04-29 07:05:12 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 07:05:12 [INFO] [evolutionary_search.cc:723] Sampled 449 candidate(s)
2024-04-29 07:05:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 07:05:23 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 07:05:28 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 07:05:34 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3575a58)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x4281fb8)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3c20ba8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x34d38e8)]: 0 failure(s)
2024-04-29 07:05:38 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8686  0.8258  0.7294  0.6690  0.6368  0.6217  0.6115  0.6088  0.5774  0.5601  0.5588  0.5588  0.5486  0.5162  0.5131  0.5072
[17 : 32]:	0.5061  0.5031  0.4951  0.4911  0.4804  0.4598  0.4502  0.4450  0.4445  0.4445  0.4403  0.4387  0.4385  0.4323  0.4323  0.4309
[33 : 48]:	0.4294  0.4255  0.4255  0.4211  0.4070  0.3981  0.3963  0.3922  0.3921  0.3911  0.3880  0.3880  0.3846  0.3779  0.3779  0.3763
[49 : 64]:	0.3756  0.3756  0.3682  0.3677  0.3647  0.3647  0.3632  0.3630  0.3621  0.3615  0.3586  0.3582  0.3582  0.3572  0.3568  0.3553
2024-04-29 07:05:38 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 07:05:38 [INFO] [evolutionary_search.cc:730] Sending 63 candidates(s) for measurement
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #64: GFLOPs: 25.7068. Time: 15.1468 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #65: GFLOPs: 17.5420. Time: 22.1967 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #66: GFLOPs: 24.3203. Time: 16.0103 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #67: GFLOPs: 27.6876. Time: 14.0632 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #68: GFLOPs: 14.5860. Time: 26.6952 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #69: GFLOPs: 26.6716. Time: 14.5989 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #70: GFLOPs: 18.6506. Time: 20.8774 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #71: GFLOPs: 17.2895. Time: 22.5209 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #72: GFLOPs: 16.4424. Time: 23.6813 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #73: GFLOPs: 25.6396. Time: 15.1865 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #74: GFLOPs: 11.4976. Time: 33.8660 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #75: GFLOPs: 9.9760. Time: 39.0313 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #76: GFLOPs: 9.0954. Time: 42.8101 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #77: GFLOPs: 12.3755. Time: 31.4634 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #78: GFLOPs: 16.7634. Time: 23.2277 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #79: GFLOPs: 12.2285. Time: 31.8417 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #80: GFLOPs: 23.9178. Time: 16.2798 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #81: GFLOPs: 12.4428. Time: 31.2934 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #82: GFLOPs: 23.9486. Time: 16.2588 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #83: GFLOPs: 14.2632. Time: 27.2994 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #84: GFLOPs: 11.0364. Time: 35.2809 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #85: GFLOPs: 11.2760. Time: 34.5315 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #86: GFLOPs: 9.7179. Time: 40.0678 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #87: GFLOPs: 9.5241. Time: 40.8834 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #88: GFLOPs: 11.2471. Time: 34.6201 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #89: GFLOPs: 11.3187. Time: 34.4010 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #90: GFLOPs: 11.3633. Time: 34.2662 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #91: GFLOPs: 11.4477. Time: 34.0135 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #92: GFLOPs: 7.9839. Time: 48.7703 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #93: GFLOPs: 11.0596. Time: 35.2070 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #94: GFLOPs: 7.9453. Time: 49.0070 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #95: GFLOPs: 8.0046. Time: 48.6443 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #96: GFLOPs: 9.0734. Time: 42.9142 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #97: GFLOPs: 10.9961. Time: 35.4105 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #98: GFLOPs: 11.1948. Time: 34.7820 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #99: GFLOPs: 10.8666. Time: 35.8323 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #100: GFLOPs: 6.3222. Time: 61.5885 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #101: GFLOPs: 11.1510. Time: 34.9183 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #102: GFLOPs: 12.1692. Time: 31.9969 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #103: GFLOPs: 12.1740. Time: 31.9842 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #104: GFLOPs: 7.4583. Time: 52.2068 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #105: GFLOPs: 6.7777. Time: 57.4496 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #106: GFLOPs: 10.9113. Time: 35.6856 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #107: GFLOPs: 10.7519. Time: 36.2145 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #108: GFLOPs: 10.9937. Time: 35.4180 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #109: GFLOPs: 13.8859. Time: 28.0411 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #110: GFLOPs: 13.5018. Time: 28.8388 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #111: GFLOPs: 10.8725. Time: 35.8128 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #112: GFLOPs: 9.4192. Time: 41.3385 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #113: GFLOPs: 9.2092. Time: 42.2811 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #114: GFLOPs: 8.9772. Time: 43.3737 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #115: GFLOPs: 10.8016. Time: 36.0479 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #116: GFLOPs: 10.5829. Time: 36.7929 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #117: GFLOPs: 10.4766. Time: 37.1663 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #118: GFLOPs: 8.7805. Time: 44.3454 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #119: GFLOPs: 11.5428. Time: 33.7332 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #120: GFLOPs: 11.5991. Time: 33.5695 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #121: GFLOPs: 8.3582. Time: 46.5863 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #122: GFLOPs: 6.8018. Time: 57.2462 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #123: GFLOPs: 10.9889. Time: 35.4336 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #124: GFLOPs: 11.0650. Time: 35.1900 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #125: GFLOPs: 8.8397. Time: 44.0484 us. Best GFLOPs: 28.2967
2024-04-29 07:06:53 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_max_pool2d_2] Trial #126: GFLOPs: 3.7537. Time: 103.7312 us. Best GFLOPs: 28.2967
