2024-04-30 05:29:55 [INFO] [task_scheduler.cc:160] Initializing Task #14: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6"
2024-04-30 05:29:55 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32), T.int64(256), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-30 05:29:56 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 05:29:56 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(256), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(29) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(29), p0[v_n, v_ic // T.int64(256), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(256)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 8, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 4])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-30 05:29:56 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for ic_0, kh_0, kw_0 in T.grid(T.int64(16), T.int64(3), T.int64(3)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(4), T.int64(16)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(30), oh_0 * T.int64(7) + kh_0 + ax2)
                            v_i3 = T.axis.spatial(T.int64(30), ow_0 * T.int64(4) + kw_0 + ax3)
                            v_i4 = T.axis.spatial(T.int64(256), ic_0 * T.int64(16) + ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(4), T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), oh_0 * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 8, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 4])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=12)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-30 05:29:56 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(4), T.int64(7), T.int64(4)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(3)):
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(7), T.int64(6), T.int64(16)):
                        with T.block("data_pad"):
                            v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                            v_i2 = T.axis.spatial(T.int64(30), oh_0 * T.int64(7) + kh_0 + ax2)
                            v_i3 = T.axis.spatial(T.int64(30), ow_0 * T.int64(4) + ax3)
                            v_i4 = T.axis.spatial(T.int64(256), ic_0 * T.int64(16) + ax4)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(3), T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(4)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_0 * T.int64(7) + oh_1 * T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ow_1 * T.int64(4) + ow_2 * T.int64(4) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(4), T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), oc_chunk_0 * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), oh_0 * T.int64(7) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), ow_0 * T.int64(4) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), oc_block_0 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 8, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[4, 1, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 4])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=11)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-30 05:59:13 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 05:59:13 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 05:59:19 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 05:59:19 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-30 05:59:25 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 05:59:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 05:59:38 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 05:59:44 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 05:59:45 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9994  0.9988  0.9985  0.9984  0.9978  0.9976  0.9969  0.9967  0.9967  0.9962  0.9961  0.9961  0.9958  0.9956  0.9953  0.9939
[17 : 32]:	0.9937  0.9934  0.9930  0.9927  0.9926  0.9921  0.9918  0.9916  0.9908  0.9902  0.9895  0.9893  0.9892  0.9890  0.9886  0.9885
[33 : 48]:	0.9881  0.9881  0.9878  0.9877  0.9877  0.9870  0.9863  0.9863  0.9854  0.9853  0.9850  0.9842  0.9839  0.9839  0.9838  0.9838
[49 : 64]:	0.9833  0.9820  0.9820  0.9815  0.9813  0.9806  0.9801  0.9791  0.9781  0.9780  0.9773  0.9771  0.9767  0.9766  0.9762  0.9758
2024-04-30 05:59:45 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 05:59:46 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 06:42:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #1: GFLOPs: 6.3057. Time: 293465.3973 us. Best GFLOPs: 6.3057
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #2: GFLOPs: 23.2472. Time: 79600.5163 us. Best GFLOPs: 23.2472
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #3: GFLOPs: 60.4382. Time: 30617.9270 us. Best GFLOPs: 60.4382
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #4: GFLOPs: 19.0140. Time: 97322.7227 us. Best GFLOPs: 60.4382
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #5: GFLOPs: 37.4381. Time: 49428.0113 us. Best GFLOPs: 60.4382
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #6: GFLOPs: 44.7419. Time: 41359.2117 us. Best GFLOPs: 60.4382
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #7: GFLOPs: 83.7119. Time: 22105.4622 us. Best GFLOPs: 83.7119
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #8: GFLOPs: 15.6274. Time: 118413.0040 us. Best GFLOPs: 83.7119
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #9: GFLOPs: 40.0912. Time: 46157.0347 us. Best GFLOPs: 83.7119
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #10: GFLOPs: 19.3125. Time: 95818.4633 us. Best GFLOPs: 83.7119
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #11: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1 in T.grid(T.int64(1), T.int64(4)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(4), T.int64(256)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(14) * T.int64(14) + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(256), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(14) * T.int64(14) + oh_1 * T.int64(14) + oh_2_init * T.int64(2) + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(16) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(4), T.int64(4), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(14) * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                                v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) * T.int64(2) + ow_1 + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(16) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(4) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(64)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1 = T.axis.remap("SS", [ax0, ax1])
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(14) * T.int64(14) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) * T.int64(2) + ax3_ax4_fused // T.int64(32))
                        v_ax4 = T.axis.spatial(T.int64(32), ax3_ax4_fused % T.int64(32))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 4, 2, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 7, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[14, 2, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 4, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=6)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b68)
l83 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105 = sch.get_loops(block=b69)
l106 = sch.fuse(l84, preserve_unit_iters=True)
sch.parallel(loop=l106)
l107 = sch.fuse(l105, preserve_unit_iters=True)
sch.vectorize(loop=l107)
sch.annotate(block_or_loop=l106, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l106, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l112, l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b115)
b138 = sch.decompose_reduction(block=b115, loop=l122)
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #12: GFLOPs: 107.9095. Time: 17148.5448 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #13: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(512), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(64) // T.int64(8) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(256) * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(256) // T.int64(64) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(2), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(64) // T.int64(8) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(8) // T.int64(4) * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(256) * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(256) // T.int64(64) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(256), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(29) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(29), p0[v_n, v_ic // T.int64(256), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(256)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(6272)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(25088))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(25088) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 8, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 7, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 4, 2, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68 = sch.get_child_blocks(b66)
l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94 = sch.get_loops(block=b67)
l95 = sch.fuse(l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, preserve_unit_iters=True)
sch.parallel(loop=l95)
sch.annotate(block_or_loop=l95, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l95, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100 = sch.get_loops(block=b68)
l101 = sch.fuse(l96, l97, l98, l99, l100, preserve_unit_iters=True)
l102, l103 = sch.split(loop=l101, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l102)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b104)
b122 = sch.decompose_reduction(block=b104, loop=l106)
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #14: GFLOPs: 58.0477. Time: 31878.8037 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #15: GFLOPs: 27.3063. Time: 67767.8920 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #16: GFLOPs: 7.6318. Time: 242471.6057 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #17: GFLOPs: 4.6883. Time: 394702.3077 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #18: GFLOPs: 74.8720. Time: 24715.3914 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #19: GFLOPs: 4.0966. Time: 451718.2203 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #20: GFLOPs: 29.3636. Time: 63019.8163 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #21: GFLOPs: 41.1477. Time: 44971.9460 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #22: GFLOPs: 34.3154. Time: 53925.9133 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #23: GFLOPs: 4.8499. Time: 381548.6723 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #24: GFLOPs: 3.3586. Time: 550967.5047 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #25: GFLOPs: 38.7565. Time: 47746.6060 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #26: GFLOPs: 4.7695. Time: 387986.8773 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #27: GFLOPs: 2.6355. Time: 702141.1397 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #28: GFLOPs: 9.1818. Time: 201539.3853 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #29: GFLOPs: 3.5542. Time: 520650.8580 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #30: GFLOPs: 6.0830. Time: 304207.1920 us. Best GFLOPs: 107.9095
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #31: GFLOPs: 180.6001. Time: 10246.3453 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #32: GFLOPs: 16.6869. Time: 110895.0783 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #33: GFLOPs: 64.6978. Time: 28602.0735 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #34: GFLOPs: 76.5311. Time: 24179.5804 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #35: GFLOPs: 56.3897. Time: 32816.1095 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #36: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(224), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(4), T.int64(256)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(30), oh_1 + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(4) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(30), ow_1 * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(256), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(4) * T.int64(2) + oh_1 + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(2), T.int64(4), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(4) * T.int64(2) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(8) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(4) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(4), T.int64(2), T.int64(28)):
                for ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(4) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(4) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(28), ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(8) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 1, 4, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[14, 2, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 14, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 2, 2, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=9)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85 = sch.get_loops(block=b68)
l86 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l86)
l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l87, preserve_unit_iters=True)
sch.parallel(loop=l109)
l110 = sch.fuse(l108, preserve_unit_iters=True)
sch.vectorize(loop=l110)
sch.annotate(block_or_loop=l109, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l109, ann_key="pragma_unroll_explicit", ann_val=1)
l111, l112, l113, l114, l115, l116 = sch.get_loops(block=b70)
l117 = sch.fuse(l116, preserve_unit_iters=True)
sch.vectorize(loop=l117)
b118 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140 = sch.get_loops(block=b118)
b141 = sch.decompose_reduction(block=b118, loop=l125)
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #37: GFLOPs: 1.3085. Time: 1414194.5560 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #38: GFLOPs: 66.4910. Time: 27830.7155 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #39: GFLOPs: 110.9162. Time: 16683.6905 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #40: GFLOPs: 8.1669. Time: 226583.4933 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #41: GFLOPs: 5.2849. Time: 350145.1593 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #42: GFLOPs: 47.6358. Time: 38846.6513 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #43: GFLOPs: 58.1839. Time: 31804.1586 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #44: GFLOPs: 61.8533. Time: 29917.3920 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #45: GFLOPs: 55.1827. Time: 33533.9040 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #46: GFLOPs: 11.5217. Time: 160608.5317 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #47: GFLOPs: 16.2565. Time: 113830.5947 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #48: GFLOPs: 14.1624. Time: 130662.4663 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #49: GFLOPs: 47.3339. Time: 39094.4290 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #50: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(30), T.int64(256)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(14) + ax2)
                    v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(28), T.int64(4), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(2) * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(14) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(28) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(16) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(4), T.int64(7), T.int64(28), T.int64(4), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(2) * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(14) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(28) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(16) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(28)):
                    for ax4_fused in T.vectorized(T.int64(16)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(2) * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(2) * T.int64(14) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(28), ax3)
                            v_ax4 = T.axis.spatial(T.int64(32), oc_block_1 * T.int64(16) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 4, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 28, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 4, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b115)
b135 = sch.decompose_reduction(block=b115, loop=l119)
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #51: GFLOPs: 2.3080. Time: 801759.0543 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #52: GFLOPs: 64.5878. Time: 28650.7805 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #53: GFLOPs: 3.4244. Time: 540387.3880 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #54: GFLOPs: 6.3352. Time: 292097.6757 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #55: GFLOPs: 27.6197. Time: 66999.0267 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #56: GFLOPs: 27.2330. Time: 67950.2227 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #57: GFLOPs: 24.8010. Time: 74613.5003 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #58: GFLOPs: 37.7997. Time: 48955.2147 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #59: GFLOPs: 1.7278. Time: 1070981.0513 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #60: GFLOPs: 0.8221. Time: 2250906.8640 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #61: GFLOPs: 3.4316. Time: 539252.0307 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #62: GFLOPs: 6.1029. Time: 303216.5713 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #63: GFLOPs: 21.0384. Time: 87957.7940 us. Best GFLOPs: 180.6001
2024-04-30 06:42:23 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #64: GFLOPs: 206.0530. Time: 8980.6561 us. Best GFLOPs: 206.0530
2024-04-30 07:05:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 07:05:10 [INFO] [evolutionary_search.cc:715] Picked top 60 candidate(s) from database
2024-04-30 07:05:15 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 07:05:15 [INFO] [evolutionary_search.cc:723] Sampled 452 candidate(s)
2024-04-30 07:05:27 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 07:05:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 07:05:53 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 07:06:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 07:06:14 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8411  0.6971  0.6543  0.6436  0.6315  0.6222  0.6222  0.6222  0.5994  0.5994  0.5925  0.5925  0.5899  0.5823  0.5815  0.5716
[17 : 32]:	0.5713  0.5687  0.5687  0.5687  0.5646  0.5601  0.5570  0.5558  0.5550  0.5547  0.5527  0.5464  0.5434  0.5431  0.5428  0.5385
[33 : 48]:	0.5353  0.5300  0.5270  0.5270  0.5269  0.5254  0.5245  0.5234  0.5217  0.5184  0.5163  0.5154  0.5150  0.5133  0.5125  0.5095
[49 : 64]:	0.5091  0.5077  0.5071  0.5070  0.5048  0.5042  0.5026  0.5007  0.5001  0.4982  0.4978  0.4968  0.4955  0.4950  0.4948  0.4934
2024-04-30 07:06:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 07:06:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #65: GFLOPs: 56.9524. Time: 32491.9090 us. Best GFLOPs: 206.0530
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #66: GFLOPs: 172.4166. Time: 10732.6735 us. Best GFLOPs: 206.0530
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #67: GFLOPs: 104.2855. Time: 17744.4733 us. Best GFLOPs: 206.0530
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #68: GFLOPs: 154.3647. Time: 11987.7861 us. Best GFLOPs: 206.0530
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #69: GFLOPs: 146.1151. Time: 12664.6126 us. Best GFLOPs: 206.0530
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #70: GFLOPs: 54.2306. Time: 34122.6430 us. Best GFLOPs: 206.0530
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #71: GFLOPs: 245.5404. Time: 7536.3995 us. Best GFLOPs: 245.5404
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #72: GFLOPs: 152.6839. Time: 12119.7494 us. Best GFLOPs: 245.5404
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #73: GFLOPs: 96.2636. Time: 19223.1572 us. Best GFLOPs: 245.5404
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #74: GFLOPs: 272.6828. Time: 6786.2399 us. Best GFLOPs: 272.6828
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #75: GFLOPs: 187.0739. Time: 9891.7655 us. Best GFLOPs: 272.6828
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #76: GFLOPs: 312.9004. Time: 5913.9934 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #77: GFLOPs: 167.4211. Time: 11052.9110 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #78: GFLOPs: 134.1451. Time: 13794.6959 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #79: GFLOPs: 148.2485. Time: 12482.3602 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #80: GFLOPs: 203.1812. Time: 9107.5911 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #81: GFLOPs: 88.5262. Time: 20903.3032 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #82: GFLOPs: 202.3397. Time: 9145.4653 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #83: GFLOPs: 66.1007. Time: 27995.0198 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #84: GFLOPs: 100.9753. Time: 18326.1767 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #85: GFLOPs: 68.5791. Time: 26983.3180 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #86: GFLOPs: 66.0794. Time: 28004.0390 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #87: GFLOPs: 130.6311. Time: 14165.7711 us. Best GFLOPs: 312.9004
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #88: GFLOPs: 411.6064. Time: 4495.7780 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #89: GFLOPs: 64.5576. Time: 28664.2005 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #90: GFLOPs: 109.1745. Time: 16949.8480 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #91: GFLOPs: 131.5544. Time: 14066.3519 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #92: GFLOPs: 70.9310. Time: 26088.6083 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #93: GFLOPs: 131.6349. Time: 14057.7547 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #94: GFLOPs: 66.8536. Time: 27679.7357 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #95: GFLOPs: 77.1194. Time: 23995.1506 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #96: GFLOPs: 365.3354. Time: 5065.1830 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #97: GFLOPs: 96.9342. Time: 19090.1798 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #98: GFLOPs: 50.0642. Time: 36962.3653 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #99: GFLOPs: 47.2544. Time: 39160.1900 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #100: GFLOPs: 102.8743. Time: 17987.8825 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #101: GFLOPs: 211.2623. Time: 8759.2122 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #102: GFLOPs: 222.2070. Time: 8327.7785 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #103: GFLOPs: 166.6602. Time: 11103.3739 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #104: GFLOPs: 261.2147. Time: 7084.1771 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #105: GFLOPs: 67.2885. Time: 27500.8328 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #106: GFLOPs: 227.7809. Time: 8123.9965 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #107: GFLOPs: 194.1433. Time: 9531.5728 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #108: GFLOPs: 108.1340. Time: 17112.9425 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #109: GFLOPs: 101.6196. Time: 18209.9863 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #110: GFLOPs: 109.9491. Time: 16830.4292 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #111: GFLOPs: 110.0595. Time: 16813.5438 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #112: GFLOPs: 109.3771. Time: 16918.4523 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #113: GFLOPs: 243.7407. Time: 7592.0484 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #114: GFLOPs: 88.3089. Time: 20954.7540 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #115: GFLOPs: 132.0967. Time: 14008.6082 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #116: GFLOPs: 101.1294. Time: 18298.2547 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #117: GFLOPs: 69.7579. Time: 26527.3132 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #118: GFLOPs: 115.0918. Time: 16078.3850 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #119: GFLOPs: 96.4738. Time: 19181.2798 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #120: GFLOPs: 181.1551. Time: 10214.9555 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #121: GFLOPs: 131.4019. Time: 14082.6771 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #122: GFLOPs: 80.0480. Time: 23117.2754 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #123: GFLOPs: 170.3015. Time: 10865.9677 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #124: GFLOPs: 81.9828. Time: 22571.7040 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #125: GFLOPs: 42.7183. Time: 43318.4685 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #126: GFLOPs: 59.0036. Time: 31362.3145 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #127: GFLOPs: 38.0396. Time: 48646.4707 us. Best GFLOPs: 411.6064
2024-04-30 07:07:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #128: GFLOPs: 38.4417. Time: 48137.5953 us. Best GFLOPs: 411.6064
2024-04-30 08:02:20 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 08:02:21 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 08:02:26 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 08:02:26 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 08:02:39 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 08:02:52 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 08:03:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 08:03:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 08:03:28 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9731  0.8965  0.8678  0.8640  0.8350  0.8112  0.7898  0.7898  0.7871  0.7779  0.7713  0.7713  0.7713  0.7666  0.7424  0.7424
[17 : 32]:	0.7205  0.6994  0.6858  0.6680  0.6558  0.6534  0.6534  0.6534  0.6350  0.6350  0.6327  0.6319  0.6297  0.6297  0.6297  0.6260
[33 : 48]:	0.6226  0.6210  0.6158  0.6029  0.5960  0.5912  0.5866  0.5841  0.5814  0.5814  0.5802  0.5802  0.5766  0.5738  0.5737  0.5720
[49 : 64]:	0.5708  0.5701  0.5699  0.5689  0.5688  0.5677  0.5676  0.5650  0.5645  0.5640  0.5616  0.5608  0.5574  0.5525  0.5519  0.5519
2024-04-30 08:03:28 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 08:03:28 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #129: GFLOPs: 410.0853. Time: 4512.4531 us. Best GFLOPs: 411.6064
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #130: GFLOPs: 341.8807. Time: 5412.6806 us. Best GFLOPs: 411.6064
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #131: GFLOPs: 698.4467. Time: 2649.4376 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #132: GFLOPs: 369.7196. Time: 5005.1204 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #133: GFLOPs: 367.7816. Time: 5031.4934 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #134: GFLOPs: 521.4150. Time: 3548.9789 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #135: GFLOPs: 415.6802. Time: 4451.7173 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #136: GFLOPs: 416.5387. Time: 4442.5428 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #137: GFLOPs: 109.0343. Time: 16971.6430 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #138: GFLOPs: 393.6637. Time: 4700.6893 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #139: GFLOPs: 55.9484. Time: 33074.9660 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #140: GFLOPs: 49.9031. Time: 37081.7103 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #141: GFLOPs: 55.4958. Time: 33344.7090 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #142: GFLOPs: 396.6262. Time: 4665.5787 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #143: GFLOPs: 53.0128. Time: 34906.4723 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #144: GFLOPs: 59.0435. Time: 31341.1435 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #145: GFLOPs: 437.2503. Time: 4232.1089 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #146: GFLOPs: 589.8983. Time: 3136.9657 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #147: GFLOPs: 83.1293. Time: 22260.3882 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #148: GFLOPs: 428.8977. Time: 4314.5278 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #149: GFLOPs: 150.9522. Time: 12258.7872 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #150: GFLOPs: 184.8836. Time: 10008.9527 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #151: GFLOPs: 155.4174. Time: 11906.5844 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #152: GFLOPs: 179.4845. Time: 10310.0299 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #153: GFLOPs: 327.3191. Time: 5653.4771 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #154: GFLOPs: 332.8229. Time: 5559.9871 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #155: GFLOPs: 318.2220. Time: 5815.0937 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #156: GFLOPs: 364.5204. Time: 5076.5086 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #157: GFLOPs: 8.6083. Time: 214965.3777 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #158: GFLOPs: 10.5441. Time: 175499.9130 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #159: GFLOPs: 10.7853. Time: 171575.8820 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #160: GFLOPs: 585.4418. Time: 3160.8452 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #161: GFLOPs: 60.8488. Time: 30411.3150 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #162: GFLOPs: 332.1578. Time: 5571.1195 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #163: GFLOPs: 28.8327. Time: 64180.2980 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #164: GFLOPs: 364.9550. Time: 5070.4635 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #165: GFLOPs: 76.6857. Time: 24130.8366 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #166: GFLOPs: 257.4072. Time: 7188.9645 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #167: GFLOPs: 325.2692. Time: 5689.1050 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #168: GFLOPs: 483.2173. Time: 3829.5209 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #169: GFLOPs: 137.2364. Time: 13483.9628 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #170: GFLOPs: 106.9986. Time: 17294.5368 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #171: GFLOPs: 52.9953. Time: 34918.0297 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #172: GFLOPs: 75.6230. Time: 24469.9366 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #173: GFLOPs: 476.5154. Time: 3883.3809 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #174: GFLOPs: 601.1534. Time: 3078.2341 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #175: GFLOPs: 59.6908. Time: 31001.2880 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #176: GFLOPs: 52.0207. Time: 35572.2043 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #177: GFLOPs: 249.7864. Time: 7408.2944 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #178: GFLOPs: 311.8753. Time: 5933.4317 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #179: GFLOPs: 112.6751. Time: 16423.2407 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #180: GFLOPs: 177.2120. Time: 10442.2444 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #181: GFLOPs: 131.3228. Time: 14091.1609 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #182: GFLOPs: 144.8130. Time: 12778.4819 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #183: GFLOPs: 256.1392. Time: 7224.5519 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #184: GFLOPs: 179.6115. Time: 10302.7420 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #185: GFLOPs: 199.6792. Time: 9267.3192 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #186: GFLOPs: 433.8187. Time: 4265.5858 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #187: GFLOPs: 135.2947. Time: 13677.4812 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #188: GFLOPs: 568.9742. Time: 3252.3285 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #189: GFLOPs: 505.3015. Time: 3662.1518 us. Best GFLOPs: 698.4467
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #190: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(28), T.int64(14)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(28) + oh_2_init * T.int64(28) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(14) + ow_2_init * T.int64(14) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(32), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(28), T.int64(14)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(28), oh_1 * T.int64(28) + oh_2 * T.int64(28) + oh_3)
                            v_ow = T.axis.spatial(T.int64(28), ow_1 * T.int64(14) + ow_2 * T.int64(14) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(28), T.int64(28)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(8) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 4, 2, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 28])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 2, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b68)
l81 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l81)
l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l82, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b70)
l112 = sch.fuse(l111, preserve_unit_iters=True)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b113)
b136 = sch.decompose_reduction(block=b113, loop=l120)
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #191: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(8), T.int64(14), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(28), oh_2_init * T.int64(14) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(28) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) // T.int64(7) * T.int64(8) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0 in T.grid(T.int64(8), T.int64(1), T.int64(3)):
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(2)):
                    for ax4_fused in T.vectorized(T.int64(32)):
                        with T.block("data_pad"):
                            v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                            v_i3 = T.axis.spatial(T.int64(30), kw_0 + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(28) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(7) * T.int64(2) + ax3)
                            v_i4 = T.axis.spatial(T.int64(256), ic_0 * T.int64(32) + ax4_fused)
                            T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                            T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                            data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(8), T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(8), T.int64(14), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused // T.int64(28) * T.int64(14) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused % T.int64(28) // T.int64(7) * T.int64(8) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 * T.int64(32) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(6272)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(25088))
                    v_ax2 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(25088) // T.int64(896))
                    v_ax3 = T.axis.spatial(T.int64(28), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(896) // T.int64(32))
                    v_ax4 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(32))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 8, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=12)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87 = sch.get_loops(block=b67)
l88 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l88)
l89 = sch.fuse(l87, preserve_unit_iters=True)
sch.vectorize(loop=l89)
l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b68)
l107 = sch.fuse(l90, preserve_unit_iters=True)
sch.parallel(loop=l107)
sch.annotate(block_or_loop=l107, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l107, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112 = sch.get_loops(block=b69)
l113 = sch.fuse(l108, l109, l110, l111, l112, preserve_unit_iters=True)
l114, l115 = sch.split(loop=l113, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l114)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133 = sch.get_loops(block=b116)
b134 = sch.decompose_reduction(block=b116, loop=l118)
2024-04-30 08:05:11 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #192: GFLOPs: 21.4672. Time: 86200.7487 us. Best GFLOPs: 698.4467
2024-04-30 09:19:23 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 09:19:24 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 09:19:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:19:29 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 09:19:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:19:53 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:20:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:20:16 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:20:21 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9765  0.8881  0.8662  0.8520  0.8422  0.8422  0.8418  0.8418  0.8393  0.8320  0.8278  0.8257  0.8138  0.8100  0.8100  0.8093
[17 : 32]:	0.8093  0.8080  0.8026  0.8024  0.7995  0.7981  0.7972  0.7936  0.7877  0.7812  0.7807  0.7763  0.7607  0.7377  0.7363  0.7328
[33 : 48]:	0.7220  0.7197  0.7193  0.7188  0.7162  0.7143  0.7135  0.7091  0.7044  0.7029  0.7027  0.7016  0.7005  0.7003  0.6976  0.6965
[49 : 64]:	0.6955  0.6950  0.6950  0.6943  0.6932  0.6932  0.6906  0.6886  0.6871  0.6865  0.6859  0.6826  0.6824  0.6816  0.6801  0.6784
2024-04-30 09:20:21 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 09:20:22 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #193: GFLOPs: 887.3512. Time: 2085.4097 us. Best GFLOPs: 887.3512
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #194: GFLOPs: 699.6857. Time: 2644.7459 us. Best GFLOPs: 887.3512
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #195: GFLOPs: 599.4090. Time: 3087.1921 us. Best GFLOPs: 887.3512
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #196: GFLOPs: 778.0012. Time: 2378.5192 us. Best GFLOPs: 887.3512
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #197: GFLOPs: 800.5557. Time: 2311.5079 us. Best GFLOPs: 887.3512
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #198: GFLOPs: 1051.4913. Time: 1759.8728 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #199: GFLOPs: 605.2988. Time: 3057.1528 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #200: GFLOPs: 660.9656. Time: 2799.6781 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #201: GFLOPs: 238.2803. Time: 7766.0247 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #202: GFLOPs: 659.7033. Time: 2805.0351 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #203: GFLOPs: 1000.3088. Time: 1849.9196 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #204: GFLOPs: 135.2495. Time: 13682.0489 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #205: GFLOPs: 814.0856. Time: 2273.0913 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #206: GFLOPs: 803.5068. Time: 2303.0184 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #207: GFLOPs: 804.7306. Time: 2299.5159 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #208: GFLOPs: 580.4132. Time: 3188.2301 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #209: GFLOPs: 520.9995. Time: 3551.8093 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #210: GFLOPs: 563.2418. Time: 3285.4287 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #211: GFLOPs: 119.6550. Time: 15465.2200 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #212: GFLOPs: 854.6980. Time: 2165.0817 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #213: GFLOPs: 525.5406. Time: 3521.1191 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #214: GFLOPs: 372.5467. Time: 4967.1382 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #215: GFLOPs: 420.8117. Time: 4397.4316 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #216: GFLOPs: 518.7474. Time: 3567.2292 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #217: GFLOPs: 452.7714. Time: 4087.0310 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #218: GFLOPs: 811.6101. Time: 2280.0244 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #219: GFLOPs: 950.7122. Time: 1946.4259 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #220: GFLOPs: 578.7742. Time: 3197.2587 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #221: GFLOPs: 589.1215. Time: 3141.1021 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #222: GFLOPs: 710.0843. Time: 2606.0158 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #223: GFLOPs: 711.4140. Time: 2601.1449 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #224: GFLOPs: 802.4246. Time: 2306.1244 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #225: GFLOPs: 793.2460. Time: 2332.8082 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #226: GFLOPs: 512.2193. Time: 3612.6929 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #227: GFLOPs: 644.9144. Time: 2869.3590 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #228: GFLOPs: 387.2427. Time: 4778.6335 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #229: GFLOPs: 930.6953. Time: 1988.2887 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #230: GFLOPs: 617.1561. Time: 2998.4162 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #231: GFLOPs: 685.4469. Time: 2699.6851 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #232: GFLOPs: 397.6396. Time: 4653.6881 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #233: GFLOPs: 651.9209. Time: 2838.5204 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #234: GFLOPs: 586.2754. Time: 3156.3511 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #235: GFLOPs: 506.7742. Time: 3651.5095 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #236: GFLOPs: 508.1213. Time: 3641.8293 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #237: GFLOPs: 557.4872. Time: 3319.3422 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #238: GFLOPs: 608.1021. Time: 3043.0595 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #239: GFLOPs: 50.2523. Time: 36824.0230 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #240: GFLOPs: 873.8402. Time: 2117.6537 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #241: GFLOPs: 643.1079. Time: 2877.4189 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #242: GFLOPs: 516.0308. Time: 3586.0084 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #243: GFLOPs: 485.3006. Time: 3813.0814 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #244: GFLOPs: 572.5089. Time: 3232.2481 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #245: GFLOPs: 666.8411. Time: 2775.0104 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #246: GFLOPs: 667.2091. Time: 2773.4795 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #247: GFLOPs: 667.6919. Time: 2771.4744 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #248: GFLOPs: 690.4297. Time: 2680.2016 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #249: GFLOPs: 604.7473. Time: 3059.9405 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #250: GFLOPs: 490.5343. Time: 3772.3989 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #251: GFLOPs: 423.0514. Time: 4374.1512 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #252: GFLOPs: 92.0104. Time: 20111.7556 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #253: GFLOPs: 785.0487. Time: 2357.1670 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #254: GFLOPs: 1.2153. Time: 1522722.0030 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #255: GFLOPs: 5.7501. Time: 321821.3530 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #256: GFLOPs: 2.5953. Time: 713006.9410 us. Best GFLOPs: 1051.4913
2024-04-30 09:22:22 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 09:22:23 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 09:22:28 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:22:28 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 09:22:40 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:22:51 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:23:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:23:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 09:23:17 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8929  0.8929  0.8499  0.8439  0.8430  0.8352  0.8230  0.8223  0.8215  0.8114  0.8114  0.8071  0.8055  0.7981  0.7981  0.7980
[17 : 32]:	0.7895  0.7835  0.7825  0.7747  0.7740  0.7740  0.7701  0.7680  0.7641  0.7592  0.7545  0.7533  0.7448  0.7418  0.7311  0.7237
[33 : 48]:	0.7217  0.7200  0.7169  0.7169  0.7169  0.7161  0.7073  0.6974  0.6950  0.6944  0.6927  0.6927  0.6896  0.6893  0.6889  0.6875
[49 : 64]:	0.6851  0.6842  0.6809  0.6775  0.6763  0.6762  0.6755  0.6728  0.6686  0.6651  0.6639  0.6595  0.6517  0.6516  0.6512  0.6494
2024-04-30 09:23:17 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 09:23:17 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #257: GFLOPs: 856.7897. Time: 2159.7958 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #258: GFLOPs: 857.9290. Time: 2156.9277 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #259: GFLOPs: 991.5600. Time: 1866.2421 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #260: GFLOPs: 952.5075. Time: 1942.7572 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #261: GFLOPs: 1040.8373. Time: 1777.8869 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #262: GFLOPs: 865.3258. Time: 2138.4903 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #263: GFLOPs: 934.4029. Time: 1980.3993 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #264: GFLOPs: 896.3363. Time: 2064.5050 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #265: GFLOPs: 914.4339. Time: 2023.6464 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #266: GFLOPs: 910.7782. Time: 2031.7689 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #267: GFLOPs: 911.8419. Time: 2029.3989 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #268: GFLOPs: 800.0258. Time: 2313.0390 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #269: GFLOPs: 788.0370. Time: 2348.2285 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #270: GFLOPs: 827.0727. Time: 2237.3980 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #271: GFLOPs: 833.4960. Time: 2220.1557 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #272: GFLOPs: 755.6537. Time: 2448.8611 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #273: GFLOPs: 87.6987. Time: 21100.5506 us. Best GFLOPs: 1051.4913
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #274: GFLOPs: 1106.4064. Time: 1672.5237 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #275: GFLOPs: 891.5973. Time: 2075.4783 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #276: GFLOPs: 856.6318. Time: 2160.1941 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #277: GFLOPs: 85.6764. Time: 21598.6090 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #278: GFLOPs: 85.4749. Time: 21649.5180 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #279: GFLOPs: 878.4393. Time: 2106.5666 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #280: GFLOPs: 821.7105. Time: 2251.9987 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #281: GFLOPs: 805.2609. Time: 2298.0017 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #282: GFLOPs: 807.3849. Time: 2291.9562 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #283: GFLOPs: 525.2951. Time: 3522.7647 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #284: GFLOPs: 885.3211. Time: 2090.1917 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #285: GFLOPs: 650.6415. Time: 2844.1020 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #286: GFLOPs: 897.5868. Time: 2061.6289 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #287: GFLOPs: 865.3987. Time: 2138.3101 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #288: GFLOPs: 798.6729. Time: 2316.9571 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #289: GFLOPs: 879.0983. Time: 2104.9874 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #290: GFLOPs: 861.9685. Time: 2146.8196 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #291: GFLOPs: 739.2726. Time: 2503.1237 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #292: GFLOPs: 313.9487. Time: 5894.2457 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #293: GFLOPs: 572.9730. Time: 3229.6303 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #294: GFLOPs: 791.1082. Time: 2339.1122 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #295: GFLOPs: 880.2749. Time: 2102.1738 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #296: GFLOPs: 782.6320. Time: 2364.4457 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #297: GFLOPs: 855.7523. Time: 2162.4141 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #298: GFLOPs: 319.3593. Time: 5794.3863 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #299: GFLOPs: 784.0734. Time: 2360.0991 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #300: GFLOPs: 782.0120. Time: 2366.3202 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #301: GFLOPs: 863.6806. Time: 2142.5638 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #302: GFLOPs: 795.0123. Time: 2327.6256 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #303: GFLOPs: 813.5046. Time: 2274.7148 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #304: GFLOPs: 789.8528. Time: 2342.8300 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #305: GFLOPs: 891.1100. Time: 2076.6132 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #306: GFLOPs: 856.9821. Time: 2159.3111 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #307: GFLOPs: 650.6001. Time: 2844.2833 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #308: GFLOPs: 774.9877. Time: 2387.7681 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #309: GFLOPs: 895.5821. Time: 2066.2437 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #310: GFLOPs: 792.5483. Time: 2334.8620 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #311: GFLOPs: 766.6670. Time: 2413.6828 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #312: GFLOPs: 954.7579. Time: 1938.1781 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #313: GFLOPs: 768.8789. Time: 2406.7392 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #314: GFLOPs: 48.9178. Time: 37828.5967 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #315: GFLOPs: 955.8396. Time: 1935.9848 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #316: GFLOPs: 541.1047. Time: 3419.8387 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #317: GFLOPs: 748.4035. Time: 2472.5844 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #318: GFLOPs: 23.2421. Time: 79618.1353 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #319: GFLOPs: 40.9665. Time: 45170.8203 us. Best GFLOPs: 1106.4064
2024-04-30 09:24:32 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #320: GFLOPs: 47.6014. Time: 38874.6747 us. Best GFLOPs: 1106.4064
2024-04-30 10:19:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 10:19:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 10:19:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 10:19:36 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 10:19:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 10:19:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 10:20:09 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 10:20:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 10:20:25 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8715  0.8448  0.8424  0.8412  0.8412  0.8386  0.8323  0.8253  0.8212  0.8177  0.8150  0.8143  0.8143  0.8120  0.8080  0.8075
[17 : 32]:	0.8068  0.7994  0.7984  0.7974  0.7974  0.7974  0.7946  0.7917  0.7917  0.7900  0.7900  0.7852  0.7819  0.7793  0.7747  0.7697
[33 : 48]:	0.7685  0.7678  0.7676  0.7667  0.7660  0.7638  0.7635  0.7630  0.7608  0.7593  0.7581  0.7576  0.7561  0.7531  0.7530  0.7530
[49 : 64]:	0.7523  0.7515  0.7498  0.7468  0.7456  0.7455  0.7450  0.7447  0.7384  0.7383  0.7369  0.7369  0.7369  0.7340  0.7327  0.7322
2024-04-30 10:20:25 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 10:20:25 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #321: GFLOPs: 474.8214. Time: 3897.2355 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #322: GFLOPs: 988.9094. Time: 1871.2440 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #323: GFLOPs: 893.4821. Time: 2071.1001 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #324: GFLOPs: 892.9934. Time: 2072.2334 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #325: GFLOPs: 893.4307. Time: 2071.2193 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #326: GFLOPs: 879.5172. Time: 2103.9850 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #327: GFLOPs: 875.6277. Time: 2113.3308 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #328: GFLOPs: 1007.4734. Time: 1836.7640 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #329: GFLOPs: 25.9744. Time: 71242.9970 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #330: GFLOPs: 827.9427. Time: 2235.0471 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #331: GFLOPs: 799.8536. Time: 2313.5371 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #332: GFLOPs: 910.2871. Time: 2032.8652 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #333: GFLOPs: 908.9731. Time: 2035.8039 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #334: GFLOPs: 890.4020. Time: 2078.2646 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #335: GFLOPs: 804.3400. Time: 2300.6328 us. Best GFLOPs: 1106.4064
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #336: GFLOPs: 1157.1374. Time: 1599.1972 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #337: GFLOPs: 1080.2156. Time: 1713.0754 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #338: GFLOPs: 869.1894. Time: 2128.9845 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #339: GFLOPs: 981.9918. Time: 1884.4260 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #340: GFLOPs: 888.3262. Time: 2083.1210 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #341: GFLOPs: 850.0015. Time: 2177.0442 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #342: GFLOPs: 893.9595. Time: 2069.9940 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #343: GFLOPs: 131.8788. Time: 14031.7555 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #344: GFLOPs: 842.0650. Time: 2197.5631 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #345: GFLOPs: 810.3599. Time: 2283.5420 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #346: GFLOPs: 547.2193. Time: 3381.6256 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #347: GFLOPs: 567.3796. Time: 3261.4691 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #348: GFLOPs: 1014.7738. Time: 1823.5501 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #349: GFLOPs: 895.6062. Time: 2066.1880 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #350: GFLOPs: 27.9533. Time: 66199.2997 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #351: GFLOPs: 822.9154. Time: 2248.7012 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #352: GFLOPs: 887.3421. Time: 2085.4311 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #353: GFLOPs: 1014.8579. Time: 1823.3990 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #354: GFLOPs: 843.2141. Time: 2194.5682 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #355: GFLOPs: 822.0136. Time: 2251.1683 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #356: GFLOPs: 808.7961. Time: 2287.9571 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #357: GFLOPs: 209.5503. Time: 8830.7704 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #358: GFLOPs: 829.0819. Time: 2231.9760 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #359: GFLOPs: 836.1340. Time: 2213.1512 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #360: GFLOPs: 771.4241. Time: 2398.7984 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #361: GFLOPs: 834.3073. Time: 2217.9969 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #362: GFLOPs: 913.4663. Time: 2025.7901 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #363: GFLOPs: 241.9429. Time: 7648.4624 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #364: GFLOPs: 916.9226. Time: 2018.1538 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #365: GFLOPs: 783.4659. Time: 2361.9290 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #366: GFLOPs: 994.6930. Time: 1860.3637 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #367: GFLOPs: 800.3147. Time: 2312.2041 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #368: GFLOPs: 668.9796. Time: 2766.1396 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #369: GFLOPs: 919.4289. Time: 2012.6524 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #370: GFLOPs: 869.5523. Time: 2128.0962 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #371: GFLOPs: 548.9479. Time: 3370.9774 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #372: GFLOPs: 785.6218. Time: 2355.4475 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #373: GFLOPs: 656.7279. Time: 2817.7438 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #374: GFLOPs: 731.4348. Time: 2529.9463 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #375: GFLOPs: 812.9416. Time: 2276.2901 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #376: GFLOPs: 895.6721. Time: 2066.0360 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #377: GFLOPs: 653.7687. Time: 2830.4976 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #378: GFLOPs: 997.3595. Time: 1855.3899 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #379: GFLOPs: 668.6205. Time: 2767.6249 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #380: GFLOPs: 789.7815. Time: 2343.0415 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #381: GFLOPs: 761.1324. Time: 2431.2340 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #382: GFLOPs: 8.7455. Time: 211594.3007 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #383: GFLOPs: 11.3326. Time: 163289.4607 us. Best GFLOPs: 1157.1374
2024-04-30 10:22:02 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #384: GFLOPs: 20.4590. Time: 90448.7997 us. Best GFLOPs: 1157.1374
2024-04-30 12:24:39 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 12:24:40 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 12:24:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 12:24:45 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 12:24:56 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 12:25:07 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 12:25:18 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 12:25:28 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 12:25:33 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9323  0.8806  0.8687  0.8614  0.8442  0.8427  0.8265  0.8256  0.8222  0.8171  0.8141  0.8030  0.7984  0.7944  0.7893  0.7893
[17 : 32]:	0.7872  0.7836  0.7778  0.7778  0.7762  0.7735  0.7734  0.7705  0.7703  0.7700  0.7700  0.7686  0.7686  0.7686  0.7686  0.7686
[33 : 48]:	0.7686  0.7686  0.7686  0.7686  0.7672  0.7655  0.7640  0.7617  0.7598  0.7575  0.7526  0.7511  0.7452  0.7449  0.7436  0.7435
[49 : 64]:	0.7433  0.7430  0.7410  0.7398  0.7367  0.7332  0.7332  0.7330  0.7314  0.7305  0.7305  0.7300  0.7290  0.7289  0.7261  0.7257
2024-04-30 12:25:34 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 12:25:34 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #385: GFLOPs: 992.5268. Time: 1864.4242 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #386: GFLOPs: 1068.4262. Time: 1731.9782 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #387: GFLOPs: 1078.6042. Time: 1715.6348 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #388: GFLOPs: 980.5111. Time: 1887.2717 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #389: GFLOPs: 663.4043. Time: 2789.3865 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #390: GFLOPs: 953.5689. Time: 1940.5949 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #391: GFLOPs: 1033.2902. Time: 1790.8724 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #392: GFLOPs: 895.4181. Time: 2066.6222 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #393: GFLOPs: 879.6518. Time: 2103.6630 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #394: GFLOPs: 840.0368. Time: 2202.8689 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #395: GFLOPs: 989.4946. Time: 1870.1375 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #396: GFLOPs: 1039.3474. Time: 1780.4353 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #397: GFLOPs: 818.3102. Time: 2261.3562 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #398: GFLOPs: 1080.9063. Time: 1711.9808 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #399: GFLOPs: 768.2404. Time: 2408.7395 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #400: GFLOPs: 605.2016. Time: 3057.6436 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #401: GFLOPs: 871.2577. Time: 2123.9307 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #402: GFLOPs: 876.7408. Time: 2110.6475 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #403: GFLOPs: 716.6678. Time: 2582.0761 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #404: GFLOPs: 892.1501. Time: 2074.1924 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #405: GFLOPs: 864.4283. Time: 2140.7106 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #406: GFLOPs: 906.5774. Time: 2041.1835 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #407: GFLOPs: 1044.3136. Time: 1771.9685 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #408: GFLOPs: 876.6093. Time: 2110.9642 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #409: GFLOPs: 940.0302. Time: 1968.5440 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #410: GFLOPs: 953.3684. Time: 1941.0030 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #411: GFLOPs: 905.1859. Time: 2044.3214 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #412: GFLOPs: 914.1122. Time: 2024.3586 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #413: GFLOPs: 886.2644. Time: 2087.9671 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #414: GFLOPs: 24.8226. Time: 74548.7450 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #415: GFLOPs: 94.2172. Time: 19640.7007 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #416: GFLOPs: 684.5677. Time: 2703.1526 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #417: GFLOPs: 25.9510. Time: 71307.1710 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #418: GFLOPs: 680.4275. Time: 2719.6002 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #419: GFLOPs: 89.7537. Time: 20617.4404 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #420: GFLOPs: 928.7384. Time: 1992.4780 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #421: GFLOPs: 868.8125. Time: 2129.9083 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #422: GFLOPs: 897.1593. Time: 2062.6113 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #423: GFLOPs: 1067.5816. Time: 1733.3484 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #424: GFLOPs: 536.6500. Time: 3448.2268 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #425: GFLOPs: 910.6590. Time: 2032.0349 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #426: GFLOPs: 884.2611. Time: 2092.6974 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #427: GFLOPs: 680.1609. Time: 2720.6662 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #428: GFLOPs: 1039.5087. Time: 1780.1592 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #429: GFLOPs: 511.7272. Time: 3616.1668 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #430: GFLOPs: 749.9019. Time: 2467.6439 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #431: GFLOPs: 886.9269. Time: 2086.4075 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #432: GFLOPs: 938.4897. Time: 1971.7754 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #433: GFLOPs: 885.8955. Time: 2088.8365 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #434: GFLOPs: 851.3214. Time: 2173.6689 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #435: GFLOPs: 705.8975. Time: 2621.4723 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #436: GFLOPs: 290.9122. Time: 6360.9943 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #437: GFLOPs: 614.6226. Time: 3010.7759 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #438: GFLOPs: 865.3650. Time: 2138.3936 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #439: GFLOPs: 863.2232. Time: 2143.6992 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #440: GFLOPs: 959.3469. Time: 1928.9070 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #441: GFLOPs: 874.2884. Time: 2116.5680 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #442: GFLOPs: 833.6755. Time: 2219.6777 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #443: GFLOPs: 832.5901. Time: 2222.5713 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #444: GFLOPs: 887.1210. Time: 2085.9510 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #445: GFLOPs: 840.2160. Time: 2202.3989 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #446: GFLOPs: 112.9747. Time: 16379.6869 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #447: GFLOPs: 62.6993. Time: 29513.7470 us. Best GFLOPs: 1157.1374
2024-04-30 12:27:22 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #448: GFLOPs: 30.6713. Time: 60333.0657 us. Best GFLOPs: 1157.1374
2024-04-30 14:38:50 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 14:38:51 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 14:38:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 14:38:56 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 14:39:08 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 14:39:18 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 14:39:29 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 14:39:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3a1b3b8)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x315f808)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x332b828)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x3403db8)]: 0 failure(s)
2024-04-30 14:39:45 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9654  0.8982  0.8982  0.8916  0.8873  0.8698  0.8632  0.8514  0.8461  0.8411  0.8397  0.8397  0.8359  0.8359  0.8321  0.8317
[17 : 32]:	0.8277  0.8268  0.8268  0.8130  0.8050  0.8035  0.7999  0.7986  0.7963  0.7877  0.7853  0.7847  0.7847  0.7808  0.7779  0.7761
[33 : 48]:	0.7753  0.7751  0.7751  0.7664  0.7653  0.7648  0.7640  0.7606  0.7598  0.7593  0.7578  0.7561  0.7536  0.7536  0.7534  0.7513
[49 : 64]:	0.7501  0.7479  0.7463  0.7460  0.7451  0.7451  0.7449  0.7442  0.7432  0.7427  0.7394  0.7389  0.7374  0.7370  0.7369  0.7361
2024-04-30 14:39:45 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 14:39:45 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #449: GFLOPs: 1073.2092. Time: 1724.2593 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #450: GFLOPs: 1076.6264. Time: 1718.7864 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #451: GFLOPs: 1071.0408. Time: 1727.7502 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #452: GFLOPs: 1057.6603. Time: 1749.6080 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #453: GFLOPs: 885.7667. Time: 2089.1403 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #454: GFLOPs: 1041.7470. Time: 1776.3343 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #455: GFLOPs: 1012.0969. Time: 1828.3732 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #456: GFLOPs: 1091.8206. Time: 1694.8671 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #457: GFLOPs: 998.7188. Time: 1852.8647 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #458: GFLOPs: 892.5124. Time: 2073.3503 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #459: GFLOPs: 926.9440. Time: 1996.3352 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #460: GFLOPs: 921.7714. Time: 2007.5376 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #461: GFLOPs: 942.4198. Time: 1963.5527 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #462: GFLOPs: 931.2913. Time: 1987.0163 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #463: GFLOPs: 873.5790. Time: 2118.2868 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #464: GFLOPs: 1004.1350. Time: 1842.8705 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #465: GFLOPs: 985.2140. Time: 1878.2628 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #466: GFLOPs: 998.2725. Time: 1853.6931 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #467: GFLOPs: 1002.6669. Time: 1845.5689 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #468: GFLOPs: 971.1203. Time: 1905.5218 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #469: GFLOPs: 957.5354. Time: 1932.5560 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #470: GFLOPs: 884.3300. Time: 2092.5344 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #471: GFLOPs: 894.7777. Time: 2068.1012 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #472: GFLOPs: 955.5738. Time: 1936.5232 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #473: GFLOPs: 984.9366. Time: 1878.7919 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #474: GFLOPs: 882.0020. Time: 2098.0575 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #475: GFLOPs: 812.5574. Time: 2277.3663 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #476: GFLOPs: 836.3215. Time: 2212.6549 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #477: GFLOPs: 533.6409. Time: 3467.6707 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #478: GFLOPs: 859.7807. Time: 2152.2824 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #479: GFLOPs: 874.8433. Time: 2115.2255 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #480: GFLOPs: 909.5870. Time: 2034.4297 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #481: GFLOPs: 877.9218. Time: 2107.8083 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #482: GFLOPs: 933.6486. Time: 1981.9993 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #483: GFLOPs: 958.3438. Time: 1930.9260 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #484: GFLOPs: 931.0338. Time: 1987.5657 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #485: GFLOPs: 858.3162. Time: 2155.9549 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #486: GFLOPs: 945.7696. Time: 1956.5979 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #487: GFLOPs: 943.1459. Time: 1962.0409 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #488: GFLOPs: 875.2771. Time: 2114.1772 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #489: GFLOPs: 899.7741. Time: 2056.6172 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #490: GFLOPs: 966.3802. Time: 1914.8684 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #491: GFLOPs: 825.2302. Time: 2242.3936 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #492: GFLOPs: 824.5700. Time: 2244.1888 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #493: GFLOPs: 959.8820. Time: 1927.8316 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #494: GFLOPs: 496.7069. Time: 3725.5191 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #495: GFLOPs: 828.0219. Time: 2234.8333 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #496: GFLOPs: 899.6073. Time: 2056.9984 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #497: GFLOPs: 858.3441. Time: 2155.8846 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #498: GFLOPs: 808.0495. Time: 2290.0712 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #499: GFLOPs: 831.6284. Time: 2225.1416 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #500: GFLOPs: 783.5077. Time: 2361.8032 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #501: GFLOPs: 802.6077. Time: 2305.5983 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #502: GFLOPs: 832.1466. Time: 2223.7558 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #503: GFLOPs: 790.3706. Time: 2341.2952 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #504: GFLOPs: 847.4940. Time: 2183.4854 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #505: GFLOPs: 883.6228. Time: 2094.2092 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #506: GFLOPs: 787.4051. Time: 2350.1128 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #507: GFLOPs: 825.4685. Time: 2241.7461 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #508: GFLOPs: 868.3231. Time: 2131.1088 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #509: GFLOPs: 882.1365. Time: 2097.7375 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:121] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #510: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(28), T.int64(28), T.int64(256)), "float32"), p1: T.Buffer((T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(256), T.int64(32)), "float32"), p2: T.Buffer((T.int64(1), T.int64(16), T.int64(1), T.int64(1), T.int64(32)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(30), T.int64(30), T.int64(256)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(16), T.int64(28), T.int64(28), T.int64(32)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(30), T.int64(16), T.int64(256)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                    v_i3 = T.axis.spatial(T.int64(30), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(14) + ax3)
                    v_i4 = T.axis.spatial(T.int64(256), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(29) and T.int64(1) <= v_i3 and v_i3 < T.int64(29), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(28), T.int64(14), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(28), oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(14) + ow_1 + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(16), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(16), oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(28), oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(14) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(256), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)], p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(256), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(256)] * p1[v_oc_chunk, v_ic // T.int64(256), v_kh, v_kw, v_ic % T.int64(256), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(28), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(28), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(14) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(16) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 28, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 14, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[256, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b68)
l81 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l81)
l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l82, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b70)
l111 = sch.fuse(l110, preserve_unit_iters=True)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b112)
b135 = sch.decompose_reduction(block=b112, loop=l119)
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #511: GFLOPs: 16.8886. Time: 109570.7357 us. Best GFLOPs: 1157.1374
2024-04-30 14:41:41 [INFO] [task_scheduler.cc:131] [Task #14: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_6] Trial #512: GFLOPs: 199.2535. Time: 9287.1171 us. Best GFLOPs: 1157.1374
