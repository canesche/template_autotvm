2024-04-30 05:30:19 [INFO] [task_scheduler.cc:160] Initializing Task #22: "fused_nn_avg_pool2d"
2024-04-30 05:30:19 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        pool_sum = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)))
        for ax0, ax1, ax2, ax3, ax4, rv0, rv1 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16), T.int64(1), T.int64(1)):
            with T.block("pool_sum"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, v_rv0, v_rv1 = T.axis.remap("SSSSSRR", [ax0, ax1, ax2, ax3, ax4, rv0, rv1])
                T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4])
                T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                with T.init():
                    pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(0)
                pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)):
            with T.block("pool_avg"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.block_attr({"schedule_rule": "meta_schedule.pool_avg"})
                pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(6) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(6) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
2024-04-30 05:30:19 [INFO] [task_scheduler.cc:164] Total 1 design space(s) generated
2024-04-30 05:30:19 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)), "float32"), pool_avg: T.Buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            pool_sum = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)))
            for ax0, ax1, ax2, ax3, ax4, rv0, rv1 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16), T.int64(1), T.int64(1)):
                with T.block("pool_sum"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4, v_rv0, v_rv1 = T.axis.remap("SSSSSRR", [ax0, ax1, ax2, ax3, ax4, rv0, rv1])
                    T.reads(p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4])
                    T.writes(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    with T.init():
                        pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.float32(0)
                    pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p0[v_ax0, v_ax1, v_ax2 + v_rv0, v_ax3 + v_rv1, v_ax4]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(7), T.int64(7), T.int64(16)):
                with T.block("pool_avg"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T.writes(pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    pool_avg[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = pool_sum[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] / T.Cast("float32", T.max((T.min(T.int64(0), T.int64(6) - v_ax2) + T.int64(1) - T.max(T.int64(0) - v_ax2, T.int64(0))) * (T.min(T.int64(0), T.int64(6) - v_ax3) + T.int64(1) - T.max(T.int64(0) - v_ax3, T.int64(0))), T.int64(1)))
b0 = sch.get_block(name="pool_sum", func_name="main")
b1 = sch.get_block(name="pool_avg", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b1, ann_key="schedule_rule")
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v3 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v3)
l4 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l4, preserve_unit_loops=True, index=-1)
2024-04-30 06:14:54 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 06:14:54 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 06:14:56 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x35ae518)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a8e918)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3195738)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x35d6318)]: 0 failure(s)
2024-04-30 06:14:56 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-30 06:14:58 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x35ae518)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a8e918)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3195738)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x35d6318)]: 0 failure(s)
2024-04-30 06:15:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x35ae518)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a8e918)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3195738)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x35d6318)]: 0 failure(s)
2024-04-30 06:15:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x35ae518)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a8e918)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3195738)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x35d6318)]: 0 failure(s)
2024-04-30 06:15:03 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x35ae518)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x3a8e918)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x3195738)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x35d6318)]: 0 failure(s)
2024-04-30 06:15:04 [INFO] [evolutionary_search.cc:649] Scores of the best 48 candidates:
[1 : 16]:	0.9911  0.9352  0.9203  0.9172  0.9040  0.8973  0.8797  0.8493  0.8165  0.8007  0.8002  0.7752  0.7560  0.7531  0.7377  0.7252
[17 : 32]:	0.6966  0.6884  0.6648  0.6557  0.6549  0.6447  0.6031  0.6023  0.5967  0.5942  0.5874  0.5393  0.5236  0.4544  0.3055  0.3022
[33 : 48]:	0.2865  0.2409  0.2100  0.1923  0.1883  0.1752  0.1590  0.1033  0.0795  0.0787  0.0726  0.0507  0.0476  0.0312  0.0127  0.0126
2024-04-30 06:15:04 [INFO] [evolutionary_search.cc:727] Got 48 candidate(s) with evolutionary search
2024-04-30 06:15:04 [INFO] [evolutionary_search.cc:730] Sending 48 candidates(s) for measurement
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #1: GFLOPs: 40.7412. Time: 9.8526 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #2: GFLOPs: 18.5244. Time: 21.6691 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #3: GFLOPs: 16.2199. Time: 24.7478 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #4: GFLOPs: 9.3798. Time: 42.7949 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #5: GFLOPs: 17.3716. Time: 23.1072 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #6: GFLOPs: 39.0280. Time: 10.2851 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #7: GFLOPs: 18.0452. Time: 22.2446 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #8: GFLOPs: 31.7621. Time: 12.6379 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #9: GFLOPs: 37.7352. Time: 10.6375 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #10: GFLOPs: 9.3922. Time: 42.7386 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #11: GFLOPs: 39.7106. Time: 10.1083 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #12: GFLOPs: 40.1027. Time: 10.0095 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #13: GFLOPs: 37.3047. Time: 10.7603 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #14: GFLOPs: 39.0994. Time: 10.2663 us. Best GFLOPs: 40.7412
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #15: GFLOPs: 43.9519. Time: 9.1329 us. Best GFLOPs: 43.9519
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #16: GFLOPs: 39.3028. Time: 10.2132 us. Best GFLOPs: 43.9519
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #17: GFLOPs: 18.8942. Time: 21.2450 us. Best GFLOPs: 43.9519
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #18: GFLOPs: 36.5297. Time: 10.9885 us. Best GFLOPs: 43.9519
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #19: GFLOPs: 40.7005. Time: 9.8625 us. Best GFLOPs: 43.9519
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #20: GFLOPs: 40.5515. Time: 9.8987 us. Best GFLOPs: 43.9519
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #21: GFLOPs: 44.7344. Time: 8.9731 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #22: GFLOPs: 42.5988. Time: 9.4230 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #23: GFLOPs: 43.6107. Time: 9.2043 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #24: GFLOPs: 42.2074. Time: 9.5104 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #25: GFLOPs: 43.1743. Time: 9.2974 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #26: GFLOPs: 43.6022. Time: 9.2061 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #27: GFLOPs: 36.3728. Time: 11.0359 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #28: GFLOPs: 35.6716. Time: 11.2529 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #29: GFLOPs: 41.4313. Time: 9.6885 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #30: GFLOPs: 43.8641. Time: 9.1512 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #31: GFLOPs: 18.5376. Time: 21.6537 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #32: GFLOPs: 41.0882. Time: 9.7694 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #33: GFLOPs: 40.0148. Time: 10.0315 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #34: GFLOPs: 18.7405. Time: 21.4193 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #35: GFLOPs: 17.2151. Time: 23.3171 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #36: GFLOPs: 42.9127. Time: 9.3541 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #37: GFLOPs: 42.7273. Time: 9.3947 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #38: GFLOPs: 41.9727. Time: 9.5635 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #39: GFLOPs: 18.8419. Time: 21.3040 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #40: GFLOPs: 40.6333. Time: 9.8788 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #41: GFLOPs: 18.3827. Time: 21.8362 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #42: GFLOPs: 38.1872. Time: 10.5116 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #43: GFLOPs: 42.7800. Time: 9.3831 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #44: GFLOPs: 17.3183. Time: 23.1783 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #45: GFLOPs: 42.0638. Time: 9.5428 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #46: GFLOPs: 18.8781. Time: 21.2631 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #47: GFLOPs: 39.2225. Time: 10.2341 us. Best GFLOPs: 44.7344
2024-04-30 06:42:42 [INFO] [task_scheduler.cc:131] [Task #22: fused_nn_avg_pool2d] Trial #48: GFLOPs: 41.4752. Time: 9.6783 us. Best GFLOPs: 44.7344
