2024-04-30 05:30:12 [INFO] [task_scheduler.cc:160] Initializing Task #20: "fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8"
2024-04-30 05:30:12 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)):
            with T.block("data_pad"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16), T.int64(512), T.int64(3), T.int64(3)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)):
            with T.block("T_relu"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], T.float32(0))
2024-04-30 05:30:12 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-30 05:30:12 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
            for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                    T.reads(data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)):
                with T.block("T_relu"):
                    v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 8, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
2024-04-30 05:30:12 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
            for n_0, oc_chunk_0, oh_0, ow_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(4), T.int64(512)):
                    with T.block("data_pad"):
                        v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_i3 = T.axis.spatial(T.int64(16), ow_0 * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(512), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8)):
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                        with T.block("conv2d_NCHWc"):
                            v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            with T.init():
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                    for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(2), T.int64(1)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 + ax4)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 8, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-30 05:30:12 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 0, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(7), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(1), T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(512), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(15) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(15), p0[v_n, v_ic // T.int64(512), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(512)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(2), T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 8, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=0)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
2024-04-30 06:10:23 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 06:10:23 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-30 06:10:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:10:29 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-30 06:10:34 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:10:40 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:10:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:10:52 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:10:53 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9999  0.9995  0.9988  0.9980  0.9973  0.9965  0.9961  0.9950  0.9948  0.9946  0.9946  0.9935  0.9926  0.9914  0.9908  0.9906
[17 : 32]:	0.9902  0.9899  0.9886  0.9874  0.9862  0.9861  0.9859  0.9849  0.9848  0.9848  0.9845  0.9833  0.9831  0.9830  0.9829  0.9821
[33 : 48]:	0.9820  0.9820  0.9810  0.9810  0.9808  0.9803  0.9793  0.9769  0.9769  0.9764  0.9748  0.9740  0.9737  0.9734  0.9725  0.9722
[49 : 64]:	0.9718  0.9718  0.9709  0.9706  0.9706  0.9705  0.9696  0.9690  0.9687  0.9685  0.9681  0.9674  0.9666  0.9659  0.9653  0.9650
2024-04-30 06:10:53 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 06:10:53 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1: GFLOPs: 8.0316. Time: 115175.8660 us. Best GFLOPs: 8.0316
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #2: GFLOPs: 42.6061. Time: 21711.5412 us. Best GFLOPs: 42.6061
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #3: GFLOPs: 25.4165. Time: 36395.4357 us. Best GFLOPs: 42.6061
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #4: GFLOPs: 36.1778. Time: 25569.4116 us. Best GFLOPs: 42.6061
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #5: GFLOPs: 6.3899. Time: 144766.9150 us. Best GFLOPs: 42.6061
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #6: GFLOPs: 72.7286. Time: 12719.1324 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #7: GFLOPs: 61.4092. Time: 15063.6106 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #8: GFLOPs: 0.3761. Time: 2459342.2113 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #9: GFLOPs: 19.3148. Time: 47893.0370 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #10: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(7), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1 in T.grid(T.int64(1), T.int64(2), T.int64(14)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(4), T.int64(512)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(16), oh_1 + ax2)
                        v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(512), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(14), oh_1 + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(2) + ow_1 + ow_2_init + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(3), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(4), T.int64(8), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), oh_1 + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(2) + ow_1 + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused * T.int64(2) + ax3_ax4_fused // T.int64(16))
                        v_ax4 = T.axis.spatial(T.int64(16), ax3_ax4_fused % T.int64(16))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 8, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 4, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b69)
l107 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l107)
l108 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l108)
sch.annotate(block_or_loop=l107, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l107, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
l115 = sch.fuse(l113, l114, preserve_unit_iters=True)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b116)
b139 = sch.decompose_reduction(block=b116, loop=l123)
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #11: GFLOPs: 66.1382. Time: 13986.5430 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #12: GFLOPs: 18.2993. Time: 50550.7223 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #13: GFLOPs: 35.4325. Time: 26107.2240 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #14: GFLOPs: 1.0985. Time: 842077.9027 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #15: GFLOPs: 20.6114. Time: 44880.2850 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #16: GFLOPs: 42.9484. Time: 21538.5304 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #17: GFLOPs: 13.7703. Time: 67176.7320 us. Best GFLOPs: 72.7286
2024-04-30 06:42:36 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #18: GFLOPs: 46.5544. Time: 19870.1767 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #19: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(9), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(2) * T.int64(7) + ax3)
                    v_i4 = T.axis.spatial(T.int64(512), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oc_block_0 in range(T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(7), T.int64(4)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(14) * T.int64(8) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + oh_1 + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(2) * T.int64(7) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(4) + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(512), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(14) * T.int64(8) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(2) * T.int64(7) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(4) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(7)):
                    for ax4_fused in T.vectorized(T.int64(16)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(14) * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(2) * T.int64(7) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 8, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[512, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=3)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b68)
l80 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l81, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110, l111 = sch.get_loops(block=b70)
l112 = sch.fuse(l111, preserve_unit_iters=True)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136 = sch.get_loops(block=b113)
b137 = sch.decompose_reduction(block=b113, loop=l121)
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #20: GFLOPs: 1.6950. Time: 545737.5707 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #21: GFLOPs: 1.1628. Time: 795516.0787 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #22: GFLOPs: 2.2786. Time: 405974.5340 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #23: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(2)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(14), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 + ow_2_init + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(64) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(14)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(8) + ax1)
                            v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 2, 4, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 14, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77 = sch.get_loops(block=b68)
l78 = sch.fuse(l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l78)
l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l79, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
l115 = sch.fuse(l114, preserve_unit_iters=True)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141 = sch.get_loops(block=b116)
b142 = sch.decompose_reduction(block=b116, loop=l126)
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #24: GFLOPs: 41.3790. Time: 22355.4084 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #25: GFLOPs: 10.8833. Time: 84996.5690 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #26: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_fused_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(7), T.int64(2), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(8) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(8)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(4) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(8) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(16))
                    v_ax4 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(16))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[8, 1, 2, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 1, 8])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76 = sch.get_loops(block=b67)
l77 = sch.fuse(l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l77)
l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l78, preserve_unit_iters=True)
sch.parallel(loop=l103)
l104 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l104)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109 = sch.get_loops(block=b69)
l110 = sch.fuse(l105, l106, l107, l108, l109, preserve_unit_iters=True)
l111, l112 = sch.split(loop=l110, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l111)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b113)
b139 = sch.decompose_reduction(block=b113, loop=l123)
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #27: GFLOPs: 1.6928. Time: 546470.9897 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #28: GFLOPs: 22.3073. Time: 41468.2370 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #29: GFLOPs: 21.1717. Time: 43692.4977 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #30: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_fused_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_0 in range(T.int64(2)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(3), T.int64(512)):
                    with T.block("data_pad"):
                        v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                        v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) + ax3)
                        v_i4 = T.axis.spatial(T.int64(512), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(7), T.int64(1)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(14) * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) + ow_1 + ow_2_init + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(512), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(7), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(14) * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) + ow_1 + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(512), ic_0 + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(1)):
                    for ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_fused_fused // T.int64(14) * T.int64(16) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_fused_fused % T.int64(14) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(8) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[512, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=2)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80 = sch.get_loops(block=b68)
l81 = sch.fuse(l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l81)
l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b69)
l105 = sch.fuse(l82, preserve_unit_iters=True)
sch.parallel(loop=l105)
l106 = sch.fuse(l104, preserve_unit_iters=True)
sch.vectorize(loop=l106)
sch.annotate(block_or_loop=l105, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l105, ann_key="pragma_unroll_explicit", ann_val=1)
l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b115)
b139 = sch.decompose_reduction(block=b115, loop=l123)
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #31: GFLOPs: 54.0655. Time: 17109.6910 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #32: GFLOPs: 21.4565. Time: 43112.5280 us. Best GFLOPs: 72.7286
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #33: GFLOPs: 81.1976. Time: 11392.5065 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #34: GFLOPs: 24.9936. Time: 37011.2890 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #35: GFLOPs: 30.4016. Time: 30427.4990 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #36: GFLOPs: 5.1474. Time: 179709.7407 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #37: GFLOPs: 0.9155. Time: 1010447.0290 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #38: GFLOPs: 23.6923. Time: 39044.1497 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #39: GFLOPs: 78.6578. Time: 11760.3666 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #40: GFLOPs: 35.9539. Time: 25728.6100 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #41: GFLOPs: 5.2056. Time: 177701.7337 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #42: GFLOPs: 13.7068. Time: 67488.2543 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #43: GFLOPs: 18.0803. Time: 51163.0403 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #44: GFLOPs: 69.6910. Time: 13273.5256 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #45: GFLOPs: 16.2079. Time: 57073.5463 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #46: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(3), T.int64(512)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(16), oh_1 + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(7) + ow_1 + ax3)
                        v_i4 = T.axis.spatial(T.int64(512), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_1 in range(T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(14) * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + oh_1 + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(7) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(14) * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(7) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(7)):
                for ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(14) * T.int64(8) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(7) + ax3)
                        v_ax4 = T.axis.spatial(T.int64(16), ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 2, 1, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 8, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b68)
l85 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107 = sch.get_loops(block=b69)
l108 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l108)
sch.annotate(block_or_loop=l108, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l108, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
l115 = sch.fuse(l114, preserve_unit_iters=True)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b116)
b139 = sch.decompose_reduction(block=b116, loop=l123)
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #47: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1 in T.grid(T.int64(1), T.int64(1), T.int64(7)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(16), T.int64(512)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(16), oh_1 * T.int64(2) + ax2)
                        v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for ow_1, oc_block_1 in T.grid(T.int64(7), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(4), T.int64(1), T.int64(8), T.int64(1), T.int64(1)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(128), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(4), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(2)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(4) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(2) * T.int64(16) + ax1)
                        v_ax2, v_ax3 = T.axis.remap("SS", [ax2, ax3])
                        v_ax4 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(2) * T.int64(8) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 4, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[128, 4])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b69)
l107 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l107)
l108 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l108)
sch.annotate(block_or_loop=l107, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l107, ann_key="pragma_unroll_explicit", ann_val=1)
l109, l110, l111, l112, l113, l114 = sch.get_loops(block=b70)
l115 = sch.fuse(l114, preserve_unit_iters=True)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b116)
b139 = sch.decompose_reduction(block=b116, loop=l123)
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #48: GFLOPs: 31.6542. Time: 29223.4762 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #49: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_fused_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(7) * T.int64(2) + ax2)
                    v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(8)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(7) * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(2) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(3), T.int64(1), T.int64(4), T.int64(2), T.int64(2), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(7) * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(7) * T.int64(2) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(14)):
                    for ax4_fused in T.vectorized(T.int64(2)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(7) * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(2) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 2, 1, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[8, 2, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78 = sch.get_loops(block=b68)
l79 = sch.fuse(l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l79)
l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l80, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110, l111, l112 = sch.get_loops(block=b70)
l113 = sch.fuse(l112, preserve_unit_iters=True)
sch.vectorize(loop=l113)
b114 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b114)
b139 = sch.decompose_reduction(block=b114, loop=l123)
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #50: GFLOPs: 2.7952. Time: 330944.2963 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #51: GFLOPs: 32.1049. Time: 28813.2395 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #52: GFLOPs: 27.7350. Time: 33352.9873 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #53: GFLOPs: 12.0049. Time: 77055.6753 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #54: GFLOPs: 59.7598. Time: 15479.3773 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #55: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(14), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused + ow_1 + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0 in range(T.int64(256)):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(3)):
                        for ax4_fused in T.vectorized(T.int64(2)):
                            with T.block("data_pad"):
                                v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                                v_i2 = T.axis.spatial(T.int64(16), oh_1 * T.int64(7) + ax2)
                                v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused + ax3)
                                v_i4 = T.axis.spatial(T.int64(512), ic_0 * T.int64(2) + ax4_fused)
                                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(8), T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(8), T.int64(7), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(8) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused, ax3_ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[14, 1, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 8, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[256, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b69)
l111 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l111)
sch.annotate(block_or_loop=l111, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l111, ann_key="pragma_unroll_explicit", ann_val=1)
l112, l113, l114, l115, l116, l117 = sch.get_loops(block=b70)
l118 = sch.fuse(l116, l117, preserve_unit_iters=True)
sch.vectorize(loop=l118)
b119 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141 = sch.get_loops(block=b119)
b142 = sch.decompose_reduction(block=b119, loop=l126)
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #56: GFLOPs: 27.3628. Time: 33806.6750 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #57: GFLOPs: 37.8631. Time: 24431.3228 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #58: GFLOPs: 10.5648. Time: 87558.9187 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #59: GFLOPs: 24.6804. Time: 37480.8767 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #60: GFLOPs: 26.4157. Time: 35018.7053 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #61: GFLOPs: 8.1393. Time: 113651.9207 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #62: GFLOPs: 5.5487. Time: 166713.5127 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #63: GFLOPs: 7.2163. Time: 128187.7850 us. Best GFLOPs: 81.1976
2024-04-30 06:42:37 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #64: GFLOPs: 30.0244. Time: 30809.7330 us. Best GFLOPs: 81.1976
2024-04-30 06:46:11 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 06:46:12 [INFO] [evolutionary_search.cc:715] Picked top 55 candidate(s) from database
2024-04-30 06:46:17 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:46:17 [INFO] [evolutionary_search.cc:723] Sampled 457 candidate(s)
2024-04-30 06:46:28 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:46:47 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:46:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:47:11 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:47:18 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9686  0.9686  0.9686  0.9686  0.9666  0.9629  0.9629  0.9629  0.9556  0.9501  0.9405  0.9404  0.9200  0.9139  0.8994  0.8967
[17 : 32]:	0.8926  0.8855  0.8855  0.8855  0.8839  0.8768  0.8768  0.8768  0.8756  0.8756  0.8750  0.8675  0.8675  0.8648  0.8648  0.8635
[33 : 48]:	0.8635  0.8635  0.8635  0.8612  0.8597  0.8578  0.8559  0.8543  0.8543  0.8543  0.8518  0.8518  0.8518  0.8462  0.8454  0.8454
[49 : 64]:	0.8429  0.8429  0.8417  0.8370  0.8343  0.8343  0.8290  0.8274  0.8255  0.8222  0.8108  0.8064  0.8064  0.7997  0.7996  0.7969
2024-04-30 06:47:19 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 06:47:19 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #65: GFLOPs: 52.6630. Time: 17565.3775 us. Best GFLOPs: 81.1976
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #66: GFLOPs: 94.7722. Time: 9760.7135 us. Best GFLOPs: 94.7722
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #67: GFLOPs: 134.7177. Time: 6866.5429 us. Best GFLOPs: 134.7177
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #68: GFLOPs: 88.7242. Time: 10426.0665 us. Best GFLOPs: 134.7177
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #69: GFLOPs: 68.1934. Time: 13565.0086 us. Best GFLOPs: 134.7177
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #70: GFLOPs: 71.8414. Time: 12876.2019 us. Best GFLOPs: 134.7177
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #71: GFLOPs: 126.1754. Time: 7331.4176 us. Best GFLOPs: 134.7177
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #72: GFLOPs: 114.4841. Time: 8080.1178 us. Best GFLOPs: 134.7177
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #73: GFLOPs: 127.9748. Time: 7228.3337 us. Best GFLOPs: 134.7177
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #74: GFLOPs: 101.6449. Time: 9100.7526 us. Best GFLOPs: 134.7177
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #75: GFLOPs: 188.8260. Time: 4898.9272 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #76: GFLOPs: 82.3410. Time: 11234.3184 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #77: GFLOPs: 101.0833. Time: 9151.3094 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #78: GFLOPs: 57.0030. Time: 16227.9981 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #79: GFLOPs: 68.3510. Time: 13533.7356 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #80: GFLOPs: 34.2359. Time: 27019.7028 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #81: GFLOPs: 75.8808. Time: 12190.7622 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #82: GFLOPs: 72.9713. Time: 12676.8369 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #83: GFLOPs: 126.1991. Time: 7330.0426 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #84: GFLOPs: 92.7947. Time: 9968.7251 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #85: GFLOPs: 21.6621. Time: 42703.4327 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #86: GFLOPs: 4.4426. Time: 208219.6670 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #87: GFLOPs: 2.5006. Time: 369927.3583 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #88: GFLOPs: 3.3680. Time: 274659.9180 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #89: GFLOPs: 4.5122. Time: 205008.4113 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #90: GFLOPs: 8.5496. Time: 108197.0743 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #91: GFLOPs: 95.4453. Time: 9691.8815 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #92: GFLOPs: 114.4801. Time: 8080.3985 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #93: GFLOPs: 89.0332. Time: 10389.8800 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #94: GFLOPs: 100.8942. Time: 9168.4635 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #95: GFLOPs: 52.5204. Time: 17613.0485 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #96: GFLOPs: 55.9025. Time: 16547.4681 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #97: GFLOPs: 41.3187. Time: 22388.0178 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #98: GFLOPs: 34.8553. Time: 26539.5573 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #99: GFLOPs: 67.5125. Time: 13701.8374 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #100: GFLOPs: 8.1892. Time: 112958.5900 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #101: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused in T.parallel(T.int64(98), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(4), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) * T.int64(2) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3)
                    v_i4 = T.axis.spatial(T.int64(512), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(8), T.int64(1), T.int64(8), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(49) * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) * T.int64(2) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(16) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(8), T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(8), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(49) * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) * T.int64(2) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(16) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(2)):
                    for ax3_ax4_fused in T.vectorized(T.int64(32)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(49) * T.int64(16) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3_ax4_fused // T.int64(16))
                            v_ax4 = T.axis.spatial(T.int64(16), ax3_ax4_fused % T.int64(16))
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 1, 2, 8])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 8, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[256, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b68)
l84 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, l78, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l112, l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b115)
b135 = sch.decompose_reduction(block=b115, loop=l119)
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #102: GFLOPs: 93.8740. Time: 9854.1116 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #103: GFLOPs: 77.9483. Time: 11867.4090 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #104: GFLOPs: 68.1599. Time: 13571.6814 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #105: GFLOPs: 54.1664. Time: 17077.8325 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #106: GFLOPs: 67.7172. Time: 13660.4116 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #107: GFLOPs: 25.5229. Time: 36243.7577 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #108: GFLOPs: 54.3317. Time: 17025.8715 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #109: GFLOPs: 52.8596. Time: 17500.0448 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #110: GFLOPs: 102.4050. Time: 9033.2015 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #111: GFLOPs: 28.4498. Time: 32515.0158 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #112: GFLOPs: 48.0873. Time: 19236.7633 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #113: GFLOPs: 69.6584. Time: 13279.7288 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #114: GFLOPs: 68.5710. Time: 13490.3274 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #115: GFLOPs: 107.0442. Time: 8641.7081 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #116: GFLOPs: 89.7397. Time: 10308.0895 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #117: GFLOPs: 58.6188. Time: 15780.6906 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #118: GFLOPs: 135.6662. Time: 6818.5368 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #119: GFLOPs: 61.7556. Time: 14979.1280 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #120: GFLOPs: 37.3322. Time: 24778.7454 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #121: GFLOPs: 132.7190. Time: 6969.9481 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #122: GFLOPs: 82.8164. Time: 11169.8302 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #123: GFLOPs: 75.9332. Time: 12182.3411 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #124: GFLOPs: 85.9820. Time: 10758.5824 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #125: GFLOPs: 82.8489. Time: 11165.4489 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #126: GFLOPs: 59.6818. Time: 15499.6057 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #127: GFLOPs: 77.8470. Time: 11882.8592 us. Best GFLOPs: 188.8260
2024-04-30 06:49:15 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #128: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused in T.parallel(T.int64(28), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(4), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(14) * T.int64(7) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + ax3)
                    v_i4 = T.axis.spatial(T.int64(512), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_1, ow_1, oc_block_1 in T.grid(T.int64(7), T.int64(1), T.int64(16)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) * T.int64(16) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(14) * T.int64(7) + oh_1 + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(3), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) * T.int64(16) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(14) * T.int64(7) + oh_1 + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(14) // T.int64(2) * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(16))
                    v_ax4 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(16))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 8, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 16, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[256, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=6)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81 = sch.get_loops(block=b67)
l82 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l82)
l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l83, preserve_unit_iters=True)
sch.parallel(loop=l103)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l104, l105, l106, l107, l108, preserve_unit_iters=True)
l110, l111 = sch.split(loop=l109, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l110)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b112)
b133 = sch.decompose_reduction(block=b112, loop=l117)
2024-04-30 06:58:29 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 06:58:30 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 06:58:35 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:58:35 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 06:58:46 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:58:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:59:11 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:59:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 06:59:31 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8012  0.7883  0.7848  0.7803  0.7727  0.7705  0.7705  0.7674  0.7530  0.7519  0.7336  0.7314  0.7246  0.7245  0.7047  0.6905
[17 : 32]:	0.6865  0.6815  0.6697  0.6692  0.6671  0.6620  0.6598  0.6567  0.6543  0.6543  0.6541  0.6508  0.6473  0.6464  0.6461  0.6456
[33 : 48]:	0.6448  0.6448  0.6448  0.6447  0.6401  0.6365  0.6342  0.6342  0.6339  0.6334  0.6329  0.6326  0.6325  0.6257  0.6214  0.6210
[49 : 64]:	0.6205  0.6197  0.6190  0.6185  0.6182  0.6157  0.6138  0.6114  0.6101  0.6092  0.6090  0.6090  0.6090  0.6077  0.6067  0.6057
2024-04-30 06:59:31 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 06:59:31 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #129: GFLOPs: 200.2863. Time: 4618.6131 us. Best GFLOPs: 200.2863
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #130: GFLOPs: 164.9513. Time: 5607.9876 us. Best GFLOPs: 200.2863
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #131: GFLOPs: 84.3459. Time: 10967.2708 us. Best GFLOPs: 200.2863
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #132: GFLOPs: 78.3235. Time: 11810.5654 us. Best GFLOPs: 200.2863
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #133: GFLOPs: 359.0674. Time: 2576.2428 us. Best GFLOPs: 359.0674
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #134: GFLOPs: 205.8616. Time: 4493.5265 us. Best GFLOPs: 359.0674
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #135: GFLOPs: 288.8615. Time: 3202.3811 us. Best GFLOPs: 359.0674
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #136: GFLOPs: 345.5576. Time: 2676.9623 us. Best GFLOPs: 359.0674
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #137: GFLOPs: 279.1735. Time: 3313.5116 us. Best GFLOPs: 359.0674
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #138: GFLOPs: 75.5763. Time: 12239.8774 us. Best GFLOPs: 359.0674
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #139: GFLOPs: 99.6989. Time: 9278.3869 us. Best GFLOPs: 359.0674
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #140: GFLOPs: 106.0436. Time: 8723.2459 us. Best GFLOPs: 359.0674
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #141: GFLOPs: 404.0767. Time: 2289.2803 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #142: GFLOPs: 85.1193. Time: 10867.6300 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #143: GFLOPs: 112.0986. Time: 8252.0628 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #144: GFLOPs: 65.6474. Time: 14091.1051 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #145: GFLOPs: 81.6300. Time: 11332.1617 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #146: GFLOPs: 102.2879. Time: 9043.5432 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #147: GFLOPs: 23.1902. Time: 39889.4837 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #148: GFLOPs: 18.4959. Time: 50013.4020 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #149: GFLOPs: 111.5390. Time: 8293.4666 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #150: GFLOPs: 73.5314. Time: 12580.2728 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #151: GFLOPs: 79.6368. Time: 11615.7954 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #152: GFLOPs: 214.5377. Time: 4311.8054 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #153: GFLOPs: 184.9057. Time: 5002.7909 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #154: GFLOPs: 185.5223. Time: 4986.1634 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #155: GFLOPs: 86.5073. Time: 10693.2580 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #156: GFLOPs: 106.6453. Time: 8674.0342 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #157: GFLOPs: 105.1478. Time: 8797.5672 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #158: GFLOPs: 39.5719. Time: 23376.2784 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #159: GFLOPs: 82.8458. Time: 11165.8677 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #160: GFLOPs: 105.3730. Time: 8778.7644 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #161: GFLOPs: 57.4610. Time: 16098.6529 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #162: GFLOPs: 57.7791. Time: 16010.0356 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #163: GFLOPs: 49.8439. Time: 18558.8412 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #164: GFLOPs: 140.0560. Time: 6604.8193 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #165: GFLOPs: 124.6667. Time: 7420.1413 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #166: GFLOPs: 57.0993. Time: 16200.6290 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #167: GFLOPs: 179.2821. Time: 5159.7148 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #168: GFLOPs: 175.4113. Time: 5273.5743 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #169: GFLOPs: 95.0802. Time: 9729.0956 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #170: GFLOPs: 168.2551. Time: 5497.8720 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #171: GFLOPs: 55.5127. Time: 16663.6461 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #172: GFLOPs: 50.4877. Time: 18322.1837 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #173: GFLOPs: 62.0371. Time: 14911.1553 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #174: GFLOPs: 60.4092. Time: 15312.9836 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #175: GFLOPs: 113.6020. Time: 8142.8563 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #176: GFLOPs: 46.2852. Time: 19985.7671 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #177: GFLOPs: 157.2214. Time: 5883.7059 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #178: GFLOPs: 117.3869. Time: 7880.3079 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #179: GFLOPs: 193.6970. Time: 4775.7298 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #180: GFLOPs: 46.5868. Time: 19856.3570 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #181: GFLOPs: 182.4387. Time: 5070.4417 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #182: GFLOPs: 46.4958. Time: 19895.2127 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #183: GFLOPs: 113.5214. Time: 8148.6395 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #184: GFLOPs: 89.9847. Time: 10280.0194 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #185: GFLOPs: 121.9033. Time: 7588.3464 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #186: GFLOPs: 41.1149. Time: 22498.9972 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #187: GFLOPs: 133.0562. Time: 6952.2837 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #188: GFLOPs: 66.2653. Time: 13959.7165 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #189: GFLOPs: 87.0980. Time: 10620.7368 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #190: GFLOPs: 41.7065. Time: 22179.8758 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #191: GFLOPs: 45.0082. Time: 20552.8136 us. Best GFLOPs: 404.0767
2024-04-30 07:01:17 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #192: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(896), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7)):
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(4), T.int64(512)):
                    with T.block("data_pad"):
                        v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                        v_i2 = T.axis.spatial(T.int64(16), oh_1 + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(16), ow_1 * T.int64(2) + ax3)
                        v_i4 = T.axis.spatial(T.int64(512), ax4)
                        T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                        T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                        data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                for oc_block_1 in range(T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(2) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + oh_1 + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(8) * T.int64(2) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(16), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(56) * T.int64(2) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + oh_1 + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(8) * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(16))
                    v_ax4 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(16))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[16, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 2, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[8, 2, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=8)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83 = sch.get_loops(block=b67)
l84 = sch.fuse(l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l84)
l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b68)
l107 = sch.fuse(l85, preserve_unit_iters=True)
sch.parallel(loop=l107)
sch.annotate(block_or_loop=l107, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l107, ann_key="pragma_unroll_explicit", ann_val=1)
l108, l109, l110, l111, l112 = sch.get_loops(block=b69)
l113 = sch.fuse(l108, l109, l110, l111, l112, preserve_unit_iters=True)
l114, l115 = sch.split(loop=l113, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l114)
sch.vectorize(loop=l115)
b116 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138 = sch.get_loops(block=b116)
b139 = sch.decompose_reduction(block=b116, loop=l123)
2024-04-30 07:38:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 07:38:25 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 07:38:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:38:29 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 07:38:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:38:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:39:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:39:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:39:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8293  0.8256  0.8240  0.8233  0.8110  0.7915  0.7894  0.7686  0.7546  0.7423  0.7339  0.7339  0.7299  0.7158  0.7057  0.6908
[17 : 32]:	0.6891  0.6864  0.6830  0.6810  0.6680  0.6680  0.6609  0.6511  0.6407  0.6275  0.6110  0.6102  0.6093  0.6066  0.5993  0.5990
[33 : 48]:	0.5955  0.5948  0.5870  0.5763  0.5747  0.5691  0.5685  0.5652  0.5614  0.5598  0.5554  0.5554  0.5525  0.5505  0.5493  0.5492
[49 : 64]:	0.5489  0.5481  0.5462  0.5460  0.5439  0.5439  0.5417  0.5405  0.5397  0.5391  0.5337  0.5326  0.5317  0.5301  0.5293  0.5273
2024-04-30 07:39:28 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 07:39:28 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #193: GFLOPs: 295.9843. Time: 3125.3167 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #194: GFLOPs: 206.1031. Time: 4488.2616 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #195: GFLOPs: 152.8811. Time: 6050.7460 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #196: GFLOPs: 147.2065. Time: 6283.9938 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #197: GFLOPs: 312.1493. Time: 2963.4690 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #198: GFLOPs: 257.7275. Time: 3589.2353 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #199: GFLOPs: 288.2980. Time: 3208.6409 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #200: GFLOPs: 212.8924. Time: 4345.1288 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #201: GFLOPs: 24.3680. Time: 37961.4273 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #202: GFLOPs: 329.8815. Time: 2804.1730 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #203: GFLOPs: 66.0305. Time: 14009.3577 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #204: GFLOPs: 85.6618. Time: 10798.7960 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #205: GFLOPs: 288.5546. Time: 3205.7874 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #206: GFLOPs: 218.9006. Time: 4225.8665 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #207: GFLOPs: 275.4580. Time: 3358.2066 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #208: GFLOPs: 116.0613. Time: 7970.3096 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #209: GFLOPs: 288.9858. Time: 3201.0039 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #210: GFLOPs: 284.0027. Time: 3257.1693 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #211: GFLOPs: 280.1417. Time: 3302.0597 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #212: GFLOPs: 211.1034. Time: 4381.9513 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #213: GFLOPs: 94.8546. Time: 9752.2396 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #214: GFLOPs: 116.5282. Time: 7938.3775 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #215: GFLOPs: 223.3478. Time: 4141.7223 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #216: GFLOPs: 22.2945. Time: 41491.9953 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #217: GFLOPs: 326.3160. Time: 2834.8130 us. Best GFLOPs: 404.0767
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #218: GFLOPs: 434.9574. Time: 2126.7479 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #219: GFLOPs: 181.0664. Time: 5108.8710 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #220: GFLOPs: 179.1797. Time: 5162.6655 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #221: GFLOPs: 362.3918. Time: 2552.6092 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #222: GFLOPs: 98.1442. Time: 9425.3615 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #223: GFLOPs: 325.3401. Time: 2843.3156 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #224: GFLOPs: 292.2449. Time: 3165.3070 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #225: GFLOPs: 145.3388. Time: 6364.7459 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #226: GFLOPs: 78.1131. Time: 11842.3707 us. Best GFLOPs: 434.9574
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #227: GFLOPs: 532.2174. Time: 1738.0958 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #228: GFLOPs: 354.2269. Time: 2611.4470 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #229: GFLOPs: 264.3491. Time: 3499.3296 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #230: GFLOPs: 146.4189. Time: 6317.7963 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #231: GFLOPs: 258.3483. Time: 3580.6102 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #232: GFLOPs: 180.2759. Time: 5131.2724 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #233: GFLOPs: 170.6635. Time: 5420.2839 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #234: GFLOPs: 283.3014. Time: 3265.2314 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #235: GFLOPs: 292.0561. Time: 3167.3530 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #236: GFLOPs: 20.6642. Time: 44765.5153 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #237: GFLOPs: 128.3350. Time: 7208.0477 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #238: GFLOPs: 334.5300. Time: 2765.2074 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #239: GFLOPs: 174.3096. Time: 5306.9077 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #240: GFLOPs: 401.0566. Time: 2306.5193 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #241: GFLOPs: 293.5590. Time: 3151.1374 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #242: GFLOPs: 303.8964. Time: 3043.9476 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #243: GFLOPs: 210.5590. Time: 4393.2809 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #244: GFLOPs: 150.1369. Time: 6161.3432 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #245: GFLOPs: 281.9838. Time: 3280.4894 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #246: GFLOPs: 269.6263. Time: 3430.8398 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #247: GFLOPs: 409.5883. Time: 2258.4745 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #248: GFLOPs: 33.7202. Time: 27432.9350 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #249: GFLOPs: 216.6083. Time: 4270.5881 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #250: GFLOPs: 113.4704. Time: 8152.2976 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #251: GFLOPs: 294.6405. Time: 3139.5707 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #252: GFLOPs: 124.0456. Time: 7457.2969 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #253: GFLOPs: 130.6301. Time: 7081.4053 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #254: GFLOPs: 2.3575. Time: 392389.2893 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #255: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for i0_i1_i2_i3_i4_fused in T.parallel(T.int64(131072)):
            with T.block("data_pad"):
                v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                v_i1 = T.axis.spatial(T.int64(1), T.int64(0))
                v_i2 = T.axis.spatial(T.int64(16), i0_i1_i2_i3_i4_fused // T.int64(8192))
                v_i3 = T.axis.spatial(T.int64(16), i0_i1_i2_i3_i4_fused % T.int64(8192) // T.int64(512))
                v_i4 = T.axis.spatial(T.int64(512), i0_i1_i2_i3_i4_fused % T.int64(512))
                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(256), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(4) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(16) * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(14) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(14), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(4) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(16) * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(14) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(4), T.int64(7), T.int64(14), T.int64(1)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), ax0)
                    v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(32) * T.int64(4) + ax1)
                    v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(32) // T.int64(16) * T.int64(7) + ax2)
                    v_ax3 = T.axis.spatial(T.int64(14), ax3)
                    v_ax4 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(16) + ax4)
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 8, 2, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 16, 1, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75 = sch.get_loops(block=b68)
l76 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l76)
l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b69)
l103 = sch.fuse(l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, preserve_unit_iters=True)
sch.parallel(loop=l103)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108, l109 = sch.get_loops(block=b70)
b110 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127 = sch.get_loops(block=b110)
b128 = sch.decompose_reduction(block=b110, loop=l112)
2024-04-30 07:41:24 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #256: GFLOPs: 1.7047. Time: 542647.2003 us. Best GFLOPs: 532.2174
2024-04-30 07:41:24 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 07:41:25 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 07:41:29 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:41:29 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 07:41:41 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:41:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:42:06 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:42:19 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:42:27 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9652  0.9652  0.9580  0.9580  0.9530  0.9472  0.9458  0.9243  0.9075  0.8967  0.8766  0.8307  0.8307  0.8247  0.8009  0.7927
[17 : 32]:	0.7811  0.7811  0.7810  0.7807  0.7800  0.7757  0.7747  0.7615  0.7536  0.7522  0.7484  0.7306  0.7261  0.7206  0.7169  0.7135
[33 : 48]:	0.7102  0.7102  0.7034  0.6998  0.6966  0.6966  0.6930  0.6918  0.6899  0.6873  0.6756  0.6733  0.6733  0.6733  0.6709  0.6705
[49 : 64]:	0.6705  0.6604  0.6536  0.6532  0.6505  0.6505  0.6505  0.6479  0.6468  0.6430  0.6369  0.6309  0.6301  0.6299  0.6251  0.6235
2024-04-30 07:42:27 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 07:42:27 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #257: GFLOPs: 84.7515. Time: 10914.7899 us. Best GFLOPs: 532.2174
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #258: GFLOPs: 84.8157. Time: 10906.5208 us. Best GFLOPs: 532.2174
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #259: GFLOPs: 323.5993. Time: 2858.6117 us. Best GFLOPs: 532.2174
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #260: GFLOPs: 327.8376. Time: 2821.6558 us. Best GFLOPs: 532.2174
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #261: GFLOPs: 62.7585. Time: 14739.7542 us. Best GFLOPs: 532.2174
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #262: GFLOPs: 549.9261. Time: 1682.1254 us. Best GFLOPs: 549.9261
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #263: GFLOPs: 327.7901. Time: 2822.0647 us. Best GFLOPs: 549.9261
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #264: GFLOPs: 533.2952. Time: 1734.5830 us. Best GFLOPs: 549.9261
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #265: GFLOPs: 346.2886. Time: 2671.3112 us. Best GFLOPs: 549.9261
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #266: GFLOPs: 595.1720. Time: 1554.2477 us. Best GFLOPs: 595.1720
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #267: GFLOPs: 450.8510. Time: 2051.7747 us. Best GFLOPs: 595.1720
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #268: GFLOPs: 138.5388. Time: 6677.1549 us. Best GFLOPs: 595.1720
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #269: GFLOPs: 122.2145. Time: 7569.0281 us. Best GFLOPs: 595.1720
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #270: GFLOPs: 174.9047. Time: 5288.8511 us. Best GFLOPs: 595.1720
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #271: GFLOPs: 642.2580. Time: 1440.3009 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #272: GFLOPs: 85.7485. Time: 10787.8877 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #273: GFLOPs: 103.4278. Time: 8943.8723 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #274: GFLOPs: 56.2991. Time: 16430.8873 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #275: GFLOPs: 96.2444. Time: 9611.4127 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #276: GFLOPs: 469.9366. Time: 1968.4458 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #277: GFLOPs: 522.6827. Time: 1769.8019 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #278: GFLOPs: 608.6212. Time: 1519.9022 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #279: GFLOPs: 616.9949. Time: 1499.2746 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #280: GFLOPs: 612.6694. Time: 1509.8594 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #281: GFLOPs: 451.2146. Time: 2050.1214 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #282: GFLOPs: 504.7396. Time: 1832.7168 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #283: GFLOPs: 121.0402. Time: 7642.4601 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #284: GFLOPs: 395.3499. Time: 2339.8128 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #285: GFLOPs: 302.0792. Time: 3062.2591 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #286: GFLOPs: 493.6797. Time: 1873.7750 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #287: GFLOPs: 470.0507. Time: 1967.9682 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #288: GFLOPs: 380.4493. Time: 2431.4535 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #289: GFLOPs: 318.1168. Time: 2907.8778 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #290: GFLOPs: 349.1964. Time: 2649.0674 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #291: GFLOPs: 337.2338. Time: 2743.0369 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #292: GFLOPs: 581.1956. Time: 1591.6237 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #293: GFLOPs: 31.9196. Time: 28980.4267 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #294: GFLOPs: 249.7505. Time: 3703.8757 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #295: GFLOPs: 31.7667. Time: 29119.9412 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #296: GFLOPs: 370.7383. Time: 2495.1424 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #297: GFLOPs: 312.7620. Time: 2957.6632 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #298: GFLOPs: 122.6975. Time: 7539.2304 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #299: GFLOPs: 44.1984. Time: 20929.3920 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #300: GFLOPs: 26.5020. Time: 34904.6503 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #301: GFLOPs: 91.8852. Time: 10067.3922 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #302: GFLOPs: 90.7658. Time: 10191.5523 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #303: GFLOPs: 163.3391. Time: 5663.3391 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #304: GFLOPs: 89.2588. Time: 10363.6223 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #305: GFLOPs: 26.4738. Time: 34941.9310 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #306: GFLOPs: 411.1186. Time: 2250.0678 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #307: GFLOPs: 428.3105. Time: 2159.7525 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #308: GFLOPs: 351.6686. Time: 2630.4449 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #309: GFLOPs: 80.7287. Time: 11458.6904 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #310: GFLOPs: 109.8043. Time: 8424.4864 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #311: GFLOPs: 97.7622. Time: 9462.1965 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #312: GFLOPs: 254.5089. Time: 3634.6257 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #313: GFLOPs: 56.2022. Time: 16459.2219 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #314: GFLOPs: 75.2637. Time: 12290.7111 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #315: GFLOPs: 421.3413. Time: 2195.4759 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #316: GFLOPs: 322.9809. Time: 2864.0853 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #317: GFLOPs: 475.7068. Time: 1944.5690 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #318: GFLOPs: 128.4402. Time: 7202.1424 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #319: GFLOPs: 5.0919. Time: 181670.1693 us. Best GFLOPs: 642.2580
2024-04-30 07:43:49 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #320: GFLOPs: 13.0913. Time: 70661.1723 us. Best GFLOPs: 642.2580
2024-04-30 07:59:34 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 07:59:36 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 07:59:40 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 07:59:40 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 07:59:52 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:00:04 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:00:16 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:00:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:00:37 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9541  0.9541  0.9526  0.9512  0.9512  0.9504  0.9390  0.9347  0.9347  0.8993  0.8893  0.8893  0.8800  0.8740  0.8693  0.8639
[17 : 32]:	0.8631  0.8579  0.8367  0.8339  0.8189  0.8135  0.8135  0.8131  0.8091  0.8089  0.8088  0.8017  0.7996  0.7996  0.7976  0.7945
[33 : 48]:	0.7945  0.7903  0.7883  0.7872  0.7856  0.7827  0.7798  0.7782  0.7769  0.7755  0.7664  0.7511  0.7501  0.7477  0.7411  0.7320
[49 : 64]:	0.7320  0.7312  0.7278  0.7267  0.7220  0.7166  0.7166  0.7166  0.7104  0.7104  0.7077  0.7077  0.7046  0.7036  0.6956  0.6951
2024-04-30 08:00:37 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 08:00:37 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #321: GFLOPs: 735.7697. Time: 1257.2476 us. Best GFLOPs: 735.7697
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #322: GFLOPs: 742.2466. Time: 1246.2769 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #323: GFLOPs: 583.9495. Time: 1584.1177 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #324: GFLOPs: 595.7197. Time: 1552.8189 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #325: GFLOPs: 607.3809. Time: 1523.0059 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #326: GFLOPs: 596.1050. Time: 1551.8150 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #327: GFLOPs: 628.6292. Time: 1471.5269 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #328: GFLOPs: 682.5206. Time: 1355.3360 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #329: GFLOPs: 625.8247. Time: 1478.1211 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #330: GFLOPs: 580.0781. Time: 1594.6901 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #331: GFLOPs: 119.8961. Time: 7715.3888 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #332: GFLOPs: 119.5679. Time: 7736.5630 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #333: GFLOPs: 76.1829. Time: 12142.4188 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #334: GFLOPs: 120.9514. Time: 7648.0701 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #335: GFLOPs: 596.1611. Time: 1551.6690 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #336: GFLOPs: 584.5747. Time: 1582.4234 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #337: GFLOPs: 25.9306. Time: 35673.8533 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #338: GFLOPs: 363.7157. Time: 2543.3180 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #339: GFLOPs: 492.7944. Time: 1877.1414 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #340: GFLOPs: 329.0811. Time: 2810.9936 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #341: GFLOPs: 142.0001. Time: 6514.3945 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #342: GFLOPs: 57.1279. Time: 16192.5257 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #343: GFLOPs: 60.5758. Time: 15270.8683 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #344: GFLOPs: 138.7326. Time: 6667.8245 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #345: GFLOPs: 385.9575. Time: 2396.7529 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #346: GFLOPs: 524.0350. Time: 1765.2347 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #347: GFLOPs: 552.6583. Time: 1673.8094 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #348: GFLOPs: 557.0882. Time: 1660.4995 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #349: GFLOPs: 306.0147. Time: 3022.8767 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #350: GFLOPs: 325.8567. Time: 2838.8085 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #351: GFLOPs: 421.8022. Time: 2193.0770 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #352: GFLOPs: 312.6747. Time: 2958.4891 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #353: GFLOPs: 655.8940. Time: 1410.3570 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #354: GFLOPs: 418.9939. Time: 2207.7762 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #355: GFLOPs: 344.5731. Time: 2684.6109 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #356: GFLOPs: 654.2835. Time: 1413.8287 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #357: GFLOPs: 493.6870. Time: 1873.7476 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #358: GFLOPs: 395.4482. Time: 2339.2311 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #359: GFLOPs: 435.0092. Time: 2126.4948 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #360: GFLOPs: 338.5734. Time: 2732.1837 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #361: GFLOPs: 389.6424. Time: 2374.0866 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #362: GFLOPs: 384.5265. Time: 2405.6725 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #363: GFLOPs: 72.1432. Time: 12822.3405 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #364: GFLOPs: 603.3355. Time: 1533.2177 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #365: GFLOPs: 550.0863. Time: 1681.6356 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #366: GFLOPs: 379.0814. Time: 2440.2270 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #367: GFLOPs: 398.2018. Time: 2323.0550 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #368: GFLOPs: 331.4906. Time: 2790.5609 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #369: GFLOPs: 339.7788. Time: 2722.4914 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #370: GFLOPs: 338.0967. Time: 2736.0357 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #371: GFLOPs: 554.3135. Time: 1668.8115 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #372: GFLOPs: 638.5221. Time: 1448.7277 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #373: GFLOPs: 397.0340. Time: 2329.8880 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #374: GFLOPs: 613.7266. Time: 1507.2586 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #375: GFLOPs: 347.3208. Time: 2663.3726 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #376: GFLOPs: 351.9513. Time: 2628.3320 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #377: GFLOPs: 449.7749. Time: 2056.6839 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #378: GFLOPs: 447.2044. Time: 2068.5053 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #379: GFLOPs: 396.7183. Time: 2331.7420 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #380: GFLOPs: 441.1699. Time: 2096.7993 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #381: GFLOPs: 386.6262. Time: 2392.6075 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #382: GFLOPs: 1.1209. Time: 825286.4920 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #383: GFLOPs: 10.2742. Time: 90035.9100 us. Best GFLOPs: 742.2466
2024-04-30 08:02:20 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #384: GFLOPs: 19.2760. Time: 47989.4830 us. Best GFLOPs: 742.2466
2024-04-30 08:44:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 08:44:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 08:44:36 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:44:36 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 08:44:48 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:45:00 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:45:12 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:45:25 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 08:45:32 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9696  0.9677  0.8191  0.8159  0.8105  0.7989  0.7959  0.7911  0.7858  0.7782  0.7757  0.7711  0.7711  0.7711  0.7711  0.7660
[17 : 32]:	0.7659  0.7406  0.7406  0.7367  0.7310  0.7280  0.7216  0.7173  0.7138  0.7130  0.7106  0.7091  0.6994  0.6971  0.6965  0.6965
[33 : 48]:	0.6965  0.6905  0.6905  0.6885  0.6882  0.6874  0.6874  0.6851  0.6829  0.6817  0.6811  0.6773  0.6767  0.6723  0.6646  0.6641
[49 : 64]:	0.6640  0.6604  0.6590  0.6567  0.6566  0.6557  0.6557  0.6547  0.6516  0.6483  0.6471  0.6450  0.6446  0.6434  0.6426  0.6408
2024-04-30 08:45:33 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 08:45:33 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #385: GFLOPs: 754.7246. Time: 1225.6719 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #386: GFLOPs: 734.0792. Time: 1260.1429 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #387: GFLOPs: 589.2520. Time: 1569.8626 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #388: GFLOPs: 633.0277. Time: 1461.3021 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #389: GFLOPs: 650.1120. Time: 1422.9005 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #390: GFLOPs: 562.0296. Time: 1645.9002 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #391: GFLOPs: 603.2942. Time: 1533.3229 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #392: GFLOPs: 680.8808. Time: 1358.6001 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #393: GFLOPs: 596.2495. Time: 1551.4391 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #394: GFLOPs: 646.5760. Time: 1430.6822 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #395: GFLOPs: 632.4564. Time: 1462.6221 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #396: GFLOPs: 604.6591. Time: 1529.8616 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #397: GFLOPs: 497.4919. Time: 1859.4168 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #398: GFLOPs: 589.3381. Time: 1569.6334 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #399: GFLOPs: 589.7554. Time: 1568.5227 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #400: GFLOPs: 607.9238. Time: 1521.6460 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #401: GFLOPs: 610.4117. Time: 1515.4441 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #402: GFLOPs: 672.1190. Time: 1376.3110 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #403: GFLOPs: 748.3628. Time: 1236.0912 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #404: GFLOPs: 647.3261. Time: 1429.0243 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #405: GFLOPs: 562.3868. Time: 1644.8550 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #406: GFLOPs: 512.2401. Time: 1805.8812 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #407: GFLOPs: 127.5450. Time: 7252.6932 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #408: GFLOPs: 491.0058. Time: 1883.9794 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #409: GFLOPs: 639.4687. Time: 1446.5832 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #410: GFLOPs: 665.1870. Time: 1390.6537 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #411: GFLOPs: 608.0905. Time: 1521.2287 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #412: GFLOPs: 536.5031. Time: 1724.2115 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #413: GFLOPs: 669.4705. Time: 1381.7559 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #414: GFLOPs: 426.2305. Time: 2170.2920 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #415: GFLOPs: 656.4217. Time: 1409.2234 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #416: GFLOPs: 598.8777. Time: 1544.6305 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #417: GFLOPs: 342.1015. Time: 2704.0069 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #418: GFLOPs: 303.4190. Time: 3048.7372 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #419: GFLOPs: 588.4651. Time: 1571.9620 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #420: GFLOPs: 370.0752. Time: 2499.6132 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #421: GFLOPs: 621.8245. Time: 1487.6298 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #422: GFLOPs: 424.6105. Time: 2178.5722 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #423: GFLOPs: 422.4831. Time: 2189.5425 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #424: GFLOPs: 451.9029. Time: 2046.9987 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #425: GFLOPs: 604.3300. Time: 1530.6946 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #426: GFLOPs: 466.6160. Time: 1982.4539 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #427: GFLOPs: 433.1351. Time: 2135.6954 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #428: GFLOPs: 472.5069. Time: 1957.7383 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #429: GFLOPs: 520.5364. Time: 1777.0990 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #430: GFLOPs: 577.4774. Time: 1601.8717 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #431: GFLOPs: 425.9053. Time: 2171.9496 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #432: GFLOPs: 357.2299. Time: 2589.4945 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #433: GFLOPs: 510.1628. Time: 1813.2346 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #434: GFLOPs: 528.0128. Time: 1751.9364 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #435: GFLOPs: 506.8756. Time: 1824.9935 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #436: GFLOPs: 489.0349. Time: 1891.5719 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #437: GFLOPs: 249.9303. Time: 3701.2108 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #438: GFLOPs: 506.7891. Time: 1825.3050 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #439: GFLOPs: 522.9008. Time: 1769.0634 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #440: GFLOPs: 122.9688. Time: 7522.6000 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #441: GFLOPs: 535.2627. Time: 1728.2071 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #442: GFLOPs: 504.4961. Time: 1833.6015 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #443: GFLOPs: 498.5548. Time: 1855.4526 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #444: GFLOPs: 90.3734. Time: 10235.8028 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #445: GFLOPs: 545.2094. Time: 1696.6778 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #446: GFLOPs: 135.2560. Time: 6839.2142 us. Best GFLOPs: 754.7246
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #447: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused in T.parallel(T.int64(112), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(9), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + ax2)
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(4) * T.int64(7) + ax3)
                    v_i4 = T.axis.spatial(T.int64(512), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(7), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(56) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) * T.int64(8) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_1 + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(8) + oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(256), T.int64(1), T.int64(3), T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(2), T.int64(2), T.int64(3), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(56) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) * T.int64(8) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + oh_1 * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_1 + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(8) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(2), T.int64(1)):
                    for ax4_fused in T.vectorized(T.int64(2)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused // T.int64(56) * T.int64(16) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(2) * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(56) // T.int64(8) * T.int64(2) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_1 + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused_fused % T.int64(4) // T.int64(2) * T.int64(8) + oc_block_1 * T.int64(2) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 2, 2, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 4, 2, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[256, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=6)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b68)
l83 = sch.fuse(l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l84, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b115)
b136 = sch.decompose_reduction(block=b115, loop=l120)
2024-04-30 08:47:26 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #448: GFLOPs: 7.9083. Time: 116972.0547 us. Best GFLOPs: 754.7246
2024-04-30 09:24:32 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 09:24:33 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 09:24:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:24:37 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 09:24:49 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:25:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:25:14 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:25:27 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:25:35 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9717  0.9534  0.8993  0.8950  0.8950  0.8937  0.8740  0.8695  0.8688  0.8673  0.8654  0.8613  0.8607  0.8548  0.8542  0.8482
[17 : 32]:	0.8364  0.8358  0.8344  0.8337  0.8337  0.8317  0.8308  0.8308  0.8258  0.8215  0.8167  0.8147  0.8119  0.8119  0.8060  0.8039
[33 : 48]:	0.7950  0.7945  0.7933  0.7929  0.7897  0.7893  0.7885  0.7857  0.7838  0.7838  0.7834  0.7830  0.7800  0.7759  0.7639  0.7608
[49 : 64]:	0.7608  0.7556  0.7550  0.7440  0.7415  0.7415  0.7397  0.7385  0.7323  0.7267  0.7259  0.7259  0.7259  0.7083  0.7083  0.7060
2024-04-30 09:25:35 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 09:25:35 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #449: GFLOPs: 376.7198. Time: 2455.5246 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #450: GFLOPs: 715.2821. Time: 1293.2586 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #451: GFLOPs: 691.1981. Time: 1338.3208 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #452: GFLOPs: 643.2876. Time: 1437.9955 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #453: GFLOPs: 637.8052. Time: 1450.3561 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #454: GFLOPs: 709.7766. Time: 1303.2899 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #455: GFLOPs: 654.7026. Time: 1412.9236 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #456: GFLOPs: 494.9527. Time: 1868.9560 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #457: GFLOPs: 678.1279. Time: 1364.1154 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #458: GFLOPs: 471.4456. Time: 1962.1452 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #459: GFLOPs: 601.2056. Time: 1538.6496 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #460: GFLOPs: 710.5356. Time: 1301.8978 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #461: GFLOPs: 631.6588. Time: 1464.4691 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #462: GFLOPs: 632.8580. Time: 1461.6941 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #463: GFLOPs: 700.9745. Time: 1319.6554 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #464: GFLOPs: 696.7690. Time: 1327.6204 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #465: GFLOPs: 663.8669. Time: 1393.4191 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #466: GFLOPs: 653.6634. Time: 1415.1699 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #467: GFLOPs: 643.1027. Time: 1438.4091 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #468: GFLOPs: 674.1325. Time: 1372.2001 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #469: GFLOPs: 685.1178. Time: 1350.1981 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #470: GFLOPs: 618.0184. Time: 1496.7917 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #471: GFLOPs: 137.1453. Time: 6744.9992 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #472: GFLOPs: 674.0586. Time: 1372.3507 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #473: GFLOPs: 424.8111. Time: 2177.5437 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #474: GFLOPs: 660.2116. Time: 1401.1337 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #475: GFLOPs: 357.5831. Time: 2586.9365 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #476: GFLOPs: 569.7151. Time: 1623.6970 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #477: GFLOPs: 651.8133. Time: 1419.1866 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #478: GFLOPs: 642.1077. Time: 1440.6379 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #479: GFLOPs: 721.6431. Time: 1281.8590 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #480: GFLOPs: 613.5786. Time: 1507.6222 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #481: GFLOPs: 636.5552. Time: 1453.2042 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #482: GFLOPs: 602.5872. Time: 1535.1218 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #483: GFLOPs: 708.4040. Time: 1305.8152 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #484: GFLOPs: 563.9290. Time: 1640.3567 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #485: GFLOPs: 589.1165. Time: 1570.2237 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #486: GFLOPs: 698.5380. Time: 1324.2583 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #487: GFLOPs: 583.5269. Time: 1585.2649 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #488: GFLOPs: 572.4610. Time: 1615.9087 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #489: GFLOPs: 603.8479. Time: 1531.9169 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #490: GFLOPs: 609.7736. Time: 1517.0298 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #491: GFLOPs: 587.1605. Time: 1575.4547 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #492: GFLOPs: 617.0754. Time: 1499.0789 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #493: GFLOPs: 543.7340. Time: 1701.2819 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #494: GFLOPs: 560.9420. Time: 1649.0916 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #495: GFLOPs: 572.2591. Time: 1616.4789 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #496: GFLOPs: 128.5898. Time: 7193.7664 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #497: GFLOPs: 130.2243. Time: 7103.4707 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #498: GFLOPs: 710.7644. Time: 1301.4787 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #499: GFLOPs: 433.3369. Time: 2134.7011 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #500: GFLOPs: 551.3780. Time: 1677.6962 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #501: GFLOPs: 477.1666. Time: 1938.6200 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #502: GFLOPs: 528.8151. Time: 1749.2784 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #503: GFLOPs: 564.5766. Time: 1638.4752 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #504: GFLOPs: 540.0280. Time: 1712.9569 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #505: GFLOPs: 570.9012. Time: 1620.3236 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #506: GFLOPs: 662.7053. Time: 1395.8614 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #507: GFLOPs: 384.1679. Time: 2407.9178 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #508: GFLOPs: 658.3112. Time: 1405.1784 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #509: GFLOPs: 601.5556. Time: 1537.7543 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #510: GFLOPs: 3.7458. Time: 246956.0680 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #511: GFLOPs: 11.5784. Time: 79894.1363 us. Best GFLOPs: 754.7246
2024-04-30 09:27:18 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #512: GFLOPs: 103.7643. Time: 8914.8632 us. Best GFLOPs: 754.7246
2024-04-30 09:49:56 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 09:49:57 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 09:50:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:50:01 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 09:50:13 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:50:26 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:50:39 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:50:52 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 09:51:00 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9444  0.9377  0.9273  0.9052  0.8977  0.8957  0.8861  0.8861  0.8861  0.8857  0.8770  0.8751  0.8645  0.8622  0.8622  0.8619
[17 : 32]:	0.8607  0.8603  0.8603  0.8584  0.8507  0.8425  0.8377  0.8377  0.8377  0.8369  0.8327  0.8275  0.8268  0.8264  0.8264  0.8222
[33 : 48]:	0.8222  0.8222  0.8189  0.8159  0.8157  0.8122  0.8093  0.8019  0.7983  0.7925  0.7859  0.7808  0.7808  0.7803  0.7803  0.7771
[49 : 64]:	0.7771  0.7749  0.7733  0.7719  0.7687  0.7658  0.7629  0.7615  0.7563  0.7553  0.7504  0.7480  0.7456  0.7423  0.7398  0.7367
2024-04-30 09:51:01 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 09:51:01 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #513: GFLOPs: 665.6620. Time: 1389.6613 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #514: GFLOPs: 709.7926. Time: 1303.2605 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #515: GFLOPs: 673.3663. Time: 1373.7615 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #516: GFLOPs: 641.3329. Time: 1442.3785 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #517: GFLOPs: 710.1471. Time: 1302.6099 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #518: GFLOPs: 621.2390. Time: 1489.0320 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #519: GFLOPs: 646.7191. Time: 1430.3655 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #520: GFLOPs: 641.5796. Time: 1441.8237 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #521: GFLOPs: 648.4342. Time: 1426.5822 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #522: GFLOPs: 617.6235. Time: 1497.7485 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #523: GFLOPs: 687.9444. Time: 1344.6503 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #524: GFLOPs: 639.3049. Time: 1446.9538 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #525: GFLOPs: 632.4643. Time: 1462.6038 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #526: GFLOPs: 612.9569. Time: 1509.1514 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #527: GFLOPs: 684.0370. Time: 1352.3314 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #528: GFLOPs: 544.3832. Time: 1699.2531 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #529: GFLOPs: 560.2606. Time: 1651.0974 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #530: GFLOPs: 590.7509. Time: 1565.8796 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #531: GFLOPs: 644.3061. Time: 1435.7224 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #532: GFLOPs: 612.6665. Time: 1509.8667 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #533: GFLOPs: 642.1836. Time: 1440.4676 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #534: GFLOPs: 618.4021. Time: 1495.8628 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #535: GFLOPs: 606.7531. Time: 1524.5819 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #536: GFLOPs: 606.0697. Time: 1526.3009 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #537: GFLOPs: 623.5035. Time: 1483.6239 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #538: GFLOPs: 517.0943. Time: 1788.9286 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #539: GFLOPs: 656.3074. Time: 1409.4688 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #540: GFLOPs: 313.5938. Time: 2949.8182 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #541: GFLOPs: 632.0497. Time: 1463.5632 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #542: GFLOPs: 607.6440. Time: 1522.3464 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #543: GFLOPs: 616.1797. Time: 1501.2580 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #544: GFLOPs: 620.7698. Time: 1490.1573 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #545: GFLOPs: 355.3334. Time: 2603.3149 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #546: GFLOPs: 636.9312. Time: 1452.3463 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #547: GFLOPs: 324.7079. Time: 2848.8519 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #548: GFLOPs: 584.4691. Time: 1582.7094 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #549: GFLOPs: 351.8144. Time: 2629.3544 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #550: GFLOPs: 317.3414. Time: 2914.9829 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #551: GFLOPs: 281.0807. Time: 3291.0292 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #552: GFLOPs: 586.1049. Time: 1578.2922 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #553: GFLOPs: 635.2854. Time: 1456.1089 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #554: GFLOPs: 527.8358. Time: 1752.5237 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #555: GFLOPs: 307.9232. Time: 3004.1410 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #556: GFLOPs: 553.8957. Time: 1670.0702 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #557: GFLOPs: 573.7546. Time: 1612.2656 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #558: GFLOPs: 503.4604. Time: 1837.3735 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #559: GFLOPs: 515.0363. Time: 1796.0766 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #560: GFLOPs: 593.7607. Time: 1557.9421 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #561: GFLOPs: 575.8277. Time: 1606.4610 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #562: GFLOPs: 585.5021. Time: 1579.9170 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #563: GFLOPs: 588.8239. Time: 1571.0040 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #564: GFLOPs: 594.1666. Time: 1556.8777 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #565: GFLOPs: 644.4474. Time: 1435.4077 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #566: GFLOPs: 578.6102. Time: 1598.7357 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #567: GFLOPs: 602.1348. Time: 1536.2751 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #568: GFLOPs: 533.1067. Time: 1735.1962 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #569: GFLOPs: 491.7350. Time: 1881.1856 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #570: GFLOPs: 520.3057. Time: 1777.8870 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #571: GFLOPs: 492.3704. Time: 1878.7580 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #572: GFLOPs: 536.1184. Time: 1725.4486 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #573: GFLOPs: 609.9015. Time: 1516.7118 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #574: GFLOPs: 4.9121. Time: 188318.6767 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #575: GFLOPs: 0.9845. Time: 939572.9203 us. Best GFLOPs: 754.7246
2024-04-30 09:53:07 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #576: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(9), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                    v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(7) + ax3)
                    v_i4 = T.axis.spatial(T.int64(512), ax4)
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(16), T.int64(1), T.int64(7), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(8) * T.int64(16) + oc_chunk_1 + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(14), T.int64(1), T.int64(1), T.int64(8), T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(8) * T.int64(16) + oc_chunk_1 + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(8) // T.int64(4) * T.int64(7) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(16))
                    v_ax4 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(16))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 16, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b67)
l80 = sch.fuse(l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l81, preserve_unit_iters=True)
sch.parallel(loop=l103)
l104 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l104)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109 = sch.get_loops(block=b69)
l110 = sch.fuse(l105, l106, l107, l108, l109, preserve_unit_iters=True)
l111, l112 = sch.split(loop=l110, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l111)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b113)
b136 = sch.decompose_reduction(block=b113, loop=l120)
2024-04-30 10:25:09 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 10:25:10 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 10:25:14 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 10:25:14 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 10:25:26 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 10:25:39 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 10:25:52 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 10:26:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 10:26:14 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9273  0.9258  0.9232  0.9103  0.9103  0.8997  0.8944  0.8944  0.8912  0.8884  0.8791  0.8784  0.8745  0.8675  0.8664  0.8664
[17 : 32]:	0.8631  0.8607  0.8607  0.8486  0.8463  0.8430  0.8429  0.8429  0.8406  0.8406  0.8350  0.8342  0.8342  0.8294  0.8256  0.8256
[33 : 48]:	0.8235  0.8235  0.8233  0.8232  0.8143  0.8140  0.8136  0.8127  0.8127  0.8126  0.8119  0.8084  0.7915  0.7841  0.7816  0.7697
[49 : 64]:	0.7688  0.7686  0.7661  0.7617  0.7615  0.7614  0.7587  0.7578  0.7558  0.7551  0.7512  0.7503  0.7444  0.7434  0.7382  0.7364
2024-04-30 10:26:14 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 10:26:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #577: GFLOPs: 703.3652. Time: 1315.1698 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #578: GFLOPs: 703.3847. Time: 1315.1334 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #579: GFLOPs: 657.6162. Time: 1406.6635 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #580: GFLOPs: 691.0560. Time: 1338.5958 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #581: GFLOPs: 687.2309. Time: 1346.0465 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #582: GFLOPs: 659.6276. Time: 1402.3741 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #583: GFLOPs: 656.2706. Time: 1409.5477 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #584: GFLOPs: 701.8468. Time: 1318.0152 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #585: GFLOPs: 673.4715. Time: 1373.5469 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #586: GFLOPs: 624.2482. Time: 1481.8540 us. Best GFLOPs: 754.7246
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #587: GFLOPs: 769.0823. Time: 1202.7904 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #588: GFLOPs: 657.4812. Time: 1406.9524 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #589: GFLOPs: 599.9338. Time: 1541.9115 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #590: GFLOPs: 632.5059. Time: 1462.5078 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #591: GFLOPs: 580.9397. Time: 1592.3249 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #592: GFLOPs: 628.0599. Time: 1472.8606 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #593: GFLOPs: 618.7946. Time: 1494.9140 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #594: GFLOPs: 670.4303. Time: 1379.7776 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #595: GFLOPs: 673.8450. Time: 1372.7855 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #596: GFLOPs: 634.1260. Time: 1458.7712 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #597: GFLOPs: 620.3162. Time: 1491.2471 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #598: GFLOPs: 659.5413. Time: 1402.5578 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #599: GFLOPs: 609.0622. Time: 1518.8018 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #600: GFLOPs: 587.2324. Time: 1575.2618 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #601: GFLOPs: 692.8870. Time: 1335.0586 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #602: GFLOPs: 696.4525. Time: 1328.2238 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #603: GFLOPs: 637.8883. Time: 1450.1673 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #604: GFLOPs: 564.9896. Time: 1637.2775 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #605: GFLOPs: 582.7330. Time: 1587.4246 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #606: GFLOPs: 634.3213. Time: 1458.3221 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #607: GFLOPs: 616.7538. Time: 1499.8606 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #608: GFLOPs: 652.0253. Time: 1418.7253 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #609: GFLOPs: 622.4453. Time: 1486.1463 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #610: GFLOPs: 657.6109. Time: 1406.6749 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #611: GFLOPs: 637.9843. Time: 1449.9490 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #612: GFLOPs: 706.0939. Time: 1310.0875 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #613: GFLOPs: 579.5435. Time: 1596.1611 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #614: GFLOPs: 621.2171. Time: 1489.0845 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #615: GFLOPs: 627.4447. Time: 1474.3048 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #616: GFLOPs: 595.4802. Time: 1553.4432 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #617: GFLOPs: 595.6911. Time: 1552.8934 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #618: GFLOPs: 644.7060. Time: 1434.8319 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #619: GFLOPs: 610.3174. Time: 1515.6781 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #620: GFLOPs: 638.9260. Time: 1447.8120 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #621: GFLOPs: 245.3793. Time: 3769.8568 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #622: GFLOPs: 595.3044. Time: 1553.9020 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #623: GFLOPs: 544.5950. Time: 1698.5921 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #624: GFLOPs: 460.4531. Time: 2008.9877 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #625: GFLOPs: 715.1534. Time: 1293.4914 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #626: GFLOPs: 610.4673. Time: 1515.3059 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #627: GFLOPs: 616.4383. Time: 1500.6282 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #628: GFLOPs: 401.0096. Time: 2306.7898 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #629: GFLOPs: 711.2385. Time: 1300.6112 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #630: GFLOPs: 436.6058. Time: 2118.7186 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #631: GFLOPs: 584.6689. Time: 1582.1685 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #632: GFLOPs: 593.5331. Time: 1558.5393 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #633: GFLOPs: 533.2171. Time: 1734.8369 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #634: GFLOPs: 611.6380. Time: 1512.4056 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #635: GFLOPs: 602.3576. Time: 1535.7069 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #636: GFLOPs: 721.6412. Time: 1281.8624 us. Best GFLOPs: 769.0823
2024-04-30 10:28:09 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #637: GFLOPs: 217.0122. Time: 4262.6401 us. Best GFLOPs: 769.0823
2024-04-30 10:28:10 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #638: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax2)
                    v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(7), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(28) * T.int64(16) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(28) // T.int64(4) * T.int64(2) + oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(32), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(16), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(28) * T.int64(16) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(28) // T.int64(4) * T.int64(2) + oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(4) * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(16))
                    v_ax4 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(16))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 8, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 2, 1, 2])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=4)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79 = sch.get_loops(block=b67)
l80 = sch.fuse(l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l80)
l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l81, preserve_unit_iters=True)
sch.parallel(loop=l103)
l104 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l104)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109 = sch.get_loops(block=b69)
l110 = sch.fuse(l105, l106, l107, l108, l109, preserve_unit_iters=True)
l111, l112 = sch.split(loop=l110, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l111)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135 = sch.get_loops(block=b113)
b136 = sch.decompose_reduction(block=b113, loop=l120)
2024-04-30 10:28:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #639: GFLOPs: 15.7856. Time: 58600.5213 us. Best GFLOPs: 769.0823
2024-04-30 10:28:10 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #640: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_fused_fused in T.parallel(T.int64(8), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(9), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(2) * T.int64(7) + ax2)
                    v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(7)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(2) * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(2) * T.int64(7) + oh_1 * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2_init * T.int64(7) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(7), T.int64(7)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(2) * T.int64(8) + oc_chunk_1 * T.int64(8) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(2) * T.int64(7) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(7) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(7), T.int64(14)):
                    for ax4_fused in T.vectorized(T.int64(4)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_fused_fused // T.int64(2) * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_fused_fused % T.int64(2) * T.int64(7) + ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(4) + ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 1, 4, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 1, 1, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 1, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[256, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78 = sch.get_loops(block=b68)
l79 = sch.fuse(l71, l72, l73, preserve_unit_iters=True)
sch.parallel(loop=l79)
l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l80, preserve_unit_iters=True)
sch.parallel(loop=l104)
l105 = sch.fuse(l103, preserve_unit_iters=True)
sch.vectorize(loop=l105)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b70)
l119 = sch.fuse(l118, preserve_unit_iters=True)
sch.vectorize(loop=l119)
b120 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142, l143, l144 = sch.get_loops(block=b120)
b145 = sch.decompose_reduction(block=b120, loop=l129)
2024-04-30 11:04:15 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 11:04:16 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 11:04:21 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:04:21 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 11:04:33 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:04:46 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:04:59 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:05:12 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:05:20 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9148  0.9146  0.9132  0.9087  0.9067  0.9011  0.8922  0.8901  0.8763  0.8747  0.8680  0.8662  0.8662  0.8650  0.8642  0.8633
[17 : 32]:	0.8586  0.8577  0.8577  0.8577  0.8561  0.8546  0.8541  0.8541  0.8496  0.8482  0.8482  0.8471  0.8451  0.8451  0.8386  0.8367
[33 : 48]:	0.8338  0.8330  0.8315  0.8271  0.8271  0.8251  0.8211  0.8110  0.8078  0.8076  0.8067  0.8067  0.7998  0.7996  0.7959  0.7890
[49 : 64]:	0.7887  0.7872  0.7872  0.7858  0.7818  0.7753  0.7743  0.7743  0.7743  0.7718  0.7710  0.7694  0.7692  0.7661  0.7661  0.7656
2024-04-30 11:05:20 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 11:05:20 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #641: GFLOPs: 730.7595. Time: 1265.8676 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #642: GFLOPs: 656.3783. Time: 1409.3164 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #643: GFLOPs: 703.9937. Time: 1313.9957 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #644: GFLOPs: 536.1941. Time: 1725.2050 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #645: GFLOPs: 728.7111. Time: 1269.4259 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #646: GFLOPs: 738.4518. Time: 1252.6813 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #647: GFLOPs: 659.8669. Time: 1401.8656 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #648: GFLOPs: 691.9240. Time: 1336.9167 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #649: GFLOPs: 694.6291. Time: 1331.7104 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #650: GFLOPs: 302.9979. Time: 3052.9736 us. Best GFLOPs: 769.0823
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #651: GFLOPs: 802.4200. Time: 1152.8187 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #652: GFLOPs: 719.3766. Time: 1285.8977 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #653: GFLOPs: 701.2777. Time: 1319.0848 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #654: GFLOPs: 706.5549. Time: 1309.2326 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #655: GFLOPs: 638.7140. Time: 1448.2925 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #656: GFLOPs: 687.0970. Time: 1346.3087 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #657: GFLOPs: 603.9309. Time: 1531.7063 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #658: GFLOPs: 691.7396. Time: 1337.2730 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #659: GFLOPs: 687.0891. Time: 1346.3243 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #660: GFLOPs: 693.2410. Time: 1334.3768 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #661: GFLOPs: 647.8008. Time: 1427.9772 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #662: GFLOPs: 691.1152. Time: 1338.4813 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #663: GFLOPs: 669.6818. Time: 1381.3199 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #664: GFLOPs: 677.7173. Time: 1364.9418 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #665: GFLOPs: 657.0606. Time: 1407.8529 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #666: GFLOPs: 664.3748. Time: 1392.3537 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #667: GFLOPs: 652.5997. Time: 1417.4765 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #668: GFLOPs: 618.1474. Time: 1496.4791 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #669: GFLOPs: 759.2108. Time: 1218.4294 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #670: GFLOPs: 752.9303. Time: 1228.5928 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #671: GFLOPs: 662.4472. Time: 1396.4052 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #672: GFLOPs: 737.3430. Time: 1254.5651 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #673: GFLOPs: 371.8628. Time: 2487.5972 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #674: GFLOPs: 644.0634. Time: 1436.2634 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #675: GFLOPs: 624.0796. Time: 1482.2543 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #676: GFLOPs: 645.7432. Time: 1432.5272 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #677: GFLOPs: 674.1708. Time: 1372.1222 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #678: GFLOPs: 651.9230. Time: 1418.9478 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #679: GFLOPs: 680.0497. Time: 1360.2604 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #680: GFLOPs: 629.0095. Time: 1470.6371 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #681: GFLOPs: 628.9373. Time: 1470.8060 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #682: GFLOPs: 610.2189. Time: 1515.9229 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #683: GFLOPs: 627.2610. Time: 1474.7365 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #684: GFLOPs: 604.5609. Time: 1530.1101 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #685: GFLOPs: 170.3171. Time: 5431.3086 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #686: GFLOPs: 585.0025. Time: 1581.2663 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #687: GFLOPs: 620.5742. Time: 1490.6272 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #688: GFLOPs: 545.5266. Time: 1695.6913 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #689: GFLOPs: 614.5155. Time: 1505.3236 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #690: GFLOPs: 525.2662. Time: 1761.0971 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #691: GFLOPs: 507.8704. Time: 1821.4190 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #692: GFLOPs: 574.2016. Time: 1611.0102 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #693: GFLOPs: 582.3182. Time: 1588.5554 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #694: GFLOPs: 628.4678. Time: 1471.9048 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #695: GFLOPs: 579.3338. Time: 1596.7387 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #696: GFLOPs: 585.0816. Time: 1581.0526 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #697: GFLOPs: 300.9637. Time: 3073.6094 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #698: GFLOPs: 701.9269. Time: 1317.8647 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #699: GFLOPs: 332.2662. Time: 2784.0468 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #700: GFLOPs: 514.6444. Time: 1797.4446 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #701: GFLOPs: 540.3711. Time: 1711.8694 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #702: GFLOPs: 16.2769. Time: 56831.8923 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #703: GFLOPs: 11.4080. Time: 81087.6550 us. Best GFLOPs: 802.4200
2024-04-30 11:07:19 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #704: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(2), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(2)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2_init * T.int64(7) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(8) + oc_block_2_init + oc_block_3_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(512), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(1)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(8) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ow_1 + ow_2 + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(8) + oc_block_2 + oc_block_3)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(7)):
                    for ax4_fused in T.vectorized(T.int64(16)):
                        with T.block("T_relu"):
                            v_ax0 = T.axis.spatial(T.int64(1), ax0)
                            v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(8) + ax1)
                            v_ax2 = T.axis.spatial(T.int64(14), ax2)
                            v_ax3 = T.axis.spatial(T.int64(14), ow_0 * T.int64(7) + ax3)
                            v_ax4 = T.axis.spatial(T.int64(16), ax4_fused)
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[4, 4, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 2, 8, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[512, 1])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77 = sch.get_loops(block=b68)
l78 = sch.fuse(l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l78)
l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103 = sch.get_loops(block=b69)
l104 = sch.fuse(l79, preserve_unit_iters=True)
sch.parallel(loop=l104)
sch.annotate(block_or_loop=l104, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l104, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109, l110, l111, l112, l113 = sch.get_loops(block=b70)
l114 = sch.fuse(l113, preserve_unit_iters=True)
sch.vectorize(loop=l114)
b115 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140 = sch.get_loops(block=b115)
b141 = sch.decompose_reduction(block=b115, loop=l125)
2024-04-30 11:33:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 11:33:04 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 11:33:08 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:33:08 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 11:33:20 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:33:33 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:33:46 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:34:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:34:08 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9099  0.9099  0.9056  0.8818  0.8753  0.8753  0.8753  0.8753  0.8753  0.8624  0.8620  0.8477  0.8477  0.8445  0.8428  0.8401
[17 : 32]:	0.8401  0.8377  0.8319  0.8192  0.8155  0.8137  0.8135  0.8123  0.8115  0.8115  0.8095  0.8078  0.8037  0.8037  0.7968  0.7865
[33 : 48]:	0.7855  0.7839  0.7822  0.7822  0.7816  0.7692  0.7692  0.7549  0.7508  0.7502  0.7500  0.7489  0.7489  0.7468  0.7468  0.7420
[49 : 64]:	0.7400  0.7397  0.7397  0.7345  0.7333  0.7333  0.7288  0.7283  0.7277  0.7270  0.7238  0.7177  0.7176  0.7164  0.7134  0.7111
2024-04-30 11:34:08 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 11:34:08 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #705: GFLOPs: 846.3199. Time: 1093.0202 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #706: GFLOPs: 718.4811. Time: 1287.5005 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #707: GFLOPs: 649.1865. Time: 1424.9290 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #708: GFLOPs: 705.5972. Time: 1311.0097 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #709: GFLOPs: 719.4172. Time: 1285.8252 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #710: GFLOPs: 764.7899. Time: 1209.5409 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #711: GFLOPs: 707.9780. Time: 1306.6010 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #712: GFLOPs: 730.6350. Time: 1266.0832 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #713: GFLOPs: 743.6584. Time: 1243.9109 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #714: GFLOPs: 697.9392. Time: 1325.3944 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #715: GFLOPs: 716.2720. Time: 1291.4713 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #716: GFLOPs: 635.9109. Time: 1454.6766 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #717: GFLOPs: 563.2756. Time: 1642.2596 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #718: GFLOPs: 686.2883. Time: 1347.8952 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #719: GFLOPs: 649.6236. Time: 1423.9704 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #720: GFLOPs: 688.9365. Time: 1342.7140 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #721: GFLOPs: 660.0736. Time: 1401.4266 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #722: GFLOPs: 670.3694. Time: 1379.9029 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #723: GFLOPs: 641.6559. Time: 1441.6524 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #724: GFLOPs: 635.2407. Time: 1456.2114 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #725: GFLOPs: 706.2441. Time: 1309.8088 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #726: GFLOPs: 626.7742. Time: 1475.8819 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #727: GFLOPs: 692.1714. Time: 1336.4389 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #728: GFLOPs: 693.3251. Time: 1334.2151 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #729: GFLOPs: 623.7365. Time: 1483.0698 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #730: GFLOPs: 590.0317. Time: 1567.7882 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #731: GFLOPs: 614.6920. Time: 1504.8914 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #732: GFLOPs: 576.2167. Time: 1605.3765 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #733: GFLOPs: 627.3874. Time: 1474.4395 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #734: GFLOPs: 366.4130. Time: 2524.5957 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #735: GFLOPs: 330.1443. Time: 2801.9409 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #736: GFLOPs: 664.3689. Time: 1392.3661 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #737: GFLOPs: 420.3531. Time: 2200.6373 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #738: GFLOPs: 654.8634. Time: 1412.5766 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #739: GFLOPs: 602.6963. Time: 1534.8438 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #740: GFLOPs: 580.1343. Time: 1594.5355 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #741: GFLOPs: 600.3033. Time: 1540.9622 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #742: GFLOPs: 664.5022. Time: 1392.0867 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #743: GFLOPs: 691.0016. Time: 1338.7013 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #744: GFLOPs: 703.9637. Time: 1314.0517 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #745: GFLOPs: 522.6743. Time: 1769.8301 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #746: GFLOPs: 503.7384. Time: 1836.3593 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #747: GFLOPs: 629.7429. Time: 1468.9244 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #748: GFLOPs: 322.8429. Time: 2865.3092 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #749: GFLOPs: 604.4610. Time: 1530.3631 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #750: GFLOPs: 679.6397. Time: 1361.0811 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #751: GFLOPs: 612.4635. Time: 1510.3670 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #752: GFLOPs: 644.4106. Time: 1435.4897 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #753: GFLOPs: 653.9059. Time: 1414.6451 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #754: GFLOPs: 658.9381. Time: 1403.8417 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #755: GFLOPs: 636.0359. Time: 1454.3907 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #756: GFLOPs: 622.7060. Time: 1485.5239 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #757: GFLOPs: 624.8397. Time: 1480.4514 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #758: GFLOPs: 636.5857. Time: 1453.1347 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #759: GFLOPs: 578.3565. Time: 1599.4369 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #760: GFLOPs: 601.9519. Time: 1536.7420 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #761: GFLOPs: 538.2098. Time: 1718.7437 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #762: GFLOPs: 494.6561. Time: 1870.0766 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #763: GFLOPs: 730.6192. Time: 1266.1106 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #764: GFLOPs: 537.6259. Time: 1720.6105 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #765: GFLOPs: 610.9957. Time: 1513.9956 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #766: GFLOPs: 6.1371. Time: 150729.9477 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #767: GFLOPs: 0.8470. Time: 1092107.8163 us. Best GFLOPs: 846.3199
2024-04-30 11:36:11 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #768: GFLOPs: 149.7696. Time: 6176.4515 us. Best GFLOPs: 846.3199
2024-04-30 11:49:02 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 11:49:03 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 11:49:07 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:49:07 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 11:49:19 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:49:32 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:49:45 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:49:59 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 11:50:07 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8934  0.8934  0.8403  0.8381  0.8220  0.8220  0.8218  0.8167  0.8111  0.8073  0.8043  0.8037  0.7977  0.7861  0.7861  0.7813
[17 : 32]:	0.7783  0.7779  0.7764  0.7752  0.7742  0.7740  0.7730  0.7682  0.7681  0.7679  0.7668  0.7615  0.7586  0.7586  0.7551  0.7551
[33 : 48]:	0.7543  0.7541  0.7482  0.7450  0.7397  0.7392  0.7307  0.7307  0.7270  0.7252  0.7207  0.7182  0.7168  0.7113  0.7112  0.7090
[49 : 64]:	0.7062  0.7054  0.6984  0.6873  0.6872  0.6852  0.6852  0.6849  0.6787  0.6780  0.6698  0.6684  0.6680  0.6678  0.6678  0.6661
2024-04-30 11:50:07 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 11:50:07 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #769: GFLOPs: 851.9582. Time: 1085.7866 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #770: GFLOPs: 720.9175. Time: 1283.1492 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #771: GFLOPs: 436.9506. Time: 2117.0466 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #772: GFLOPs: 384.5719. Time: 2405.3881 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #773: GFLOPs: 414.7213. Time: 2230.5216 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #774: GFLOPs: 404.3890. Time: 2287.5121 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #775: GFLOPs: 778.8394. Time: 1187.7221 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #776: GFLOPs: 688.2451. Time: 1344.0630 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #777: GFLOPs: 746.4148. Time: 1239.3172 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #778: GFLOPs: 634.4410. Time: 1458.0470 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #779: GFLOPs: 645.4226. Time: 1433.2388 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #780: GFLOPs: 726.2049. Time: 1273.8068 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #781: GFLOPs: 635.8994. Time: 1454.7030 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #782: GFLOPs: 726.3087. Time: 1273.6247 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #783: GFLOPs: 607.8535. Time: 1521.8218 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #784: GFLOPs: 664.9323. Time: 1391.1862 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #785: GFLOPs: 697.2620. Time: 1326.6816 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #786: GFLOPs: 483.8879. Time: 1911.6924 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #787: GFLOPs: 677.5666. Time: 1365.2455 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #788: GFLOPs: 614.2170. Time: 1506.0551 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #789: GFLOPs: 611.8529. Time: 1511.8744 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #790: GFLOPs: 705.7499. Time: 1310.7261 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #791: GFLOPs: 603.5965. Time: 1532.5548 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #792: GFLOPs: 693.3238. Time: 1334.2175 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #793: GFLOPs: 560.5432. Time: 1650.2648 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #794: GFLOPs: 663.8578. Time: 1393.4380 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #795: GFLOPs: 699.9583. Time: 1321.5713 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #796: GFLOPs: 649.3509. Time: 1424.5684 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #797: GFLOPs: 683.0224. Time: 1354.3402 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #798: GFLOPs: 621.1787. Time: 1489.1766 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #799: GFLOPs: 643.9852. Time: 1436.4380 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #800: GFLOPs: 699.5233. Time: 1322.3930 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #801: GFLOPs: 570.8242. Time: 1620.5422 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #802: GFLOPs: 632.5876. Time: 1462.3187 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #803: GFLOPs: 672.3393. Time: 1375.8600 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #804: GFLOPs: 655.2272. Time: 1411.7923 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #805: GFLOPs: 534.9801. Time: 1729.1198 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #806: GFLOPs: 561.7789. Time: 1646.6350 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #807: GFLOPs: 651.2814. Time: 1420.3456 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #808: GFLOPs: 612.0336. Time: 1511.4281 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #809: GFLOPs: 645.4840. Time: 1433.1025 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #810: GFLOPs: 582.6298. Time: 1587.7057 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #811: GFLOPs: 596.7212. Time: 1550.2126 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #812: GFLOPs: 647.6900. Time: 1428.2214 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #813: GFLOPs: 649.9468. Time: 1423.2623 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #814: GFLOPs: 534.7278. Time: 1729.9356 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #815: GFLOPs: 568.3748. Time: 1627.5260 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #816: GFLOPs: 587.3800. Time: 1574.8660 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #817: GFLOPs: 616.1652. Time: 1501.2933 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #818: GFLOPs: 564.5519. Time: 1638.5467 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #819: GFLOPs: 565.7481. Time: 1635.0824 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #820: GFLOPs: 427.6590. Time: 2163.0429 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #821: GFLOPs: 510.2590. Time: 1812.8926 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #822: GFLOPs: 647.1648. Time: 1429.3806 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #823: GFLOPs: 431.8541. Time: 2142.0307 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #824: GFLOPs: 632.0464. Time: 1463.5708 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #825: GFLOPs: 605.7080. Time: 1527.2125 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #826: GFLOPs: 449.2197. Time: 2059.2258 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #827: GFLOPs: 590.2357. Time: 1567.2463 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #828: GFLOPs: 400.8406. Time: 2307.7622 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #829: GFLOPs: 398.5020. Time: 2321.3054 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #830: GFLOPs: 3.5885. Time: 257777.0777 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #831: GFLOPs: 70.9466. Time: 13038.6104 us. Best GFLOPs: 851.9582
2024-04-30 11:52:10 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #832: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0 in T.serial(T.int64(1), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1)):
                    for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(4), T.int64(7), T.int64(1)):
                        for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_init"):
                                v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2_init + n_3_init)
                                v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                                v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                                v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                                T.reads()
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(256), T.int64(3), T.int64(3), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(4), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(7), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_0 * T.int64(32) + oc_chunk_1 * T.int64(32) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(2) + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(16) + oc_block_1 * T.int64(16) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(2) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(15) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(15), p0[v_n, v_ic // T.int64(512), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(512)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
                for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(32), T.int64(14), T.int64(14)):
                    for ax4_fused in T.vectorized(T.int64(16)):
                        with T.block("T_relu"):
                            v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4_fused])
                            T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                            T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                            T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 8, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 4, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[256, 2])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69 = sch.get_child_blocks(b67)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b68)
l96 = sch.fuse(l95, preserve_unit_iters=True)
sch.vectorize(loop=l96)
sch.annotate(block_or_loop=l70, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l70, ann_key="pragma_unroll_explicit", ann_val=1)
l97, l98, l99, l100, l101, l102, l103, l104, l105, l106 = sch.get_loops(block=b69)
l107 = sch.fuse(l106, preserve_unit_iters=True)
sch.vectorize(loop=l107)
b108 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134 = sch.get_loops(block=b108)
b135 = sch.decompose_reduction(block=b108, loop=l119)
2024-04-30 12:12:03 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 12:12:04 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 12:12:09 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:12:09 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 12:12:21 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:12:34 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:12:48 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:13:01 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:13:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9035  0.8991  0.8991  0.8266  0.8191  0.8190  0.7983  0.7965  0.7928  0.7928  0.7928  0.7845  0.7845  0.7827  0.7817  0.7817
[17 : 32]:	0.7797  0.7790  0.7790  0.7765  0.7745  0.7718  0.7713  0.7691  0.7661  0.7611  0.7603  0.7561  0.7536  0.7529  0.7482  0.7402
[33 : 48]:	0.7337  0.7275  0.7134  0.7111  0.7104  0.7051  0.7019  0.6947  0.6945  0.6903  0.6886  0.6811  0.6796  0.6784  0.6761  0.6750
[49 : 64]:	0.6748  0.6732  0.6708  0.6663  0.6655  0.6654  0.6654  0.6654  0.6654  0.6621  0.6606  0.6601  0.6598  0.6564  0.6551  0.6542
2024-04-30 12:13:10 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 12:13:10 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #833: GFLOPs: 813.5773. Time: 1137.0090 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #834: GFLOPs: 734.2103. Time: 1259.9179 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #835: GFLOPs: 693.6944. Time: 1333.5047 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #836: GFLOPs: 765.2809. Time: 1208.7649 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #837: GFLOPs: 704.8216. Time: 1312.4523 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #838: GFLOPs: 720.9162. Time: 1283.1516 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #839: GFLOPs: 669.7078. Time: 1381.2661 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #840: GFLOPs: 442.0614. Time: 2092.5706 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #841: GFLOPs: 350.0896. Time: 2642.3087 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #842: GFLOPs: 668.9640. Time: 1382.8020 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #843: GFLOPs: 676.9306. Time: 1366.5281 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #844: GFLOPs: 714.2267. Time: 1295.1697 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #845: GFLOPs: 649.6739. Time: 1423.8600 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #846: GFLOPs: 646.2871. Time: 1431.3216 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #847: GFLOPs: 513.9812. Time: 1799.7637 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #848: GFLOPs: 708.0207. Time: 1306.5222 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #849: GFLOPs: 658.3599. Time: 1405.0746 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #850: GFLOPs: 393.0651. Time: 2353.4135 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #851: GFLOPs: 675.0243. Time: 1370.3874 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #852: GFLOPs: 739.3121. Time: 1251.2236 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #853: GFLOPs: 626.3512. Time: 1476.8788 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #854: GFLOPs: 669.5082. Time: 1381.6779 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #855: GFLOPs: 658.4023. Time: 1404.9840 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #856: GFLOPs: 747.3613. Time: 1237.7476 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #857: GFLOPs: 650.2088. Time: 1422.6887 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #858: GFLOPs: 563.9879. Time: 1640.1855 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #859: GFLOPs: 637.7489. Time: 1450.4842 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #860: GFLOPs: 353.9508. Time: 2613.4839 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #861: GFLOPs: 654.8489. Time: 1412.6078 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #862: GFLOPs: 693.0600. Time: 1334.7254 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #863: GFLOPs: 606.6414. Time: 1524.8624 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #864: GFLOPs: 579.7716. Time: 1595.5332 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #865: GFLOPs: 598.3588. Time: 1545.9701 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #866: GFLOPs: 642.3570. Time: 1440.0789 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #867: GFLOPs: 630.5182. Time: 1467.1182 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #868: GFLOPs: 678.4627. Time: 1363.4423 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #869: GFLOPs: 679.2817. Time: 1361.7985 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #870: GFLOPs: 649.2725. Time: 1424.7403 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #871: GFLOPs: 589.6626. Time: 1568.7696 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #872: GFLOPs: 646.1248. Time: 1431.6811 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #873: GFLOPs: 581.1548. Time: 1591.7356 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #874: GFLOPs: 583.5735. Time: 1585.1384 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #875: GFLOPs: 562.0408. Time: 1645.8677 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #876: GFLOPs: 626.8506. Time: 1475.7021 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #877: GFLOPs: 671.1525. Time: 1378.2928 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #878: GFLOPs: 564.1692. Time: 1639.6585 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #879: GFLOPs: 633.2678. Time: 1460.7482 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #880: GFLOPs: 668.3201. Time: 1384.1342 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #881: GFLOPs: 538.2092. Time: 1718.7456 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #882: GFLOPs: 691.6097. Time: 1337.5243 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #883: GFLOPs: 500.7083. Time: 1847.4723 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #884: GFLOPs: 544.3307. Time: 1699.4167 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #885: GFLOPs: 555.9389. Time: 1663.9325 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #886: GFLOPs: 672.8985. Time: 1374.7166 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #887: GFLOPs: 725.6319. Time: 1274.8127 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #888: GFLOPs: 725.9576. Time: 1274.2407 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #889: GFLOPs: 724.2897. Time: 1277.1751 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #890: GFLOPs: 669.4114. Time: 1381.8778 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #891: GFLOPs: 658.3904. Time: 1405.0095 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #892: GFLOPs: 606.1195. Time: 1526.1756 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #893: GFLOPs: 619.9313. Time: 1492.1730 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #894: GFLOPs: 39.2835. Time: 23547.9404 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #895: GFLOPs: 4.1036. Time: 225420.0370 us. Best GFLOPs: 851.9582
2024-04-30 12:15:19 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #896: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(14), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(16), T.int64(1), T.int64(16), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_2_init * T.int64(16) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(7), T.int64(1), T.int64(16), T.int64(32), T.int64(3), T.int64(3), T.int64(1), T.int64(16), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_2 * T.int64(16) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(16), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(512), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + T.if_then_else(T.int64(1) <= v_oh + v_kh and v_oh + v_kh < T.int64(15) and T.int64(1) <= v_ow + v_kw and v_ow + v_kw < T.int64(15), p0[v_n, v_ic // T.int64(512), v_oh + v_kh - T.int64(1), v_ow + v_kw - T.int64(1), v_ic % T.int64(512)], T.float32(0)) * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(32), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(16)):
                    with T.block("T_relu"):
                        v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused, ax3_ax4_fused])
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 2, 16])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 1, 16, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l49, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=-2)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69 = sch.get_child_blocks(b67)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95 = sch.get_loops(block=b68)
l96 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l96)
sch.annotate(block_or_loop=l96, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l96, ann_key="pragma_unroll_explicit", ann_val=1)
l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b69)
l103 = sch.fuse(l101, l102, preserve_unit_iters=True)
sch.vectorize(loop=l103)
b104 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121 = sch.get_loops(block=b104)
b122 = sch.decompose_reduction(block=b104, loop=l106)
2024-04-30 12:41:49 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 12:41:50 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 12:41:54 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:41:54 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 12:42:07 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:42:20 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:42:33 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:42:46 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 12:42:55 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8588  0.8207  0.8127  0.8031  0.8027  0.7958  0.7804  0.7788  0.7785  0.7785  0.7775  0.7732  0.7732  0.7731  0.7685  0.7668
[17 : 32]:	0.7668  0.7667  0.7586  0.7583  0.7563  0.7457  0.7271  0.7268  0.7256  0.7218  0.7215  0.7205  0.7190  0.7190  0.7173  0.7153
[33 : 48]:	0.7038  0.6977  0.6977  0.6966  0.6925  0.6920  0.6904  0.6888  0.6858  0.6858  0.6825  0.6825  0.6825  0.6825  0.6819  0.6814
[49 : 64]:	0.6796  0.6793  0.6764  0.6748  0.6737  0.6737  0.6737  0.6729  0.6714  0.6678  0.6635  0.6599  0.6585  0.6585  0.6574  0.6539
2024-04-30 12:42:55 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 12:42:55 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 12:44:41 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #897: GFLOPs: 749.7664. Time: 1233.7773 us. Best GFLOPs: 851.9582
2024-04-30 12:44:41 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #898: GFLOPs: 692.2455. Time: 1336.2957 us. Best GFLOPs: 851.9582
2024-04-30 12:44:41 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #899: GFLOPs: 727.2608. Time: 1271.9574 us. Best GFLOPs: 851.9582
2024-04-30 12:44:41 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #900: GFLOPs: 659.6337. Time: 1402.3613 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #901: GFLOPs: 568.5127. Time: 1627.1312 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #902: GFLOPs: 437.9163. Time: 2112.3780 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #903: GFLOPs: 645.9348. Time: 1432.1023 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #904: GFLOPs: 641.0747. Time: 1442.9594 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #905: GFLOPs: 667.7925. Time: 1385.2279 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #906: GFLOPs: 663.0442. Time: 1395.1478 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #907: GFLOPs: 643.9618. Time: 1436.4901 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #908: GFLOPs: 548.3684. Time: 1686.9037 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #909: GFLOPs: 648.5254. Time: 1426.3816 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #910: GFLOPs: 685.7137. Time: 1349.0248 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #911: GFLOPs: 636.9132. Time: 1452.3875 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #912: GFLOPs: 648.3806. Time: 1426.7003 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #913: GFLOPs: 626.3326. Time: 1476.9226 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #914: GFLOPs: 630.7389. Time: 1466.6049 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #915: GFLOPs: 595.1042. Time: 1554.4248 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #916: GFLOPs: 648.1288. Time: 1427.2545 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #917: GFLOPs: 608.2865. Time: 1520.7387 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #918: GFLOPs: 704.5129. Time: 1313.0274 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #919: GFLOPs: 568.2775. Time: 1627.8046 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #920: GFLOPs: 590.9184. Time: 1565.4355 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #921: GFLOPs: 622.2007. Time: 1486.7304 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #922: GFLOPs: 629.8123. Time: 1468.7627 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #923: GFLOPs: 620.4353. Time: 1490.9610 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #924: GFLOPs: 315.0820. Time: 2935.8860 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #925: GFLOPs: 659.2144. Time: 1403.2532 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #926: GFLOPs: 649.6389. Time: 1423.9368 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #927: GFLOPs: 612.0189. Time: 1511.4642 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #928: GFLOPs: 634.2280. Time: 1458.5365 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #929: GFLOPs: 618.0773. Time: 1496.6490 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #930: GFLOPs: 607.4951. Time: 1522.7197 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #931: GFLOPs: 547.8774. Time: 1688.4157 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #932: GFLOPs: 693.9360. Time: 1333.0405 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #933: GFLOPs: 610.0574. Time: 1516.3241 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #934: GFLOPs: 586.2264. Time: 1577.9651 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #935: GFLOPs: 521.8732. Time: 1772.5470 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #936: GFLOPs: 583.8835. Time: 1584.2966 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #937: GFLOPs: 564.8289. Time: 1637.7433 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #938: GFLOPs: 571.6597. Time: 1618.1738 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #939: GFLOPs: 606.2885. Time: 1525.7502 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #940: GFLOPs: 58.5125. Time: 15809.3601 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #941: GFLOPs: 266.7377. Time: 3467.9938 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #942: GFLOPs: 469.4910. Time: 1970.3141 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #943: GFLOPs: 569.4920. Time: 1624.3331 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #944: GFLOPs: 441.2029. Time: 2096.6423 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #945: GFLOPs: 533.6996. Time: 1733.2685 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #946: GFLOPs: 593.2935. Time: 1559.1688 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #947: GFLOPs: 535.9520. Time: 1725.9842 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #948: GFLOPs: 654.5393. Time: 1413.2762 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #949: GFLOPs: 593.7606. Time: 1557.9424 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #950: GFLOPs: 335.8852. Time: 2754.0502 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #951: GFLOPs: 32.0884. Time: 28828.0460 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #952: GFLOPs: 328.0473. Time: 2819.8517 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #953: GFLOPs: 317.4250. Time: 2914.2147 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #954: GFLOPs: 31.7821. Time: 29105.8477 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #955: GFLOPs: 293.6298. Time: 3150.3776 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #956: GFLOPs: 328.2327. Time: 2818.2593 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #957: GFLOPs: 317.6067. Time: 2912.5481 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #958: GFLOPs: 0.8885. Time: 1041103.0173 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #959: GFLOPs: 25.5252. Time: 36240.4057 us. Best GFLOPs: 851.9582
2024-04-30 12:44:42 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #960: GFLOPs: 96.0378. Time: 9632.0897 us. Best GFLOPs: 851.9582
2024-04-30 13:47:31 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 13:47:32 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 13:47:37 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 13:47:37 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 13:47:49 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 13:48:02 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 13:48:15 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 13:48:29 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 13:48:37 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8315  0.8286  0.8286  0.8180  0.8105  0.8016  0.8008  0.7923  0.7923  0.7872  0.7787  0.7787  0.7787  0.7781  0.7778  0.7693
[17 : 32]:	0.7676  0.7676  0.7551  0.7551  0.7549  0.7546  0.7546  0.7536  0.7505  0.7488  0.7441  0.7439  0.7347  0.7307  0.7228  0.7195
[33 : 48]:	0.7190  0.7116  0.7113  0.7113  0.7110  0.7030  0.6927  0.6911  0.6870  0.6819  0.6722  0.6719  0.6694  0.6648  0.6625  0.6612
[49 : 64]:	0.6598  0.6570  0.6543  0.6493  0.6478  0.6468  0.6417  0.6402  0.6374  0.6346  0.6322  0.6320  0.6320  0.6318  0.6301  0.6273
2024-04-30 13:48:37 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 13:48:37 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #961: GFLOPs: 670.7886. Time: 1379.0406 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #962: GFLOPs: 698.8094. Time: 1323.7440 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #963: GFLOPs: 678.6028. Time: 1363.1609 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #964: GFLOPs: 703.8831. Time: 1314.2021 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #965: GFLOPs: 620.8413. Time: 1489.9858 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #966: GFLOPs: 635.4831. Time: 1455.6559 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #967: GFLOPs: 623.8416. Time: 1482.8199 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #968: GFLOPs: 618.2541. Time: 1496.2210 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #969: GFLOPs: 370.9505. Time: 2493.7146 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #970: GFLOPs: 600.9348. Time: 1539.3428 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #971: GFLOPs: 554.5204. Time: 1668.1887 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #972: GFLOPs: 543.2204. Time: 1702.8903 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #973: GFLOPs: 655.6858. Time: 1410.8050 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #974: GFLOPs: 584.7461. Time: 1581.9597 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #975: GFLOPs: 614.5121. Time: 1505.3320 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #976: GFLOPs: 618.9667. Time: 1494.4984 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #977: GFLOPs: 645.9162. Time: 1432.1435 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #978: GFLOPs: 432.2265. Time: 2140.1853 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #979: GFLOPs: 445.1531. Time: 2078.0375 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #980: GFLOPs: 657.8833. Time: 1406.0925 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #981: GFLOPs: 654.2102. Time: 1413.9870 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #982: GFLOPs: 622.1611. Time: 1486.8250 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #983: GFLOPs: 628.7006. Time: 1471.3596 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #984: GFLOPs: 361.8728. Time: 2556.2705 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #985: GFLOPs: 701.3484. Time: 1318.9518 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #986: GFLOPs: 646.5114. Time: 1430.8251 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #987: GFLOPs: 672.9382. Time: 1374.6356 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #988: GFLOPs: 650.9131. Time: 1421.1493 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #989: GFLOPs: 627.1725. Time: 1474.9446 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #990: GFLOPs: 537.0212. Time: 1722.5478 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #991: GFLOPs: 626.9275. Time: 1475.5211 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #992: GFLOPs: 637.2071. Time: 1451.7175 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #993: GFLOPs: 614.2312. Time: 1506.0204 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #994: GFLOPs: 545.4899. Time: 1695.8055 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #995: GFLOPs: 600.8337. Time: 1539.6020 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #996: GFLOPs: 616.7466. Time: 1499.8780 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #997: GFLOPs: 534.0410. Time: 1732.1607 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #998: GFLOPs: 612.4039. Time: 1510.5142 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #999: GFLOPs: 563.0331. Time: 1642.9669 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1000: GFLOPs: 591.3254. Time: 1564.3582 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1001: GFLOPs: 566.1350. Time: 1633.9649 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1002: GFLOPs: 600.3397. Time: 1540.8688 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1003: GFLOPs: 548.3381. Time: 1686.9971 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1004: GFLOPs: 604.0621. Time: 1531.3736 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1005: GFLOPs: 342.2455. Time: 2702.8692 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1006: GFLOPs: 529.9227. Time: 1745.6219 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1007: GFLOPs: 560.9771. Time: 1648.9884 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1008: GFLOPs: 594.6231. Time: 1555.6825 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1009: GFLOPs: 485.4670. Time: 1905.4741 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1010: GFLOPs: 314.7972. Time: 2938.5420 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1011: GFLOPs: 532.1515. Time: 1738.3108 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1012: GFLOPs: 558.6104. Time: 1655.9747 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1013: GFLOPs: 610.0173. Time: 1516.4237 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1014: GFLOPs: 543.8868. Time: 1700.8037 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1015: GFLOPs: 494.3642. Time: 1871.1807 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1016: GFLOPs: 445.5585. Time: 2076.1467 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1017: GFLOPs: 582.8090. Time: 1587.2178 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1018: GFLOPs: 564.7562. Time: 1637.9540 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1019: GFLOPs: 278.8883. Time: 3316.9006 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1020: GFLOPs: 554.4651. Time: 1668.3553 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1021: GFLOPs: 551.5455. Time: 1677.1865 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1022: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused in T.parallel(T.int64(14), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0 in range(T.int64(16)):
                    for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(4)):
                        for ax4_fused in T.vectorized(T.int64(32)):
                            with T.block("data_pad"):
                                v_i0, v_i1, v_i2 = T.axis.remap("SSS", [ax0, ax1, ax2])
                                v_i3 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(2) + ax3)
                                v_i4 = T.axis.spatial(T.int64(512), ic_0 * T.int64(32) + ax4_fused)
                                T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                                T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                                data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
                    for kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(3), T.int64(3), T.int64(1), T.int64(1), T.int64(14), T.int64(2), T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1)):
                        for oc_block_3_fused in T.vectorized(T.int64(4)):
                            with T.block("conv2d_NCHWc_update"):
                                v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                                v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(16) + oc_chunk_1 * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                                v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(14) + oh_2 + oh_3)
                                v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(2) + ow_1 * T.int64(2) + ow_2 + ow_3)
                                v_oc_block = T.axis.spatial(T.int64(16), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                                v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(32) + ic_1)
                                v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                                v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                                T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                                T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(16), T.int64(14)):
                for ax3_ax4_fused in T.vectorized(T.int64(32)):
                    with T.block("T_relu"):
                        v_ax0 = T.axis.spatial(T.int64(1), ax0)
                        v_ax1 = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused // T.int64(7) * T.int64(16) + ax1)
                        v_ax2 = T.axis.spatial(T.int64(14), ax2)
                        v_ax3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused_fused % T.int64(7) * T.int64(2) + ax3_ax4_fused // T.int64(16))
                        v_ax4 = T.axis.spatial(T.int64(16), ax3_ax4_fused % T.int64(16))
                        T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                        T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                        T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[2, 4, 1, 4])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 1, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[16, 32])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
b64, = sch.get_consumers(block=b1)
sch.reverse_compute_at(block=b64, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v65 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v65)
l66 = sch.sample_compute_location(block=b0, decision=10)
sch.compute_at(block=b0, loop=l66, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b67 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b67, ann_key="meta_schedule.unroll_explicit")
b68, b69, b70 = sch.get_child_blocks(b67)
l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86 = sch.get_loops(block=b68)
l87 = sch.fuse(l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l87)
l88 = sch.fuse(l86, preserve_unit_iters=True)
sch.vectorize(loop=l88)
l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102, l103, l104, l105, l106, l107, l108, l109, l110 = sch.get_loops(block=b69)
l111 = sch.fuse(l89, preserve_unit_iters=True)
sch.parallel(loop=l111)
l112 = sch.fuse(l110, preserve_unit_iters=True)
sch.vectorize(loop=l112)
sch.annotate(block_or_loop=l111, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l111, ann_key="pragma_unroll_explicit", ann_val=1)
l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b70)
l119 = sch.fuse(l117, l118, preserve_unit_iters=True)
sch.vectorize(loop=l119)
b120 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137, l138, l139, l140, l141, l142 = sch.get_loops(block=b120)
b143 = sch.decompose_reduction(block=b120, loop=l127)
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1023: GFLOPs: 12.2680. Time: 75403.2127 us. Best GFLOPs: 851.9582
2024-04-30 13:50:45 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1024: GFLOPs: 5.9905. Time: 154418.9713 us. Best GFLOPs: 851.9582
2024-04-30 14:05:59 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 14:06:00 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 14:06:04 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:06:04 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 14:06:17 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:06:30 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:06:43 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:06:56 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:07:05 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8821  0.8821  0.8552  0.7916  0.7869  0.7846  0.7846  0.7779  0.7679  0.7664  0.7658  0.7633  0.7617  0.7574  0.7510  0.7508
[17 : 32]:	0.7498  0.7449  0.7449  0.7397  0.7372  0.7371  0.7355  0.7355  0.7323  0.7246  0.7228  0.7222  0.7217  0.7185  0.7172  0.7168
[33 : 48]:	0.7137  0.7091  0.7089  0.7068  0.7068  0.7062  0.7039  0.7039  0.7039  0.7039  0.6983  0.6942  0.6897  0.6870  0.6823  0.6819
[49 : 64]:	0.6795  0.6780  0.6763  0.6698  0.6599  0.6584  0.6582  0.6582  0.6580  0.6566  0.6554  0.6554  0.6518  0.6518  0.6505  0.6483
2024-04-30 14:07:05 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 14:07:05 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1025: GFLOPs: 755.3839. Time: 1224.6022 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1026: GFLOPs: 774.8870. Time: 1193.7801 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1027: GFLOPs: 702.5372. Time: 1316.7199 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1028: GFLOPs: 652.8509. Time: 1416.9310 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1029: GFLOPs: 687.8709. Time: 1344.7941 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1030: GFLOPs: 602.3719. Time: 1535.6704 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1031: GFLOPs: 585.4906. Time: 1579.9481 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1032: GFLOPs: 642.4046. Time: 1439.9721 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1033: GFLOPs: 630.2973. Time: 1467.6324 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1034: GFLOPs: 602.3738. Time: 1535.6657 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1035: GFLOPs: 695.8016. Time: 1329.4662 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1036: GFLOPs: 665.9391. Time: 1389.0831 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1037: GFLOPs: 637.3569. Time: 1451.3763 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1038: GFLOPs: 478.4241. Time: 1933.5247 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1039: GFLOPs: 625.8610. Time: 1478.0353 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1040: GFLOPs: 623.5203. Time: 1483.5839 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1041: GFLOPs: 559.3474. Time: 1653.7928 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1042: GFLOPs: 634.4347. Time: 1458.0614 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1043: GFLOPs: 632.8519. Time: 1461.7081 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1044: GFLOPs: 633.7520. Time: 1459.6321 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1045: GFLOPs: 367.9742. Time: 2513.8847 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1046: GFLOPs: 663.4031. Time: 1394.3931 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1047: GFLOPs: 627.4439. Time: 1474.3067 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1048: GFLOPs: 630.8664. Time: 1466.3084 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1049: GFLOPs: 282.2183. Time: 3277.7634 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1050: GFLOPs: 636.1281. Time: 1454.1800 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1051: GFLOPs: 608.2745. Time: 1520.7686 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1052: GFLOPs: 577.3789. Time: 1602.1449 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1053: GFLOPs: 617.7488. Time: 1497.4448 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1054: GFLOPs: 335.5852. Time: 2756.5121 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1055: GFLOPs: 86.2259. Time: 10728.1582 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1056: GFLOPs: 336.5573. Time: 2748.5501 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1057: GFLOPs: 311.7455. Time: 2967.3070 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1058: GFLOPs: 338.8838. Time: 2729.6808 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1059: GFLOPs: 528.0279. Time: 1751.8862 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1060: GFLOPs: 592.2050. Time: 1562.0348 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1061: GFLOPs: 610.3792. Time: 1515.5248 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1062: GFLOPs: 552.4233. Time: 1674.5216 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1063: GFLOPs: 631.6155. Time: 1464.5693 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1064: GFLOPs: 647.9468. Time: 1427.6554 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1065: GFLOPs: 622.2294. Time: 1486.6618 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1066: GFLOPs: 629.5894. Time: 1469.2826 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1067: GFLOPs: 635.9852. Time: 1454.5067 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1068: GFLOPs: 610.2800. Time: 1515.7711 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1069: GFLOPs: 619.6365. Time: 1492.8829 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1070: GFLOPs: 576.5583. Time: 1604.4254 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1071: GFLOPs: 430.9269. Time: 2146.6396 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1072: GFLOPs: 626.4477. Time: 1476.6512 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1073: GFLOPs: 568.1851. Time: 1628.0692 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1074: GFLOPs: 596.8454. Time: 1549.8901 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1075: GFLOPs: 356.7243. Time: 2593.1641 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1076: GFLOPs: 576.9487. Time: 1603.3395 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1077: GFLOPs: 623.9442. Time: 1482.5761 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1078: GFLOPs: 535.4563. Time: 1727.5820 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1079: GFLOPs: 544.9060. Time: 1697.6226 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1080: GFLOPs: 567.2847. Time: 1630.6534 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1081: GFLOPs: 482.1146. Time: 1918.7237 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1082: GFLOPs: 577.9946. Time: 1600.4383 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1083: GFLOPs: 556.9417. Time: 1660.9365 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1084: GFLOPs: 557.4441. Time: 1659.4395 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1085: GFLOPs: 484.0737. Time: 1910.9585 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1086: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_fused_fused in T.parallel(T.int64(16), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(2), T.int64(14), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2_init * T.int64(14) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(16), T.int64(3), T.int64(3), T.int64(1), T.int64(2), T.int64(14), T.int64(7), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_fused_fused * T.int64(2) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(16), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                        v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(16))
                    v_ax4 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(16))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[16, 1, 1, 2])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[4, 2, 2, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[32, 16])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=1)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76 = sch.get_loops(block=b67)
l77 = sch.fuse(l70, l71, preserve_unit_iters=True)
sch.parallel(loop=l77)
l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l78, preserve_unit_iters=True)
sch.parallel(loop=l103)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l104, l105, l106, l107, l108, preserve_unit_iters=True)
l110, l111 = sch.split(loop=l109, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l110)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132, l133, l134, l135, l136, l137 = sch.get_loops(block=b112)
b138 = sch.decompose_reduction(block=b112, loop=l122)
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1087: GFLOPs: 6.2307. Time: 148464.4567 us. Best GFLOPs: 851.9582
2024-04-30 14:09:05 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1088: GFLOPs: 50.9219. Time: 18165.9660 us. Best GFLOPs: 851.9582
2024-04-30 14:25:33 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 14:25:34 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 14:25:39 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:25:39 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 14:25:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:26:04 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:26:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:26:30 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:26:39 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8226  0.8025  0.7969  0.7945  0.7945  0.7865  0.7816  0.7791  0.7780  0.7748  0.7740  0.7720  0.7720  0.7720  0.7641  0.7610
[17 : 32]:	0.7609  0.7603  0.7594  0.7532  0.7446  0.7397  0.7376  0.7366  0.7366  0.7366  0.7337  0.7321  0.7262  0.7256  0.7234  0.7226
[33 : 48]:	0.7221  0.7216  0.7191  0.7183  0.7178  0.7178  0.7174  0.7174  0.7174  0.7164  0.7150  0.7056  0.7033  0.7033  0.7019  0.6979
[49 : 64]:	0.6912  0.6911  0.6897  0.6881  0.6866  0.6820  0.6803  0.6775  0.6754  0.6734  0.6734  0.6707  0.6707  0.6684  0.6539  0.6510
2024-04-30 14:26:39 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 14:26:39 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1089: GFLOPs: 698.4328. Time: 1324.4578 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1090: GFLOPs: 696.2175. Time: 1328.6720 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1091: GFLOPs: 615.5506. Time: 1502.7924 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1092: GFLOPs: 719.9152. Time: 1284.9357 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1093: GFLOPs: 767.8793. Time: 1204.6747 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1094: GFLOPs: 651.8049. Time: 1419.2049 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1095: GFLOPs: 689.2179. Time: 1342.1659 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1096: GFLOPs: 654.6962. Time: 1412.9374 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1097: GFLOPs: 663.4892. Time: 1394.2122 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1098: GFLOPs: 630.0115. Time: 1468.2981 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1099: GFLOPs: 636.5240. Time: 1453.2755 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1100: GFLOPs: 640.9145. Time: 1443.3201 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1101: GFLOPs: 661.7404. Time: 1397.8967 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1102: GFLOPs: 641.2101. Time: 1442.6546 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1103: GFLOPs: 709.9308. Time: 1303.0069 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1104: GFLOPs: 606.0319. Time: 1526.3960 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1105: GFLOPs: 659.2914. Time: 1403.0892 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1106: GFLOPs: 687.1274. Time: 1346.2493 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1107: GFLOPs: 737.0636. Time: 1255.0406 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1108: GFLOPs: 446.6756. Time: 2070.9540 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1109: GFLOPs: 631.1675. Time: 1465.6089 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1110: GFLOPs: 579.5503. Time: 1596.1423 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1111: GFLOPs: 612.4127. Time: 1510.4925 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1112: GFLOPs: 159.9657. Time: 5782.7704 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1113: GFLOPs: 156.4784. Time: 5911.6445 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1114: GFLOPs: 157.3468. Time: 5879.0198 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1115: GFLOPs: 597.6604. Time: 1547.7764 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1116: GFLOPs: 635.4477. Time: 1455.7369 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1117: GFLOPs: 624.3743. Time: 1481.5547 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1118: GFLOPs: 601.8644. Time: 1536.9655 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1119: GFLOPs: 435.8958. Time: 2122.1692 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1120: GFLOPs: 670.4540. Time: 1379.7288 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1121: GFLOPs: 573.2718. Time: 1613.6234 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1122: GFLOPs: 589.3910. Time: 1569.4924 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1123: GFLOPs: 625.5129. Time: 1478.8579 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1124: GFLOPs: 622.2122. Time: 1486.7030 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1125: GFLOPs: 592.7765. Time: 1560.5288 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1126: GFLOPs: 609.4782. Time: 1517.7652 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1127: GFLOPs: 579.2556. Time: 1596.9542 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1128: GFLOPs: 584.9720. Time: 1581.3488 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1129: GFLOPs: 670.2791. Time: 1380.0890 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1130: GFLOPs: 628.3897. Time: 1472.0876 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1131: GFLOPs: 121.6616. Time: 7603.4222 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1132: GFLOPs: 643.5612. Time: 1437.3842 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1133: GFLOPs: 618.1006. Time: 1496.5926 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1134: GFLOPs: 575.0872. Time: 1608.5294 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1135: GFLOPs: 128.3529. Time: 7207.0419 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1136: GFLOPs: 285.4667. Time: 3240.4649 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1137: GFLOPs: 551.3183. Time: 1677.8778 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1138: GFLOPs: 542.5969. Time: 1704.8471 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1139: GFLOPs: 569.1358. Time: 1625.3498 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1140: GFLOPs: 695.6954. Time: 1329.6693 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1141: GFLOPs: 542.9980. Time: 1703.5879 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1142: GFLOPs: 540.8049. Time: 1710.4963 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1143: GFLOPs: 158.2943. Time: 5843.8270 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1144: GFLOPs: 579.3037. Time: 1596.8217 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1145: GFLOPs: 590.0845. Time: 1567.6479 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1146: GFLOPs: 540.1103. Time: 1712.6960 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1147: GFLOPs: 598.0850. Time: 1546.6776 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1148: GFLOPs: 148.9873. Time: 6208.8842 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1149: GFLOPs: 155.4428. Time: 5951.0309 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1150: GFLOPs: 4.3400. Time: 213143.6827 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1151: GFLOPs: 62.8052. Time: 14728.7891 us. Best GFLOPs: 851.9582
2024-04-30 14:28:39 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1152: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused in T.parallel(T.int64(4), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(32), T.int64(14), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_2_init * T.int64(32) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(14) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(7) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused * T.int64(4) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(64), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(32), T.int64(14), T.int64(7), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(32), oc_chunk_2 * T.int64(32) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(14) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(7) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused_fused * T.int64(4) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(8) + ic_1)
                    v_kh = T.axis.reduce(T.int64(3), kh_0 * T.int64(3) + kh_1)
                    v_kw = T.axis.reduce(T.int64(3), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(16))
                    v_ax4 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(16))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 32])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[1, 4, 4, 1])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[64, 8])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 3])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[3, 1])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=9)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84 = sch.get_loops(block=b67)
l85 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, preserve_unit_iters=True)
sch.parallel(loop=l85)
l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l86, preserve_unit_iters=True)
sch.parallel(loop=l103)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l104, l105, l106, l107, l108 = sch.get_loops(block=b69)
l109 = sch.fuse(l104, l105, l106, l107, l108, preserve_unit_iters=True)
l110, l111 = sch.split(loop=l109, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l110)
sch.vectorize(loop=l111)
b112 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129 = sch.get_loops(block=b112)
b130 = sch.decompose_reduction(block=b112, loop=l114)
2024-04-30 14:41:41 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-30 14:41:43 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-30 14:41:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:41:47 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-30 14:41:59 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:42:12 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:42:26 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:42:39 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x33ac398)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x33e2e18)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x38908a8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x320d738)]: 0 failure(s)
2024-04-30 14:42:47 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8483  0.8198  0.8194  0.8085  0.7895  0.7887  0.7869  0.7869  0.7834  0.7755  0.7700  0.7669  0.7600  0.7589  0.7494  0.7493
[17 : 32]:	0.7473  0.7437  0.7339  0.7307  0.7293  0.7253  0.7250  0.7209  0.7136  0.7110  0.7103  0.7092  0.6995  0.6954  0.6949  0.6925
[33 : 48]:	0.6921  0.6921  0.6901  0.6899  0.6845  0.6845  0.6832  0.6802  0.6690  0.6689  0.6614  0.6541  0.6531  0.6507  0.6507  0.6497
[49 : 64]:	0.6466  0.6416  0.6408  0.6408  0.6383  0.6380  0.6359  0.6347  0.6319  0.6317  0.6296  0.6291  0.6268  0.6250  0.6249  0.6247
2024-04-30 14:42:47 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-30 14:42:47 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1153: GFLOPs: 647.9820. Time: 1427.5778 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1154: GFLOPs: 707.5623. Time: 1307.3685 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1155: GFLOPs: 698.3238. Time: 1324.6645 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1156: GFLOPs: 668.2515. Time: 1384.2763 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1157: GFLOPs: 788.3696. Time: 1173.3643 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1158: GFLOPs: 734.4129. Time: 1259.5705 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1159: GFLOPs: 671.1071. Time: 1378.3861 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1160: GFLOPs: 724.0966. Time: 1277.5157 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1161: GFLOPs: 693.2853. Time: 1334.2915 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1162: GFLOPs: 621.6649. Time: 1488.0119 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1163: GFLOPs: 687.6011. Time: 1345.3217 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1164: GFLOPs: 702.0146. Time: 1317.7002 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1165: GFLOPs: 639.5335. Time: 1446.4368 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1166: GFLOPs: 690.9097. Time: 1338.8793 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1167: GFLOPs: 696.7046. Time: 1327.7432 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1168: GFLOPs: 645.8520. Time: 1432.2860 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1169: GFLOPs: 711.9102. Time: 1299.3841 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1170: GFLOPs: 585.8590. Time: 1578.9546 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1171: GFLOPs: 672.7337. Time: 1375.0534 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1172: GFLOPs: 612.4449. Time: 1510.4131 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1173: GFLOPs: 608.0329. Time: 1521.3727 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1174: GFLOPs: 661.1521. Time: 1399.1406 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1175: GFLOPs: 657.1595. Time: 1407.6411 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1176: GFLOPs: 632.5588. Time: 1462.3853 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1177: GFLOPs: 650.5403. Time: 1421.9637 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1178: GFLOPs: 578.4306. Time: 1599.2320 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1179: GFLOPs: 660.8297. Time: 1399.8233 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1180: GFLOPs: 633.6772. Time: 1459.8044 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1181: GFLOPs: 671.6162. Time: 1377.3414 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1182: GFLOPs: 624.3255. Time: 1481.6705 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1183: GFLOPs: 667.1175. Time: 1386.6293 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1184: GFLOPs: 505.5095. Time: 1829.9254 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1185: GFLOPs: 330.0544. Time: 2802.7038 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1186: GFLOPs: 604.5840. Time: 1530.0517 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1187: GFLOPs: 583.8507. Time: 1584.3857 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1188: GFLOPs: 589.2498. Time: 1569.8686 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1189: GFLOPs: 647.4818. Time: 1428.6808 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1190: GFLOPs: 632.8878. Time: 1461.6252 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1191: GFLOPs: 488.9794. Time: 1891.7869 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1192: GFLOPs: 612.3956. Time: 1510.5346 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1193: GFLOPs: 586.5217. Time: 1577.1705 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1194: GFLOPs: 548.3803. Time: 1686.8671 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1195: GFLOPs: 534.9790. Time: 1729.1236 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1196: GFLOPs: 555.9109. Time: 1664.0163 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1197: GFLOPs: 507.1429. Time: 1824.0317 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1198: GFLOPs: 581.1311. Time: 1591.8004 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1199: GFLOPs: 547.3339. Time: 1690.0920 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1200: GFLOPs: 524.4840. Time: 1763.7233 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1201: GFLOPs: 529.9823. Time: 1745.4257 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1202: GFLOPs: 624.0687. Time: 1482.2803 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1203: GFLOPs: 492.3271. Time: 1878.9230 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1204: GFLOPs: 523.4564. Time: 1767.1859 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1205: GFLOPs: 684.1390. Time: 1352.1298 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1206: GFLOPs: 523.3539. Time: 1767.5319 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1207: GFLOPs: 28.7483. Time: 32177.3460 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1208: GFLOPs: 582.2913. Time: 1588.6289 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1209: GFLOPs: 460.1335. Time: 2010.3835 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1210: GFLOPs: 497.3884. Time: 1859.8034 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1211: GFLOPs: 105.5056. Time: 8767.7281 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1212: GFLOPs: 116.7921. Time: 7920.4422 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1213: GFLOPs: 618.0224. Time: 1496.7820 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1214: GFLOPs: 13.9241. Time: 66434.9943 us. Best GFLOPs: 851.9582
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:121] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1215: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(1), T.int64(14), T.int64(14), T.int64(512)), "float32"), p1: T.Buffer((T.int64(32), T.int64(1), T.int64(3), T.int64(3), T.int64(512), T.int64(16)), "float32"), p2: T.Buffer((T.int64(1), T.int64(32), T.int64(1), T.int64(1), T.int64(16)), "float32"), T_relu: T.Buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        data_pad = T.alloc_buffer((T.int64(1), T.int64(1), T.int64(16), T.int64(16), T.int64(512)))
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(32), T.int64(14), T.int64(14), T.int64(16)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused in T.parallel(T.int64(896), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(1), T.int64(3), T.int64(16), T.int64(512)):
                with T.block("data_pad"):
                    v_i0, v_i1 = T.axis.remap("SS", [ax0, ax1])
                    v_i2 = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + ax2)
                    v_i3, v_i4 = T.axis.remap("SS", [ax3, ax4])
                    T.reads(p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4])
                    T.writes(data_pad[v_i0, v_i1, v_i2, v_i3, v_i4])
                    data_pad[v_i0, v_i1, v_i2, v_i3, v_i4] = T.if_then_else(T.int64(1) <= v_i2 and v_i2 < T.int64(15) and T.int64(1) <= v_i3 and v_i3 < T.int64(15), p0[v_i0, v_i1, v_i2 - T.int64(1), v_i3 - T.int64(1), v_i4], T.float32(0))
            for ow_1, oc_block_1 in T.grid(T.int64(2), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(56) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(14) // T.int64(7) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + oh_2_init + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2_init * T.int64(7) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(8), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(64), T.int64(1), T.int64(3), T.int64(1), T.int64(1), T.int64(1), T.int64(7)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(32), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused // T.int64(56) * T.int64(2) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(14) // T.int64(7) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(56) // T.int64(28) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(7) + oh_2 + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(7) + ow_2 * T.int64(7) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(16), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_fused_fused % T.int64(28) // T.int64(14) * T.int64(8) + oc_block_1 * T.int64(8) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(512), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(3), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(3), kw_0 * T.int64(3) + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)], p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + data_pad[v_n, v_ic // T.int64(512), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(512)] * p1[v_oc_chunk, v_ic // T.int64(512), v_kh, v_kw, v_ic % T.int64(512), v_oc_block]
        for ax0_ax1_ax2_ax3_ax4_fused_0 in T.parallel(T.int64(1568)):
            for ax0_ax1_ax2_ax3_ax4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("T_relu"):
                    v_ax0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_ax1 = T.axis.spatial(T.int64(32), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) // T.int64(3136))
                    v_ax2 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(3136) // T.int64(224))
                    v_ax3 = T.axis.spatial(T.int64(14), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(224) // T.int64(16))
                    v_ax4 = T.axis.spatial(T.int64(16), (ax0_ax1_ax2_ax3_ax4_fused_0 * T.int64(64) + ax0_ax1_ax2_ax3_ax4_fused_1) % T.int64(16))
                    T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                    T.writes(T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                    T_relu[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = T.max(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4], T.float32(0))
b0 = sch.get_block(name="data_pad", func_name="main")
b1 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b2 = sch.get_block(name="T_add", func_name="main")
b3 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b2)
sch.annotate(block_or_loop=b1, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l4, l5, l6, l7, l8, l9, l10, l11 = sch.get_loops(block=b1)
v12, v13, v14, v15 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l16, l17, l18, l19 = sch.split(loop=l4, factors=[v12, v13, v14, v15], preserve_unit_iters=True)
v20, v21, v22, v23 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[16, 2, 1, 1])
l24, l25, l26, l27 = sch.split(loop=l5, factors=[v20, v21, v22, v23], preserve_unit_iters=True)
v28, v29, v30, v31 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l32, l33, l34, l35 = sch.split(loop=l6, factors=[v28, v29, v30, v31], preserve_unit_iters=True)
v36, v37, v38, v39 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l40, l41, l42, l43 = sch.split(loop=l7, factors=[v36, v37, v38, v39], preserve_unit_iters=True)
v44, v45, v46, v47 = sch.sample_perfect_tile(loop=l8, n=4, max_innermost_factor=64, decision=[2, 1, 2, 4])
l48, l49, l50, l51 = sch.split(loop=l8, factors=[v44, v45, v46, v47], preserve_unit_iters=True)
v52, v53 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[8, 64])
l54, l55 = sch.split(loop=l9, factors=[v52, v53], preserve_unit_iters=True)
v56, v57 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[3, 1])
l58, l59 = sch.split(loop=l10, factors=[v56, v57], preserve_unit_iters=True)
v60, v61 = sch.sample_perfect_tile(loop=l11, n=2, max_innermost_factor=64, decision=[1, 3])
l62, l63 = sch.split(loop=l11, factors=[v60, v61], preserve_unit_iters=True)
sch.reorder(l16, l24, l32, l40, l48, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50, l55, l59, l63, l19, l27, l35, l43, l51)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b3, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
l65 = sch.sample_compute_location(block=b0, decision=7)
sch.compute_at(block=b0, loop=l65, preserve_unit_loops=True, index=-1)
sch.enter_postproc()
b66 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b66, ann_key="meta_schedule.unroll_explicit")
b67, b68, b69 = sch.get_child_blocks(b66)
l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82 = sch.get_loops(block=b67)
l83 = sch.fuse(l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l83)
l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99, l100, l101, l102 = sch.get_loops(block=b68)
l103 = sch.fuse(l84, preserve_unit_iters=True)
sch.parallel(loop=l103)
l104 = sch.fuse(l102, preserve_unit_iters=True)
sch.vectorize(loop=l104)
sch.annotate(block_or_loop=l103, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l103, ann_key="pragma_unroll_explicit", ann_val=1)
l105, l106, l107, l108, l109 = sch.get_loops(block=b69)
l110 = sch.fuse(l105, l106, l107, l108, l109, preserve_unit_iters=True)
l111, l112 = sch.split(loop=l110, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l111)
sch.vectorize(loop=l112)
b113 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126, l127, l128, l129, l130, l131, l132 = sch.get_loops(block=b113)
b133 = sch.decompose_reduction(block=b113, loop=l117)
2024-04-30 14:44:53 [INFO] [task_scheduler.cc:131] [Task #20: fused_nn_contrib_conv2d_NCHWc_add_nn_relu_8] Trial #1216: GFLOPs: 47.0780. Time: 19649.1978 us. Best GFLOPs: 851.9582
