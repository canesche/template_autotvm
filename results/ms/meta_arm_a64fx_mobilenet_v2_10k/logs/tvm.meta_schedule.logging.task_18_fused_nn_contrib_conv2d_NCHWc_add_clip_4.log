2024-04-28 20:37:21 [INFO] [task_scheduler.cc:160] Initializing Task #18: "fused_nn_contrib_conv2d_NCHWc_add_clip_4"
2024-04-28 20:37:21 [INFO] [task_scheduler.cc:35] 
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        T_add = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n, oc_chunk, oh, ow, oc_block, ic, kh, kw in T.grid(T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4), T.int64(64), T.int64(1), T.int64(1)):
            with T.block("conv2d_NCHWc"):
                v_n, v_oc_chunk, v_oh, v_ow, v_oc_block, v_ic, v_kh, v_kw = T.axis.remap("SSSSSRRR", [n, oc_chunk, oh, ow, oc_block, ic, kh, kw])
                T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                with T.init():
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("T_add"):
                v_ax0, v_ax1, v_ax2, v_ax3, v_ax4 = T.axis.remap("SSSSS", [ax0, ax1, ax2, ax3, ax4])
                T.reads(conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4], p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4])
                T.writes(T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4])
                T_add[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] = conv2d_NCHWc[v_ax0, v_ax1, v_ax2, v_ax3, v_ax4] + p2[v_ax0, v_ax1, T.int64(0), T.int64(0), v_ax4]
        for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)):
            with T.block("compute"):
                v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                T.reads(T_add[v_i0, v_i1, v_i2, v_i3, v_i4])
                T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(T_add[v_i0, v_i1, v_i2, v_i3, v_i4], T.float32(6)), T.float32(0))
2024-04-28 20:37:21 [INFO] [task_scheduler.cc:164] Total 3 design space(s) generated
2024-04-28 20:37:21 [INFO] [task_scheduler.cc:170] Design space #0:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc"):
                    v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(16) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    with T.init():
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for i0, i1, i2, i3, i4 in T.grid(T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)):
                with T.block("compute"):
                    v_i0, v_i1, v_i2, v_i3, v_i4 = T.axis.remap("SSSSS", [i0, i1, i2, i3, i4])
                    T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                    T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                    compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[6, 1, 4, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[4, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
2024-04-28 20:37:21 [INFO] [task_scheduler.cc:170] Design space #1:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 64, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0, n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2)):
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(2)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(16) + ax1)
                        v_i2, v_i3 = T.axis.remap("SS", [ax2, ax3])
                        v_i4 = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(2) + ax4)
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[6, 1, 4, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[4, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=2)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-28 20:37:21 [INFO] [task_scheduler.cc:170] Design space #2:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        with T.block("root"):
            T.reads()
            T.writes()
            T.block_attr({"meta_schedule.parallel": 768, "meta_schedule.unroll_explicit": 16, "meta_schedule.vectorize": 64})
            conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
            for n_0, oc_chunk_0, oh_0, ow_0, oc_block_0 in T.grid(T.int64(1), T.int64(6), T.int64(1), T.int64(1), T.int64(1)):
                for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1, ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(7), T.int64(2), T.int64(16), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(14), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc"):
                        v_n = T.axis.spatial(T.int64(1), n_0 + n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(16) + oc_chunk_1 * T.int64(16) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_0 * T.int64(14) + oh_1 * T.int64(14) + oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_0 * T.int64(14) + ow_1 * T.int64(14) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_0 * T.int64(4) + oc_block_1 * T.int64(2) + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(16) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        with T.init():
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(96), oc_chunk_0 * T.int64(16) + ax1)
                        v_i2, v_i3, v_i4 = T.axis.remap("SSS", [ax2, ax3, ax4])
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[6, 1, 4, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[4, 16])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
2024-04-28 21:07:45 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:07:45 [INFO] [evolutionary_search.cc:715] Picked top 0 candidate(s) from database
2024-04-28 21:07:48 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:07:48 [INFO] [evolutionary_search.cc:723] Sampled 512 candidate(s)
2024-04-28 21:07:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:07:54 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:07:57 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:08:00 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:08:01 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9996  0.9996  0.9987  0.9985  0.9982  0.9982  0.9974  0.9965  0.9962  0.9953  0.9953  0.9937  0.9933  0.9931  0.9921  0.9920
[17 : 32]:	0.9918  0.9916  0.9914  0.9900  0.9897  0.9893  0.9886  0.9883  0.9883  0.9879  0.9876  0.9862  0.9859  0.9859  0.9858  0.9857
[33 : 48]:	0.9854  0.9854  0.9848  0.9845  0.9845  0.9844  0.9842  0.9840  0.9839  0.9826  0.9822  0.9821  0.9815  0.9815  0.9801  0.9801
[49 : 64]:	0.9799  0.9795  0.9786  0.9782  0.9772  0.9768  0.9759  0.9750  0.9746  0.9739  0.9714  0.9712  0.9709  0.9708  0.9705  0.9698
2024-04-28 21:08:01 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:08:01 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #1: GFLOPs: 65.4754. Time: 150.5846 us. Best GFLOPs: 65.4754
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #2: GFLOPs: 8.3282. Time: 1183.8783 us. Best GFLOPs: 65.4754
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #3: GFLOPs: 53.8288. Time: 183.1656 us. Best GFLOPs: 65.4754
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #4: GFLOPs: 43.2533. Time: 227.9496 us. Best GFLOPs: 65.4754
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #5: GFLOPs: 17.2406. Time: 571.8809 us. Best GFLOPs: 65.4754
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #6: GFLOPs: 33.6332. Time: 293.1505 us. Best GFLOPs: 65.4754
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #7: GFLOPs: 120.9932. Time: 81.4888 us. Best GFLOPs: 120.9932
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #8: GFLOPs: 85.3319. Time: 115.5439 us. Best GFLOPs: 120.9932
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #9: GFLOPs: 115.9326. Time: 85.0459 us. Best GFLOPs: 120.9932
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #10: GFLOPs: 52.4750. Time: 187.8912 us. Best GFLOPs: 120.9932
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #11: GFLOPs: 132.0447. Time: 74.6685 us. Best GFLOPs: 132.0447
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #12: GFLOPs: 145.4157. Time: 67.8028 us. Best GFLOPs: 145.4157
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #13: GFLOPs: 165.5217. Time: 59.5667 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #14: GFLOPs: 38.1383. Time: 258.5221 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #15: GFLOPs: 119.9467. Time: 82.1997 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #16: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(168), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(2), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(2), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(16), T.int64(2), T.int64(7)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + ax1)
                        v_i2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) // T.int64(2) * T.int64(7) + ax3)
                        v_i4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 6, 2, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 2, 7, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 2, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #17: GFLOPs: 30.4292. Time: 324.0172 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #18: GFLOPs: 105.7063. Time: 93.2734 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #19: GFLOPs: 81.4299. Time: 121.0807 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #20: GFLOPs: 3.8274. Time: 2576.0273 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #21: GFLOPs: 88.4850. Time: 111.4266 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #22: GFLOPs: 30.2892. Time: 325.5152 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #23: GFLOPs: 43.1654. Time: 228.4143 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #24: GFLOPs: 16.4555. Time: 599.1648 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #25: GFLOPs: 0.4801. Time: 20538.0678 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #26: GFLOPs: 32.1871. Time: 306.3212 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #27: GFLOPs: 2.2287. Time: 4423.8492 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #28: GFLOPs: 38.5070. Time: 256.0468 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #29: GFLOPs: 55.0613. Time: 179.0654 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #30: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(32), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(3), T.int64(7), T.int64(7), T.int64(2)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(6) + oc_chunk_1 * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(6) + oc_chunk_1 * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(6), T.int64(14), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(6) + ax1)
                        v_i2, v_i3 = T.axis.remap("SS", [ax2, ax3])
                        v_i4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[16, 3, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 2, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124 = sch.get_loops(block=b102)
b125 = sch.decompose_reduction(block=b102, loop=l109)
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #31: GFLOPs: 0.4378. Time: 22521.9166 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #32: GFLOPs: 1.2677. Time: 7777.5420 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #33: GFLOPs: 5.3939. Time: 1827.9116 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #34: GFLOPs: 120.6528. Time: 81.7187 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #35: GFLOPs: 17.4345. Time: 565.5215 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #36: GFLOPs: 55.9795. Time: 176.1285 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #37: GFLOPs: 58.0659. Time: 169.8000 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #38: GFLOPs: 88.3418. Time: 111.6073 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #39: GFLOPs: 64.2673. Time: 153.4152 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #40: GFLOPs: 17.9683. Time: 548.7219 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #41: GFLOPs: 7.1260. Time: 1383.6053 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #42: GFLOPs: 3.7373. Time: 2638.1341 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #43: GFLOPs: 109.9595. Time: 89.6656 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #44: GFLOPs: 34.7060. Time: 284.0886 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #45: GFLOPs: 96.0716. Time: 102.6275 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #46: GFLOPs: 49.3210. Time: 199.9063 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #47: GFLOPs: 2.2169. Time: 4447.5065 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #48: GFLOPs: 48.1950. Time: 204.5767 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #49: GFLOPs: 2.6388. Time: 3736.3238 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #50: GFLOPs: 34.9378. Time: 282.2041 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #51: GFLOPs: 35.4086. Time: 278.4518 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #52: GFLOPs: 26.0218. Time: 378.8966 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #53: GFLOPs: 27.0773. Time: 364.1267 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #54: GFLOPs: 10.4472. Time: 943.7550 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #55: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(56), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(12), T.int64(14), T.int64(1)):
                for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(12) + oc_chunk_2_init * T.int64(12) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), oh_2_init * T.int64(14) + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(12), T.int64(14), T.int64(1)):
                for oc_block_3_fused in T.vectorized(T.int64(4)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(7) * T.int64(12) + oc_chunk_2 * T.int64(12) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), oh_2 * T.int64(14) + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 * T.int64(4) + oc_block_3_fused)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for i0_i1_i2_i3_i4_fused_0 in T.parallel(T.int64(1176)):
            for i0_i1_i2_i3_i4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("compute"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(96), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) // T.int64(784))
                    v_i2 = T.axis.spatial(T.int64(14), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(784) // T.int64(56))
                    v_i3 = T.axis.spatial(T.int64(14), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(56) // T.int64(4))
                    v_i4 = T.axis.spatial(T.int64(4), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                    T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                    compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 8, 1, 12])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 1, 14])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
l94 = sch.fuse(l92, preserve_unit_iters=True)
sch.vectorize(loop=l94)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99 = sch.get_loops(block=b66)
l100 = sch.fuse(l95, l96, l97, l98, l99, preserve_unit_iters=True)
l101, l102 = sch.split(loop=l100, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l101)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b103)
b121 = sch.decompose_reduction(block=b103, loop=l105)
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #56: GFLOPs: 62.6866. Time: 157.2839 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #57: GFLOPs: 42.8646. Time: 230.0168 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #58: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(168), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + oc_chunk_2_init * T.int64(8) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(7), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(8), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + oc_chunk_2 * T.int64(8) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(2) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3, ax4 in T.grid(T.int64(1), T.int64(16), T.int64(2), T.int64(14), T.int64(1)):
                with T.block("compute"):
                    v_i0 = T.axis.spatial(T.int64(1), ax0)
                    v_i1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(28) * T.int64(16) + ax1)
                    v_i2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(28) // T.int64(4) * T.int64(2) + ax2)
                    v_i3 = T.axis.spatial(T.int64(14), ax3)
                    v_i4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(4) + ax4)
                    T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                    T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                    compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[1, 6, 2, 8])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 7, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
b101 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l102, l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118 = sch.get_loops(block=b101)
b119 = sch.decompose_reduction(block=b101, loop=l103)
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #59: GFLOPs: 27.2044. Time: 362.4263 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #60: GFLOPs: 5.0651. Time: 1946.5884 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #61: GFLOPs: 88.9785. Time: 110.8086 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #62: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused in T.parallel(T.int64(2352), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oc_block_1 in range(T.int64(4)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_init"):
                        v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                        v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(196) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) // T.int64(7) * T.int64(4) + oc_chunk_2_init * T.int64(4) + oc_chunk_3_init)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(196) // T.int64(28) * T.int64(2) + oh_2_init + oh_3_init)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(28) // T.int64(14) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) + ow_2_init + ow_3_init)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2_init + oc_block_3_init)
                        T.reads()
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(32), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(1), T.int64(1)):
                    with T.block("conv2d_NCHWc_update"):
                        v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                        v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused // T.int64(196) * T.int64(8) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(14) // T.int64(7) * T.int64(4) + oc_chunk_2 * T.int64(4) + oc_chunk_3)
                        v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(196) // T.int64(28) * T.int64(2) + oh_2 + oh_3)
                        v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(28) // T.int64(14) * T.int64(7) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_fused % T.int64(7) + ow_2 + ow_3)
                        v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 + oc_block_2 + oc_block_3)
                        v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(2) + ic_1)
                        v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                        v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                        T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                        T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                        T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                        conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for i0_i1_i2_i3_i4_fused_0 in T.parallel(T.int64(1176)):
            for i0_i1_i2_i3_i4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("compute"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(96), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) // T.int64(784))
                    v_i2 = T.axis.spatial(T.int64(14), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(784) // T.int64(56))
                    v_i3 = T.axis.spatial(T.int64(14), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(56) // T.int64(4))
                    v_i4 = T.axis.spatial(T.int64(4), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                    T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                    compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[12, 2, 1, 4])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[2, 7, 1, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 4, 1, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[32, 2])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b66)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120 = sch.get_loops(block=b102)
b121 = sch.decompose_reduction(block=b102, loop=l105)
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #63: GFLOPs: 68.0694. Time: 144.8460 us. Best GFLOPs: 165.5217
2024-04-28 21:33:50 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #64: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(672), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oc_chunk_2_init + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), oh_2_init + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(14), T.int64(1), T.int64(2), T.int64(8), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(14) * T.int64(2) + oc_chunk_2 + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), oh_2 + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(14) // T.int64(7) * T.int64(2) + oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(8) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
        for i0_i1_i2_i3_i4_fused_0 in T.parallel(T.int64(1176)):
            for i0_i1_i2_i3_i4_fused_1 in T.vectorized(T.int64(64)):
                with T.block("compute"):
                    v_i0 = T.axis.spatial(T.int64(1), T.int64(0))
                    v_i1 = T.axis.spatial(T.int64(96), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) // T.int64(784))
                    v_i2 = T.axis.spatial(T.int64(14), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(784) // T.int64(56))
                    v_i3 = T.axis.spatial(T.int64(14), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(56) // T.int64(4))
                    v_i4 = T.axis.spatial(T.int64(4), (i0_i1_i2_i3_i4_fused_0 * T.int64(64) + i0_i1_i2_i3_i4_fused_1) % T.int64(4))
                    T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                    T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                    compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[48, 1, 2, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 1, 14, 1])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 2, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[8, 8])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v63 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v63)
sch.enter_postproc()
b64 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b64, ann_key="meta_schedule.unroll_explicit")
b65, b66 = sch.get_child_blocks(b64)
l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92 = sch.get_loops(block=b65)
l93 = sch.fuse(l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, preserve_unit_iters=True)
sch.parallel(loop=l93)
sch.annotate(block_or_loop=l93, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l93, ann_key="pragma_unroll_explicit", ann_val=1)
l94, l95, l96, l97, l98 = sch.get_loops(block=b66)
l99 = sch.fuse(l94, l95, l96, l97, l98, preserve_unit_iters=True)
l100, l101 = sch.split(loop=l99, factors=[None, 64], preserve_unit_iters=True)
sch.parallel(loop=l100)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-28 21:44:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 21:44:43 [INFO] [evolutionary_search.cc:715] Picked top 58 candidate(s) from database
2024-04-28 21:44:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:44:45 [INFO] [evolutionary_search.cc:723] Sampled 454 candidate(s)
2024-04-28 21:44:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:44:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:45:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:45:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 21:45:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9936  0.9928  0.9881  0.9807  0.8929  0.8880  0.8867  0.8817  0.8817  0.8768  0.8480  0.8307  0.8303  0.8253  0.8073  0.8061
[17 : 32]:	0.8061  0.8036  0.8030  0.7982  0.7956  0.7952  0.7916  0.7916  0.7869  0.7841  0.7761  0.7755  0.7755  0.7693  0.7692  0.7692
[33 : 48]:	0.7676  0.7676  0.7624  0.7610  0.7610  0.7562  0.7539  0.7535  0.7503  0.7465  0.7453  0.7453  0.7441  0.7410  0.7405  0.7373
[49 : 64]:	0.7368  0.7364  0.7355  0.7345  0.7341  0.7339  0.7337  0.7326  0.7312  0.7311  0.7304  0.7278  0.7260  0.7216  0.7193  0.7187
2024-04-28 21:45:13 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 21:45:13 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #65: GFLOPs: 91.2893. Time: 108.0037 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #66: GFLOPs: 82.7992. Time: 119.0782 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #67: GFLOPs: 95.8038. Time: 102.9143 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #68: GFLOPs: 74.2222. Time: 132.8388 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #69: GFLOPs: 122.1472. Time: 80.7189 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #70: GFLOPs: 163.7895. Time: 60.1967 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #71: GFLOPs: 162.7542. Time: 60.5796 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #72: GFLOPs: 161.3828. Time: 61.0944 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #73: GFLOPs: 119.4650. Time: 82.5311 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #74: GFLOPs: 145.3215. Time: 67.8467 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #75: GFLOPs: 113.9547. Time: 86.5219 us. Best GFLOPs: 165.5217
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #76: GFLOPs: 179.4301. Time: 54.9495 us. Best GFLOPs: 179.4301
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #77: GFLOPs: 185.7742. Time: 53.0730 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #78: GFLOPs: 151.0080. Time: 65.2918 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #79: GFLOPs: 77.1112. Time: 127.8619 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #80: GFLOPs: 75.1887. Time: 131.1312 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #81: GFLOPs: 138.3780. Time: 71.2511 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #82: GFLOPs: 129.9712. Time: 75.8598 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #83: GFLOPs: 143.6218. Time: 68.6496 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #84: GFLOPs: 168.1734. Time: 58.6275 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #85: GFLOPs: 160.9779. Time: 61.2481 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #86: GFLOPs: 59.6393. Time: 165.3201 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #87: GFLOPs: 39.6360. Time: 248.7531 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #88: GFLOPs: 78.9959. Time: 124.8113 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #89: GFLOPs: 148.9530. Time: 66.1926 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #90: GFLOPs: 130.3304. Time: 75.6507 us. Best GFLOPs: 185.7742
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #91: GFLOPs: 240.5707. Time: 40.9842 us. Best GFLOPs: 240.5707
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #92: GFLOPs: 273.9004. Time: 35.9970 us. Best GFLOPs: 273.9004
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #93: GFLOPs: 287.1180. Time: 34.3398 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #94: GFLOPs: 162.7764. Time: 60.5713 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #95: GFLOPs: 96.9526. Time: 101.6949 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #96: GFLOPs: 96.7561. Time: 101.9014 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #97: GFLOPs: 172.5285. Time: 57.1476 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #98: GFLOPs: 193.5492. Time: 50.9410 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #99: GFLOPs: 73.1928. Time: 134.7070 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #100: GFLOPs: 90.7267. Time: 108.6735 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #101: GFLOPs: 96.1947. Time: 102.4961 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #102: GFLOPs: 92.1943. Time: 106.9435 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #103: GFLOPs: 101.1804. Time: 97.4456 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #104: GFLOPs: 123.8272. Time: 79.6237 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #105: GFLOPs: 89.6848. Time: 109.9360 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #106: GFLOPs: 131.2826. Time: 75.1020 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #107: GFLOPs: 154.6495. Time: 63.7544 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #108: GFLOPs: 136.7949. Time: 72.0756 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #109: GFLOPs: 131.5135. Time: 74.9701 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #110: GFLOPs: 82.0239. Time: 120.2038 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #111: GFLOPs: 149.4691. Time: 65.9640 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #112: GFLOPs: 73.6570. Time: 133.8581 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #113: GFLOPs: 126.5197. Time: 77.9293 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #114: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused in T.parallel(T.int64(392), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init, oc_block_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(4), T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_init"):
                    v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(12) + oc_chunk_2_init * T.int64(3) + oc_chunk_3_init)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_2_init + ow_3_init)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2_init + oc_block_3_init)
                    T.reads()
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
            for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3, oc_block_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(4), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(3), T.int64(2), T.int64(1), T.int64(1)):
                with T.block("conv2d_NCHWc_update"):
                    v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                    v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(12) + oc_chunk_2 * T.int64(3) + oc_chunk_3)
                    v_oh = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                    v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ow_2 + ow_3)
                    v_oc_block = T.axis.spatial(T.int64(4), oc_block_2 + oc_block_3)
                    v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(64) + ic_1)
                    v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                    v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                    T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                    T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                    T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                    conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(12), T.int64(2)):
                for ax3_ax4_fused in T.vectorized(T.int64(8)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused // T.int64(49) * T.int64(12) + ax1)
                        v_i2 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(7) * T.int64(2) + ax2)
                        v_i3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_oh_1_ow_1_oc_block_1_fused % T.int64(49) // T.int64(7) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                        v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[8, 1, 4, 3])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 2, 1])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 4, 1])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, preserve_unit_iters=True)
sch.parallel(loop=l94)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l95, l96, l97, l98, l99, l100 = sch.get_loops(block=b67)
l101 = sch.fuse(l99, l100, preserve_unit_iters=True)
sch.vectorize(loop=l101)
b102 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l103, l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119 = sch.get_loops(block=b102)
b120 = sch.decompose_reduction(block=b102, loop=l104)
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #115: GFLOPs: 165.5956. Time: 59.5401 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #116: GFLOPs: 170.7148. Time: 57.7547 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #117: GFLOPs: 119.1671. Time: 82.7375 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #118: GFLOPs: 127.3647. Time: 77.4122 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #119: GFLOPs: 170.5013. Time: 57.8270 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #120: GFLOPs: 138.1692. Time: 71.3588 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #121: GFLOPs: 175.8639. Time: 56.0637 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #122: GFLOPs: 121.1701. Time: 81.3698 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #123: GFLOPs: 123.8669. Time: 79.5982 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #124: GFLOPs: 118.3590. Time: 83.3024 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #125: GFLOPs: 163.4494. Time: 60.3219 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #126: GFLOPs: 21.1789. Time: 465.5373 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #127: GFLOPs: 66.6143. Time: 148.0101 us. Best GFLOPs: 287.1180
2024-04-28 21:46:45 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #128: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused in T.parallel(T.int64(24), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for n_1, oc_chunk_1, oh_1, ow_1, oc_block_1 in T.grid(T.int64(1), T.int64(2), T.int64(2), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(7)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2_init + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2_init * T.int64(7) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2_init * T.int64(7) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2_init * T.int64(2) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(4), T.int64(1), T.int64(2), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(7), T.int64(7)):
                    for oc_block_3_fused in T.vectorized(T.int64(2)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_1 + n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(8) + oc_chunk_1 * T.int64(4) + oc_chunk_2 + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(7) + oh_2 * T.int64(7) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), ow_1 * T.int64(14) + ow_2 * T.int64(7) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + oc_block_1 * T.int64(2) + oc_block_2 * T.int64(2) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
            for ax0, ax1, ax2, ax3 in T.grid(T.int64(1), T.int64(8), T.int64(14), T.int64(14)):
                for ax4_fused in T.vectorized(T.int64(2)):
                    with T.block("compute"):
                        v_i0 = T.axis.spatial(T.int64(1), ax0)
                        v_i1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused // T.int64(2) * T.int64(8) + ax1)
                        v_i2, v_i3 = T.axis.remap("SS", [ax2, ax3])
                        v_i4 = T.axis.spatial(T.int64(4), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_fused % T.int64(2) * T.int64(2) + ax4_fused)
                        T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                        T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                        compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[12, 2, 4, 1])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 2, 1, 7])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[1, 1, 2, 7])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[2, 1, 1, 2])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[64, 1])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l47, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=768)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101 = sch.get_loops(block=b67)
l102 = sch.fuse(l101, preserve_unit_iters=True)
sch.vectorize(loop=l102)
b103 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l104, l105, l106, l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125 = sch.get_loops(block=b103)
b126 = sch.decompose_reduction(block=b103, loop=l110)
2024-04-28 22:30:43 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 22:30:43 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 22:30:45 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 22:30:45 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 22:30:51 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 22:30:56 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 22:31:01 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 22:31:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 22:31:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9320  0.8462  0.8462  0.8168  0.8168  0.8022  0.8022  0.7774  0.7774  0.7774  0.6962  0.6943  0.6894  0.6845  0.6694  0.6659
[17 : 32]:	0.6641  0.6604  0.6573  0.6544  0.6378  0.6320  0.6290  0.6285  0.6236  0.6236  0.6225  0.6225  0.6212  0.6212  0.6206  0.6194
[33 : 48]:	0.6191  0.6191  0.6141  0.6133  0.6122  0.6120  0.6096  0.6036  0.6024  0.5999  0.5997  0.5992  0.5955  0.5939  0.5928  0.5920
[49 : 64]:	0.5915  0.5913  0.5899  0.5888  0.5874  0.5869  0.5831  0.5827  0.5825  0.5824  0.5806  0.5804  0.5798  0.5796  0.5792  0.5789
2024-04-28 22:31:10 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 22:31:10 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #129: GFLOPs: 247.4068. Time: 39.8517 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #130: GFLOPs: 209.9989. Time: 46.9506 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #131: GFLOPs: 199.6608. Time: 49.3817 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #132: GFLOPs: 206.3522. Time: 47.7804 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #133: GFLOPs: 217.9767. Time: 45.2323 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #134: GFLOPs: 262.3423. Time: 37.5829 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #135: GFLOPs: 237.0524. Time: 41.5924 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #136: GFLOPs: 250.6399. Time: 39.3376 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #137: GFLOPs: 247.2084. Time: 39.8837 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #138: GFLOPs: 224.8980. Time: 43.8402 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #139: GFLOPs: 193.0700. Time: 51.0674 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #140: GFLOPs: 71.5639. Time: 137.7731 us. Best GFLOPs: 287.1180
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #141: GFLOPs: 295.9119. Time: 33.3193 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #142: GFLOPs: 282.1288. Time: 34.9471 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #143: GFLOPs: 268.7914. Time: 36.6812 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #144: GFLOPs: 220.5350. Time: 44.7076 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #145: GFLOPs: 279.1589. Time: 35.3189 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:121] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #146: Error in building:
LocalBuilder: Timeout, killed after 30.0 seconds
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(p0: T.Buffer((T.int64(1), T.int64(16), T.int64(14), T.int64(14), T.int64(4)), "float32"), p1: T.Buffer((T.int64(96), T.int64(16), T.int64(1), T.int64(1), T.int64(4), T.int64(4)), "float32"), p2: T.Buffer((T.int64(1), T.int64(96), T.int64(1), T.int64(1), T.int64(4)), "float32"), compute: T.Buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)), "float32")):
        T.func_attr({"tir.noalias": T.bool(True)})
        # with T.block("root"):
        conv2d_NCHWc = T.alloc_buffer((T.int64(1), T.int64(96), T.int64(14), T.int64(14), T.int64(4)))
        for n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused in T.parallel(T.int64(336), annotations={"pragma_auto_unroll_max_step": 512, "pragma_unroll_explicit": 1}):
            for oh_1, ow_1, oc_block_1 in T.grid(T.int64(7), T.int64(1), T.int64(1)):
                for n_2_init, oc_chunk_2_init, oh_2_init, ow_2_init, oc_block_2_init, n_3_init, oc_chunk_3_init, oh_3_init, ow_3_init in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    for oc_block_3_fused_init in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_init"):
                            v_n = T.axis.spatial(T.int64(1), n_2_init + n_3_init)
                            v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(112) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(16) * T.int64(2) + oc_chunk_2_init * T.int64(2) + oc_chunk_3_init)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2_init * T.int64(2) + oh_3_init)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(112) // T.int64(16) * T.int64(2) + ow_1 * T.int64(2) + ow_2_init * T.int64(2) + ow_3_init)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2_init * T.int64(4) + oc_block_3_fused_init)
                            T.reads()
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = T.float32(0)
                for ic_0, kh_0, kw_0, n_2, oc_chunk_2, oh_2, ow_2, oc_block_2, ic_1, kh_1, kw_1, n_3, oc_chunk_3, oh_3, ow_3 in T.grid(T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(1), T.int64(64), T.int64(1), T.int64(1), T.int64(1), T.int64(2), T.int64(2), T.int64(2)):
                    for oc_block_3_fused in T.vectorized(T.int64(4)):
                        with T.block("conv2d_NCHWc_update"):
                            v_n = T.axis.spatial(T.int64(1), n_2 + n_3)
                            v_oc_chunk = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(112) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(16) * T.int64(2) + oc_chunk_2 * T.int64(2) + oc_chunk_3)
                            v_oh = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + oh_2 * T.int64(2) + oh_3)
                            v_ow = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(112) // T.int64(16) * T.int64(2) + ow_1 * T.int64(2) + ow_2 * T.int64(2) + ow_3)
                            v_oc_block = T.axis.spatial(T.int64(4), oc_block_1 * T.int64(4) + oc_block_2 * T.int64(4) + oc_block_3_fused)
                            v_ic = T.axis.reduce(T.int64(64), ic_0 * T.int64(64) + ic_1)
                            v_kh = T.axis.reduce(T.int64(1), kh_0 + kh_1)
                            v_kw = T.axis.reduce(T.int64(1), kw_0 + kw_1)
                            T.reads(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block], p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)], p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block])
                            T.writes(conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block])
                            T.block_attr({"meta_schedule.tiling_structure": "SSRSRS"})
                            conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] = conv2d_NCHWc[v_n, v_oc_chunk, v_oh, v_ow, v_oc_block] + p0[v_n, v_ic // T.int64(4), v_oh + v_kh, v_ow + v_kw, v_ic % T.int64(4)] * p1[v_oc_chunk, v_ic // T.int64(4), v_kh, v_kw, v_ic % T.int64(4), v_oc_block]
                for ax0, ax1, ax2 in T.grid(T.int64(1), T.int64(2), T.int64(2)):
                    for ax3_ax4_fused in T.vectorized(T.int64(8)):
                        with T.block("compute"):
                            v_i0 = T.axis.spatial(T.int64(1), ax0)
                            v_i1 = T.axis.spatial(T.int64(96), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused // T.int64(112) * T.int64(32) + n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(16) * T.int64(2) + ax1)
                            v_i2 = T.axis.spatial(T.int64(14), oh_1 * T.int64(2) + ax2)
                            v_i3 = T.axis.spatial(T.int64(14), n_0_oc_chunk_0_oh_0_ow_0_oc_block_0_n_1_oc_chunk_1_fused % T.int64(112) // T.int64(16) * T.int64(2) + ax3_ax4_fused // T.int64(4))
                            v_i4 = T.axis.spatial(T.int64(4), ax3_ax4_fused % T.int64(4))
                            T.reads(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4], p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4])
                            T.writes(compute[v_i0, v_i1, v_i2, v_i3, v_i4])
                            compute[v_i0, v_i1, v_i2, v_i3, v_i4] = T.max(T.min(conv2d_NCHWc[v_i0, v_i1, v_i2, v_i3, v_i4] + p2[v_i0, v_i1, T.int64(0), T.int64(0), v_i4], T.float32(6)), T.float32(0))
b0 = sch.get_block(name="conv2d_NCHWc", func_name="main")
b1 = sch.get_block(name="T_add", func_name="main")
b2 = sch.get_block(name="root", func_name="main")
sch.compute_inline(block=b1)
sch.annotate(block_or_loop=b0, ann_key="meta_schedule.tiling_structure", ann_val="SSRSRS")
l3, l4, l5, l6, l7, l8, l9, l10 = sch.get_loops(block=b0)
v11, v12, v13, v14 = sch.sample_perfect_tile(loop=l3, n=4, max_innermost_factor=64, decision=[1, 1, 1, 1])
l15, l16, l17, l18 = sch.split(loop=l3, factors=[v11, v12, v13, v14], preserve_unit_iters=True)
v19, v20, v21, v22 = sch.sample_perfect_tile(loop=l4, n=4, max_innermost_factor=64, decision=[3, 16, 1, 2])
l23, l24, l25, l26 = sch.split(loop=l4, factors=[v19, v20, v21, v22], preserve_unit_iters=True)
v27, v28, v29, v30 = sch.sample_perfect_tile(loop=l5, n=4, max_innermost_factor=64, decision=[1, 7, 1, 2])
l31, l32, l33, l34 = sch.split(loop=l5, factors=[v27, v28, v29, v30], preserve_unit_iters=True)
v35, v36, v37, v38 = sch.sample_perfect_tile(loop=l6, n=4, max_innermost_factor=64, decision=[7, 1, 1, 2])
l39, l40, l41, l42 = sch.split(loop=l6, factors=[v35, v36, v37, v38], preserve_unit_iters=True)
v43, v44, v45, v46 = sch.sample_perfect_tile(loop=l7, n=4, max_innermost_factor=64, decision=[1, 1, 1, 4])
l47, l48, l49, l50 = sch.split(loop=l7, factors=[v43, v44, v45, v46], preserve_unit_iters=True)
v51, v52 = sch.sample_perfect_tile(loop=l8, n=2, max_innermost_factor=64, decision=[1, 64])
l53, l54 = sch.split(loop=l8, factors=[v51, v52], preserve_unit_iters=True)
v55, v56 = sch.sample_perfect_tile(loop=l9, n=2, max_innermost_factor=64, decision=[1, 1])
l57, l58 = sch.split(loop=l9, factors=[v55, v56], preserve_unit_iters=True)
v59, v60 = sch.sample_perfect_tile(loop=l10, n=2, max_innermost_factor=64, decision=[1, 1])
l61, l62 = sch.split(loop=l10, factors=[v59, v60], preserve_unit_iters=True)
sch.reorder(l15, l23, l31, l39, l47, l16, l24, l32, l40, l48, l53, l57, l61, l17, l25, l33, l41, l49, l54, l58, l62, l18, l26, l34, l42, l50)
b63, = sch.get_consumers(block=b0)
sch.reverse_compute_at(block=b63, loop=l48, preserve_unit_loops=True, index=-1)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.parallel", ann_val=21)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.vectorize", ann_val=64)
v64 = sch.sample_categorical(candidates=[0, 16, 64, 512], probs=[0.25, 0.25, 0.25, 0.25], decision=3)
sch.annotate(block_or_loop=b2, ann_key="meta_schedule.unroll_explicit", ann_val=v64)
sch.enter_postproc()
b65 = sch.get_block(name="root", func_name="main")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.parallel")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.vectorize")
sch.unannotate(block_or_loop=b65, ann_key="meta_schedule.unroll_explicit")
b66, b67 = sch.get_child_blocks(b65)
l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93 = sch.get_loops(block=b66)
l94 = sch.fuse(l68, l69, l70, l71, l72, l73, l74, preserve_unit_iters=True)
sch.parallel(loop=l94)
l95 = sch.fuse(l93, preserve_unit_iters=True)
sch.vectorize(loop=l95)
sch.annotate(block_or_loop=l94, ann_key="pragma_auto_unroll_max_step", ann_val=512)
sch.annotate(block_or_loop=l94, ann_key="pragma_unroll_explicit", ann_val=1)
l96, l97, l98, l99, l100, l101, l102, l103, l104 = sch.get_loops(block=b67)
l105 = sch.fuse(l103, l104, preserve_unit_iters=True)
sch.vectorize(loop=l105)
b106 = sch.get_block(name="conv2d_NCHWc", func_name="main")
l107, l108, l109, l110, l111, l112, l113, l114, l115, l116, l117, l118, l119, l120, l121, l122, l123, l124, l125, l126 = sch.get_loops(block=b106)
b127 = sch.decompose_reduction(block=b106, loop=l111)
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #147: GFLOPs: 151.6239. Time: 65.0266 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #148: GFLOPs: 194.1957. Time: 50.7714 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #149: GFLOPs: 254.2714. Time: 38.7758 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #150: GFLOPs: 89.2720. Time: 110.4443 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #151: GFLOPs: 88.6890. Time: 111.1703 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #152: GFLOPs: 172.8711. Time: 57.0343 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #153: GFLOPs: 117.0846. Time: 84.2091 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #154: GFLOPs: 187.6045. Time: 52.5552 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #155: GFLOPs: 167.6078. Time: 58.8253 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #156: GFLOPs: 184.4483. Time: 53.4545 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #157: GFLOPs: 65.6699. Time: 150.1385 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #158: GFLOPs: 140.4142. Time: 70.2179 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #159: GFLOPs: 138.2472. Time: 71.3185 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #160: GFLOPs: 172.1857. Time: 57.2613 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #161: GFLOPs: 189.1218. Time: 52.1335 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #162: GFLOPs: 188.2440. Time: 52.3766 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #163: GFLOPs: 180.5666. Time: 54.6036 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #164: GFLOPs: 130.6940. Time: 75.4402 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #165: GFLOPs: 175.7525. Time: 56.0992 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #166: GFLOPs: 162.8541. Time: 60.5424 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #167: GFLOPs: 89.0903. Time: 110.6696 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #168: GFLOPs: 149.9624. Time: 65.7470 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #169: GFLOPs: 110.7104. Time: 89.0575 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #170: GFLOPs: 148.0430. Time: 66.5995 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #171: GFLOPs: 140.9675. Time: 69.9422 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #172: GFLOPs: 98.8803. Time: 99.7123 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #173: GFLOPs: 162.6194. Time: 60.6298 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #174: GFLOPs: 133.7049. Time: 73.7414 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #175: GFLOPs: 159.2221. Time: 61.9235 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #176: GFLOPs: 264.0648. Time: 37.3377 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #177: GFLOPs: 148.0920. Time: 66.5774 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #178: GFLOPs: 114.9811. Time: 85.7496 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #179: GFLOPs: 213.7116. Time: 46.1350 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #180: GFLOPs: 166.0582. Time: 59.3743 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #181: GFLOPs: 218.0458. Time: 45.2179 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #182: GFLOPs: 104.8791. Time: 94.0091 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #183: GFLOPs: 86.5644. Time: 113.8988 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #184: GFLOPs: 88.4078. Time: 111.5240 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #185: GFLOPs: 127.2217. Time: 77.4992 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #186: GFLOPs: 182.4749. Time: 54.0325 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #187: GFLOPs: 166.3025. Time: 59.2871 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #188: GFLOPs: 176.5406. Time: 55.8488 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #189: GFLOPs: 164.2831. Time: 60.0158 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #190: GFLOPs: 55.3291. Time: 178.1989 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #191: GFLOPs: 45.9595. Time: 214.5277 us. Best GFLOPs: 295.9119
2024-04-28 22:32:47 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #192: GFLOPs: 97.1197. Time: 101.5199 us. Best GFLOPs: 295.9119
2024-04-28 23:22:42 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:22:42 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:22:44 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:22:44 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:22:50 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:22:55 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:23:00 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:23:06 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:23:09 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9025  0.8891  0.8879  0.8797  0.8797  0.8768  0.8768  0.8768  0.8624  0.8600  0.8558  0.8524  0.8489  0.8460  0.8460  0.8167
[17 : 32]:	0.8092  0.8016  0.7747  0.7531  0.7518  0.7407  0.7405  0.7282  0.7260  0.7196  0.7127  0.7055  0.7053  0.7034  0.7008  0.7004
[33 : 48]:	0.6976  0.6915  0.6822  0.6822  0.6817  0.6791  0.6720  0.6669  0.6657  0.6647  0.6627  0.6624  0.6624  0.6620  0.6611  0.6606
[49 : 64]:	0.6597  0.6594  0.6581  0.6579  0.6558  0.6558  0.6516  0.6473  0.6472  0.6472  0.6464  0.6450  0.6418  0.6412  0.6402  0.6399
2024-04-28 23:23:09 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:23:09 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #193: GFLOPs: 123.2614. Time: 79.9893 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #194: GFLOPs: 140.3932. Time: 70.2284 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #195: GFLOPs: 129.2332. Time: 76.2930 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #196: GFLOPs: 210.6078. Time: 46.8149 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #197: GFLOPs: 262.2214. Time: 37.6002 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #198: GFLOPs: 274.9727. Time: 35.8566 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #199: GFLOPs: 276.7575. Time: 35.6254 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #200: GFLOPs: 238.6985. Time: 41.3056 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #201: GFLOPs: 270.4870. Time: 36.4512 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #202: GFLOPs: 188.7073. Time: 52.2480 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #203: GFLOPs: 290.1707. Time: 33.9786 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #204: GFLOPs: 231.2159. Time: 42.6423 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #205: GFLOPs: 258.8717. Time: 38.0868 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #206: GFLOPs: 178.4469. Time: 55.2522 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #207: GFLOPs: 270.2421. Time: 36.4843 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #208: GFLOPs: 257.3505. Time: 38.3119 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #209: GFLOPs: 109.3264. Time: 90.1849 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #210: GFLOPs: 220.7352. Time: 44.6670 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #211: GFLOPs: 94.1206. Time: 104.7547 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #212: GFLOPs: 214.8169. Time: 45.8976 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #213: GFLOPs: 228.9883. Time: 43.0571 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #214: GFLOPs: 164.0757. Time: 60.0917 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #215: GFLOPs: 172.7997. Time: 57.0579 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #216: GFLOPs: 192.6721. Time: 51.1729 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #217: GFLOPs: 151.9604. Time: 64.8826 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #218: GFLOPs: 160.7493. Time: 61.3351 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #219: GFLOPs: 207.4474. Time: 47.5281 us. Best GFLOPs: 295.9119
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #220: GFLOPs: 313.9610. Time: 31.4038 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #221: GFLOPs: 216.8475. Time: 45.4678 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #222: GFLOPs: 171.0837. Time: 57.6302 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #223: GFLOPs: 216.8542. Time: 45.4664 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #224: GFLOPs: 110.9658. Time: 88.8525 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #225: GFLOPs: 87.9594. Time: 112.0925 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #226: GFLOPs: 187.8067. Time: 52.4986 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #227: GFLOPs: 213.8279. Time: 46.1099 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #228: GFLOPs: 200.8682. Time: 49.0848 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #229: GFLOPs: 169.0932. Time: 58.3086 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #230: GFLOPs: 214.9439. Time: 45.8705 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #231: GFLOPs: 249.5254. Time: 39.5134 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #232: GFLOPs: 192.4110. Time: 51.2423 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #233: GFLOPs: 202.8377. Time: 48.6082 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #234: GFLOPs: 142.4914. Time: 69.1943 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #235: GFLOPs: 110.1070. Time: 89.5455 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #236: GFLOPs: 156.3883. Time: 63.0455 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #237: GFLOPs: 148.4459. Time: 66.4187 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #238: GFLOPs: 122.8747. Time: 80.2409 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #239: GFLOPs: 59.2770. Time: 166.3308 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #240: GFLOPs: 162.4458. Time: 60.6946 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #241: GFLOPs: 113.6117. Time: 86.7832 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #242: GFLOPs: 229.3327. Time: 42.9925 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #243: GFLOPs: 160.3024. Time: 61.5061 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #244: GFLOPs: 219.1379. Time: 44.9926 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #245: GFLOPs: 225.9676. Time: 43.6327 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #246: GFLOPs: 171.2518. Time: 57.5736 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #247: GFLOPs: 190.7533. Time: 51.6876 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #248: GFLOPs: 184.3607. Time: 53.4799 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #249: GFLOPs: 158.4396. Time: 62.2293 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #250: GFLOPs: 286.6917. Time: 34.3909 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #251: GFLOPs: 177.2046. Time: 55.6395 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #252: GFLOPs: 276.7777. Time: 35.6228 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #253: GFLOPs: 158.9023. Time: 62.0481 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #254: GFLOPs: 92.4088. Time: 106.6953 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #255: GFLOPs: 63.3980. Time: 155.5189 us. Best GFLOPs: 313.9610
2024-04-28 23:24:29 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #256: GFLOPs: 51.5665. Time: 191.2013 us. Best GFLOPs: 313.9610
2024-04-28 23:35:46 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-28 23:35:47 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-28 23:35:49 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:35:49 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-28 23:35:54 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:35:59 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:36:05 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:36:10 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-28 23:36:13 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.8714  0.8548  0.8536  0.8499  0.8466  0.8466  0.8466  0.8437  0.8437  0.8433  0.8395  0.8395  0.8395  0.8202  0.8202  0.8202
[17 : 32]:	0.8176  0.8159  0.8159  0.8135  0.8064  0.8061  0.8023  0.7915  0.7889  0.7873  0.7871  0.7871  0.7847  0.7804  0.7783  0.7701
[33 : 48]:	0.7671  0.7596  0.7555  0.7535  0.7534  0.7532  0.7509  0.7485  0.7470  0.7419  0.7380  0.7357  0.7346  0.7299  0.7298  0.7297
[49 : 64]:	0.7296  0.7285  0.7285  0.7247  0.7223  0.7216  0.7207  0.7188  0.7177  0.7177  0.7162  0.7148  0.7130  0.7092  0.7080  0.7080
2024-04-28 23:36:13 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-28 23:36:14 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #257: GFLOPs: 280.8867. Time: 35.1016 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #258: GFLOPs: 154.4035. Time: 63.8559 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #259: GFLOPs: 142.3130. Time: 69.2810 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #260: GFLOPs: 244.5629. Time: 40.3151 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #261: GFLOPs: 306.7327. Time: 32.1439 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #262: GFLOPs: 195.7070. Time: 50.3793 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #263: GFLOPs: 301.8128. Time: 32.6679 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #264: GFLOPs: 146.8959. Time: 67.1196 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #265: GFLOPs: 285.7986. Time: 34.4984 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #266: GFLOPs: 173.7818. Time: 56.7354 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #267: GFLOPs: 89.1359. Time: 110.6130 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #268: GFLOPs: 303.6263. Time: 32.4728 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #269: GFLOPs: 301.5292. Time: 32.6986 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #270: GFLOPs: 192.8085. Time: 51.1367 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #271: GFLOPs: 256.2732. Time: 38.4729 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #272: GFLOPs: 213.1824. Time: 46.2495 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #273: GFLOPs: 191.6065. Time: 51.4575 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #274: GFLOPs: 281.0822. Time: 35.0772 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #275: GFLOPs: 281.2600. Time: 35.0550 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #276: GFLOPs: 151.5418. Time: 65.0618 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #277: GFLOPs: 281.5226. Time: 35.0224 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #278: GFLOPs: 174.7891. Time: 56.4085 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #279: GFLOPs: 223.6980. Time: 44.0754 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #280: GFLOPs: 152.1959. Time: 64.7822 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #281: GFLOPs: 302.6000. Time: 32.5829 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #282: GFLOPs: 152.8000. Time: 64.5261 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #283: GFLOPs: 298.8494. Time: 32.9918 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #284: GFLOPs: 223.2830. Time: 44.1573 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #285: GFLOPs: 287.0098. Time: 34.3528 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #286: GFLOPs: 209.0475. Time: 47.1643 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #287: GFLOPs: 164.3141. Time: 60.0045 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #288: GFLOPs: 161.9529. Time: 60.8793 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #289: GFLOPs: 137.8498. Time: 71.5241 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #290: GFLOPs: 212.6329. Time: 46.3690 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #291: GFLOPs: 153.9280. Time: 64.0532 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #292: GFLOPs: 228.9542. Time: 43.0636 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #293: GFLOPs: 212.0965. Time: 46.4863 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #294: GFLOPs: 153.1746. Time: 64.3683 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #295: GFLOPs: 269.9939. Time: 36.5178 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #296: GFLOPs: 203.6595. Time: 48.4121 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #297: GFLOPs: 236.8200. Time: 41.6332 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #298: GFLOPs: 237.8606. Time: 41.4511 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #299: GFLOPs: 211.2906. Time: 46.6636 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #300: GFLOPs: 191.4819. Time: 51.4909 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #301: GFLOPs: 300.0327. Time: 32.8617 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #302: GFLOPs: 166.0301. Time: 59.3843 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #303: GFLOPs: 114.7255. Time: 85.9406 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #304: GFLOPs: 257.3980. Time: 38.3048 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #305: GFLOPs: 233.2048. Time: 42.2787 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #306: GFLOPs: 174.5172. Time: 56.4964 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #307: GFLOPs: 285.5952. Time: 34.5229 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #308: GFLOPs: 280.3995. Time: 35.1626 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #309: GFLOPs: 153.2974. Time: 64.3167 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #310: GFLOPs: 229.7160. Time: 42.9207 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #311: GFLOPs: 158.7451. Time: 62.1095 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #312: GFLOPs: 238.2655. Time: 41.3807 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #313: GFLOPs: 222.7047. Time: 44.2720 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #314: GFLOPs: 219.4418. Time: 44.9303 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #315: GFLOPs: 158.4827. Time: 62.2124 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #316: GFLOPs: 233.3779. Time: 42.2473 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #317: GFLOPs: 189.0267. Time: 52.1597 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #318: GFLOPs: 125.7479. Time: 78.4075 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #319: GFLOPs: 118.3320. Time: 83.3214 us. Best GFLOPs: 313.9610
2024-04-28 23:37:28 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #320: GFLOPs: 129.4122. Time: 76.1874 us. Best GFLOPs: 313.9610
2024-04-29 00:29:58 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 00:29:59 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 00:30:01 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 00:30:01 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 00:30:06 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 00:30:11 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 00:30:17 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 00:30:23 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 00:30:26 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9281  0.9220  0.9096  0.8754  0.8359  0.8359  0.8288  0.8134  0.8124  0.8106  0.8084  0.8029  0.8016  0.7990  0.7877  0.7876
[17 : 32]:	0.7860  0.7829  0.7808  0.7808  0.7796  0.7739  0.7712  0.7712  0.7605  0.7593  0.7580  0.7565  0.7563  0.7563  0.7551  0.7429
[33 : 48]:	0.7402  0.7402  0.7392  0.7374  0.7331  0.7299  0.7296  0.7293  0.7287  0.7271  0.7271  0.7222  0.7200  0.7196  0.7194  0.7190
[49 : 64]:	0.7187  0.7187  0.7154  0.7127  0.7116  0.7103  0.7089  0.7086  0.7085  0.7078  0.7060  0.7045  0.7028  0.7015  0.7010  0.7010
2024-04-29 00:30:26 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 00:30:26 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 00:31:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #321: GFLOPs: 301.3716. Time: 32.7157 us. Best GFLOPs: 313.9610
2024-04-29 00:31:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #322: GFLOPs: 224.0973. Time: 43.9969 us. Best GFLOPs: 313.9610
2024-04-29 00:31:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #323: GFLOPs: 151.4265. Time: 65.1114 us. Best GFLOPs: 313.9610
2024-04-29 00:31:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #324: GFLOPs: 276.3822. Time: 35.6737 us. Best GFLOPs: 313.9610
2024-04-29 00:31:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #325: GFLOPs: 262.8744. Time: 37.5068 us. Best GFLOPs: 313.9610
2024-04-29 00:31:45 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #326: GFLOPs: 282.8892. Time: 34.8532 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #327: GFLOPs: 231.7397. Time: 42.5459 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #328: GFLOPs: 300.4199. Time: 32.8193 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #329: GFLOPs: 276.3474. Time: 35.6782 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #330: GFLOPs: 177.0709. Time: 55.6816 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #331: GFLOPs: 186.1325. Time: 52.9708 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #332: GFLOPs: 236.2260. Time: 41.7379 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #333: GFLOPs: 252.9344. Time: 38.9808 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #334: GFLOPs: 284.8357. Time: 34.6150 us. Best GFLOPs: 313.9610
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #335: GFLOPs: 321.9902. Time: 30.6208 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #336: GFLOPs: 285.3045. Time: 34.5581 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #337: GFLOPs: 122.4171. Time: 80.5409 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #338: GFLOPs: 268.0724. Time: 36.7796 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #339: GFLOPs: 284.2333. Time: 34.6883 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #340: GFLOPs: 226.7748. Time: 43.4774 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #341: GFLOPs: 269.1567. Time: 36.6314 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #342: GFLOPs: 178.2246. Time: 55.3211 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #343: GFLOPs: 177.1906. Time: 55.6439 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #344: GFLOPs: 246.9672. Time: 39.9226 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #345: GFLOPs: 235.3844. Time: 41.8872 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #346: GFLOPs: 201.8658. Time: 48.8423 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #347: GFLOPs: 171.3440. Time: 57.5426 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #348: GFLOPs: 188.3542. Time: 52.3460 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #349: GFLOPs: 223.3012. Time: 44.1537 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #350: GFLOPs: 232.9571. Time: 42.3236 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #351: GFLOPs: 235.0890. Time: 41.9398 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #352: GFLOPs: 276.2839. Time: 35.6864 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #353: GFLOPs: 313.3831. Time: 31.4618 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #354: GFLOPs: 302.8932. Time: 32.5514 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #355: GFLOPs: 239.7443. Time: 41.1254 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #356: GFLOPs: 206.1962. Time: 47.8165 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #357: GFLOPs: 259.8124. Time: 37.9489 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #358: GFLOPs: 238.5465. Time: 41.3319 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #359: GFLOPs: 196.5410. Time: 50.1655 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #360: GFLOPs: 170.2415. Time: 57.9153 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #361: GFLOPs: 219.1117. Time: 44.9980 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #362: GFLOPs: 194.3457. Time: 50.7322 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #363: GFLOPs: 258.6141. Time: 38.1247 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #364: GFLOPs: 197.8442. Time: 49.8351 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #365: GFLOPs: 178.1090. Time: 55.3570 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #366: GFLOPs: 172.6614. Time: 57.1036 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #367: GFLOPs: 122.1608. Time: 80.7099 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #368: GFLOPs: 199.0902. Time: 49.5232 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #369: GFLOPs: 209.7922. Time: 46.9969 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #370: GFLOPs: 219.0014. Time: 45.0206 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #371: GFLOPs: 209.3535. Time: 47.0954 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #372: GFLOPs: 160.0690. Time: 61.5959 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #373: GFLOPs: 165.4501. Time: 59.5925 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #374: GFLOPs: 196.9479. Time: 50.0619 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #375: GFLOPs: 276.3642. Time: 35.6761 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #376: GFLOPs: 123.2752. Time: 79.9803 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #377: GFLOPs: 214.1925. Time: 46.0314 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #378: GFLOPs: 270.8716. Time: 36.3995 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #379: GFLOPs: 138.7156. Time: 71.0777 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #380: GFLOPs: 229.6990. Time: 42.9239 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #381: GFLOPs: 209.4328. Time: 47.0775 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #382: GFLOPs: 87.6660. Time: 112.4675 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #383: GFLOPs: 17.5530. Time: 561.7027 us. Best GFLOPs: 321.9902
2024-04-29 00:31:46 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #384: GFLOPs: 96.3520. Time: 102.3288 us. Best GFLOPs: 321.9902
2024-04-29 01:11:44 [INFO] [evolutionary_search.cc:713] Generating candidates......
2024-04-29 01:11:45 [INFO] [evolutionary_search.cc:715] Picked top 102 candidate(s) from database
2024-04-29 01:11:47 [INFO] [evolutionary_search.cc:533] Sample-Init-Population summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 01:11:47 [INFO] [evolutionary_search.cc:723] Sampled 410 candidate(s)
2024-04-29 01:11:53 [INFO] [evolutionary_search.cc:621] Evolve iter #0 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 01:11:58 [INFO] [evolutionary_search.cc:621] Evolve iter #1 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 01:12:03 [INFO] [evolutionary_search.cc:621] Evolve iter #2 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 01:12:09 [INFO] [evolutionary_search.cc:621] Evolve iter #3 done. Summary:
Postproc #0 [meta_schedule.DisallowDynamicLoop(0x3907178)]: 0 failure(s)
Postproc #1 [meta_schedule.RewriteParallelVectorizeUnroll(0x34c9568)]: 0 failure(s)
Postproc #2 [meta_schedule.RewriteReductionBlock(0x5ba8fa8)]: 0 failure(s)
Postproc #3 [meta_schedule.RewriteLayout(0x4f8a628)]: 0 failure(s)
2024-04-29 01:12:12 [INFO] [evolutionary_search.cc:649] Scores of the best 64 candidates:
[1 : 16]:	0.9294  0.9294  0.9189  0.8606  0.8518  0.8518  0.8475  0.8442  0.8418  0.8418  0.8403  0.8339  0.8316  0.8259  0.8175  0.8109
[17 : 32]:	0.8106  0.8095  0.8055  0.8055  0.8055  0.8050  0.8050  0.8050  0.8039  0.8007  0.8007  0.7975  0.7961  0.7924  0.7906  0.7816
[33 : 48]:	0.7791  0.7772  0.7766  0.7723  0.7676  0.7637  0.7620  0.7542  0.7530  0.7507  0.7507  0.7507  0.7480  0.7458  0.7455  0.7455
[49 : 64]:	0.7443  0.7441  0.7440  0.7387  0.7360  0.7355  0.7355  0.7338  0.7280  0.7276  0.7256  0.7256  0.7234  0.7199  0.7172  0.7148
2024-04-29 01:12:12 [INFO] [evolutionary_search.cc:727] Got 64 candidate(s) with evolutionary search
2024-04-29 01:12:12 [INFO] [evolutionary_search.cc:730] Sending 64 candidates(s) for measurement
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #385: GFLOPs: 298.7735. Time: 33.0002 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #386: GFLOPs: 262.9084. Time: 37.5020 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #387: GFLOPs: 207.5561. Time: 47.5032 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #388: GFLOPs: 282.3034. Time: 34.9255 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #389: GFLOPs: 209.1363. Time: 47.1443 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #390: GFLOPs: 171.9310. Time: 57.3462 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #391: GFLOPs: 230.5444. Time: 42.7665 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #392: GFLOPs: 183.8912. Time: 53.6164 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #393: GFLOPs: 195.7911. Time: 50.3577 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #394: GFLOPs: 203.9448. Time: 48.3444 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #395: GFLOPs: 184.8723. Time: 53.3319 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #396: GFLOPs: 165.2565. Time: 59.6623 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #397: GFLOPs: 285.7570. Time: 34.5034 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #398: GFLOPs: 219.8808. Time: 44.8406 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #399: GFLOPs: 216.8600. Time: 45.4652 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #400: GFLOPs: 269.9985. Time: 36.5172 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #401: GFLOPs: 198.7981. Time: 49.5960 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #402: GFLOPs: 192.8104. Time: 51.1362 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #403: GFLOPs: 294.1202. Time: 33.5223 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #404: GFLOPs: 290.0078. Time: 33.9976 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #405: GFLOPs: 182.0559. Time: 54.1569 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #406: GFLOPs: 186.2117. Time: 52.9482 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #407: GFLOPs: 168.6260. Time: 58.4701 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #408: GFLOPs: 212.8117. Time: 46.3301 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #409: GFLOPs: 187.5497. Time: 52.5705 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #410: GFLOPs: 266.3723. Time: 37.0143 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #411: GFLOPs: 199.6618. Time: 49.3814 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #412: GFLOPs: 261.1974. Time: 37.7476 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #413: GFLOPs: 187.7194. Time: 52.5230 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #414: GFLOPs: 198.9857. Time: 49.5492 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #415: GFLOPs: 135.4323. Time: 72.8008 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #416: GFLOPs: 223.7358. Time: 44.0680 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #417: GFLOPs: 264.1391. Time: 37.3272 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #418: GFLOPs: 207.5192. Time: 47.5117 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #419: GFLOPs: 268.3593. Time: 36.7402 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #420: GFLOPs: 306.5316. Time: 32.1650 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #421: GFLOPs: 251.8782. Time: 39.1443 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #422: GFLOPs: 168.3911. Time: 58.5517 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #423: GFLOPs: 214.6536. Time: 45.9325 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #424: GFLOPs: 155.3735. Time: 63.4573 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #425: GFLOPs: 216.4958. Time: 45.5417 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #426: GFLOPs: 183.4437. Time: 53.7472 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #427: GFLOPs: 135.1347. Time: 72.9612 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #428: GFLOPs: 172.8505. Time: 57.0411 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #429: GFLOPs: 276.6957. Time: 35.6333 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #430: GFLOPs: 140.2470. Time: 70.3016 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #431: GFLOPs: 238.8981. Time: 41.2711 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #432: GFLOPs: 260.6789. Time: 37.8227 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #433: GFLOPs: 178.5178. Time: 55.2303 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #434: GFLOPs: 251.9406. Time: 39.1346 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #435: GFLOPs: 157.3962. Time: 62.6418 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #436: GFLOPs: 168.5118. Time: 58.5098 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #437: GFLOPs: 137.3075. Time: 71.8066 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #438: GFLOPs: 202.7145. Time: 48.6378 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #439: GFLOPs: 145.0021. Time: 67.9961 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #440: GFLOPs: 191.6296. Time: 51.4513 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #441: GFLOPs: 258.8870. Time: 38.0845 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #442: GFLOPs: 153.6801. Time: 64.1565 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #443: GFLOPs: 281.3759. Time: 35.0406 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #444: GFLOPs: 287.9397. Time: 34.2418 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #445: GFLOPs: 215.0412. Time: 45.8497 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #446: GFLOPs: 9.9025. Time: 995.6678 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #447: GFLOPs: 7.7929. Time: 1265.1930 us. Best GFLOPs: 321.9902
2024-04-29 01:13:43 [INFO] [task_scheduler.cc:131] [Task #18: fused_nn_contrib_conv2d_NCHWc_add_clip_4] Trial #448: GFLOPs: 14.5764. Time: 676.4085 us. Best GFLOPs: 321.9902
